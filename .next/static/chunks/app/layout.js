/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/layout"],{

/***/ "?29fa":
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

/* (ignored) */

/***/ }),

/***/ "?4c6f":
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

/* (ignored) */

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Frunner%2Fworkspace%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Frunner%2Fworkspace%2Fcomponents%2Fton-provider.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Frunner%2Fworkspace%2Fnode_modules%2F.pnpm%2Fnext%4014.2.16_react-dom%4018.3.1_react%4018.3.1__react%4018.3.1%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fscript.js%22%2C%22ids%22%3A%5B%22*%22%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Frunner%2Fworkspace%2Fnode_modules%2F.pnpm%2Fnext%4014.2.16_react-dom%4018.3.1_react%4018.3.1__react%4018.3.1%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22app%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&server=false!":

  !*** ./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Frunner%2Fworkspace%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Frunner%2Fworkspace%2Fcomponents%2Fton-provider.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Frunner%2Fworkspace%2Fnode_modules%2F.pnpm%2Fnext%4014.2.16_react-dom%4018.3.1_react%4018.3.1__react%4018.3.1%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fscript.js%22%2C%22ids%22%3A%5B%22*%22%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Frunner%2Fworkspace%2Fnode_modules%2F.pnpm%2Fnext%4014.2.16_react-dom%4018.3.1_react%4018.3.1__react%4018.3.1%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22app%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!

/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/globals.css */ \"(app-pages-browser)/./app/globals.css\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./components/ton-provider.tsx */ \"(app-pages-browser)/./components/ton-provider.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/client/script.js */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/client/script.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/font/google/target.css?{\"path\":\"app/layout.tsx\",\"import\":\"Inter\",\"arguments\":[{\"subsets\":[\"latin\"]}],\"variableName\":\"inter\"} */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/font/google/target.css?{\\\"path\\\":\\\"app/layout.tsx\\\",\\\"import\\\":\\\"Inter\\\",\\\"arguments\\\":[{\\\"subsets\\\":[\\\"latin\\\"]}],\\\"variableName\\\":\\\"inter\\\"}\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9uZXh0QDE0LjIuMTZfcmVhY3QtZG9tQDE4LjMuMV9yZWFjdEAxOC4zLjFfX3JlYWN0QDE4LjMuMS9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRmhvbWUlMkZydW5uZXIlMkZ3b3Jrc3BhY2UlMkZhcHAlMkZnbG9iYWxzLmNzcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZob21lJTJGcnVubmVyJTJGd29ya3NwYWNlJTJGY29tcG9uZW50cyUyRnRvbi1wcm92aWRlci50c3glMjIlMkMlMjJpZHMlMjIlM0ElNUIlMjJkZWZhdWx0JTIyJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRmhvbWUlMkZydW5uZXIlMkZ3b3Jrc3BhY2UlMkZub2RlX21vZHVsZXMlMkYucG5wbSUyRm5leHQlNDAxNC4yLjE2X3JlYWN0LWRvbSU0MDE4LjMuMV9yZWFjdCU0MDE4LjMuMV9fcmVhY3QlNDAxOC4zLjElMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRnNjcmlwdC5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMiolMjIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGaG9tZSUyRnJ1bm5lciUyRndvcmtzcGFjZSUyRm5vZGVfbW9kdWxlcyUyRi5wbnBtJTJGbmV4dCU0MDE0LjIuMTZfcmVhY3QtZG9tJTQwMTguMy4xX3JlYWN0JTQwMTguMy4xX19yZWFjdCU0MDE4LjMuMSUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZmb250JTJGZ29vZ2xlJTJGdGFyZ2V0LmNzcyUzRiU3QiU1QyUyMnBhdGglNUMlMjIlM0ElNUMlMjJhcHAlMkZsYXlvdXQudHN4JTVDJTIyJTJDJTVDJTIyaW1wb3J0JTVDJTIyJTNBJTVDJTIySW50ZXIlNUMlMjIlMkMlNUMlMjJhcmd1bWVudHMlNUMlMjIlM0ElNUIlN0IlNUMlMjJzdWJzZXRzJTVDJTIyJTNBJTVCJTVDJTIybGF0aW4lNUMlMjIlNUQlN0QlNUQlMkMlNUMlMjJ2YXJpYWJsZU5hbWUlNUMlMjIlM0ElNUMlMjJpbnRlciU1QyUyMiU3RCUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9ZmFsc2UhIiwibWFwcGluZ3MiOiJBQUFBLDRKQUEyRTtBQUMzRTtBQUNBLG9MQUFvSDtBQUNwSDtBQUNBLDBXQUErSztBQUMvSztBQUNBLDBrQkFBd1MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLz84OTc3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9hcHAvZ2xvYmFscy5jc3NcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiwgd2VicGFja0V4cG9ydHM6IFtcImRlZmF1bHRcIl0gKi8gXCIvaG9tZS9ydW5uZXIvd29ya3NwYWNlL2NvbXBvbmVudHMvdG9uLXByb3ZpZGVyLnRzeFwiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9ub2RlX21vZHVsZXMvLnBucG0vbmV4dEAxNC4yLjE2X3JlYWN0LWRvbUAxOC4zLjFfcmVhY3RAMTguMy4xX19yZWFjdEAxOC4zLjEvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvc2NyaXB0LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvaG9tZS9ydW5uZXIvd29ya3NwYWNlL25vZGVfbW9kdWxlcy8ucG5wbS9uZXh0QDE0LjIuMTZfcmVhY3QtZG9tQDE4LjMuMV9yZWFjdEAxOC4zLjFfX3JlYWN0QDE4LjMuMS9ub2RlX21vZHVsZXMvbmV4dC9mb250L2dvb2dsZS90YXJnZXQuY3NzP3tcXFwicGF0aFxcXCI6XFxcImFwcC9sYXlvdXQudHN4XFxcIixcXFwiaW1wb3J0XFxcIjpcXFwiSW50ZXJcXFwiLFxcXCJhcmd1bWVudHNcXFwiOlt7XFxcInN1YnNldHNcXFwiOltcXFwibGF0aW5cXFwiXX1dLFxcXCJ2YXJpYWJsZU5hbWVcXFwiOlxcXCJpbnRlclxcXCJ9XCIpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Frunner%2Fworkspace%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Frunner%2Fworkspace%2Fcomponents%2Fton-provider.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Frunner%2Fworkspace%2Fnode_modules%2F.pnpm%2Fnext%4014.2.16_react-dom%4018.3.1_react%4018.3.1__react%4018.3.1%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fscript.js%22%2C%22ids%22%3A%5B%22*%22%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Frunner%2Fworkspace%2Fnode_modules%2F.pnpm%2Fnext%4014.2.16_react-dom%4018.3.1_react%4018.3.1__react%4018.3.1%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22app%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/@tonconnect+isomorphic-eventsource@0.0.2/node_modules/@tonconnect/isomorphic-eventsource/browser.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@tonconnect+isomorphic-eventsource@0.0.2/node_modules/@tonconnect/isomorphic-eventsource/browser.js ***!
  \********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("{}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9AdG9uY29ubmVjdCtpc29tb3JwaGljLWV2ZW50c291cmNlQDAuMC4yL25vZGVfbW9kdWxlcy9AdG9uY29ubmVjdC9pc29tb3JwaGljLWV2ZW50c291cmNlL2Jyb3dzZXIuanMiLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0B0b25jb25uZWN0K2lzb21vcnBoaWMtZXZlbnRzb3VyY2VAMC4wLjIvbm9kZV9tb2R1bGVzL0B0b25jb25uZWN0L2lzb21vcnBoaWMtZXZlbnRzb3VyY2UvYnJvd3Nlci5qcz9mNzM2Il0sInNvdXJjZXNDb250ZW50IjpbInt9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@tonconnect+isomorphic-eventsource@0.0.2/node_modules/@tonconnect/isomorphic-eventsource/browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/@tonconnect+isomorphic-fetch@0.0.3/node_modules/@tonconnect/isomorphic-fetch/browser.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@tonconnect+isomorphic-fetch@0.0.3/node_modules/@tonconnect/isomorphic-fetch/browser.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("{}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9AdG9uY29ubmVjdCtpc29tb3JwaGljLWZldGNoQDAuMC4zL25vZGVfbW9kdWxlcy9AdG9uY29ubmVjdC9pc29tb3JwaGljLWZldGNoL2Jyb3dzZXIuanMiLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0B0b25jb25uZWN0K2lzb21vcnBoaWMtZmV0Y2hAMC4wLjMvbm9kZV9tb2R1bGVzL0B0b25jb25uZWN0L2lzb21vcnBoaWMtZmV0Y2gvYnJvd3Nlci5qcz9iNmE2Il0sInNvdXJjZXNDb250ZW50IjpbInt9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@tonconnect+isomorphic-fetch@0.0.3/node_modules/@tonconnect/isomorphic-fetch/browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/deepmerge@4.3.1/node_modules/deepmerge/dist/cjs.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/deepmerge@4.3.1/node_modules/deepmerge/dist/cjs.js ***!
  \*******************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn Object.propertyIsEnumerable.call(target, symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9kZWVwbWVyZ2VANC4zLjEvbm9kZV9tb2R1bGVzL2RlZXBtZXJnZS9kaXN0L2Nqcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxFQUFFLElBQUk7QUFDTjs7QUFFQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvLnBucG0vZGVlcG1lcmdlQDQuMy4xL25vZGVfbW9kdWxlcy9kZWVwbWVyZ2UvZGlzdC9janMuanM/YzI0YSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBpc01lcmdlYWJsZU9iamVjdCA9IGZ1bmN0aW9uIGlzTWVyZ2VhYmxlT2JqZWN0KHZhbHVlKSB7XG5cdHJldHVybiBpc05vbk51bGxPYmplY3QodmFsdWUpXG5cdFx0JiYgIWlzU3BlY2lhbCh2YWx1ZSlcbn07XG5cbmZ1bmN0aW9uIGlzTm9uTnVsbE9iamVjdCh2YWx1ZSkge1xuXHRyZXR1cm4gISF2YWx1ZSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnXG59XG5cbmZ1bmN0aW9uIGlzU3BlY2lhbCh2YWx1ZSkge1xuXHR2YXIgc3RyaW5nVmFsdWUgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsdWUpO1xuXG5cdHJldHVybiBzdHJpbmdWYWx1ZSA9PT0gJ1tvYmplY3QgUmVnRXhwXSdcblx0XHR8fCBzdHJpbmdWYWx1ZSA9PT0gJ1tvYmplY3QgRGF0ZV0nXG5cdFx0fHwgaXNSZWFjdEVsZW1lbnQodmFsdWUpXG59XG5cbi8vIHNlZSBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QvYmxvYi9iNWFjOTYzZmI3OTFkMTI5OGU3ZjM5NjIzNjM4M2JjOTU1ZjkxNmMxL3NyYy9pc29tb3JwaGljL2NsYXNzaWMvZWxlbWVudC9SZWFjdEVsZW1lbnQuanMjTDIxLUwyNVxudmFyIGNhblVzZVN5bWJvbCA9IHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiYgU3ltYm9sLmZvcjtcbnZhciBSRUFDVF9FTEVNRU5UX1RZUEUgPSBjYW5Vc2VTeW1ib2wgPyBTeW1ib2wuZm9yKCdyZWFjdC5lbGVtZW50JykgOiAweGVhYzc7XG5cbmZ1bmN0aW9uIGlzUmVhY3RFbGVtZW50KHZhbHVlKSB7XG5cdHJldHVybiB2YWx1ZS4kJHR5cGVvZiA9PT0gUkVBQ1RfRUxFTUVOVF9UWVBFXG59XG5cbmZ1bmN0aW9uIGVtcHR5VGFyZ2V0KHZhbCkge1xuXHRyZXR1cm4gQXJyYXkuaXNBcnJheSh2YWwpID8gW10gOiB7fVxufVxuXG5mdW5jdGlvbiBjbG9uZVVubGVzc090aGVyd2lzZVNwZWNpZmllZCh2YWx1ZSwgb3B0aW9ucykge1xuXHRyZXR1cm4gKG9wdGlvbnMuY2xvbmUgIT09IGZhbHNlICYmIG9wdGlvbnMuaXNNZXJnZWFibGVPYmplY3QodmFsdWUpKVxuXHRcdD8gZGVlcG1lcmdlKGVtcHR5VGFyZ2V0KHZhbHVlKSwgdmFsdWUsIG9wdGlvbnMpXG5cdFx0OiB2YWx1ZVxufVxuXG5mdW5jdGlvbiBkZWZhdWx0QXJyYXlNZXJnZSh0YXJnZXQsIHNvdXJjZSwgb3B0aW9ucykge1xuXHRyZXR1cm4gdGFyZ2V0LmNvbmNhdChzb3VyY2UpLm1hcChmdW5jdGlvbihlbGVtZW50KSB7XG5cdFx0cmV0dXJuIGNsb25lVW5sZXNzT3RoZXJ3aXNlU3BlY2lmaWVkKGVsZW1lbnQsIG9wdGlvbnMpXG5cdH0pXG59XG5cbmZ1bmN0aW9uIGdldE1lcmdlRnVuY3Rpb24oa2V5LCBvcHRpb25zKSB7XG5cdGlmICghb3B0aW9ucy5jdXN0b21NZXJnZSkge1xuXHRcdHJldHVybiBkZWVwbWVyZ2Vcblx0fVxuXHR2YXIgY3VzdG9tTWVyZ2UgPSBvcHRpb25zLmN1c3RvbU1lcmdlKGtleSk7XG5cdHJldHVybiB0eXBlb2YgY3VzdG9tTWVyZ2UgPT09ICdmdW5jdGlvbicgPyBjdXN0b21NZXJnZSA6IGRlZXBtZXJnZVxufVxuXG5mdW5jdGlvbiBnZXRFbnVtZXJhYmxlT3duUHJvcGVydHlTeW1ib2xzKHRhcmdldCkge1xuXHRyZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9sc1xuXHRcdD8gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyh0YXJnZXQpLmZpbHRlcihmdW5jdGlvbihzeW1ib2wpIHtcblx0XHRcdHJldHVybiBPYmplY3QucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbCh0YXJnZXQsIHN5bWJvbClcblx0XHR9KVxuXHRcdDogW11cbn1cblxuZnVuY3Rpb24gZ2V0S2V5cyh0YXJnZXQpIHtcblx0cmV0dXJuIE9iamVjdC5rZXlzKHRhcmdldCkuY29uY2F0KGdldEVudW1lcmFibGVPd25Qcm9wZXJ0eVN5bWJvbHModGFyZ2V0KSlcbn1cblxuZnVuY3Rpb24gcHJvcGVydHlJc09uT2JqZWN0KG9iamVjdCwgcHJvcGVydHkpIHtcblx0dHJ5IHtcblx0XHRyZXR1cm4gcHJvcGVydHkgaW4gb2JqZWN0XG5cdH0gY2F0Y2goXykge1xuXHRcdHJldHVybiBmYWxzZVxuXHR9XG59XG5cbi8vIFByb3RlY3RzIGZyb20gcHJvdG90eXBlIHBvaXNvbmluZyBhbmQgdW5leHBlY3RlZCBtZXJnaW5nIHVwIHRoZSBwcm90b3R5cGUgY2hhaW4uXG5mdW5jdGlvbiBwcm9wZXJ0eUlzVW5zYWZlKHRhcmdldCwga2V5KSB7XG5cdHJldHVybiBwcm9wZXJ0eUlzT25PYmplY3QodGFyZ2V0LCBrZXkpIC8vIFByb3BlcnRpZXMgYXJlIHNhZmUgdG8gbWVyZ2UgaWYgdGhleSBkb24ndCBleGlzdCBpbiB0aGUgdGFyZ2V0IHlldCxcblx0XHQmJiAhKE9iamVjdC5oYXNPd25Qcm9wZXJ0eS5jYWxsKHRhcmdldCwga2V5KSAvLyB1bnNhZmUgaWYgdGhleSBleGlzdCB1cCB0aGUgcHJvdG90eXBlIGNoYWluLFxuXHRcdFx0JiYgT2JqZWN0LnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwodGFyZ2V0LCBrZXkpKSAvLyBhbmQgYWxzbyB1bnNhZmUgaWYgdGhleSdyZSBub25lbnVtZXJhYmxlLlxufVxuXG5mdW5jdGlvbiBtZXJnZU9iamVjdCh0YXJnZXQsIHNvdXJjZSwgb3B0aW9ucykge1xuXHR2YXIgZGVzdGluYXRpb24gPSB7fTtcblx0aWYgKG9wdGlvbnMuaXNNZXJnZWFibGVPYmplY3QodGFyZ2V0KSkge1xuXHRcdGdldEtleXModGFyZ2V0KS5mb3JFYWNoKGZ1bmN0aW9uKGtleSkge1xuXHRcdFx0ZGVzdGluYXRpb25ba2V5XSA9IGNsb25lVW5sZXNzT3RoZXJ3aXNlU3BlY2lmaWVkKHRhcmdldFtrZXldLCBvcHRpb25zKTtcblx0XHR9KTtcblx0fVxuXHRnZXRLZXlzKHNvdXJjZSkuZm9yRWFjaChmdW5jdGlvbihrZXkpIHtcblx0XHRpZiAocHJvcGVydHlJc1Vuc2FmZSh0YXJnZXQsIGtleSkpIHtcblx0XHRcdHJldHVyblxuXHRcdH1cblxuXHRcdGlmIChwcm9wZXJ0eUlzT25PYmplY3QodGFyZ2V0LCBrZXkpICYmIG9wdGlvbnMuaXNNZXJnZWFibGVPYmplY3Qoc291cmNlW2tleV0pKSB7XG5cdFx0XHRkZXN0aW5hdGlvbltrZXldID0gZ2V0TWVyZ2VGdW5jdGlvbihrZXksIG9wdGlvbnMpKHRhcmdldFtrZXldLCBzb3VyY2Vba2V5XSwgb3B0aW9ucyk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGRlc3RpbmF0aW9uW2tleV0gPSBjbG9uZVVubGVzc090aGVyd2lzZVNwZWNpZmllZChzb3VyY2Vba2V5XSwgb3B0aW9ucyk7XG5cdFx0fVxuXHR9KTtcblx0cmV0dXJuIGRlc3RpbmF0aW9uXG59XG5cbmZ1bmN0aW9uIGRlZXBtZXJnZSh0YXJnZXQsIHNvdXJjZSwgb3B0aW9ucykge1xuXHRvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblx0b3B0aW9ucy5hcnJheU1lcmdlID0gb3B0aW9ucy5hcnJheU1lcmdlIHx8IGRlZmF1bHRBcnJheU1lcmdlO1xuXHRvcHRpb25zLmlzTWVyZ2VhYmxlT2JqZWN0ID0gb3B0aW9ucy5pc01lcmdlYWJsZU9iamVjdCB8fCBpc01lcmdlYWJsZU9iamVjdDtcblx0Ly8gY2xvbmVVbmxlc3NPdGhlcndpc2VTcGVjaWZpZWQgaXMgYWRkZWQgdG8gYG9wdGlvbnNgIHNvIHRoYXQgY3VzdG9tIGFycmF5TWVyZ2UoKVxuXHQvLyBpbXBsZW1lbnRhdGlvbnMgY2FuIHVzZSBpdC4gVGhlIGNhbGxlciBtYXkgbm90IHJlcGxhY2UgaXQuXG5cdG9wdGlvbnMuY2xvbmVVbmxlc3NPdGhlcndpc2VTcGVjaWZpZWQgPSBjbG9uZVVubGVzc090aGVyd2lzZVNwZWNpZmllZDtcblxuXHR2YXIgc291cmNlSXNBcnJheSA9IEFycmF5LmlzQXJyYXkoc291cmNlKTtcblx0dmFyIHRhcmdldElzQXJyYXkgPSBBcnJheS5pc0FycmF5KHRhcmdldCk7XG5cdHZhciBzb3VyY2VBbmRUYXJnZXRUeXBlc01hdGNoID0gc291cmNlSXNBcnJheSA9PT0gdGFyZ2V0SXNBcnJheTtcblxuXHRpZiAoIXNvdXJjZUFuZFRhcmdldFR5cGVzTWF0Y2gpIHtcblx0XHRyZXR1cm4gY2xvbmVVbmxlc3NPdGhlcndpc2VTcGVjaWZpZWQoc291cmNlLCBvcHRpb25zKVxuXHR9IGVsc2UgaWYgKHNvdXJjZUlzQXJyYXkpIHtcblx0XHRyZXR1cm4gb3B0aW9ucy5hcnJheU1lcmdlKHRhcmdldCwgc291cmNlLCBvcHRpb25zKVxuXHR9IGVsc2Uge1xuXHRcdHJldHVybiBtZXJnZU9iamVjdCh0YXJnZXQsIHNvdXJjZSwgb3B0aW9ucylcblx0fVxufVxuXG5kZWVwbWVyZ2UuYWxsID0gZnVuY3Rpb24gZGVlcG1lcmdlQWxsKGFycmF5LCBvcHRpb25zKSB7XG5cdGlmICghQXJyYXkuaXNBcnJheShhcnJheSkpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoJ2ZpcnN0IGFyZ3VtZW50IHNob3VsZCBiZSBhbiBhcnJheScpXG5cdH1cblxuXHRyZXR1cm4gYXJyYXkucmVkdWNlKGZ1bmN0aW9uKHByZXYsIG5leHQpIHtcblx0XHRyZXR1cm4gZGVlcG1lcmdlKHByZXYsIG5leHQsIG9wdGlvbnMpXG5cdH0sIHt9KVxufTtcblxudmFyIGRlZXBtZXJnZV8xID0gZGVlcG1lcmdlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGRlZXBtZXJnZV8xO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/deepmerge@4.3.1/node_modules/deepmerge/dist/cjs.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/polyfills/process.js":
/*!***************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/polyfills/process.js ***!
  \***************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar _global_process, _global_process1;\nmodule.exports = ((_global_process = __webpack_require__.g.process) == null ? void 0 : _global_process.env) && typeof ((_global_process1 = __webpack_require__.g.process) == null ? void 0 : _global_process1.env) === \"object\" ? __webpack_require__.g.process : __webpack_require__(/*! next/dist/compiled/process */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/process/browser.js\");\n\n//# sourceMappingURL=process.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9uZXh0QDE0LjIuMTZfcmVhY3QtZG9tQDE4LjMuMV9yZWFjdEAxOC4zLjFfX3JlYWN0QDE4LjMuMS9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9wcm9jZXNzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSxxQ0FBcUMscUJBQU0saUZBQWlGLHFCQUFNLGtFQUFrRSxxQkFBTSxXQUFXLG1CQUFPLENBQUMsd0xBQTRCOztBQUV6UCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvLnBucG0vbmV4dEAxNC4yLjE2X3JlYWN0LWRvbUAxOC4zLjFfcmVhY3RAMTguMy4xX19yZWFjdEAxOC4zLjEvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC9wb2x5ZmlsbHMvcHJvY2Vzcy5qcz9hNzQxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9nbG9iYWxfcHJvY2VzcywgX2dsb2JhbF9wcm9jZXNzMTtcbm1vZHVsZS5leHBvcnRzID0gKChfZ2xvYmFsX3Byb2Nlc3MgPSBnbG9iYWwucHJvY2VzcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9nbG9iYWxfcHJvY2Vzcy5lbnYpICYmIHR5cGVvZiAoKF9nbG9iYWxfcHJvY2VzczEgPSBnbG9iYWwucHJvY2VzcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9nbG9iYWxfcHJvY2VzczEuZW52KSA9PT0gXCJvYmplY3RcIiA/IGdsb2JhbC5wcm9jZXNzIDogcmVxdWlyZShcIm5leHQvZGlzdC9jb21waWxlZC9wcm9jZXNzXCIpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcm9jZXNzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/polyfills/process.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js":
/*!*************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js ***!
  \*************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(()=>{\"use strict\";var e={592:(e,r,t)=>{var n=t(722);var i=Object.create(null);var a=typeof document===\"undefined\";var o=Array.prototype.forEach;function debounce(e,r){var t=0;return function(){var n=this;var i=arguments;var a=function functionCall(){return e.apply(n,i)};clearTimeout(t);t=setTimeout(a,r)}}function noop(){}function getCurrentScriptUrl(e){var r=i[e];if(!r){if(document.currentScript){r=document.currentScript.src}else{var t=document.getElementsByTagName(\"script\");var a=t[t.length-1];if(a){r=a.src}}i[e]=r}return function(e){if(!r){return null}var t=r.split(/([^\\\\/]+)\\.js$/);var i=t&&t[1];if(!i){return[r.replace(\".js\",\".css\")]}if(!e){return[r.replace(\".js\",\".css\")]}return e.split(\",\").map((function(e){var t=new RegExp(\"\".concat(i,\"\\\\.js$\"),\"g\");return n(r.replace(t,\"\".concat(e.replace(/{fileName}/g,i),\".css\")))}))}}function updateCss(e,r){if(!r){if(!e.href){return}r=e.href.split(\"?\")[0]}if(!isUrlRequest(r)){return}if(e.isLoaded===false){return}if(!r||!(r.indexOf(\".css\")>-1)){return}e.visited=true;var t=e.cloneNode();t.isLoaded=false;t.addEventListener(\"load\",(function(){if(t.isLoaded){return}t.isLoaded=true;e.parentNode.removeChild(e)}));t.addEventListener(\"error\",(function(){if(t.isLoaded){return}t.isLoaded=true;e.parentNode.removeChild(e)}));t.href=\"\".concat(r,\"?\").concat(Date.now());if(e.nextSibling){e.parentNode.insertBefore(t,e.nextSibling)}else{e.parentNode.appendChild(t)}}function getReloadUrl(e,r){var t;e=n(e,{stripWWW:false});r.some((function(n){if(e.indexOf(r)>-1){t=n}}));return t}function reloadStyle(e){if(!e){return false}var r=document.querySelectorAll(\"link\");var t=false;o.call(r,(function(r){if(!r.href){return}var n=getReloadUrl(r.href,e);if(!isUrlRequest(n)){return}if(r.visited===true){return}if(n){updateCss(r,n);t=true}}));return t}function reloadAll(){var e=document.querySelectorAll(\"link\");o.call(e,(function(e){if(e.visited===true){return}updateCss(e)}))}function isUrlRequest(e){if(!/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(e)){return false}return true}e.exports=function(e,r){if(a){console.log(\"no window.document found, will not HMR CSS\");return noop}var t=getCurrentScriptUrl(e);function update(){var e=t(r.filename);var n=reloadStyle(e);if(r.locals){console.log(\"[HMR] Detected local css modules. Reload all css\");reloadAll();return}if(n){console.log(\"[HMR] css reload %s\",e.join(\" \"))}else{console.log(\"[HMR] Reload all css\");reloadAll()}}return debounce(update,50)}},722:e=>{function normalizeUrl(e){return e.reduce((function(e,r){switch(r){case\"..\":e.pop();break;case\".\":break;default:e.push(r)}return e}),[]).join(\"/\")}e.exports=function(e){e=e.trim();if(/^data:/i.test(e)){return e}var r=e.indexOf(\"//\")!==-1?e.split(\"//\")[0]+\"//\":\"\";var t=e.replace(new RegExp(r,\"i\"),\"\").split(\"/\");var n=t[0].toLowerCase().replace(/\\.$/,\"\");t[0]=\"\";var i=normalizeUrl(t);return r+n+i}}};var r={};function __nccwpck_require__(t){var n=r[t];if(n!==undefined){return n.exports}var i=r[t]={exports:{}};var a=true;try{e[t](i,i.exports,__nccwpck_require__);a=false}finally{if(a)delete r[t]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(592);module.exports=t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9uZXh0QDE0LjIuMTZfcmVhY3QtZG9tQDE4LjMuMV9yZWFjdEAxOC4zLjFfX3JlYWN0QDE4LjMuMS9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2htci9ob3RNb2R1bGVSZXBsYWNlbWVudC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTSxhQUFhLE9BQU8sY0FBYyxhQUFhLDBCQUEwQixvQ0FBb0MsOEJBQThCLHVCQUF1QixRQUFRLGtCQUFrQixXQUFXLGdCQUFnQiw4QkFBOEIscUJBQXFCLGdCQUFnQixtQkFBbUIsaUJBQWlCLGdDQUFnQyxXQUFXLE9BQU8sMkJBQTJCLDZCQUE2QixLQUFLLDhDQUE4QyxvQkFBb0IsTUFBTSxTQUFTLE9BQU8sbUJBQW1CLE9BQU8sWUFBWSxnQ0FBZ0MsY0FBYyxPQUFPLGdDQUFnQyxPQUFPLGdDQUFnQyxxQ0FBcUMsNENBQTRDLDJDQUEyQyxTQUFTLGdCQUFnQixJQUFJLHdCQUF3QixPQUFPLFlBQVksT0FBTyx1QkFBdUIscUJBQXFCLE9BQU8sdUJBQXVCLE9BQU8sZ0NBQWdDLE9BQU8sZUFBZSxvQkFBb0IsaUJBQWlCLHNDQUFzQyxlQUFlLE9BQU8sZ0JBQWdCLDRCQUE0QixHQUFHLHVDQUF1QyxlQUFlLE9BQU8sZ0JBQWdCLDRCQUE0QixHQUFHLDJDQUEyQyxrQkFBa0IsMkNBQTJDLEtBQUssNkJBQTZCLDJCQUEyQixNQUFNLE9BQU8sZUFBZSxFQUFFLG9CQUFvQixvQkFBb0IsS0FBSyxHQUFHLFNBQVMsd0JBQXdCLE9BQU8sYUFBYSx3Q0FBd0MsWUFBWSxzQkFBc0IsWUFBWSxPQUFPLDZCQUE2QixxQkFBcUIsT0FBTyxxQkFBcUIsT0FBTyxNQUFNLGVBQWUsUUFBUSxHQUFHLFNBQVMscUJBQXFCLHdDQUF3QyxzQkFBc0IscUJBQXFCLE9BQU8sYUFBYSxHQUFHLHlCQUF5Qix5Q0FBeUMsYUFBYSxZQUFZLHdCQUF3QixNQUFNLDBEQUEwRCxZQUFZLDZCQUE2QixrQkFBa0Isb0JBQW9CLHFCQUFxQixhQUFhLGdFQUFnRSxZQUFZLE9BQU8sTUFBTSwrQ0FBK0MsS0FBSyxvQ0FBb0MsYUFBYSw0QkFBNEIsU0FBUyx5QkFBeUIsK0JBQStCLFVBQVUsaUJBQWlCLE1BQU0sY0FBYyxrQkFBa0IsU0FBUyxnQkFBZ0Isc0JBQXNCLFdBQVcsc0JBQXNCLFNBQVMsb0RBQW9ELGlEQUFpRCwyQ0FBMkMsUUFBUSxzQkFBc0IsZ0JBQWdCLFNBQVMsZ0NBQWdDLFdBQVcsa0JBQWtCLGlCQUFpQixZQUFZLFlBQVksV0FBVyxJQUFJLHNDQUFzQyxRQUFRLFFBQVEsaUJBQWlCLGlCQUFpQixtRUFBbUUsU0FBUyxLQUFLLCtCQUErQixpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzLy5wbnBtL25leHRAMTQuMi4xNl9yZWFjdC1kb21AMTguMy4xX3JlYWN0QDE4LjMuMV9fcmVhY3RAMTguMy4xL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzP2IxYjYiXSwic291cmNlc0NvbnRlbnQiOlsiKCgpPT57XCJ1c2Ugc3RyaWN0XCI7dmFyIGU9ezU5MjooZSxyLHQpPT57dmFyIG49dCg3MjIpO3ZhciBpPU9iamVjdC5jcmVhdGUobnVsbCk7dmFyIGE9dHlwZW9mIGRvY3VtZW50PT09XCJ1bmRlZmluZWRcIjt2YXIgbz1BcnJheS5wcm90b3R5cGUuZm9yRWFjaDtmdW5jdGlvbiBkZWJvdW5jZShlLHIpe3ZhciB0PTA7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIG49dGhpczt2YXIgaT1hcmd1bWVudHM7dmFyIGE9ZnVuY3Rpb24gZnVuY3Rpb25DYWxsKCl7cmV0dXJuIGUuYXBwbHkobixpKX07Y2xlYXJUaW1lb3V0KHQpO3Q9c2V0VGltZW91dChhLHIpfX1mdW5jdGlvbiBub29wKCl7fWZ1bmN0aW9uIGdldEN1cnJlbnRTY3JpcHRVcmwoZSl7dmFyIHI9aVtlXTtpZighcil7aWYoZG9jdW1lbnQuY3VycmVudFNjcmlwdCl7cj1kb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyY31lbHNle3ZhciB0PWRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO3ZhciBhPXRbdC5sZW5ndGgtMV07aWYoYSl7cj1hLnNyY319aVtlXT1yfXJldHVybiBmdW5jdGlvbihlKXtpZighcil7cmV0dXJuIG51bGx9dmFyIHQ9ci5zcGxpdCgvKFteXFxcXC9dKylcXC5qcyQvKTt2YXIgaT10JiZ0WzFdO2lmKCFpKXtyZXR1cm5bci5yZXBsYWNlKFwiLmpzXCIsXCIuY3NzXCIpXX1pZighZSl7cmV0dXJuW3IucmVwbGFjZShcIi5qc1wiLFwiLmNzc1wiKV19cmV0dXJuIGUuc3BsaXQoXCIsXCIpLm1hcCgoZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IFJlZ0V4cChcIlwiLmNvbmNhdChpLFwiXFxcXC5qcyRcIiksXCJnXCIpO3JldHVybiBuKHIucmVwbGFjZSh0LFwiXCIuY29uY2F0KGUucmVwbGFjZSgve2ZpbGVOYW1lfS9nLGkpLFwiLmNzc1wiKSkpfSkpfX1mdW5jdGlvbiB1cGRhdGVDc3MoZSxyKXtpZighcil7aWYoIWUuaHJlZil7cmV0dXJufXI9ZS5ocmVmLnNwbGl0KFwiP1wiKVswXX1pZighaXNVcmxSZXF1ZXN0KHIpKXtyZXR1cm59aWYoZS5pc0xvYWRlZD09PWZhbHNlKXtyZXR1cm59aWYoIXJ8fCEoci5pbmRleE9mKFwiLmNzc1wiKT4tMSkpe3JldHVybn1lLnZpc2l0ZWQ9dHJ1ZTt2YXIgdD1lLmNsb25lTm9kZSgpO3QuaXNMb2FkZWQ9ZmFsc2U7dC5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLChmdW5jdGlvbigpe2lmKHQuaXNMb2FkZWQpe3JldHVybn10LmlzTG9hZGVkPXRydWU7ZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGUpfSkpO3QuYWRkRXZlbnRMaXN0ZW5lcihcImVycm9yXCIsKGZ1bmN0aW9uKCl7aWYodC5pc0xvYWRlZCl7cmV0dXJufXQuaXNMb2FkZWQ9dHJ1ZTtlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZSl9KSk7dC5ocmVmPVwiXCIuY29uY2F0KHIsXCI/XCIpLmNvbmNhdChEYXRlLm5vdygpKTtpZihlLm5leHRTaWJsaW5nKXtlLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHQsZS5uZXh0U2libGluZyl9ZWxzZXtlLnBhcmVudE5vZGUuYXBwZW5kQ2hpbGQodCl9fWZ1bmN0aW9uIGdldFJlbG9hZFVybChlLHIpe3ZhciB0O2U9bihlLHtzdHJpcFdXVzpmYWxzZX0pO3Iuc29tZSgoZnVuY3Rpb24obil7aWYoZS5pbmRleE9mKHIpPi0xKXt0PW59fSkpO3JldHVybiB0fWZ1bmN0aW9uIHJlbG9hZFN0eWxlKGUpe2lmKCFlKXtyZXR1cm4gZmFsc2V9dmFyIHI9ZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcImxpbmtcIik7dmFyIHQ9ZmFsc2U7by5jYWxsKHIsKGZ1bmN0aW9uKHIpe2lmKCFyLmhyZWYpe3JldHVybn12YXIgbj1nZXRSZWxvYWRVcmwoci5ocmVmLGUpO2lmKCFpc1VybFJlcXVlc3Qobikpe3JldHVybn1pZihyLnZpc2l0ZWQ9PT10cnVlKXtyZXR1cm59aWYobil7dXBkYXRlQ3NzKHIsbik7dD10cnVlfX0pKTtyZXR1cm4gdH1mdW5jdGlvbiByZWxvYWRBbGwoKXt2YXIgZT1kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwibGlua1wiKTtvLmNhbGwoZSwoZnVuY3Rpb24oZSl7aWYoZS52aXNpdGVkPT09dHJ1ZSl7cmV0dXJufXVwZGF0ZUNzcyhlKX0pKX1mdW5jdGlvbiBpc1VybFJlcXVlc3QoZSl7aWYoIS9eW2EtekEtWl1bYS16QS1aXFxkK1xcLS5dKjovLnRlc3QoZSkpe3JldHVybiBmYWxzZX1yZXR1cm4gdHJ1ZX1lLmV4cG9ydHM9ZnVuY3Rpb24oZSxyKXtpZihhKXtjb25zb2xlLmxvZyhcIm5vIHdpbmRvdy5kb2N1bWVudCBmb3VuZCwgd2lsbCBub3QgSE1SIENTU1wiKTtyZXR1cm4gbm9vcH12YXIgdD1nZXRDdXJyZW50U2NyaXB0VXJsKGUpO2Z1bmN0aW9uIHVwZGF0ZSgpe3ZhciBlPXQoci5maWxlbmFtZSk7dmFyIG49cmVsb2FkU3R5bGUoZSk7aWYoci5sb2NhbHMpe2NvbnNvbGUubG9nKFwiW0hNUl0gRGV0ZWN0ZWQgbG9jYWwgY3NzIG1vZHVsZXMuIFJlbG9hZCBhbGwgY3NzXCIpO3JlbG9hZEFsbCgpO3JldHVybn1pZihuKXtjb25zb2xlLmxvZyhcIltITVJdIGNzcyByZWxvYWQgJXNcIixlLmpvaW4oXCIgXCIpKX1lbHNle2NvbnNvbGUubG9nKFwiW0hNUl0gUmVsb2FkIGFsbCBjc3NcIik7cmVsb2FkQWxsKCl9fXJldHVybiBkZWJvdW5jZSh1cGRhdGUsNTApfX0sNzIyOmU9PntmdW5jdGlvbiBub3JtYWxpemVVcmwoZSl7cmV0dXJuIGUucmVkdWNlKChmdW5jdGlvbihlLHIpe3N3aXRjaChyKXtjYXNlXCIuLlwiOmUucG9wKCk7YnJlYWs7Y2FzZVwiLlwiOmJyZWFrO2RlZmF1bHQ6ZS5wdXNoKHIpfXJldHVybiBlfSksW10pLmpvaW4oXCIvXCIpfWUuZXhwb3J0cz1mdW5jdGlvbihlKXtlPWUudHJpbSgpO2lmKC9eZGF0YTovaS50ZXN0KGUpKXtyZXR1cm4gZX12YXIgcj1lLmluZGV4T2YoXCIvL1wiKSE9PS0xP2Uuc3BsaXQoXCIvL1wiKVswXStcIi8vXCI6XCJcIjt2YXIgdD1lLnJlcGxhY2UobmV3IFJlZ0V4cChyLFwiaVwiKSxcIlwiKS5zcGxpdChcIi9cIik7dmFyIG49dFswXS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoL1xcLiQvLFwiXCIpO3RbMF09XCJcIjt2YXIgaT1ub3JtYWxpemVVcmwodCk7cmV0dXJuIHIrbitpfX19O3ZhciByPXt9O2Z1bmN0aW9uIF9fbmNjd3Bja19yZXF1aXJlX18odCl7dmFyIG49clt0XTtpZihuIT09dW5kZWZpbmVkKXtyZXR1cm4gbi5leHBvcnRzfXZhciBpPXJbdF09e2V4cG9ydHM6e319O3ZhciBhPXRydWU7dHJ5e2VbdF0oaSxpLmV4cG9ydHMsX19uY2N3cGNrX3JlcXVpcmVfXyk7YT1mYWxzZX1maW5hbGx5e2lmKGEpZGVsZXRlIHJbdF19cmV0dXJuIGkuZXhwb3J0c31pZih0eXBlb2YgX19uY2N3cGNrX3JlcXVpcmVfXyE9PVwidW5kZWZpbmVkXCIpX19uY2N3cGNrX3JlcXVpcmVfXy5hYj1fX2Rpcm5hbWUrXCIvXCI7dmFyIHQ9X19uY2N3cGNrX3JlcXVpcmVfXyg1OTIpO21vZHVsZS5leHBvcnRzPXR9KSgpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/process/browser.js":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/process/browser.js ***!
  \****************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={229:function(e){var t=e.exports={};var r;var n;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){r=setTimeout}else{r=defaultSetTimout}}catch(e){r=defaultSetTimout}try{if(typeof clearTimeout===\"function\"){n=clearTimeout}else{n=defaultClearTimeout}}catch(e){n=defaultClearTimeout}})();function runTimeout(e){if(r===setTimeout){return setTimeout(e,0)}if((r===defaultSetTimout||!r)&&setTimeout){r=setTimeout;return setTimeout(e,0)}try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}function runClearTimeout(e){if(n===clearTimeout){return clearTimeout(e)}if((n===defaultClearTimeout||!n)&&clearTimeout){n=clearTimeout;return clearTimeout(e)}try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}var i=[];var o=false;var u;var a=-1;function cleanUpNextTick(){if(!o||!u){return}o=false;if(u.length){i=u.concat(i)}else{a=-1}if(i.length){drainQueue()}}function drainQueue(){if(o){return}var e=runTimeout(cleanUpNextTick);o=true;var t=i.length;while(t){u=i;i=[];while(++a<t){if(u){u[a].run()}}a=-1;t=i.length}u=null;o=false;runClearTimeout(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var r=1;r<arguments.length;r++){t[r-1]=arguments[r]}}i.push(new Item(e,t));if(i.length===1&&!o){runTimeout(drainQueue)}};function Item(e,t){this.fun=e;this.array=t}Item.prototype.run=function(){this.fun.apply(null,this.array)};t.title=\"browser\";t.browser=true;t.env={};t.argv=[];t.version=\"\";t.versions={};function noop(){}t.on=noop;t.addListener=noop;t.once=noop;t.off=noop;t.removeListener=noop;t.removeAllListeners=noop;t.emit=noop;t.prependListener=noop;t.prependOnceListener=noop;t.listeners=function(e){return[]};t.binding=function(e){throw new Error(\"process.binding is not supported\")};t.cwd=function(){return\"/\"};t.chdir=function(e){throw new Error(\"process.chdir is not supported\")};t.umask=function(){return 0}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(229);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9uZXh0QDE0LjIuMTZfcmVhY3QtZG9tQDE4LjMuMV9yZWFjdEAxOC4zLjFfX3JlYWN0QDE4LjMuMS9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3MvYnJvd3Nlci5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsWUFBWSxPQUFPLGdCQUFnQixtQkFBbUIsTUFBTSxNQUFNLDRCQUE0QixtREFBbUQsK0JBQStCLHFEQUFxRCxZQUFZLElBQUksbUNBQW1DLGFBQWEsS0FBSyxvQkFBb0IsU0FBUyxtQkFBbUIsSUFBSSxxQ0FBcUMsZUFBZSxLQUFLLHVCQUF1QixTQUFTLHVCQUF1QixJQUFJLHVCQUF1QixtQkFBbUIsdUJBQXVCLDJDQUEyQyxhQUFhLHVCQUF1QixJQUFJLGNBQWMsU0FBUyxJQUFJLHdCQUF3QixTQUFTLDBCQUEwQiw0QkFBNEIscUJBQXFCLHVCQUF1QixnREFBZ0QsZUFBZSx1QkFBdUIsSUFBSSxZQUFZLFNBQVMsSUFBSSxzQkFBc0IsU0FBUyx3QkFBd0IsU0FBUyxZQUFZLE1BQU0sU0FBUywyQkFBMkIsV0FBVyxPQUFPLFFBQVEsYUFBYSxjQUFjLEtBQUssS0FBSyxhQUFhLGNBQWMsc0JBQXNCLE1BQU0sT0FBTyxrQ0FBa0MsT0FBTyxlQUFlLFNBQVMsSUFBSSxLQUFLLGFBQWEsTUFBTSxZQUFZLEtBQUssV0FBVyxPQUFPLFFBQVEsbUJBQW1CLHVCQUF1QixvQ0FBb0MsdUJBQXVCLFlBQVksbUJBQW1CLEtBQUsscUJBQXFCLHNCQUFzQixxQkFBcUIseUJBQXlCLG1CQUFtQixXQUFXLGFBQWEsOEJBQThCLGlDQUFpQyxrQkFBa0IsZUFBZSxTQUFTLFVBQVUsYUFBYSxjQUFjLGlCQUFpQixVQUFVLG1CQUFtQixZQUFZLFdBQVcsc0JBQXNCLDBCQUEwQixZQUFZLHVCQUF1QiwyQkFBMkIsd0JBQXdCLFVBQVUsc0JBQXNCLHFEQUFxRCxpQkFBaUIsV0FBVyxvQkFBb0IsbURBQW1ELG1CQUFtQixZQUFZLFNBQVMsZ0NBQWdDLFdBQVcsa0JBQWtCLGlCQUFpQixZQUFZLFlBQVksV0FBVyxJQUFJLHNDQUFzQyxRQUFRLFFBQVEsaUJBQWlCLGlCQUFpQixtRUFBbUUsU0FBUyxLQUFLLCtCQUErQixpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzLy5wbnBtL25leHRAMTQuMi4xNl9yZWFjdC1kb21AMTguMy4xX3JlYWN0QDE4LjMuMV9fcmVhY3RAMTguMy4xL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcHJvY2Vzcy9icm93c2VyLmpzP2M0M2IiXSwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7dmFyIGU9ezIyOTpmdW5jdGlvbihlKXt2YXIgdD1lLmV4cG9ydHM9e307dmFyIHI7dmFyIG47ZnVuY3Rpb24gZGVmYXVsdFNldFRpbW91dCgpe3Rocm93IG5ldyBFcnJvcihcInNldFRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWRcIil9ZnVuY3Rpb24gZGVmYXVsdENsZWFyVGltZW91dCgpe3Rocm93IG5ldyBFcnJvcihcImNsZWFyVGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZFwiKX0oZnVuY3Rpb24oKXt0cnl7aWYodHlwZW9mIHNldFRpbWVvdXQ9PT1cImZ1bmN0aW9uXCIpe3I9c2V0VGltZW91dH1lbHNle3I9ZGVmYXVsdFNldFRpbW91dH19Y2F0Y2goZSl7cj1kZWZhdWx0U2V0VGltb3V0fXRyeXtpZih0eXBlb2YgY2xlYXJUaW1lb3V0PT09XCJmdW5jdGlvblwiKXtuPWNsZWFyVGltZW91dH1lbHNle249ZGVmYXVsdENsZWFyVGltZW91dH19Y2F0Y2goZSl7bj1kZWZhdWx0Q2xlYXJUaW1lb3V0fX0pKCk7ZnVuY3Rpb24gcnVuVGltZW91dChlKXtpZihyPT09c2V0VGltZW91dCl7cmV0dXJuIHNldFRpbWVvdXQoZSwwKX1pZigocj09PWRlZmF1bHRTZXRUaW1vdXR8fCFyKSYmc2V0VGltZW91dCl7cj1zZXRUaW1lb3V0O3JldHVybiBzZXRUaW1lb3V0KGUsMCl9dHJ5e3JldHVybiByKGUsMCl9Y2F0Y2godCl7dHJ5e3JldHVybiByLmNhbGwobnVsbCxlLDApfWNhdGNoKHQpe3JldHVybiByLmNhbGwodGhpcyxlLDApfX19ZnVuY3Rpb24gcnVuQ2xlYXJUaW1lb3V0KGUpe2lmKG49PT1jbGVhclRpbWVvdXQpe3JldHVybiBjbGVhclRpbWVvdXQoZSl9aWYoKG49PT1kZWZhdWx0Q2xlYXJUaW1lb3V0fHwhbikmJmNsZWFyVGltZW91dCl7bj1jbGVhclRpbWVvdXQ7cmV0dXJuIGNsZWFyVGltZW91dChlKX10cnl7cmV0dXJuIG4oZSl9Y2F0Y2godCl7dHJ5e3JldHVybiBuLmNhbGwobnVsbCxlKX1jYXRjaCh0KXtyZXR1cm4gbi5jYWxsKHRoaXMsZSl9fX12YXIgaT1bXTt2YXIgbz1mYWxzZTt2YXIgdTt2YXIgYT0tMTtmdW5jdGlvbiBjbGVhblVwTmV4dFRpY2soKXtpZighb3x8IXUpe3JldHVybn1vPWZhbHNlO2lmKHUubGVuZ3RoKXtpPXUuY29uY2F0KGkpfWVsc2V7YT0tMX1pZihpLmxlbmd0aCl7ZHJhaW5RdWV1ZSgpfX1mdW5jdGlvbiBkcmFpblF1ZXVlKCl7aWYobyl7cmV0dXJufXZhciBlPXJ1blRpbWVvdXQoY2xlYW5VcE5leHRUaWNrKTtvPXRydWU7dmFyIHQ9aS5sZW5ndGg7d2hpbGUodCl7dT1pO2k9W107d2hpbGUoKythPHQpe2lmKHUpe3VbYV0ucnVuKCl9fWE9LTE7dD1pLmxlbmd0aH11PW51bGw7bz1mYWxzZTtydW5DbGVhclRpbWVvdXQoZSl9dC5uZXh0VGljaz1mdW5jdGlvbihlKXt2YXIgdD1uZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aC0xKTtpZihhcmd1bWVudHMubGVuZ3RoPjEpe2Zvcih2YXIgcj0xO3I8YXJndW1lbnRzLmxlbmd0aDtyKyspe3Rbci0xXT1hcmd1bWVudHNbcl19fWkucHVzaChuZXcgSXRlbShlLHQpKTtpZihpLmxlbmd0aD09PTEmJiFvKXtydW5UaW1lb3V0KGRyYWluUXVldWUpfX07ZnVuY3Rpb24gSXRlbShlLHQpe3RoaXMuZnVuPWU7dGhpcy5hcnJheT10fUl0ZW0ucHJvdG90eXBlLnJ1bj1mdW5jdGlvbigpe3RoaXMuZnVuLmFwcGx5KG51bGwsdGhpcy5hcnJheSl9O3QudGl0bGU9XCJicm93c2VyXCI7dC5icm93c2VyPXRydWU7dC5lbnY9e307dC5hcmd2PVtdO3QudmVyc2lvbj1cIlwiO3QudmVyc2lvbnM9e307ZnVuY3Rpb24gbm9vcCgpe310Lm9uPW5vb3A7dC5hZGRMaXN0ZW5lcj1ub29wO3Qub25jZT1ub29wO3Qub2ZmPW5vb3A7dC5yZW1vdmVMaXN0ZW5lcj1ub29wO3QucmVtb3ZlQWxsTGlzdGVuZXJzPW5vb3A7dC5lbWl0PW5vb3A7dC5wcmVwZW5kTGlzdGVuZXI9bm9vcDt0LnByZXBlbmRPbmNlTGlzdGVuZXI9bm9vcDt0Lmxpc3RlbmVycz1mdW5jdGlvbihlKXtyZXR1cm5bXX07dC5iaW5kaW5nPWZ1bmN0aW9uKGUpe3Rocm93IG5ldyBFcnJvcihcInByb2Nlc3MuYmluZGluZyBpcyBub3Qgc3VwcG9ydGVkXCIpfTt0LmN3ZD1mdW5jdGlvbigpe3JldHVyblwiL1wifTt0LmNoZGlyPWZ1bmN0aW9uKGUpe3Rocm93IG5ldyBFcnJvcihcInByb2Nlc3MuY2hkaXIgaXMgbm90IHN1cHBvcnRlZFwiKX07dC51bWFzaz1mdW5jdGlvbigpe3JldHVybiAwfX19O3ZhciB0PXt9O2Z1bmN0aW9uIF9fbmNjd3Bja19yZXF1aXJlX18ocil7dmFyIG49dFtyXTtpZihuIT09dW5kZWZpbmVkKXtyZXR1cm4gbi5leHBvcnRzfXZhciBpPXRbcl09e2V4cG9ydHM6e319O3ZhciBvPXRydWU7dHJ5e2Vbcl0oaSxpLmV4cG9ydHMsX19uY2N3cGNrX3JlcXVpcmVfXyk7bz1mYWxzZX1maW5hbGx5e2lmKG8pZGVsZXRlIHRbcl19cmV0dXJuIGkuZXhwb3J0c31pZih0eXBlb2YgX19uY2N3cGNrX3JlcXVpcmVfXyE9PVwidW5kZWZpbmVkXCIpX19uY2N3cGNrX3JlcXVpcmVfXy5hYj1fX2Rpcm5hbWUrXCIvXCI7dmFyIHI9X19uY2N3cGNrX3JlcXVpcmVfXygyMjkpO21vZHVsZS5leHBvcnRzPXJ9KSgpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/process/browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/tweetnacl-util@0.15.1/node_modules/tweetnacl-util/nacl-util.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/.pnpm/tweetnacl-util@0.15.1/node_modules/tweetnacl-util/nacl-util.js ***!
  \*******************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"?29fa\")[\"Buffer\"];\n// Written in 2014-2016 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n(function(root, f) {\n  'use strict';\n  if ( true && module.exports) module.exports = f();\n  else if (root.nacl) root.nacl.util = f();\n  else {\n    root.nacl = {};\n    root.nacl.util = f();\n  }\n}(this, function() {\n  'use strict';\n\n  var util = {};\n\n  function validateBase64(s) {\n    if (!(/^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/.test(s))) {\n      throw new TypeError('invalid encoding');\n    }\n  }\n\n  util.decodeUTF8 = function(s) {\n    if (typeof s !== 'string') throw new TypeError('expected string');\n    var i, d = unescape(encodeURIComponent(s)), b = new Uint8Array(d.length);\n    for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n    return b;\n  };\n\n  util.encodeUTF8 = function(arr) {\n    var i, s = [];\n    for (i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));\n    return decodeURIComponent(escape(s.join('')));\n  };\n\n  if (typeof atob === 'undefined') {\n    // Node.js\n\n    if (typeof Buffer.from !== 'undefined') {\n       // Node v6 and later\n      util.encodeBase64 = function (arr) { // v6 and later\n          return Buffer.from(arr).toString('base64');\n      };\n\n      util.decodeBase64 = function (s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(Buffer.from(s, 'base64'), 0));\n      };\n\n    } else {\n      // Node earlier than v6\n      util.encodeBase64 = function (arr) { // v6 and later\n        return (new Buffer(arr)).toString('base64');\n      };\n\n      util.decodeBase64 = function(s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(new Buffer(s, 'base64'), 0));\n      };\n    }\n\n  } else {\n    // Browsers\n\n    util.encodeBase64 = function(arr) {\n      var i, s = [], len = arr.length;\n      for (i = 0; i < len; i++) s.push(String.fromCharCode(arr[i]));\n      return btoa(s.join(''));\n    };\n\n    util.decodeBase64 = function(s) {\n      validateBase64(s);\n      var i, d = atob(s), b = new Uint8Array(d.length);\n      for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n      return b;\n    };\n\n  }\n\n  return util;\n\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS90d2VldG5hY2wtdXRpbEAwLjE1LjEvbm9kZV9tb2R1bGVzL3R3ZWV0bmFjbC11dGlsL25hY2wtdXRpbC5qcyIsIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLEtBQTZCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7O0FBRUE7O0FBRUE7QUFDQSw4QkFBOEIsRUFBRSxlQUFlLEVBQUUsb0JBQW9CLEVBQUUsa0JBQWtCLEVBQUU7QUFDM0Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixjQUFjO0FBQzlCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGdCQUFnQixnQkFBZ0I7QUFDaEM7QUFDQTs7QUFFQTtBQUNBOztBQUVBLGVBQWUsTUFBTTtBQUNyQjtBQUNBLDJDQUEyQztBQUMzQyxpQkFBaUIsTUFBTTtBQUN2Qjs7QUFFQTtBQUNBO0FBQ0EseURBQXlELE1BQU07QUFDL0Q7O0FBRUEsTUFBTTtBQUNOO0FBQ0EsMkNBQTJDO0FBQzNDLG9CQUFvQixNQUFNO0FBQzFCOztBQUVBO0FBQ0E7QUFDQSw2REFBNkQsTUFBTTtBQUNuRTtBQUNBOztBQUVBLElBQUk7QUFDSjs7QUFFQTtBQUNBO0FBQ0Esa0JBQWtCLFNBQVM7QUFDM0I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsY0FBYztBQUNoQztBQUNBOztBQUVBOztBQUVBOztBQUVBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3R3ZWV0bmFjbC11dGlsQDAuMTUuMS9ub2RlX21vZHVsZXMvdHdlZXRuYWNsLXV0aWwvbmFjbC11dGlsLmpzPzczNzEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gV3JpdHRlbiBpbiAyMDE0LTIwMTYgYnkgRG1pdHJ5IENoZXN0bnlraCBhbmQgRGV2aSBNYW5kaXJpLlxuLy8gUHVibGljIGRvbWFpbi5cbihmdW5jdGlvbihyb290LCBmKSB7XG4gICd1c2Ugc3RyaWN0JztcbiAgaWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnICYmIG1vZHVsZS5leHBvcnRzKSBtb2R1bGUuZXhwb3J0cyA9IGYoKTtcbiAgZWxzZSBpZiAocm9vdC5uYWNsKSByb290Lm5hY2wudXRpbCA9IGYoKTtcbiAgZWxzZSB7XG4gICAgcm9vdC5uYWNsID0ge307XG4gICAgcm9vdC5uYWNsLnV0aWwgPSBmKCk7XG4gIH1cbn0odGhpcywgZnVuY3Rpb24oKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICB2YXIgdXRpbCA9IHt9O1xuXG4gIGZ1bmN0aW9uIHZhbGlkYXRlQmFzZTY0KHMpIHtcbiAgICBpZiAoISgvXig/OltBLVphLXowLTkrXFwvXXsyfVtBLVphLXowLTkrXFwvXXsyfSkqKD86W0EtWmEtejAtOStcXC9dezJ9PT18W0EtWmEtejAtOStcXC9dezN9PSk/JC8udGVzdChzKSkpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2ludmFsaWQgZW5jb2RpbmcnKTtcbiAgICB9XG4gIH1cblxuICB1dGlsLmRlY29kZVVURjggPSBmdW5jdGlvbihzKSB7XG4gICAgaWYgKHR5cGVvZiBzICE9PSAnc3RyaW5nJykgdGhyb3cgbmV3IFR5cGVFcnJvcignZXhwZWN0ZWQgc3RyaW5nJyk7XG4gICAgdmFyIGksIGQgPSB1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQocykpLCBiID0gbmV3IFVpbnQ4QXJyYXkoZC5sZW5ndGgpO1xuICAgIGZvciAoaSA9IDA7IGkgPCBkLmxlbmd0aDsgaSsrKSBiW2ldID0gZC5jaGFyQ29kZUF0KGkpO1xuICAgIHJldHVybiBiO1xuICB9O1xuXG4gIHV0aWwuZW5jb2RlVVRGOCA9IGZ1bmN0aW9uKGFycikge1xuICAgIHZhciBpLCBzID0gW107XG4gICAgZm9yIChpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkrKykgcy5wdXNoKFN0cmluZy5mcm9tQ2hhckNvZGUoYXJyW2ldKSk7XG4gICAgcmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChlc2NhcGUocy5qb2luKCcnKSkpO1xuICB9O1xuXG4gIGlmICh0eXBlb2YgYXRvYiA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAvLyBOb2RlLmpzXG5cbiAgICBpZiAodHlwZW9mIEJ1ZmZlci5mcm9tICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgIC8vIE5vZGUgdjYgYW5kIGxhdGVyXG4gICAgICB1dGlsLmVuY29kZUJhc2U2NCA9IGZ1bmN0aW9uIChhcnIpIHsgLy8gdjYgYW5kIGxhdGVyXG4gICAgICAgICAgcmV0dXJuIEJ1ZmZlci5mcm9tKGFycikudG9TdHJpbmcoJ2Jhc2U2NCcpO1xuICAgICAgfTtcblxuICAgICAgdXRpbC5kZWNvZGVCYXNlNjQgPSBmdW5jdGlvbiAocykge1xuICAgICAgICB2YWxpZGF0ZUJhc2U2NChzKTtcbiAgICAgICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKEJ1ZmZlci5mcm9tKHMsICdiYXNlNjQnKSwgMCkpO1xuICAgICAgfTtcblxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBOb2RlIGVhcmxpZXIgdGhhbiB2NlxuICAgICAgdXRpbC5lbmNvZGVCYXNlNjQgPSBmdW5jdGlvbiAoYXJyKSB7IC8vIHY2IGFuZCBsYXRlclxuICAgICAgICByZXR1cm4gKG5ldyBCdWZmZXIoYXJyKSkudG9TdHJpbmcoJ2Jhc2U2NCcpO1xuICAgICAgfTtcblxuICAgICAgdXRpbC5kZWNvZGVCYXNlNjQgPSBmdW5jdGlvbihzKSB7XG4gICAgICAgIHZhbGlkYXRlQmFzZTY0KHMpO1xuICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwobmV3IEJ1ZmZlcihzLCAnYmFzZTY0JyksIDApKTtcbiAgICAgIH07XG4gICAgfVxuXG4gIH0gZWxzZSB7XG4gICAgLy8gQnJvd3NlcnNcblxuICAgIHV0aWwuZW5jb2RlQmFzZTY0ID0gZnVuY3Rpb24oYXJyKSB7XG4gICAgICB2YXIgaSwgcyA9IFtdLCBsZW4gPSBhcnIubGVuZ3RoO1xuICAgICAgZm9yIChpID0gMDsgaSA8IGxlbjsgaSsrKSBzLnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZShhcnJbaV0pKTtcbiAgICAgIHJldHVybiBidG9hKHMuam9pbignJykpO1xuICAgIH07XG5cbiAgICB1dGlsLmRlY29kZUJhc2U2NCA9IGZ1bmN0aW9uKHMpIHtcbiAgICAgIHZhbGlkYXRlQmFzZTY0KHMpO1xuICAgICAgdmFyIGksIGQgPSBhdG9iKHMpLCBiID0gbmV3IFVpbnQ4QXJyYXkoZC5sZW5ndGgpO1xuICAgICAgZm9yIChpID0gMDsgaSA8IGQubGVuZ3RoOyBpKyspIGJbaV0gPSBkLmNoYXJDb2RlQXQoaSk7XG4gICAgICByZXR1cm4gYjtcbiAgICB9O1xuXG4gIH1cblxuICByZXR1cm4gdXRpbDtcblxufSkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/tweetnacl-util@0.15.1/node_modules/tweetnacl-util/nacl-util.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/tweetnacl@1.0.3/node_modules/tweetnacl/nacl-fast.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/tweetnacl@1.0.3/node_modules/tweetnacl/nacl-fast.js ***!
  \********************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (true) {\n    // Node.js.\n    crypto = __webpack_require__(/*! crypto */ \"?4c6f\");\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})( true && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/tweetnacl@1.0.3/node_modules/tweetnacl/nacl-fast.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/ua-parser-js@1.0.40/node_modules/ua-parser-js/src/ua-parser.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/.pnpm/ua-parser-js@1.0.40/node_modules/ua-parser-js/src/ua-parser.js ***!
  \*******************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("var __WEBPACK_AMD_DEFINE_RESULT__;/////////////////////////////////////////////////////////////////////////////////\n/* UAParser.js v1.0.40\n   Copyright © 2012-2024 Faisal Salman <f@faisalman.com>\n   MIT License *//*\n   Detect Browser, Engine, OS, CPU, and Device type/model from User-Agent data.\n   Supports browser & node.js environment. \n   Demo   : https://faisalman.github.io/ua-parser-js\n   Source : https://github.com/faisalman/ua-parser-js */\n/////////////////////////////////////////////////////////////////////////////////\n\n(function (window, undefined) {\n\n    'use strict';\n\n    //////////////\n    // Constants\n    /////////////\n\n\n    var LIBVERSION  = '1.0.40',\n        EMPTY       = '',\n        UNKNOWN     = '?',\n        FUNC_TYPE   = 'function',\n        UNDEF_TYPE  = 'undefined',\n        OBJ_TYPE    = 'object',\n        STR_TYPE    = 'string',\n        MAJOR       = 'major',\n        MODEL       = 'model',\n        NAME        = 'name',\n        TYPE        = 'type',\n        VENDOR      = 'vendor',\n        VERSION     = 'version',\n        ARCHITECTURE= 'architecture',\n        CONSOLE     = 'console',\n        MOBILE      = 'mobile',\n        TABLET      = 'tablet',\n        SMARTTV     = 'smarttv',\n        WEARABLE    = 'wearable',\n        EMBEDDED    = 'embedded',\n        UA_MAX_LENGTH = 500;\n\n    var AMAZON  = 'Amazon',\n        APPLE   = 'Apple',\n        ASUS    = 'ASUS',\n        BLACKBERRY = 'BlackBerry',\n        BROWSER = 'Browser',\n        CHROME  = 'Chrome',\n        EDGE    = 'Edge',\n        FIREFOX = 'Firefox',\n        GOOGLE  = 'Google',\n        HUAWEI  = 'Huawei',\n        LG      = 'LG',\n        MICROSOFT = 'Microsoft',\n        MOTOROLA  = 'Motorola',\n        OPERA   = 'Opera',\n        SAMSUNG = 'Samsung',\n        SHARP   = 'Sharp',\n        SONY    = 'Sony',\n        XIAOMI  = 'Xiaomi',\n        ZEBRA   = 'Zebra',\n        FACEBOOK    = 'Facebook',\n        CHROMIUM_OS = 'Chromium OS',\n        MAC_OS  = 'Mac OS',\n        SUFFIX_BROWSER = ' Browser';\n\n    ///////////\n    // Helper\n    //////////\n\n    var extend = function (regexes, extensions) {\n            var mergedRegexes = {};\n            for (var i in regexes) {\n                if (extensions[i] && extensions[i].length % 2 === 0) {\n                    mergedRegexes[i] = extensions[i].concat(regexes[i]);\n                } else {\n                    mergedRegexes[i] = regexes[i];\n                }\n            }\n            return mergedRegexes;\n        },\n        enumerize = function (arr) {\n            var enums = {};\n            for (var i=0; i<arr.length; i++) {\n                enums[arr[i].toUpperCase()] = arr[i];\n            }\n            return enums;\n        },\n        has = function (str1, str2) {\n            return typeof str1 === STR_TYPE ? lowerize(str2).indexOf(lowerize(str1)) !== -1 : false;\n        },\n        lowerize = function (str) {\n            return str.toLowerCase();\n        },\n        majorize = function (version) {\n            return typeof(version) === STR_TYPE ? version.replace(/[^\\d\\.]/g, EMPTY).split('.')[0] : undefined;\n        },\n        trim = function (str, len) {\n            if (typeof(str) === STR_TYPE) {\n                str = str.replace(/^\\s\\s*/, EMPTY);\n                return typeof(len) === UNDEF_TYPE ? str : str.substring(0, UA_MAX_LENGTH);\n            }\n    };\n\n    ///////////////\n    // Map helper\n    //////////////\n\n    var rgxMapper = function (ua, arrays) {\n\n            var i = 0, j, k, p, q, matches, match;\n\n            // loop through all regexes maps\n            while (i < arrays.length && !matches) {\n\n                var regex = arrays[i],       // even sequence (0,2,4,..)\n                    props = arrays[i + 1];   // odd sequence (1,3,5,..)\n                j = k = 0;\n\n                // try matching uastring with regexes\n                while (j < regex.length && !matches) {\n\n                    if (!regex[j]) { break; }\n                    matches = regex[j++].exec(ua);\n\n                    if (!!matches) {\n                        for (p = 0; p < props.length; p++) {\n                            match = matches[++k];\n                            q = props[p];\n                            // check if given property is actually array\n                            if (typeof q === OBJ_TYPE && q.length > 0) {\n                                if (q.length === 2) {\n                                    if (typeof q[1] == FUNC_TYPE) {\n                                        // assign modified match\n                                        this[q[0]] = q[1].call(this, match);\n                                    } else {\n                                        // assign given value, ignore regex match\n                                        this[q[0]] = q[1];\n                                    }\n                                } else if (q.length === 3) {\n                                    // check whether function or regex\n                                    if (typeof q[1] === FUNC_TYPE && !(q[1].exec && q[1].test)) {\n                                        // call function (usually string mapper)\n                                        this[q[0]] = match ? q[1].call(this, match, q[2]) : undefined;\n                                    } else {\n                                        // sanitize match using given regex\n                                        this[q[0]] = match ? match.replace(q[1], q[2]) : undefined;\n                                    }\n                                } else if (q.length === 4) {\n                                        this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined;\n                                }\n                            } else {\n                                this[q] = match ? match : undefined;\n                            }\n                        }\n                    }\n                }\n                i += 2;\n            }\n        },\n\n        strMapper = function (str, map) {\n\n            for (var i in map) {\n                // check if current value is array\n                if (typeof map[i] === OBJ_TYPE && map[i].length > 0) {\n                    for (var j = 0; j < map[i].length; j++) {\n                        if (has(map[i][j], str)) {\n                            return (i === UNKNOWN) ? undefined : i;\n                        }\n                    }\n                } else if (has(map[i], str)) {\n                    return (i === UNKNOWN) ? undefined : i;\n                }\n            }\n            return map.hasOwnProperty('*') ? map['*'] : str;\n    };\n\n    ///////////////\n    // String map\n    //////////////\n\n    // Safari < 3.0\n    var oldSafariMap = {\n            '1.0'   : '/8',\n            '1.2'   : '/1',\n            '1.3'   : '/3',\n            '2.0'   : '/412',\n            '2.0.2' : '/416',\n            '2.0.3' : '/417',\n            '2.0.4' : '/419',\n            '?'     : '/'\n        },\n        windowsVersionMap = {\n            'ME'        : '4.90',\n            'NT 3.11'   : 'NT3.51',\n            'NT 4.0'    : 'NT4.0',\n            '2000'      : 'NT 5.0',\n            'XP'        : ['NT 5.1', 'NT 5.2'],\n            'Vista'     : 'NT 6.0',\n            '7'         : 'NT 6.1',\n            '8'         : 'NT 6.2',\n            '8.1'       : 'NT 6.3',\n            '10'        : ['NT 6.4', 'NT 10.0'],\n            'RT'        : 'ARM'\n    };\n\n    //////////////\n    // Regex map\n    /////////////\n\n    var regexes = {\n\n        browser : [[\n\n            /\\b(?:crmo|crios)\\/([\\w\\.]+)/i                                      // Chrome for Android/iOS\n            ], [VERSION, [NAME, 'Chrome']], [\n            /edg(?:e|ios|a)?\\/([\\w\\.]+)/i                                       // Microsoft Edge\n            ], [VERSION, [NAME, 'Edge']], [\n\n            // Presto based\n            /(opera mini)\\/([-\\w\\.]+)/i,                                        // Opera Mini\n            /(opera [mobiletab]{3,6})\\b.+version\\/([-\\w\\.]+)/i,                 // Opera Mobi/Tablet\n            /(opera)(?:.+version\\/|[\\/ ]+)([\\w\\.]+)/i                           // Opera\n            ], [NAME, VERSION], [\n            /opios[\\/ ]+([\\w\\.]+)/i                                             // Opera mini on iphone >= 8.0\n            ], [VERSION, [NAME, OPERA+' Mini']], [\n            /\\bop(?:rg)?x\\/([\\w\\.]+)/i                                          // Opera GX\n            ], [VERSION, [NAME, OPERA+' GX']], [\n            /\\bopr\\/([\\w\\.]+)/i                                                 // Opera Webkit\n            ], [VERSION, [NAME, OPERA]], [\n\n            // Mixed\n            /\\bb[ai]*d(?:uhd|[ub]*[aekoprswx]{5,6})[\\/ ]?([\\w\\.]+)/i            // Baidu\n            ], [VERSION, [NAME, 'Baidu']], [\n            /\\b(?:mxbrowser|mxios|myie2)\\/?([-\\w\\.]*)\\b/i                       // Maxthon\n            ], [VERSION, [NAME, 'Maxthon']], [\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(lunascape|maxthon|netfront|jasmine|blazer|sleipnir)[\\/ ]?([\\w\\.]*)/i,      \n                                                                                // Lunascape/Maxthon/Netfront/Jasmine/Blazer/Sleipnir\n            // Trident based\n            /(avant|iemobile|slim(?:browser|boat|jet))[\\/ ]?([\\d\\.]*)/i,        // Avant/IEMobile/SlimBrowser/SlimBoat/Slimjet\n            /(?:ms|\\()(ie) ([\\w\\.]+)/i,                                         // Internet Explorer\n\n            // Blink/Webkit/KHTML based                                         // Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt/Iron/Iridium/PhantomJS/Bowser/QupZilla/Falkon\n            /(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|duckduckgo|klar|helio|(?=comodo_)?dragon)\\/([-\\w\\.]+)/i,\n                                                                                // Rekonq/Puffin/Brave/Whale/QQBrowserLite/QQ//Vivaldi/DuckDuckGo/Klar/Helio/Dragon\n            /(heytap|ovi|115)browser\\/([\\d\\.]+)/i,                              // HeyTap/Ovi/115\n            /(weibo)__([\\d\\.]+)/i                                               // Weibo\n            ], [NAME, VERSION], [\n            /quark(?:pc)?\\/([-\\w\\.]+)/i                                         // Quark\n            ], [VERSION, [NAME, 'Quark']], [\n            /\\bddg\\/([\\w\\.]+)/i                                                 // DuckDuckGo\n            ], [VERSION, [NAME, 'DuckDuckGo']], [\n            /(?:\\buc? ?browser|(?:juc.+)ucweb)[\\/ ]?([\\w\\.]+)/i                 // UCBrowser\n            ], [VERSION, [NAME, 'UC'+BROWSER]], [\n            /microm.+\\bqbcore\\/([\\w\\.]+)/i,                                     // WeChat Desktop for Windows Built-in Browser\n            /\\bqbcore\\/([\\w\\.]+).+microm/i,\n            /micromessenger\\/([\\w\\.]+)/i                                        // WeChat\n            ], [VERSION, [NAME, 'WeChat']], [\n            /konqueror\\/([\\w\\.]+)/i                                             // Konqueror\n            ], [VERSION, [NAME, 'Konqueror']], [\n            /trident.+rv[: ]([\\w\\.]{1,9})\\b.+like gecko/i                       // IE11\n            ], [VERSION, [NAME, 'IE']], [\n            /ya(?:search)?browser\\/([\\w\\.]+)/i                                  // Yandex\n            ], [VERSION, [NAME, 'Yandex']], [\n            /slbrowser\\/([\\w\\.]+)/i                                             // Smart Lenovo Browser\n            ], [VERSION, [NAME, 'Smart Lenovo '+BROWSER]], [\n            /(avast|avg)\\/([\\w\\.]+)/i                                           // Avast/AVG Secure Browser\n            ], [[NAME, /(.+)/, '$1 Secure '+BROWSER], VERSION], [\n            /\\bfocus\\/([\\w\\.]+)/i                                               // Firefox Focus\n            ], [VERSION, [NAME, FIREFOX+' Focus']], [\n            /\\bopt\\/([\\w\\.]+)/i                                                 // Opera Touch\n            ], [VERSION, [NAME, OPERA+' Touch']], [\n            /coc_coc\\w+\\/([\\w\\.]+)/i                                            // Coc Coc Browser\n            ], [VERSION, [NAME, 'Coc Coc']], [\n            /dolfin\\/([\\w\\.]+)/i                                                // Dolphin\n            ], [VERSION, [NAME, 'Dolphin']], [\n            /coast\\/([\\w\\.]+)/i                                                 // Opera Coast\n            ], [VERSION, [NAME, OPERA+' Coast']], [\n            /miuibrowser\\/([\\w\\.]+)/i                                           // MIUI Browser\n            ], [VERSION, [NAME, 'MIUI' + SUFFIX_BROWSER]], [\n            /fxios\\/([\\w\\.-]+)/i                                                // Firefox for iOS\n            ], [VERSION, [NAME, FIREFOX]], [\n            /\\bqihoobrowser\\/?([\\w\\.]*)/i                                       // 360\n            ], [VERSION, [NAME, '360']], [\n            /\\b(qq)\\/([\\w\\.]+)/i                                                // QQ\n            ], [[NAME, /(.+)/, '$1Browser'], VERSION], [\n            /(oculus|sailfish|huawei|vivo|pico)browser\\/([\\w\\.]+)/i\n            ], [[NAME, /(.+)/, '$1' + SUFFIX_BROWSER], VERSION], [              // Oculus/Sailfish/HuaweiBrowser/VivoBrowser/PicoBrowser\n            /samsungbrowser\\/([\\w\\.]+)/i                                        // Samsung Internet\n            ], [VERSION, [NAME, SAMSUNG + ' Internet']], [\n            /metasr[\\/ ]?([\\d\\.]+)/i                                            // Sogou Explorer\n            ], [VERSION, [NAME, 'Sogou Explorer']], [\n            /(sogou)mo\\w+\\/([\\d\\.]+)/i                                          // Sogou Mobile\n            ], [[NAME, 'Sogou Mobile'], VERSION], [\n            /(electron)\\/([\\w\\.]+) safari/i,                                    // Electron-based App\n            /(tesla)(?: qtcarbrowser|\\/(20\\d\\d\\.[-\\w\\.]+))/i,                   // Tesla\n            /m?(qqbrowser|2345(?=browser|chrome|explorer))\\w*[\\/ ]?v?([\\w\\.]+)/i   // QQ/2345\n            ], [NAME, VERSION], [\n            /(lbbrowser|rekonq)/i,                                              // LieBao Browser/Rekonq\n            /\\[(linkedin)app\\]/i                                                // LinkedIn App for iOS & Android\n            ], [NAME], [\n            /ome\\/([\\w\\.]+) \\w* ?(iron) saf/i,                                  // Iron\n            /ome\\/([\\w\\.]+).+qihu (360)[es]e/i                                  // 360\n            ], [VERSION, NAME], [\n\n            // WebView\n            /((?:fban\\/fbios|fb_iab\\/fb4a)(?!.+fbav)|;fbav\\/([\\w\\.]+);)/i       // Facebook App for iOS & Android\n            ], [[NAME, FACEBOOK], VERSION], [\n            /(Klarna)\\/([\\w\\.]+)/i,                                             // Klarna Shopping Browser for iOS & Android\n            /(kakao(?:talk|story))[\\/ ]([\\w\\.]+)/i,                             // Kakao App\n            /(naver)\\(.*?(\\d+\\.[\\w\\.]+).*\\)/i,                                  // Naver InApp\n            /safari (line)\\/([\\w\\.]+)/i,                                        // Line App for iOS\n            /\\b(line)\\/([\\w\\.]+)\\/iab/i,                                        // Line App for Android\n            /(alipay)client\\/([\\w\\.]+)/i,                                       // Alipay\n            /(twitter)(?:and| f.+e\\/([\\w\\.]+))/i,                               // Twitter\n            /(chromium|instagram|snapchat)[\\/ ]([-\\w\\.]+)/i                     // Chromium/Instagram/Snapchat\n            ], [NAME, VERSION], [\n            /\\bgsa\\/([\\w\\.]+) .*safari\\//i                                      // Google Search Appliance on iOS\n            ], [VERSION, [NAME, 'GSA']], [\n            /musical_ly(?:.+app_?version\\/|_)([\\w\\.]+)/i                        // TikTok\n            ], [VERSION, [NAME, 'TikTok']], [\n\n            /headlesschrome(?:\\/([\\w\\.]+)| )/i                                  // Chrome Headless\n            ], [VERSION, [NAME, CHROME+' Headless']], [\n\n            / wv\\).+(chrome)\\/([\\w\\.]+)/i                                       // Chrome WebView\n            ], [[NAME, CHROME+' WebView'], VERSION], [\n\n            /droid.+ version\\/([\\w\\.]+)\\b.+(?:mobile safari|safari)/i           // Android Browser\n            ], [VERSION, [NAME, 'Android '+BROWSER]], [\n\n            /(chrome|omniweb|arora|[tizenoka]{5} ?browser)\\/v?([\\w\\.]+)/i       // Chrome/OmniWeb/Arora/Tizen/Nokia\n            ], [NAME, VERSION], [\n\n            /version\\/([\\w\\.\\,]+) .*mobile\\/\\w+ (safari)/i                      // Mobile Safari\n            ], [VERSION, [NAME, 'Mobile Safari']], [\n            /version\\/([\\w(\\.|\\,)]+) .*(mobile ?safari|safari)/i                // Safari & Safari Mobile\n            ], [VERSION, NAME], [\n            /webkit.+?(mobile ?safari|safari)(\\/[\\w\\.]+)/i                      // Safari < 3.0\n            ], [NAME, [VERSION, strMapper, oldSafariMap]], [\n\n            /(webkit|khtml)\\/([\\w\\.]+)/i\n            ], [NAME, VERSION], [\n\n            // Gecko based\n            /(navigator|netscape\\d?)\\/([-\\w\\.]+)/i                              // Netscape\n            ], [[NAME, 'Netscape'], VERSION], [\n            /(wolvic|librewolf)\\/([\\w\\.]+)/i                                    // Wolvic/LibreWolf\n            ], [NAME, VERSION], [\n            /mobile vr; rv:([\\w\\.]+)\\).+firefox/i                               // Firefox Reality\n            ], [VERSION, [NAME, FIREFOX+' Reality']], [\n            /ekiohf.+(flow)\\/([\\w\\.]+)/i,                                       // Flow\n            /(swiftfox)/i,                                                      // Swiftfox\n            /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror)[\\/ ]?([\\w\\.\\+]+)/i,\n                                                                                // IceDragon/Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror\n            /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([-\\w\\.]+)$/i,\n                                                                                // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix\n            /(firefox)\\/([\\w\\.]+)/i,                                            // Other Firefox-based\n            /(mozilla)\\/([\\w\\.]+) .+rv\\:.+gecko\\/\\d+/i,                         // Mozilla\n\n            // Other\n            /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|obigo|mosaic|(?:go|ice|up)[\\. ]?browser)[-\\/ ]?v?([\\w\\.]+)/i,\n                                                                                // Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf/Obigo/Mosaic/Go/ICE/UP.Browser\n            /(links) \\(([\\w\\.]+)/i                                              // Links\n            ], [NAME, [VERSION, /_/g, '.']], [\n            \n            /(cobalt)\\/([\\w\\.]+)/i                                              // Cobalt\n            ], [NAME, [VERSION, /master.|lts./, \"\"]]\n        ],\n\n        cpu : [[\n\n            /(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\\)]/i                     // AMD64 (x64)\n            ], [[ARCHITECTURE, 'amd64']], [\n\n            /(ia32(?=;))/i                                                      // IA32 (quicktime)\n            ], [[ARCHITECTURE, lowerize]], [\n\n            /((?:i[346]|x)86)[;\\)]/i                                            // IA32 (x86)\n            ], [[ARCHITECTURE, 'ia32']], [\n\n            /\\b(aarch64|arm(v?8e?l?|_?64))\\b/i                                 // ARM64\n            ], [[ARCHITECTURE, 'arm64']], [\n\n            /\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i                                   // ARMHF\n            ], [[ARCHITECTURE, 'armhf']], [\n\n            // PocketPC mistakenly identified as PowerPC\n            /windows (ce|mobile); ppc;/i\n            ], [[ARCHITECTURE, 'arm']], [\n\n            /((?:ppc|powerpc)(?:64)?)(?: mac|;|\\))/i                            // PowerPC\n            ], [[ARCHITECTURE, /ower/, EMPTY, lowerize]], [\n\n            /(sun4\\w)[;\\)]/i                                                    // SPARC\n            ], [[ARCHITECTURE, 'sparc']], [\n\n            /((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i\n                                                                                // IA64, 68K, ARM/64, AVR/32, IRIX/64, MIPS/64, SPARC/64, PA-RISC\n            ], [[ARCHITECTURE, lowerize]]\n        ],\n\n        device : [[\n\n            //////////////////////////\n            // MOBILES & TABLETS\n            /////////////////////////\n\n            // Samsung\n            /\\b(sch-i[89]0\\d|shw-m380s|sm-[ptx]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus 10)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, TABLET]], [\n            /\\b((?:s[cgp]h|gt|sm)-(?![lr])\\w+|sc[g-]?[\\d]+a?|galaxy nexus)/i,\n            /samsung[- ]((?!sm-[lr])[-\\w]+)/i,\n            /sec-(sgh\\w+)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, MOBILE]], [\n\n            // Apple\n            /(?:\\/|\\()(ip(?:hone|od)[\\w, ]*)(?:\\/|;)/i                          // iPod/iPhone\n            ], [MODEL, [VENDOR, APPLE], [TYPE, MOBILE]], [\n            /\\((ipad);[-\\w\\),; ]+apple/i,                                       // iPad\n            /applecoremedia\\/[\\w\\.]+ \\((ipad)/i,\n            /\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i\n            ], [MODEL, [VENDOR, APPLE], [TYPE, TABLET]], [\n            /(macintosh);/i\n            ], [MODEL, [VENDOR, APPLE]], [\n\n            // Sharp\n            /\\b(sh-?[altvz]?\\d\\d[a-ekm]?)/i\n            ], [MODEL, [VENDOR, SHARP], [TYPE, MOBILE]], [\n\n            // Honor\n            /(?:honor)([-\\w ]+)[;\\)]/i\n            ], [MODEL, [VENDOR, 'Honor'], [TYPE, MOBILE]], [\n\n            // Huawei\n            /\\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\\d{2})\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, TABLET]], [\n            /(?:huawei)([-\\w ]+)[;\\)]/i,\n            /\\b(nexus 6p|\\w{2,4}e?-[atu]?[ln][\\dx][012359c][adn]?)\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, MOBILE]], [\n\n            // Xiaomi\n            /\\b(poco[\\w ]+|m2\\d{3}j\\d\\d[a-z]{2})(?: bui|\\))/i,                  // Xiaomi POCO\n            /\\b; (\\w+) build\\/hm\\1/i,                                           // Xiaomi Hongmi 'numeric' models\n            /\\b(hm[-_ ]?note?[_ ]?(?:\\d\\w)?) bui/i,                             // Xiaomi Hongmi\n            /\\b(redmi[\\-_ ]?(?:note|k)?[\\w_ ]+)(?: bui|\\))/i,                   // Xiaomi Redmi\n            /oid[^\\)]+; (m?[12][0-389][01]\\w{3,6}[c-y])( bui|; wv|\\))/i,        // Xiaomi Redmi 'numeric' models\n            /\\b(mi[-_ ]?(?:a\\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\\d?\\w?)[_ ]?(?:plus|se|lite|pro)?)(?: bui|\\))/i // Xiaomi Mi\n            ], [[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, MOBILE]], [\n            /oid[^\\)]+; (2\\d{4}(283|rpbf)[cgl])( bui|\\))/i,                     // Redmi Pad\n            /\\b(mi[-_ ]?(?:pad)(?:[\\w_ ]+))(?: bui|\\))/i                        // Mi Pad tablets\n            ],[[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, TABLET]], [\n\n            // OPPO\n            /; (\\w+) bui.+ oppo/i,\n            /\\b(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007|a101op)\\b/i\n            ], [MODEL, [VENDOR, 'OPPO'], [TYPE, MOBILE]], [\n            /\\b(opd2\\d{3}a?) bui/i\n            ], [MODEL, [VENDOR, 'OPPO'], [TYPE, TABLET]], [\n\n            // Vivo\n            /vivo (\\w+)(?: bui|\\))/i,\n            /\\b(v[12]\\d{3}\\w?[at])(?: bui|;)/i\n            ], [MODEL, [VENDOR, 'Vivo'], [TYPE, MOBILE]], [\n\n            // Realme\n            /\\b(rmx[1-3]\\d{3})(?: bui|;|\\))/i\n            ], [MODEL, [VENDOR, 'Realme'], [TYPE, MOBILE]], [\n\n            // Motorola\n            /\\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\\b[\\w ]+build\\//i,\n            /\\bmot(?:orola)?[- ](\\w*)/i,\n            /((?:moto[\\w\\(\\) ]+|xt\\d{3,4}|nexus 6)(?= bui|\\)))/i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, MOBILE]], [\n            /\\b(mz60\\d|xoom[2 ]{0,2}) build\\//i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, TABLET]], [\n\n            // LG\n            /((?=lg)?[vl]k\\-?\\d{3}) bui| 3\\.[-\\w; ]{10}lg?-([06cv9]{3,4})/i\n            ], [MODEL, [VENDOR, LG], [TYPE, TABLET]], [\n            /(lm(?:-?f100[nv]?|-[\\w\\.]+)(?= bui|\\))|nexus [45])/i,\n            /\\blg[-e;\\/ ]+((?!browser|netcast|android tv)\\w+)/i,\n            /\\blg-?([\\d\\w]+) bui/i\n            ], [MODEL, [VENDOR, LG], [TYPE, MOBILE]], [\n\n            // Lenovo\n            /(ideatab[-\\w ]+)/i,\n            /lenovo ?(s[56]000[-\\w]+|tab(?:[\\w ]+)|yt[-\\d\\w]{6}|tb[-\\d\\w]{6})/i\n            ], [MODEL, [VENDOR, 'Lenovo'], [TYPE, TABLET]], [\n\n            // Nokia\n            /(?:maemo|nokia).*(n900|lumia \\d+)/i,\n            /nokia[-_ ]?([-\\w\\.]*)/i\n            ], [[MODEL, /_/g, ' '], [VENDOR, 'Nokia'], [TYPE, MOBILE]], [\n\n            // Google\n            /(pixel c)\\b/i                                                      // Google Pixel C\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, TABLET]], [\n            /droid.+; (pixel[\\daxl ]{0,6})(?: bui|\\))/i                         // Google Pixel\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, MOBILE]], [\n\n            // Sony\n            /droid.+; (a?\\d[0-2]{2}so|[c-g]\\d{4}|so[-gl]\\w+|xq-a\\w[4-7][12])(?= bui|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i\n            ], [MODEL, [VENDOR, SONY], [TYPE, MOBILE]], [\n            /sony tablet [ps]/i,\n            /\\b(?:sony)?sgp\\w+(?: bui|\\))/i\n            ], [[MODEL, 'Xperia Tablet'], [VENDOR, SONY], [TYPE, TABLET]], [\n\n            // OnePlus\n            / (kb2005|in20[12]5|be20[12][59])\\b/i,\n            /(?:one)?(?:plus)? (a\\d0\\d\\d)(?: b|\\))/i\n            ], [MODEL, [VENDOR, 'OnePlus'], [TYPE, MOBILE]], [\n\n            // Amazon\n            /(alexa)webm/i,\n            /(kf[a-z]{2}wi|aeo(?!bc)\\w\\w)( bui|\\))/i,                           // Kindle Fire without Silk / Echo Show\n            /(kf[a-z]+)( bui|\\)).+silk\\//i                                      // Kindle Fire HD\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, TABLET]], [\n            /((?:sd|kf)[0349hijorstuw]+)( bui|\\)).+silk\\//i                     // Fire Phone\n            ], [[MODEL, /(.+)/g, 'Fire Phone $1'], [VENDOR, AMAZON], [TYPE, MOBILE]], [\n\n            // BlackBerry\n            /(playbook);[-\\w\\),; ]+(rim)/i                                      // BlackBerry PlayBook\n            ], [MODEL, VENDOR, [TYPE, TABLET]], [\n            /\\b((?:bb[a-f]|st[hv])100-\\d)/i,\n            /\\(bb10; (\\w+)/i                                                    // BlackBerry 10\n            ], [MODEL, [VENDOR, BLACKBERRY], [TYPE, MOBILE]], [\n\n            // Asus\n            /(?:\\b|asus_)(transfo[prime ]{4,10} \\w+|eeepc|slider \\w+|nexus 7|padfone|p00[cj])/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, TABLET]], [\n            / (z[bes]6[027][012][km][ls]|zenfone \\d\\w?)\\b/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, MOBILE]], [\n\n            // HTC\n            /(nexus 9)/i                                                        // HTC Nexus 9\n            ], [MODEL, [VENDOR, 'HTC'], [TYPE, TABLET]], [\n            /(htc)[-;_ ]{1,2}([\\w ]+(?=\\)| bui)|\\w+)/i,                         // HTC\n\n            // ZTE\n            /(zte)[- ]([\\w ]+?)(?: bui|\\/|\\))/i,\n            /(alcatel|geeksphone|nexian|panasonic(?!(?:;|\\.))|sony(?!-bra))[-_ ]?([-\\w]*)/i         // Alcatel/GeeksPhone/Nexian/Panasonic/Sony\n            ], [VENDOR, [MODEL, /_/g, ' '], [TYPE, MOBILE]], [\n\n            // TCL\n            /droid [\\w\\.]+; ((?:8[14]9[16]|9(?:0(?:48|60|8[01])|1(?:3[27]|66)|2(?:6[69]|9[56])|466))[gqswx])\\w*(\\)| bui)/i\n            ], [MODEL, [VENDOR, 'TCL'], [TYPE, TABLET]], [\n\n            // itel\n            /(itel) ((\\w+))/i\n            ], [[VENDOR, lowerize], MODEL, [TYPE, strMapper, { 'tablet' : ['p10001l', 'w7001'], '*' : 'mobile' }]], [\n\n            // Acer\n            /droid.+; ([ab][1-7]-?[0178a]\\d\\d?)/i\n            ], [MODEL, [VENDOR, 'Acer'], [TYPE, TABLET]], [\n\n            // Meizu\n            /droid.+; (m[1-5] note) bui/i,\n            /\\bmz-([-\\w]{2,})/i\n            ], [MODEL, [VENDOR, 'Meizu'], [TYPE, MOBILE]], [\n                \n            // Ulefone\n            /; ((?:power )?armor(?:[\\w ]{0,8}))(?: bui|\\))/i\n            ], [MODEL, [VENDOR, 'Ulefone'], [TYPE, MOBILE]], [\n\n            // Energizer\n            /; (energy ?\\w+)(?: bui|\\))/i,\n            /; energizer ([\\w ]+)(?: bui|\\))/i\n            ], [MODEL, [VENDOR, 'Energizer'], [TYPE, MOBILE]], [\n\n            // Cat\n            /; cat (b35);/i,\n            /; (b15q?|s22 flip|s48c|s62 pro)(?: bui|\\))/i\n            ], [MODEL, [VENDOR, 'Cat'], [TYPE, MOBILE]], [\n\n            // Smartfren\n            /((?:new )?andromax[\\w- ]+)(?: bui|\\))/i\n            ], [MODEL, [VENDOR, 'Smartfren'], [TYPE, MOBILE]], [\n\n            // Nothing\n            /droid.+; (a(?:015|06[35]|142p?))/i\n            ], [MODEL, [VENDOR, 'Nothing'], [TYPE, MOBILE]], [\n\n            // MIXED\n            /(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron|infinix|tecno|micromax|advan)[-_ ]?([-\\w]*)/i,\n                                                                                // BlackBerry/BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Meizu/Motorola/Polytron/Infinix/Tecno/Micromax/Advan\n            /; (imo) ((?!tab)[\\w ]+?)(?: bui|\\))/i,                             // IMO\n            /(hp) ([\\w ]+\\w)/i,                                                 // HP iPAQ\n            /(asus)-?(\\w+)/i,                                                   // Asus\n            /(microsoft); (lumia[\\w ]+)/i,                                      // Microsoft Lumia\n            /(lenovo)[-_ ]?([-\\w]+)/i,                                          // Lenovo\n            /(jolla)/i,                                                         // Jolla\n            /(oppo) ?([\\w ]+) bui/i                                             // OPPO\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n\n            /(imo) (tab \\w+)/i,                                                 // IMO\n            /(kobo)\\s(ereader|touch)/i,                                         // Kobo\n            /(archos) (gamepad2?)/i,                                            // Archos\n            /(hp).+(touchpad(?!.+tablet)|tablet)/i,                             // HP TouchPad\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(nook)[\\w ]+build\\/(\\w+)/i,                                        // Nook\n            /(dell) (strea[kpr\\d ]*[\\dko])/i,                                   // Dell Streak\n            /(le[- ]+pan)[- ]+(\\w{1,9}) bui/i,                                  // Le Pan Tablets\n            /(trinity)[- ]*(t\\d{3}) bui/i,                                      // Trinity Tablets\n            /(gigaset)[- ]+(q\\w{1,9}) bui/i,                                    // Gigaset Tablets\n            /(vodafone) ([\\w ]+)(?:\\)| bui)/i                                   // Vodafone\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /(surface duo)/i                                                    // Surface Duo\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, TABLET]], [\n            /droid [\\d\\.]+; (fp\\du?)(?: b|\\))/i                                 // Fairphone\n            ], [MODEL, [VENDOR, 'Fairphone'], [TYPE, MOBILE]], [\n            /(u304aa)/i                                                         // AT&T\n            ], [MODEL, [VENDOR, 'AT&T'], [TYPE, MOBILE]], [\n            /\\bsie-(\\w*)/i                                                      // Siemens\n            ], [MODEL, [VENDOR, 'Siemens'], [TYPE, MOBILE]], [\n            /\\b(rct\\w+) b/i                                                     // RCA Tablets\n            ], [MODEL, [VENDOR, 'RCA'], [TYPE, TABLET]], [\n            /\\b(venue[\\d ]{2,7}) b/i                                            // Dell Venue Tablets\n            ], [MODEL, [VENDOR, 'Dell'], [TYPE, TABLET]], [\n            /\\b(q(?:mv|ta)\\w+) b/i                                              // Verizon Tablet\n            ], [MODEL, [VENDOR, 'Verizon'], [TYPE, TABLET]], [\n            /\\b(?:barnes[& ]+noble |bn[rt])([\\w\\+ ]*) b/i                       // Barnes & Noble Tablet\n            ], [MODEL, [VENDOR, 'Barnes & Noble'], [TYPE, TABLET]], [\n            /\\b(tm\\d{3}\\w+) b/i\n            ], [MODEL, [VENDOR, 'NuVision'], [TYPE, TABLET]], [\n            /\\b(k88) b/i                                                        // ZTE K Series Tablet\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, TABLET]], [\n            /\\b(nx\\d{3}j) b/i                                                   // ZTE Nubia\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, MOBILE]], [\n            /\\b(gen\\d{3}) b.+49h/i                                              // Swiss GEN Mobile\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, MOBILE]], [\n            /\\b(zur\\d{3}) b/i                                                   // Swiss ZUR Tablet\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, TABLET]], [\n            /\\b((zeki)?tb.*\\b) b/i                                              // Zeki Tablets\n            ], [MODEL, [VENDOR, 'Zeki'], [TYPE, TABLET]], [\n            /\\b([yr]\\d{2}) b/i,\n            /\\b(dragon[- ]+touch |dt)(\\w{5}) b/i                                // Dragon Touch Tablet\n            ], [[VENDOR, 'Dragon Touch'], MODEL, [TYPE, TABLET]], [\n            /\\b(ns-?\\w{0,9}) b/i                                                // Insignia Tablets\n            ], [MODEL, [VENDOR, 'Insignia'], [TYPE, TABLET]], [\n            /\\b((nxa|next)-?\\w{0,9}) b/i                                        // NextBook Tablets\n            ], [MODEL, [VENDOR, 'NextBook'], [TYPE, TABLET]], [\n            /\\b(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i                  // Voice Xtreme Phones\n            ], [[VENDOR, 'Voice'], MODEL, [TYPE, MOBILE]], [\n            /\\b(lvtel\\-)?(v1[12]) b/i                                           // LvTel Phones\n            ], [[VENDOR, 'LvTel'], MODEL, [TYPE, MOBILE]], [\n            /\\b(ph-1) /i                                                        // Essential PH-1\n            ], [MODEL, [VENDOR, 'Essential'], [TYPE, MOBILE]], [\n            /\\b(v(100md|700na|7011|917g).*\\b) b/i                               // Envizen Tablets\n            ], [MODEL, [VENDOR, 'Envizen'], [TYPE, TABLET]], [\n            /\\b(trio[-\\w\\. ]+) b/i                                              // MachSpeed Tablets\n            ], [MODEL, [VENDOR, 'MachSpeed'], [TYPE, TABLET]], [\n            /\\btu_(1491) b/i                                                    // Rotor Tablets\n            ], [MODEL, [VENDOR, 'Rotor'], [TYPE, TABLET]], [\n            /(shield[\\w ]+) b/i                                                 // Nvidia Shield Tablets\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, TABLET]], [\n            /(sprint) (\\w+)/i                                                   // Sprint Phones\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n            /(kin\\.[onetw]{3})/i                                                // Microsoft Kin\n            ], [[MODEL, /\\./g, ' '], [VENDOR, MICROSOFT], [TYPE, MOBILE]], [\n            /droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i             // Zebra\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, TABLET]], [\n            /droid.+; (ec30|ps20|tc[2-8]\\d[kx])\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, MOBILE]], [\n\n            ///////////////////\n            // SMARTTVS\n            ///////////////////\n\n            /smart-tv.+(samsung)/i                                              // Samsung\n            ], [VENDOR, [TYPE, SMARTTV]], [\n            /hbbtv.+maple;(\\d+)/i\n            ], [[MODEL, /^/, 'SmartTV'], [VENDOR, SAMSUNG], [TYPE, SMARTTV]], [\n            /(nux; netcast.+smarttv|lg (netcast\\.tv-201\\d|android tv))/i        // LG SmartTV\n            ], [[VENDOR, LG], [TYPE, SMARTTV]], [\n            /(apple) ?tv/i                                                      // Apple TV\n            ], [VENDOR, [MODEL, APPLE+' TV'], [TYPE, SMARTTV]], [\n            /crkey/i                                                            // Google Chromecast\n            ], [[MODEL, CHROME+'cast'], [VENDOR, GOOGLE], [TYPE, SMARTTV]], [\n            /droid.+aft(\\w+)( bui|\\))/i                                         // Fire TV\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, SMARTTV]], [\n            /\\(dtv[\\);].+(aquos)/i,\n            /(aquos-tv[\\w ]+)\\)/i                                               // Sharp\n            ], [MODEL, [VENDOR, SHARP], [TYPE, SMARTTV]],[\n            /(bravia[\\w ]+)( bui|\\))/i                                              // Sony\n            ], [MODEL, [VENDOR, SONY], [TYPE, SMARTTV]], [\n            /(mitv-\\w{5}) bui/i                                                 // Xiaomi\n            ], [MODEL, [VENDOR, XIAOMI], [TYPE, SMARTTV]], [\n            /Hbbtv.*(technisat) (.*);/i                                         // TechniSAT\n            ], [VENDOR, MODEL, [TYPE, SMARTTV]], [\n            /\\b(roku)[\\dx]*[\\)\\/]((?:dvp-)?[\\d\\.]*)/i,                          // Roku\n            /hbbtv\\/\\d+\\.\\d+\\.\\d+ +\\([\\w\\+ ]*; *([\\w\\d][^;]*);([^;]*)/i         // HbbTV devices\n            ], [[VENDOR, trim], [MODEL, trim], [TYPE, SMARTTV]], [\n            /\\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\\b/i                   // SmartTV from Unidentified Vendors\n            ], [[TYPE, SMARTTV]], [\n\n            ///////////////////\n            // CONSOLES\n            ///////////////////\n\n            /(ouya)/i,                                                          // Ouya\n            /(nintendo) ([wids3utch]+)/i                                        // Nintendo\n            ], [VENDOR, MODEL, [TYPE, CONSOLE]], [\n            /droid.+; (shield) bui/i                                            // Nvidia\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, CONSOLE]], [\n            /(playstation [345portablevi]+)/i                                   // Playstation\n            ], [MODEL, [VENDOR, SONY], [TYPE, CONSOLE]], [\n            /\\b(xbox(?: one)?(?!; xbox))[\\); ]/i                                // Microsoft Xbox\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, CONSOLE]], [\n\n            ///////////////////\n            // WEARABLES\n            ///////////////////\n\n            /\\b(sm-[lr]\\d\\d[05][fnuw]?s?)\\b/i                                   // Samsung Galaxy Watch\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, WEARABLE]], [\n            /((pebble))app/i                                                    // Pebble\n            ], [VENDOR, MODEL, [TYPE, WEARABLE]], [\n            /(watch)(?: ?os[,\\/]|\\d,\\d\\/)[\\d\\.]+/i                              // Apple Watch\n            ], [MODEL, [VENDOR, APPLE], [TYPE, WEARABLE]], [\n            /droid.+; (glass) \\d/i                                              // Google Glass\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, WEARABLE]], [\n            /droid.+; (wt63?0{2,3})\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, WEARABLE]], [\n\n            ///////////////////\n            // XR\n            ///////////////////\n\n            /droid.+; (glass) \\d/i                                              // Google Glass\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, WEARABLE]], [\n            /(pico) (4|neo3(?: link|pro)?)/i                                    // Pico\n            ], [VENDOR, MODEL, [TYPE, WEARABLE]], [\n            /; (quest( \\d| pro)?)/i                                             // Oculus Quest\n            ], [MODEL, [VENDOR, FACEBOOK], [TYPE, WEARABLE]], [\n\n            ///////////////////\n            // EMBEDDED\n            ///////////////////\n\n            /(tesla)(?: qtcarbrowser|\\/[-\\w\\.]+)/i                              // Tesla\n            ], [VENDOR, [TYPE, EMBEDDED]], [\n            /(aeobc)\\b/i                                                        // Echo Dot\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, EMBEDDED]], [\n\n            ////////////////////\n            // MIXED (GENERIC)\n            ///////////////////\n\n            /droid .+?; ([^;]+?)(?: bui|; wv\\)|\\) applew).+? mobile safari/i    // Android Phones from Unidentified Vendors\n            ], [MODEL, [TYPE, MOBILE]], [\n            /droid .+?; ([^;]+?)(?: bui|\\) applew).+?(?! mobile) safari/i       // Android Tablets from Unidentified Vendors\n            ], [MODEL, [TYPE, TABLET]], [\n            /\\b((tablet|tab)[;\\/]|focus\\/\\d(?!.+mobile))/i                      // Unidentifiable Tablet\n            ], [[TYPE, TABLET]], [\n            /(phone|mobile(?:[;\\/]| [ \\w\\/\\.]*safari)|pda(?=.+windows ce))/i    // Unidentifiable Mobile\n            ], [[TYPE, MOBILE]], [\n            /(android[-\\w\\. ]{0,9});.+buil/i                                    // Generic Android Device\n            ], [MODEL, [VENDOR, 'Generic']]\n        ],\n\n        engine : [[\n\n            /windows.+ edge\\/([\\w\\.]+)/i                                       // EdgeHTML\n            ], [VERSION, [NAME, EDGE+'HTML']], [\n\n            /(arkweb)\\/([\\w\\.]+)/i                                              // ArkWeb\n            ], [NAME, VERSION], [\n\n            /webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i                         // Blink\n            ], [VERSION, [NAME, 'Blink']], [\n\n            /(presto)\\/([\\w\\.]+)/i,                                             // Presto\n            /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna|servo)\\/([\\w\\.]+)/i, // WebKit/Trident/NetFront/NetSurf/Amaya/Lynx/w3m/Goanna/Servo\n            /ekioh(flow)\\/([\\w\\.]+)/i,                                          // Flow\n            /(khtml|tasman|links)[\\/ ]\\(?([\\w\\.]+)/i,                           // KHTML/Tasman/Links\n            /(icab)[\\/ ]([23]\\.[\\d\\.]+)/i,                                      // iCab\n            /\\b(libweb)/i\n            ], [NAME, VERSION], [\n\n            /rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i                                     // Gecko\n            ], [VERSION, NAME]\n        ],\n\n        os : [[\n\n            // Windows\n            /microsoft (windows) (vista|xp)/i                                   // Windows (iTunes)\n            ], [NAME, VERSION], [\n            /(windows (?:phone(?: os)?|mobile))[\\/ ]?([\\d\\.\\w ]*)/i             // Windows Phone\n            ], [NAME, [VERSION, strMapper, windowsVersionMap]], [\n            /windows nt 6\\.2; (arm)/i,                                        // Windows RT\n            /windows[\\/ ]?([ntce\\d\\. ]+\\w)(?!.+xbox)/i,\n            /(?:win(?=3|9|n)|win 9x )([nt\\d\\.]+)/i\n            ], [[VERSION, strMapper, windowsVersionMap], [NAME, 'Windows']], [\n\n            // iOS/macOS\n            /ip[honead]{2,4}\\b(?:.*os ([\\w]+) like mac|; opera)/i,              // iOS\n            /(?:ios;fbsv\\/|iphone.+ios[\\/ ])([\\d\\.]+)/i,\n            /cfnetwork\\/.+darwin/i\n            ], [[VERSION, /_/g, '.'], [NAME, 'iOS']], [\n            /(mac os x) ?([\\w\\. ]*)/i,\n            /(macintosh|mac_powerpc\\b)(?!.+haiku)/i                             // Mac OS\n            ], [[NAME, MAC_OS], [VERSION, /_/g, '.']], [\n\n            // Mobile OSes\n            /droid ([\\w\\.]+)\\b.+(android[- ]x86|harmonyos)/i                    // Android-x86/HarmonyOS\n            ], [VERSION, NAME], [                                               // Android/WebOS/QNX/Bada/RIM/Maemo/MeeGo/Sailfish OS/OpenHarmony\n            /(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish|openharmony)[-\\/ ]?([\\w\\.]*)/i,\n            /(blackberry)\\w*\\/([\\w\\.]*)/i,                                      // Blackberry\n            /(tizen|kaios)[\\/ ]([\\w\\.]+)/i,                                     // Tizen/KaiOS\n            /\\((series40);/i                                                    // Series 40\n            ], [NAME, VERSION], [\n            /\\(bb(10);/i                                                        // BlackBerry 10\n            ], [VERSION, [NAME, BLACKBERRY]], [\n            /(?:symbian ?os|symbos|s60(?=;)|series60)[-\\/ ]?([\\w\\.]*)/i         // Symbian\n            ], [VERSION, [NAME, 'Symbian']], [\n            /mozilla\\/[\\d\\.]+ \\((?:mobile|tablet|tv|mobile; [\\w ]+); rv:.+ gecko\\/([\\w\\.]+)/i // Firefox OS\n            ], [VERSION, [NAME, FIREFOX+' OS']], [\n            /web0s;.+rt(tv)/i,\n            /\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i                              // WebOS\n            ], [VERSION, [NAME, 'webOS']], [\n            /watch(?: ?os[,\\/]|\\d,\\d\\/)([\\d\\.]+)/i                              // watchOS\n            ], [VERSION, [NAME, 'watchOS']], [\n\n            // Google Chromecast\n            /crkey\\/([\\d\\.]+)/i                                                 // Google Chromecast\n            ], [VERSION, [NAME, CHROME+'cast']], [\n            /(cros) [\\w]+(?:\\)| ([\\w\\.]+)\\b)/i                                  // Chromium OS\n            ], [[NAME, CHROMIUM_OS], VERSION],[\n\n            // Smart TVs\n            /panasonic;(viera)/i,                                               // Panasonic Viera\n            /(netrange)mmh/i,                                                   // Netrange\n            /(nettv)\\/(\\d+\\.[\\w\\.]+)/i,                                         // NetTV\n\n            // Console\n            /(nintendo|playstation) ([wids345portablevuch]+)/i,                 // Nintendo/Playstation\n            /(xbox); +xbox ([^\\);]+)/i,                                         // Microsoft Xbox (360, One, X, S, Series X, Series S)\n\n            // Other\n            /\\b(joli|palm)\\b ?(?:os)?\\/?([\\w\\.]*)/i,                            // Joli/Palm\n            /(mint)[\\/\\(\\) ]?(\\w*)/i,                                           // Mint\n            /(mageia|vectorlinux)[; ]/i,                                        // Mageia/VectorLinux\n            /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\\/ ]?(?!chrom|package)([-\\w\\.]*)/i,\n                                                                                // Ubuntu/Debian/SUSE/Gentoo/Arch/Slackware/Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus/Raspbian/Plan9/Minix/RISCOS/Contiki/Deepin/Manjaro/elementary/Sabayon/Linspire\n            /(hurd|linux) ?([\\w\\.]*)/i,                                         // Hurd/Linux\n            /(gnu) ?([\\w\\.]*)/i,                                                // GNU\n            /\\b([-frentopcghs]{0,5}bsd|dragonfly)[\\/ ]?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i, // FreeBSD/NetBSD/OpenBSD/PC-BSD/GhostBSD/DragonFly\n            /(haiku) (\\w+)/i                                                    // Haiku\n            ], [NAME, VERSION], [\n            /(sunos) ?([\\w\\.\\d]*)/i                                             // Solaris\n            ], [[NAME, 'Solaris'], VERSION], [\n            /((?:open)?solaris)[-\\/ ]?([\\w\\.]*)/i,                              // Solaris\n            /(aix) ((\\d)(?=\\.|\\)| )[\\w\\.])*/i,                                  // AIX\n            /\\b(beos|os\\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i, // BeOS/OS2/AmigaOS/MorphOS/OpenVMS/Fuchsia/HP-UX/SerenityOS\n            /(unix) ?([\\w\\.]*)/i                                                // UNIX\n            ], [NAME, VERSION]\n        ]\n    };\n\n    /////////////////\n    // Constructor\n    ////////////////\n\n    var UAParser = function (ua, extensions) {\n\n        if (typeof ua === OBJ_TYPE) {\n            extensions = ua;\n            ua = undefined;\n        }\n\n        if (!(this instanceof UAParser)) {\n            return new UAParser(ua, extensions).getResult();\n        }\n\n        var _navigator = (typeof window !== UNDEF_TYPE && window.navigator) ? window.navigator : undefined;\n        var _ua = ua || ((_navigator && _navigator.userAgent) ? _navigator.userAgent : EMPTY);\n        var _uach = (_navigator && _navigator.userAgentData) ? _navigator.userAgentData : undefined;\n        var _rgxmap = extensions ? extend(regexes, extensions) : regexes;\n        var _isSelfNav = _navigator && _navigator.userAgent == _ua;\n\n        this.getBrowser = function () {\n            var _browser = {};\n            _browser[NAME] = undefined;\n            _browser[VERSION] = undefined;\n            rgxMapper.call(_browser, _ua, _rgxmap.browser);\n            _browser[MAJOR] = majorize(_browser[VERSION]);\n            // Brave-specific detection\n            if (_isSelfNav && _navigator && _navigator.brave && typeof _navigator.brave.isBrave == FUNC_TYPE) {\n                _browser[NAME] = 'Brave';\n            }\n            return _browser;\n        };\n        this.getCPU = function () {\n            var _cpu = {};\n            _cpu[ARCHITECTURE] = undefined;\n            rgxMapper.call(_cpu, _ua, _rgxmap.cpu);\n            return _cpu;\n        };\n        this.getDevice = function () {\n            var _device = {};\n            _device[VENDOR] = undefined;\n            _device[MODEL] = undefined;\n            _device[TYPE] = undefined;\n            rgxMapper.call(_device, _ua, _rgxmap.device);\n            if (_isSelfNav && !_device[TYPE] && _uach && _uach.mobile) {\n                _device[TYPE] = MOBILE;\n            }\n            // iPadOS-specific detection: identified as Mac, but has some iOS-only properties\n            if (_isSelfNav && _device[MODEL] == 'Macintosh' && _navigator && typeof _navigator.standalone !== UNDEF_TYPE && _navigator.maxTouchPoints && _navigator.maxTouchPoints > 2) {\n                _device[MODEL] = 'iPad';\n                _device[TYPE] = TABLET;\n            }\n            return _device;\n        };\n        this.getEngine = function () {\n            var _engine = {};\n            _engine[NAME] = undefined;\n            _engine[VERSION] = undefined;\n            rgxMapper.call(_engine, _ua, _rgxmap.engine);\n            return _engine;\n        };\n        this.getOS = function () {\n            var _os = {};\n            _os[NAME] = undefined;\n            _os[VERSION] = undefined;\n            rgxMapper.call(_os, _ua, _rgxmap.os);\n            if (_isSelfNav && !_os[NAME] && _uach && _uach.platform && _uach.platform != 'Unknown') {\n                _os[NAME] = _uach.platform  \n                                    .replace(/chrome os/i, CHROMIUM_OS)\n                                    .replace(/macos/i, MAC_OS);           // backward compatibility\n            }\n            return _os;\n        };\n        this.getResult = function () {\n            return {\n                ua      : this.getUA(),\n                browser : this.getBrowser(),\n                engine  : this.getEngine(),\n                os      : this.getOS(),\n                device  : this.getDevice(),\n                cpu     : this.getCPU()\n            };\n        };\n        this.getUA = function () {\n            return _ua;\n        };\n        this.setUA = function (ua) {\n            _ua = (typeof ua === STR_TYPE && ua.length > UA_MAX_LENGTH) ? trim(ua, UA_MAX_LENGTH) : ua;\n            return this;\n        };\n        this.setUA(_ua);\n        return this;\n    };\n\n    UAParser.VERSION = LIBVERSION;\n    UAParser.BROWSER =  enumerize([NAME, VERSION, MAJOR]);\n    UAParser.CPU = enumerize([ARCHITECTURE]);\n    UAParser.DEVICE = enumerize([MODEL, VENDOR, TYPE, CONSOLE, MOBILE, SMARTTV, TABLET, WEARABLE, EMBEDDED]);\n    UAParser.ENGINE = UAParser.OS = enumerize([NAME, VERSION]);\n\n    ///////////\n    // Export\n    //////////\n\n    // check js environment\n    if (typeof(exports) !== UNDEF_TYPE) {\n        // nodejs env\n        if (\"object\" !== UNDEF_TYPE && module.exports) {\n            exports = module.exports = UAParser;\n        }\n        exports.UAParser = UAParser;\n    } else {\n        // requirejs env (optional)\n        if (\"function\" === FUNC_TYPE && __webpack_require__.amdO) {\n            !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n                return UAParser;\n            }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n        } else if (typeof window !== UNDEF_TYPE) {\n            // browser env\n            window.UAParser = UAParser;\n        }\n    }\n\n    // jQuery/Zepto specific (optional)\n    // Note:\n    //   In AMD env the global scope should be kept clean, but jQuery is an exception.\n    //   jQuery always exports to global scope, unless jQuery.noConflict(true) is used,\n    //   and we should catch that.\n    var $ = typeof window !== UNDEF_TYPE && (window.jQuery || window.Zepto);\n    if ($ && !$.ua) {\n        var parser = new UAParser();\n        $.ua = parser.getResult();\n        $.ua.get = function () {\n            return parser.getUA();\n        };\n        $.ua.set = function (ua) {\n            parser.setUA(ua);\n            var result = parser.getResult();\n            for (var prop in result) {\n                $.ua[prop] = result[prop];\n            }\n        };\n    }\n\n})(typeof window === 'object' ? window : this);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/ua-parser-js@1.0.40/node_modules/ua-parser-js/src/ua-parser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/globals.css":
/*!*************************!*\
  !*** ./app/globals.css ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"2d06249c1e92\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9nbG9iYWxzLmNzcyIsIm1hcHBpbmdzIjoiO0FBQUEsK0RBQWUsY0FBYztBQUM3QixJQUFJLElBQVUsSUFBSSxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL2dsb2JhbHMuY3NzP2ExM2UiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCIyZDA2MjQ5YzFlOTJcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/ton-provider.tsx":
/*!*************************************!*\
  !*** ./components/ton-provider.tsx ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ TonProvider; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _tonconnect_ui_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tonconnect/ui-react */ \"(app-pages-browser)/./node_modules/.pnpm/@tonconnect+ui-react@2.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@tonconnect/ui-react/lib/index.mjs\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n/**\n * Wrapper to host TonConnectUIProvider on the client side.\n * Server Components may safely render <TonProvider> now.\n */ function TonProvider(param) {\n    let { children } = param;\n    // NOTE: hard-coded URL (could come from env if needed on server side)\n    const manifestUrl = \"https://giftboss.vercel.app/tonconnect-manifest.json\";\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_tonconnect_ui_react__WEBPACK_IMPORTED_MODULE_1__.TonConnectUIProvider, {\n        manifestUrl: manifestUrl,\n        children: children\n    }, void 0, false, {\n        fileName: \"/home/runner/workspace/components/ton-provider.tsx\",\n        lineNumber: 18,\n        columnNumber: 10\n    }, this);\n}\n_c = TonProvider;\nvar _c;\n$RefreshReg$(_c, \"TonProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvdG9uLXByb3ZpZGVyLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBRTJEO0FBRzNEOzs7Q0FHQyxHQUNjLFNBQVNDLFlBQVksS0FJbkM7UUFKbUMsRUFDbENDLFFBQVEsRUFHVCxHQUptQztJQUtsQyxzRUFBc0U7SUFDdEUsTUFBTUMsY0FBYztJQUVwQixxQkFBTyw4REFBQ0gsc0VBQW9CQTtRQUFDRyxhQUFhQTtrQkFBY0Q7Ozs7OztBQUMxRDtLQVR3QkQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy90b24tcHJvdmlkZXIudHN4PzVlYTMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCJcblxuaW1wb3J0IHsgVG9uQ29ubmVjdFVJUHJvdmlkZXIgfSBmcm9tIFwiQHRvbmNvbm5lY3QvdWktcmVhY3RcIlxuaW1wb3J0IHR5cGUgUmVhY3QgZnJvbSBcInJlYWN0XCJcblxuLyoqXG4gKiBXcmFwcGVyIHRvIGhvc3QgVG9uQ29ubmVjdFVJUHJvdmlkZXIgb24gdGhlIGNsaWVudCBzaWRlLlxuICogU2VydmVyIENvbXBvbmVudHMgbWF5IHNhZmVseSByZW5kZXIgPFRvblByb3ZpZGVyPiBub3cuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFRvblByb3ZpZGVyKHtcbiAgY2hpbGRyZW4sXG59OiB7XG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGVcbn0pIHtcbiAgLy8gTk9URTogaGFyZC1jb2RlZCBVUkwgKGNvdWxkIGNvbWUgZnJvbSBlbnYgaWYgbmVlZGVkIG9uIHNlcnZlciBzaWRlKVxuICBjb25zdCBtYW5pZmVzdFVybCA9IFwiaHR0cHM6Ly9naWZ0Ym9zcy52ZXJjZWwuYXBwL3RvbmNvbm5lY3QtbWFuaWZlc3QuanNvblwiXG5cbiAgcmV0dXJuIDxUb25Db25uZWN0VUlQcm92aWRlciBtYW5pZmVzdFVybD17bWFuaWZlc3RVcmx9PntjaGlsZHJlbn08L1RvbkNvbm5lY3RVSVByb3ZpZGVyPlxufVxuIl0sIm5hbWVzIjpbIlRvbkNvbm5lY3RVSVByb3ZpZGVyIiwiVG9uUHJvdmlkZXIiLCJjaGlsZHJlbiIsIm1hbmlmZXN0VXJsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/ton-provider.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/client/head-manager.js":
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/client/head-manager.js ***!
  \***********************************************************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    DOMAttributeNames: function() {\n        return DOMAttributeNames;\n    },\n    default: function() {\n        return initHeadManager;\n    },\n    isEqualNode: function() {\n        return isEqualNode;\n    }\n});\nconst DOMAttributeNames = {\n    acceptCharset: \"accept-charset\",\n    className: \"class\",\n    htmlFor: \"for\",\n    httpEquiv: \"http-equiv\",\n    noModule: \"noModule\"\n};\nfunction reactElementToDOM(param) {\n    let { type, props } = param;\n    const el = document.createElement(type);\n    for(const p in props){\n        if (!props.hasOwnProperty(p)) continue;\n        if (p === \"children\" || p === \"dangerouslySetInnerHTML\") continue;\n        // we don't render undefined props to the DOM\n        if (props[p] === undefined) continue;\n        const attr = DOMAttributeNames[p] || p.toLowerCase();\n        if (type === \"script\" && (attr === \"async\" || attr === \"defer\" || attr === \"noModule\")) {\n            el[attr] = !!props[p];\n        } else {\n            el.setAttribute(attr, props[p]);\n        }\n    }\n    const { children, dangerouslySetInnerHTML } = props;\n    if (dangerouslySetInnerHTML) {\n        el.innerHTML = dangerouslySetInnerHTML.__html || \"\";\n    } else if (children) {\n        el.textContent = typeof children === \"string\" ? children : Array.isArray(children) ? children.join(\"\") : \"\";\n    }\n    return el;\n}\nfunction isEqualNode(oldTag, newTag) {\n    if (oldTag instanceof HTMLElement && newTag instanceof HTMLElement) {\n        const nonce = newTag.getAttribute(\"nonce\");\n        // Only strip the nonce if `oldTag` has had it stripped. An element's nonce attribute will not\n        // be stripped if there is no content security policy response header that includes a nonce.\n        if (nonce && !oldTag.getAttribute(\"nonce\")) {\n            const cloneTag = newTag.cloneNode(true);\n            cloneTag.setAttribute(\"nonce\", \"\");\n            cloneTag.nonce = nonce;\n            return nonce === oldTag.nonce && oldTag.isEqualNode(cloneTag);\n        }\n    }\n    return oldTag.isEqualNode(newTag);\n}\nlet updateElements;\nif (false) {} else {\n    updateElements = (type, components)=>{\n        const headEl = document.getElementsByTagName(\"head\")[0];\n        const headCountEl = headEl.querySelector(\"meta[name=next-head-count]\");\n        if (true) {\n            if (!headCountEl) {\n                console.error(\"Warning: next-head-count is missing. https://nextjs.org/docs/messages/next-head-count-missing\");\n                return;\n            }\n        }\n        const headCount = Number(headCountEl.content);\n        const oldTags = [];\n        for(let i = 0, j = headCountEl.previousElementSibling; i < headCount; i++, j = (j == null ? void 0 : j.previousElementSibling) || null){\n            var _j_tagName;\n            if ((j == null ? void 0 : (_j_tagName = j.tagName) == null ? void 0 : _j_tagName.toLowerCase()) === type) {\n                oldTags.push(j);\n            }\n        }\n        const newTags = components.map(reactElementToDOM).filter((newTag)=>{\n            for(let k = 0, len = oldTags.length; k < len; k++){\n                const oldTag = oldTags[k];\n                if (isEqualNode(oldTag, newTag)) {\n                    oldTags.splice(k, 1);\n                    return false;\n                }\n            }\n            return true;\n        });\n        oldTags.forEach((t)=>{\n            var _t_parentNode;\n            return (_t_parentNode = t.parentNode) == null ? void 0 : _t_parentNode.removeChild(t);\n        });\n        newTags.forEach((t)=>headEl.insertBefore(t, headCountEl));\n        headCountEl.content = (headCount - oldTags.length + newTags.length).toString();\n    };\n}\nfunction initHeadManager() {\n    return {\n        mountedInstances: new Set(),\n        updateHead: (head)=>{\n            const tags = {};\n            head.forEach((h)=>{\n                if (// it won't be inlined. In this case revert to the original behavior\n                h.type === \"link\" && h.props[\"data-optimized-fonts\"]) {\n                    if (document.querySelector('style[data-href=\"' + h.props[\"data-href\"] + '\"]')) {\n                        return;\n                    } else {\n                        h.props.href = h.props[\"data-href\"];\n                        h.props[\"data-href\"] = undefined;\n                    }\n                }\n                const components = tags[h.type] || [];\n                components.push(h);\n                tags[h.type] = components;\n            });\n            const titleComponent = tags.title ? tags.title[0] : null;\n            let title = \"\";\n            if (titleComponent) {\n                const { children } = titleComponent.props;\n                title = typeof children === \"string\" ? children : Array.isArray(children) ? children.join(\"\") : \"\";\n            }\n            if (title !== document.title) document.title = title;\n            [\n                \"meta\",\n                \"base\",\n                \"link\",\n                \"style\",\n                \"script\"\n            ].forEach((type)=>{\n                updateElements(type, tags[type] || []);\n            });\n        }\n    };\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=head-manager.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9uZXh0QDE0LjIuMTZfcmVhY3QtZG9tQDE4LjMuMV9yZWFjdEAxOC4zLjFfX3JlYWN0QDE4LjMuMS9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9oZWFkLW1hbmFnZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0lBQWFBLG1CQUFpQjtlQUFqQkE7O0lBbUxiQyxTQWdEQztlQWhEdUJDOztJQTNIUkMsYUFBVztlQUFYQTs7O0FBeERULE1BQU1ILG9CQUE0QztJQUN2REksZUFBZTtJQUNmQyxXQUFXO0lBQ1hDLFNBQVM7SUFDVEMsV0FBVztJQUNYQyxVQUFVO0FBQ1o7QUFFQSxTQUFTQyxrQkFBa0JDLEtBQTRCO0lBQTVCLE1BQUVDLElBQUksRUFBRUMsS0FBSyxFQUFlLEdBQTVCRjtJQUN6QixNQUFNRyxLQUFrQkMsU0FBU0MsYUFBYSxDQUFDSjtJQUMvQyxJQUFLLE1BQU1LLEtBQUtKLE1BQU87UUFDckIsSUFBSSxDQUFDQSxNQUFNSyxjQUFjLENBQUNELElBQUk7UUFDOUIsSUFBSUEsTUFBTSxjQUFjQSxNQUFNLDJCQUEyQjtRQUV6RCw2Q0FBNkM7UUFDN0MsSUFBSUosS0FBSyxDQUFDSSxFQUFFLEtBQUtFLFdBQVc7UUFFNUIsTUFBTUMsT0FBT25CLGlCQUFpQixDQUFDZ0IsRUFBRSxJQUFJQSxFQUFFSSxXQUFXO1FBQ2xELElBQ0VULFNBQVMsWUFDUlEsQ0FBQUEsU0FBUyxXQUFXQSxTQUFTLFdBQVdBLFNBQVMsYUFDbEQ7WUFDRU4sRUFBd0IsQ0FBQ00sS0FBSyxHQUFHLENBQUMsQ0FBQ1AsS0FBSyxDQUFDSSxFQUFFO1FBQy9DLE9BQU87WUFDTEgsR0FBR1EsWUFBWSxDQUFDRixNQUFNUCxLQUFLLENBQUNJLEVBQUU7UUFDaEM7SUFDRjtJQUVBLE1BQU0sRUFBRU0sUUFBUSxFQUFFQyx1QkFBdUIsRUFBRSxHQUFHWDtJQUM5QyxJQUFJVyx5QkFBeUI7UUFDM0JWLEdB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QUMsdUJBQXVCLEVBQy9CO29CQUNBLElBQ0VFLFNBQVM2QixhQUFhLENBQUMsc0JBQW9CMEMsRUFBRXpFLEtBQUssQ0FBQyxZQUFZLEdBQUMsT0FDaEU7d0JBQ0E7b0JBQ0YsT0FBTzt3QkFDTHlFLEVBQUV6RSxLQUFLLENBQUMwRSxJQUFJLEdBQUdELEVBQUV6RSxLQUFLLENBQUMsWUFBWTt3QkFDbkN5RSxFQUFFekUsS0FBSyxDQUFDLFlBQVksR0FBR007b0JBQ3pCO2dCQUNGO2dCQUVBLE1BQU11QixhQUFhMkMsSUFBSSxDQUFDQyxFQUFFMUUsSUFBSSxDQUFDLElBQUksRUFBRTtnQkFDckM4QixXQUFXTyxJQUFJLENBQUNxQztnQkFDaEJELElBQUksQ0FBQ0MsRUFBRTFFLElBQUksQ0FBQyxHQUFHOEI7WUFDakI7WUFFQSxNQUFNOEMsaUJBQWlCSCxLQUFLSSxLQUFLLEdBQUdKLEtBQUtJLEtBQUssQ0FBQyxFQUFFLEdBQUc7WUFDcEQsSUFBSUEsUUFBUTtZQUNaLElBQUlELGdCQUFnQjtnQkFDbEIsTUFBTSxFQUFFakUsUUFBUSxFQUFFLEdBQUdpRSxlQUFlM0UsS0FBSztnQkFDekM0RSxRQUNFLE9BQU9sRSxhQUFhLFdBQ2hCQSxXQUNBSyxNQUFNQyxPQUFPLENBQUNOLFlBQ2RBLFNBQVNPLElBQUksQ0FBQyxNQUNkO1lBQ1I7WUFDQSxJQUFJMkQsVUFBVTFFLFNBQVMwRSxLQUFLLEVBQUUxRSxTQUFTMEUsS0FBSyxHQUFHQTtZQUM5QztnQkFBQztnQkFBUTtnQkFBUTtnQkFBUTtnQkFBUzthQUFTLENBQUMzQixPQUFPLENBQUMsQ0FBQ2xEO2dCQUNwRDBCLGVBQWUxQixNQUFNeUUsSUFBSSxDQUFDekUsS0FBSyxJQUFJLEVBQUU7WUFDdkM7UUFDRjtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL3NyYy9jbGllbnQvaGVhZC1tYW5hZ2VyLnRzPzcxMDkiXSwibmFtZXMiOlsiRE9NQXR0cmlidXRlTmFtZXMiLCJkZWZhdWx0IiwiaW5pdEhlYWRNYW5hZ2VyIiwiaXNFcXVhbE5vZGUiLCJhY2NlcHRDaGFyc2V0IiwiY2xhc3NOYW1lIiwiaHRtbEZvciIsImh0dHBFcXVpdiIsIm5vTW9kdWxlIiwicmVhY3RFbGVtZW50VG9ET00iLCJwYXJhbSIsInR5cGUiLCJwcm9wcyIsImVsIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwicCIsImhhc093blByb3BlcnR5IiwidW5kZWZpbmVkIiwiYXR0ciIsInRvTG93ZXJDYXNlIiwic2V0QXR0cmlidXRlIiwiY2hpbGRyZW4iLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsImlubmVySFRNTCIsIl9faHRtbCIsInRleHRDb250ZW50IiwiQXJyYXkiLCJpc0FycmF5Iiwiam9pbiIsIm9sZFRhZyIsIm5ld1RhZyIsIkhUTUxFbGVtZW50Iiwibm9uY2UiLCJnZXRBdHRyaWJ1dGUiLCJjbG9uZVRhZyIsImNsb25lTm9kZSIsInVwZGF0ZUVsZW1lbnRzIiwicHJvY2VzcyIsImVudiIsIl9fTkVYVF9TVFJJQ1RfTkVYVF9IRUFEIiwiY29tcG9uZW50cyIsImhlYWRFbCIsInF1ZXJ5U2VsZWN0b3IiLCJoZWFkTWV0YVRhZ3MiLCJxdWVyeVNlbGVjdG9yQWxsIiwib2xkVGFncyIsIm1ldGFDaGFyc2V0IiwicHVzaCIsImkiLCJsZW5ndGgiLCJoZWFkVGFnIiwibWV0YVRhZyIsIm5leHRTaWJsaW5nIiwidGFnTmFtZSIsIm5ld1RhZ3MiLCJtYXAiLCJmaWx0ZXIiLCJrIiwibGVuIiwic3BsaWNlIiwiZm9yRWFjaCIsInQiLCJwcmV2aW91c1NpYmxpbmciLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJtZXRhIiwibmFtZSIsImNvbnRlbnQiLCJhcHBlbmRDaGlsZCIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiaGVhZENvdW50RWwiLCJjb25zb2xlIiwiZXJyb3IiLCJoZWFkQ291bnQiLCJOdW1iZXIiLCJqIiwicHJldmlvdXNFbGVtZW50U2libGluZyIsImluc2VydEJlZm9yZSIsInRvU3RyaW5nIiwibW91bnRlZEluc3RhbmNlcyIsIlNldCIsInVwZGF0ZUhlYWQiLCJoZWFkIiwidGFncyIsImgiLCJocmVmIiwidGl0bGVDb21wb25lbnQiLCJ0aXRsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/client/head-manager.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/client/request-idle-callback.js":
/*!********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/client/request-idle-callback.js ***!
  \********************************************************************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    cancelIdleCallback: function() {\n        return cancelIdleCallback;\n    },\n    requestIdleCallback: function() {\n        return requestIdleCallback;\n    }\n});\nconst requestIdleCallback = typeof self !== \"undefined\" && self.requestIdleCallback && self.requestIdleCallback.bind(window) || function(cb) {\n    let start = Date.now();\n    return self.setTimeout(function() {\n        cb({\n            didTimeout: false,\n            timeRemaining: function() {\n                return Math.max(0, 50 - (Date.now() - start));\n            }\n        });\n    }, 1);\n};\nconst cancelIdleCallback = typeof self !== \"undefined\" && self.cancelIdleCallback && self.cancelIdleCallback.bind(window) || function(id) {\n    return clearTimeout(id);\n};\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=request-idle-callback.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9uZXh0QDE0LjIuMTZfcmVhY3QtZG9tQDE4LjMuMV9yZWFjdEAxOC4zLjFfX3JlYWN0QDE4LjMuMS9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9yZXF1ZXN0LWlkbGUtY2FsbGJhY2suanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0lBZ0JhQSxvQkFBa0I7ZUFBbEJBOztJQWhCQUMscUJBQW1CO2VBQW5CQTs7O0FBQU4sTUFBTUEsc0JBQ1gsT0FBUUMsU0FBUyxlQUNmQSxLQUFLRCxtQkFBbUIsSUFDeEJDLEtBQUtELG1CQUFtQixDQUFDRSxJQUFJLENBQUNDLFdBQ2hDLFNBQVVDLEVBQXVCO0lBQy9CLElBQUlDLFFBQVFDLEtBQUtDLEdBQUc7SUFDcEIsT0FBT04sS0FBS08sVUFBVSxDQUFDO1FBQ3JCSixHQUFHO1lBQ0RLLFlBQVk7WUFDWkMsZUFBZTtnQkFDYixPQUFPQyxLQUFLQyxHQUFHLENBQUMsR0FBRyxLQUFNTixDQUFBQSxLQUFLQyxHQUFHLEtBQUtGLEtBQUFBO1lBQ3hDO1FBQ0Y7SUFDRixHQUFHO0FBQ0w7QUFFSyxNQUFNTixxQkFDWCxPQUFRRSxTQUFTLGVBQ2ZBLEtBQUtGLGtCQUFrQixJQUN2QkUsS0FBS0Ysa0JBQWtCLENBQUNHLElBQUksQ0FBQ0MsV0FDL0IsU0FBVVUsRUFBVTtJQUNsQixPQUFPQyxhQUFhRDtBQUN0QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vc3JjL2NsaWVudC9yZXF1ZXN0LWlkbGUtY2FsbGJhY2sudHM/MDVmNCJdLCJuYW1lcyI6WyJjYW5jZWxJZGxlQ2FsbGJhY2siLCJyZXF1ZXN0SWRsZUNhbGxiYWNrIiwic2VsZiIsImJpbmQiLCJ3aW5kb3ciLCJjYiIsInN0YXJ0IiwiRGF0ZSIsIm5vdyIsInNldFRpbWVvdXQiLCJkaWRUaW1lb3V0IiwidGltZVJlbWFpbmluZyIsIk1hdGgiLCJtYXgiLCJpZCIsImNsZWFyVGltZW91dCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/client/request-idle-callback.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/client/script.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/client/script.js ***!
  \*****************************************************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* __next_internal_client_entry_do_not_use__  cjs */ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    default: function() {\n        return _default;\n    },\n    handleClientScriptLoad: function() {\n        return handleClientScriptLoad;\n    },\n    initScriptLoader: function() {\n        return initScriptLoader;\n    }\n});\nconst _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"(app-pages-browser)/./node_modules/.pnpm/@swc+helpers@0.5.5/node_modules/@swc/helpers/esm/_interop_require_default.js\");\nconst _interop_require_wildcard = __webpack_require__(/*! @swc/helpers/_/_interop_require_wildcard */ \"(app-pages-browser)/./node_modules/.pnpm/@swc+helpers@0.5.5/node_modules/@swc/helpers/esm/_interop_require_wildcard.js\");\nconst _jsxruntime = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/jsx-runtime.js\");\nconst _reactdom = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! react-dom */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react-dom/index.js\"));\nconst _react = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/index.js\"));\nconst _headmanagercontextsharedruntime = __webpack_require__(/*! ../shared/lib/head-manager-context.shared-runtime */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/shared/lib/head-manager-context.shared-runtime.js\");\nconst _headmanager = __webpack_require__(/*! ./head-manager */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/client/head-manager.js\");\nconst _requestidlecallback = __webpack_require__(/*! ./request-idle-callback */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/client/request-idle-callback.js\");\nconst ScriptCache = new Map();\nconst LoadCache = new Set();\nconst ignoreProps = [\n    \"onLoad\",\n    \"onReady\",\n    \"dangerouslySetInnerHTML\",\n    \"children\",\n    \"onError\",\n    \"strategy\",\n    \"stylesheets\"\n];\nconst insertStylesheets = (stylesheets)=>{\n    // Case 1: Styles for afterInteractive/lazyOnload with appDir injected via handleClientScriptLoad\n    //\n    // Using ReactDOM.preinit to feature detect appDir and inject styles\n    // Stylesheets might have already been loaded if initialized with Script component\n    // Re-inject styles here to handle scripts loaded via handleClientScriptLoad\n    // ReactDOM.preinit handles dedup and ensures the styles are loaded only once\n    if (_reactdom.default.preinit) {\n        stylesheets.forEach((stylesheet)=>{\n            _reactdom.default.preinit(stylesheet, {\n                as: \"style\"\n            });\n        });\n        return;\n    }\n    // Case 2: Styles for afterInteractive/lazyOnload with pages injected via handleClientScriptLoad\n    //\n    // We use this function to load styles when appdir is not detected\n    // TODO: Use React float APIs to load styles once available for pages dir\n    if (typeof window !== \"undefined\") {\n        let head = document.head;\n        stylesheets.forEach((stylesheet)=>{\n            let link = document.createElement(\"link\");\n            link.type = \"text/css\";\n            link.rel = \"stylesheet\";\n            link.href = stylesheet;\n            head.appendChild(link);\n        });\n    }\n};\nconst loadScript = (props)=>{\n    const { src, id, onLoad = ()=>{}, onReady = null, dangerouslySetInnerHTML, children = \"\", strategy = \"afterInteractive\", onError, stylesheets } = props;\n    const cacheKey = id || src;\n    // Script has already loaded\n    if (cacheKey && LoadCache.has(cacheKey)) {\n        return;\n    }\n    // Contents of this script are already loading/loaded\n    if (ScriptCache.has(src)) {\n        LoadCache.add(cacheKey);\n        // It is possible that multiple `next/script` components all have same \"src\", but has different \"onLoad\"\n        // This is to make sure the same remote script will only load once, but \"onLoad\" are executed in order\n        ScriptCache.get(src).then(onLoad, onError);\n        return;\n    }\n    /** Execute after the script first loaded */ const afterLoad = ()=>{\n        // Run onReady for the first time after load event\n        if (onReady) {\n            onReady();\n        }\n        // add cacheKey to LoadCache when load successfully\n        LoadCache.add(cacheKey);\n    };\n    const el = document.createElement(\"script\");\n    const loadPromise = new Promise((resolve, reject)=>{\n        el.addEventListener(\"load\", function(e) {\n            resolve();\n            if (onLoad) {\n                onLoad.call(this, e);\n            }\n            afterLoad();\n        });\n        el.addEventListener(\"error\", function(e) {\n            reject(e);\n        });\n    }).catch(function(e) {\n        if (onError) {\n            onError(e);\n        }\n    });\n    if (dangerouslySetInnerHTML) {\n        // Casting since lib.dom.d.ts doesn't have TrustedHTML yet.\n        el.innerHTML = dangerouslySetInnerHTML.__html || \"\";\n        afterLoad();\n    } else if (children) {\n        el.textContent = typeof children === \"string\" ? children : Array.isArray(children) ? children.join(\"\") : \"\";\n        afterLoad();\n    } else if (src) {\n        el.src = src;\n        // do not add cacheKey into LoadCache for remote script here\n        // cacheKey will be added to LoadCache when it is actually loaded (see loadPromise above)\n        ScriptCache.set(src, loadPromise);\n    }\n    for (const [k, value] of Object.entries(props)){\n        if (value === undefined || ignoreProps.includes(k)) {\n            continue;\n        }\n        const attr = _headmanager.DOMAttributeNames[k] || k.toLowerCase();\n        el.setAttribute(attr, value);\n    }\n    if (strategy === \"worker\") {\n        el.setAttribute(\"type\", \"text/partytown\");\n    }\n    el.setAttribute(\"data-nscript\", strategy);\n    // Load styles associated with this script\n    if (stylesheets) {\n        insertStylesheets(stylesheets);\n    }\n    document.body.appendChild(el);\n};\nfunction handleClientScriptLoad(props) {\n    const { strategy = \"afterInteractive\" } = props;\n    if (strategy === \"lazyOnload\") {\n        window.addEventListener(\"load\", ()=>{\n            (0, _requestidlecallback.requestIdleCallback)(()=>loadScript(props));\n        });\n    } else {\n        loadScript(props);\n    }\n}\nfunction loadLazyScript(props) {\n    if (document.readyState === \"complete\") {\n        (0, _requestidlecallback.requestIdleCallback)(()=>loadScript(props));\n    } else {\n        window.addEventListener(\"load\", ()=>{\n            (0, _requestidlecallback.requestIdleCallback)(()=>loadScript(props));\n        });\n    }\n}\nfunction addBeforeInteractiveToCache() {\n    const scripts = [\n        ...document.querySelectorAll('[data-nscript=\"beforeInteractive\"]'),\n        ...document.querySelectorAll('[data-nscript=\"beforePageRender\"]')\n    ];\n    scripts.forEach((script)=>{\n        const cacheKey = script.id || script.getAttribute(\"src\");\n        LoadCache.add(cacheKey);\n    });\n}\nfunction initScriptLoader(scriptLoaderItems) {\n    scriptLoaderItems.forEach(handleClientScriptLoad);\n    addBeforeInteractiveToCache();\n}\n/**\n * Load a third-party scripts in an optimized way.\n *\n * Read more: [Next.js Docs: `next/script`](https://nextjs.org/docs/app/api-reference/components/script)\n */ function Script(props) {\n    const { id, src = \"\", onLoad = ()=>{}, onReady = null, strategy = \"afterInteractive\", onError, stylesheets, ...restProps } = props;\n    // Context is available only during SSR\n    const { updateScripts, scripts, getIsSsr, appDir, nonce } = (0, _react.useContext)(_headmanagercontextsharedruntime.HeadManagerContext);\n    /**\n   * - First mount:\n   *   1. The useEffect for onReady executes\n   *   2. hasOnReadyEffectCalled.current is false, but the script hasn't loaded yet (not in LoadCache)\n   *      onReady is skipped, set hasOnReadyEffectCalled.current to true\n   *   3. The useEffect for loadScript executes\n   *   4. hasLoadScriptEffectCalled.current is false, loadScript executes\n   *      Once the script is loaded, the onLoad and onReady will be called by then\n   *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n   *   5. The useEffect for onReady executes again\n   *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n   *   7. The useEffect for loadScript executes again\n   *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n   *\n   * - Second mount:\n   *   1. The useEffect for onReady executes\n   *   2. hasOnReadyEffectCalled.current is false, but the script has already loaded (found in LoadCache)\n   *      onReady is called, set hasOnReadyEffectCalled.current to true\n   *   3. The useEffect for loadScript executes\n   *   4. The script is already loaded, loadScript bails out\n   *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n   *   5. The useEffect for onReady executes again\n   *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n   *   7. The useEffect for loadScript executes again\n   *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n   */ const hasOnReadyEffectCalled = (0, _react.useRef)(false);\n    (0, _react.useEffect)(()=>{\n        const cacheKey = id || src;\n        if (!hasOnReadyEffectCalled.current) {\n            // Run onReady if script has loaded before but component is re-mounted\n            if (onReady && cacheKey && LoadCache.has(cacheKey)) {\n                onReady();\n            }\n            hasOnReadyEffectCalled.current = true;\n        }\n    }, [\n        onReady,\n        id,\n        src\n    ]);\n    const hasLoadScriptEffectCalled = (0, _react.useRef)(false);\n    (0, _react.useEffect)(()=>{\n        if (!hasLoadScriptEffectCalled.current) {\n            if (strategy === \"afterInteractive\") {\n                loadScript(props);\n            } else if (strategy === \"lazyOnload\") {\n                loadLazyScript(props);\n            }\n            hasLoadScriptEffectCalled.current = true;\n        }\n    }, [\n        props,\n        strategy\n    ]);\n    if (strategy === \"beforeInteractive\" || strategy === \"worker\") {\n        if (updateScripts) {\n            scripts[strategy] = (scripts[strategy] || []).concat([\n                {\n                    id,\n                    src,\n                    onLoad,\n                    onReady,\n                    onError,\n                    ...restProps\n                }\n            ]);\n            updateScripts(scripts);\n        } else if (getIsSsr && getIsSsr()) {\n            // Script has already loaded during SSR\n            LoadCache.add(id || src);\n        } else if (getIsSsr && !getIsSsr()) {\n            loadScript(props);\n        }\n    }\n    // For the app directory, we need React Float to preload these scripts.\n    if (appDir) {\n        // Injecting stylesheets here handles beforeInteractive and worker scripts correctly\n        // For other strategies injecting here ensures correct stylesheet order\n        // ReactDOM.preinit handles loading the styles in the correct order,\n        // also ensures the stylesheet is loaded only once and in a consistent manner\n        //\n        // Case 1: Styles for beforeInteractive/worker with appDir - handled here\n        // Case 2: Styles for beforeInteractive/worker with pages dir - Not handled yet\n        // Case 3: Styles for afterInteractive/lazyOnload with appDir - handled here\n        // Case 4: Styles for afterInteractive/lazyOnload with pages dir - handled in insertStylesheets function\n        if (stylesheets) {\n            stylesheets.forEach((styleSrc)=>{\n                _reactdom.default.preinit(styleSrc, {\n                    as: \"style\"\n                });\n            });\n        }\n        // Before interactive scripts need to be loaded by Next.js' runtime instead\n        // of native <script> tags, because they no longer have `defer`.\n        if (strategy === \"beforeInteractive\") {\n            if (!src) {\n                // For inlined scripts, we put the content in `children`.\n                if (restProps.dangerouslySetInnerHTML) {\n                    // Casting since lib.dom.d.ts doesn't have TrustedHTML yet.\n                    restProps.children = restProps.dangerouslySetInnerHTML.__html;\n                    delete restProps.dangerouslySetInnerHTML;\n                }\n                return /*#__PURE__*/ (0, _jsxruntime.jsx)(\"script\", {\n                    nonce: nonce,\n                    dangerouslySetInnerHTML: {\n                        __html: \"(self.__next_s=self.__next_s||[]).push(\" + JSON.stringify([\n                            0,\n                            {\n                                ...restProps,\n                                id\n                            }\n                        ]) + \")\"\n                    }\n                });\n            } else {\n                // @ts-ignore\n                _reactdom.default.preload(src, restProps.integrity ? {\n                    as: \"script\",\n                    integrity: restProps.integrity,\n                    nonce,\n                    crossOrigin: restProps.crossOrigin\n                } : {\n                    as: \"script\",\n                    nonce,\n                    crossOrigin: restProps.crossOrigin\n                });\n                return /*#__PURE__*/ (0, _jsxruntime.jsx)(\"script\", {\n                    nonce: nonce,\n                    dangerouslySetInnerHTML: {\n                        __html: \"(self.__next_s=self.__next_s||[]).push(\" + JSON.stringify([\n                            src,\n                            {\n                                ...restProps,\n                                id\n                            }\n                        ]) + \")\"\n                    }\n                });\n            }\n        } else if (strategy === \"afterInteractive\") {\n            if (src) {\n                // @ts-ignore\n                _reactdom.default.preload(src, restProps.integrity ? {\n                    as: \"script\",\n                    integrity: restProps.integrity,\n                    nonce,\n                    crossOrigin: restProps.crossOrigin\n                } : {\n                    as: \"script\",\n                    nonce,\n                    crossOrigin: restProps.crossOrigin\n                });\n            }\n        }\n    }\n    return null;\n}\n_c = Script;\nObject.defineProperty(Script, \"__nextScript\", {\n    value: true\n});\nconst _default = Script;\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=script.js.map\nvar _c;\n$RefreshReg$(_c, \"Script\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/client/script.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/font/google/target.css?{\"path\":\"app/layout.tsx\",\"import\":\"Inter\",\"arguments\":[{\"subsets\":[\"latin\"]}],\"variableName\":\"inter\"}":
/*!************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/font/google/target.css?{"path":"app/layout.tsx","import":"Inter","arguments":[{"subsets":["latin"]}],"variableName":"inter"} ***!
  \************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":{\"fontFamily\":\"'__Inter_e8ce0c', '__Inter_Fallback_e8ce0c'\",\"fontStyle\":\"normal\"},\"className\":\"__className_e8ce0c\"};\n    if(true) {\n      // 1752390416070\n      var cssReload = __webpack_require__(/*! ./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\")(module.id, {\"publicPath\":\"/_next/\",\"esModule\":false,\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9uZXh0QDE0LjIuMTZfcmVhY3QtZG9tQDE4LjMuMV9yZWFjdEAxOC4zLjFfX3JlYWN0QDE4LjMuMS9ub2RlX21vZHVsZXMvbmV4dC9mb250L2dvb2dsZS90YXJnZXQuY3NzP3tcInBhdGhcIjpcImFwcC9sYXlvdXQudHN4XCIsXCJpbXBvcnRcIjpcIkludGVyXCIsXCJhcmd1bWVudHNcIjpbe1wic3Vic2V0c1wiOltcImxhdGluXCJdfV0sXCJ2YXJpYWJsZU5hbWVcIjpcImludGVyXCJ9IiwibWFwcGluZ3MiOiJBQUFBO0FBQ0Esa0JBQWtCLFNBQVMsZ0ZBQWdGO0FBQzNHLE9BQU8sSUFBVTtBQUNqQjtBQUNBLHNCQUFzQixtQkFBTyxDQUFDLGdXQUF3TCxjQUFjLHNEQUFzRDtBQUMxUixNQUFNLFVBQVU7QUFDaEI7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy8ucG5wbS9uZXh0QDE0LjIuMTZfcmVhY3QtZG9tQDE4LjMuMV9yZWFjdEAxOC4zLjFfX3JlYWN0QDE4LjMuMS9ub2RlX21vZHVsZXMvbmV4dC9mb250L2dvb2dsZS90YXJnZXQuY3NzP2VkMDQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5tb2R1bGUuZXhwb3J0cyA9IHtcInN0eWxlXCI6e1wiZm9udEZhbWlseVwiOlwiJ19fSW50ZXJfZThjZTBjJywgJ19fSW50ZXJfRmFsbGJhY2tfZThjZTBjJ1wiLFwiZm9udFN0eWxlXCI6XCJub3JtYWxcIn0sXCJjbGFzc05hbWVcIjpcIl9fY2xhc3NOYW1lX2U4Y2UwY1wifTtcbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICAvLyAxNzUyMzkwNDE2MDcwXG4gICAgICB2YXIgY3NzUmVsb2FkID0gcmVxdWlyZShcIi9ob21lL3J1bm5lci93b3Jrc3BhY2Uvbm9kZV9tb2R1bGVzLy5wbnBtL25leHRAMTQuMi4xNl9yZWFjdC1kb21AMTguMy4xX3JlYWN0QDE4LjMuMV9fcmVhY3RAMTguMy4xL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wicHVibGljUGF0aFwiOlwiL19uZXh0L1wiLFwiZXNNb2R1bGVcIjpmYWxzZSxcImxvY2Fsc1wiOnRydWV9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgXG4gICAgfVxuICAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/font/google/target.css?{\"path\":\"app/layout.tsx\",\"import\":\"Inter\",\"arguments\":[{\"subsets\":[\"latin\"]}],\"variableName\":\"inter\"}\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!********************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \********************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider'); // TODO: Delete with enableRenderableContext\n\nvar REACT_CONSUMER_TYPE = Symbol.for('react.consumer');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\nvar enableRenderableContext = false;\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false;\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nvar REACT_CLIENT_REFERENCE$2 = Symbol.for('react.client.reference'); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  if (typeof type === 'function') {\n    if (type.$$typeof === REACT_CLIENT_REFERENCE$2) {\n      // TODO: Create a convention for naming client references with debug info.\n      return null;\n    }\n\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n    case REACT_CACHE_TYPE:\n      {\n        return 'Cache';\n      }\n\n  }\n\n  if (typeof type === 'object') {\n    {\n      if (typeof type.tag === 'number') {\n        error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n      }\n    }\n\n    switch (type.$$typeof) {\n      case REACT_PROVIDER_TYPE:\n        {\n          var provider = type;\n          return getContextName(provider._context) + '.Provider';\n        }\n\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n\n        {\n          return getContextName(context) + '.Consumer';\n        }\n\n      case REACT_CONSUMER_TYPE:\n        {\n          return null;\n        }\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar assign = Object.assign;\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || enableRenderableContext  || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n/**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */\n\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */\n\n\n  var RunInRootFrame = {\n    DetermineComponentFrameRoot: function () {\n      var control;\n\n      try {\n        // This should throw.\n        if (construct) {\n          // Something should be setting the props in the constructor.\n          var Fake = function () {\n            throw Error();\n          }; // $FlowFixMe[prop-missing]\n\n\n          Object.defineProperty(Fake.prototype, 'props', {\n            set: function () {\n              // We use a throwing setter instead of frozen or non-writable props\n              // because that won't throw in a non-strict mode function.\n              throw Error();\n            }\n          });\n\n          if (typeof Reflect === 'object' && Reflect.construct) {\n            // We construct a different control for this case to include any extra\n            // frames added by the construct call.\n            try {\n              Reflect.construct(Fake, []);\n            } catch (x) {\n              control = x;\n            }\n\n            Reflect.construct(fn, [], Fake);\n          } else {\n            try {\n              Fake.call();\n            } catch (x) {\n              control = x;\n            } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n            fn.call(Fake.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (x) {\n            control = x;\n          } // TODO(luna): This will currently only throw if the function component\n          // tries to access React/ReactDOM/props. We should probably make this throw\n          // in simple components too\n\n\n          var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n          // component, which we don't yet support. Attach a noop catch handler to\n          // silence the error.\n          // TODO: Implement component stacks for async client components?\n\n          if (maybePromise && typeof maybePromise.catch === 'function') {\n            maybePromise.catch(function () {});\n          }\n        }\n      } catch (sample) {\n        // This is inlined manually because closure doesn't do it for us.\n        if (sample && control && typeof sample.stack === 'string') {\n          return [sample.stack, control.stack];\n        }\n      }\n\n      return [null, null];\n    }\n  }; // $FlowFixMe[prop-missing]\n\n  RunInRootFrame.DetermineComponentFrameRoot.displayName = 'DetermineComponentFrameRoot';\n  var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, 'name'); // Before ES6, the `name` property was not configurable.\n\n  if (namePropDescriptor && namePropDescriptor.configurable) {\n    // V8 utilizes a function's `name` property when generating a stack trace.\n    Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // Configurable properties can be updated even if its writable descriptor\n    // is set to `false`.\n    // $FlowFixMe[cannot-write]\n    'name', {\n      value: 'DetermineComponentFrameRoot'\n    });\n  }\n\n  try {\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n        sampleStack = _RunInRootFrame$Deter[0],\n        controlStack = _RunInRootFrame$Deter[1];\n\n    if (sampleStack && controlStack) {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sampleStack.split('\\n');\n      var controlLines = controlStack.split('\\n');\n      var s = 0;\n      var c = 0;\n\n      while (s < sampleLines.length && !sampleLines[s].includes('DetermineComponentFrameRoot')) {\n        s++;\n      }\n\n      while (c < controlLines.length && !controlLines[c].includes('DetermineComponentFrameRoot')) {\n        c++;\n      } // We couldn't find our intentionally injected common root frame, attempt\n      // to find another common root frame by search from the bottom of the\n      // control stack...\n\n\n      if (s === sampleLines.length || c === controlLines.length) {\n        s = sampleLines.length - 1;\n        c = controlLines.length - 1;\n\n        while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n          // We expect at least one stack frame to be shared.\n          // Typically this will be the root most one. However, stack frames may be\n          // cut off due to maximum stack limits. In this case, one maybe cut off\n          // earlier than the other. We assume that the sample is longer or the same\n          // and there for cut off earlier. So we should find the root most frame in\n          // the sample somewhere in the control.\n          c--;\n        }\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (true) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    {\n      var warnAboutAccessingRef = function () {\n        if (!specialPropRefWarningShown) {\n          specialPropRefWarningShown = true;\n\n          error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n        }\n      };\n\n      warnAboutAccessingRef.isReactWarning = true;\n      Object.defineProperty(props, 'ref', {\n        get: warnAboutAccessingRef,\n        configurable: true\n      });\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, _ref, self, source, owner, props) {\n  var ref;\n\n  {\n    ref = _ref;\n  }\n\n  var element;\n\n  {\n    // In prod, `ref` is a regular property. It will be removed in a\n    // future release.\n    element = {\n      // This tag allows us to uniquely identify this as a React Element\n      $$typeof: REACT_ELEMENT_TYPE,\n      // Built-in properties that belong on the element\n      type: type,\n      key: key,\n      ref: ref,\n      props: props,\n      // Record the component responsible for creating this element.\n      _owner: owner\n    };\n  }\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // debugInfo contains Server Component debug information.\n\n    Object.defineProperty(element, '_debugInfo', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: null\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\nvar didWarnAboutKeySpread = {};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV$1(type, config, maybeKey, isStaticChildren, source, self) {\n  {\n    if (!isValidElementType(type)) {\n      // This is an invalid element type.\n      //\n      // We warn in this case but don't throw. We expect the element creation to\n      // succeed and there will likely be errors in render.\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    } else {\n      // This is a valid element type.\n      // Skip key warning if the type isn't valid since our key validation logic\n      // doesn't expect a non-string/function type and can throw confusing\n      // errors. We don't want exception behavior to differ between dev and\n      // prod. (Rendering will throw with a helpful message and as soon as the\n      // type is fixed, the key warnings will appear.)\n      var children = config.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    } // Warn about key spread regardless of whether the type is valid.\n\n\n    if (hasOwnProperty.call(config, 'key')) {\n      var componentName = getComponentNameFromType(type);\n      var keys = Object.keys(config).filter(function (k) {\n        return k !== 'key';\n      });\n      var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      {\n        ref = config.ref;\n      }\n\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && // Skip over reserved prop names\n      propName !== 'key' && (propName !== 'ref')) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    var element = ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    }\n\n    return element;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nvar ownerHasKeyUseWarning = {};\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = getComponentNameFromType(parentType);\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  // TODO: Move this to render phase instead of at element creation.\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement(null);\n    }\n  }\n}\n\nvar jsxDEV = jsxDEV$1 ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!**********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \**********************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9uZXh0QDE0LjIuMTZfcmVhY3QtZG9tQDE4LjMuMV9yZWFjdEAxOC4zLjFfX3JlYWN0QDE4LjMuMS9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixJQUFJLEtBQXFDLEVBQUUsRUFFMUMsQ0FBQztBQUNGLEVBQUUsMFFBQXNFO0FBQ3hFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy8ucG5wbS9uZXh0QDE0LjIuMTZfcmVhY3QtZG9tQDE4LjMuMV9yZWFjdEAxOC4zLjFfX3JlYWN0QDE4LjMuMS9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz9jNDU1Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/classnames@2.5.1/node_modules/classnames/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/.pnpm/classnames@2.5.1/node_modules/classnames/index.js ***!
  \******************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif ( true && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (true) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n\t\t\treturn classNames;\n\t\t}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {}\n}());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9jbGFzc25hbWVzQDIuNS4xL25vZGVfbW9kdWxlcy9jbGFzc25hbWVzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLGdCQUFnQjs7QUFFaEI7QUFDQTs7QUFFQSxrQkFBa0Isc0JBQXNCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxLQUFLLEtBQTZCO0FBQ2xDO0FBQ0E7QUFDQSxHQUFHLFNBQVMsSUFBNEU7QUFDeEY7QUFDQSxFQUFFLGlDQUFxQixFQUFFLG1DQUFFO0FBQzNCO0FBQ0EsR0FBRztBQUFBLGtHQUFDO0FBQ0osR0FBRyxLQUFLLEVBRU47QUFDRixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy8ucG5wbS9jbGFzc25hbWVzQDIuNS4xL25vZGVfbW9kdWxlcy9jbGFzc25hbWVzL2luZGV4LmpzP2E2NDIiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG5cdENvcHlyaWdodCAoYykgMjAxOCBKZWQgV2F0c29uLlxuXHRMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UgKE1JVCksIHNlZVxuXHRodHRwOi8vamVkd2F0c29uLmdpdGh1Yi5pby9jbGFzc25hbWVzXG4qL1xuLyogZ2xvYmFsIGRlZmluZSAqL1xuXG4oZnVuY3Rpb24gKCkge1xuXHQndXNlIHN0cmljdCc7XG5cblx0dmFyIGhhc093biA9IHt9Lmhhc093blByb3BlcnR5O1xuXG5cdGZ1bmN0aW9uIGNsYXNzTmFtZXMgKCkge1xuXHRcdHZhciBjbGFzc2VzID0gJyc7XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGFyZyA9IGFyZ3VtZW50c1tpXTtcblx0XHRcdGlmIChhcmcpIHtcblx0XHRcdFx0Y2xhc3NlcyA9IGFwcGVuZENsYXNzKGNsYXNzZXMsIHBhcnNlVmFsdWUoYXJnKSk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGNsYXNzZXM7XG5cdH1cblxuXHRmdW5jdGlvbiBwYXJzZVZhbHVlIChhcmcpIHtcblx0XHRpZiAodHlwZW9mIGFyZyA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIGFyZyA9PT0gJ251bWJlcicpIHtcblx0XHRcdHJldHVybiBhcmc7XG5cdFx0fVxuXG5cdFx0aWYgKHR5cGVvZiBhcmcgIT09ICdvYmplY3QnKSB7XG5cdFx0XHRyZXR1cm4gJyc7XG5cdFx0fVxuXG5cdFx0aWYgKEFycmF5LmlzQXJyYXkoYXJnKSkge1xuXHRcdFx0cmV0dXJuIGNsYXNzTmFtZXMuYXBwbHkobnVsbCwgYXJnKTtcblx0XHR9XG5cblx0XHRpZiAoYXJnLnRvU3RyaW5nICE9PSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nICYmICFhcmcudG9TdHJpbmcudG9TdHJpbmcoKS5pbmNsdWRlcygnW25hdGl2ZSBjb2RlXScpKSB7XG5cdFx0XHRyZXR1cm4gYXJnLnRvU3RyaW5nKCk7XG5cdFx0fVxuXG5cdFx0dmFyIGNsYXNzZXMgPSAnJztcblxuXHRcdGZvciAodmFyIGtleSBpbiBhcmcpIHtcblx0XHRcdGlmIChoYXNPd24uY2FsbChhcmcsIGtleSkgJiYgYXJnW2tleV0pIHtcblx0XHRcdFx0Y2xhc3NlcyA9IGFwcGVuZENsYXNzKGNsYXNzZXMsIGtleSk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGNsYXNzZXM7XG5cdH1cblxuXHRmdW5jdGlvbiBhcHBlbmRDbGFzcyAodmFsdWUsIG5ld0NsYXNzKSB7XG5cdFx0aWYgKCFuZXdDbGFzcykge1xuXHRcdFx0cmV0dXJuIHZhbHVlO1xuXHRcdH1cblx0XG5cdFx0aWYgKHZhbHVlKSB7XG5cdFx0XHRyZXR1cm4gdmFsdWUgKyAnICcgKyBuZXdDbGFzcztcblx0XHR9XG5cdFxuXHRcdHJldHVybiB2YWx1ZSArIG5ld0NsYXNzO1xuXHR9XG5cblx0aWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnICYmIG1vZHVsZS5leHBvcnRzKSB7XG5cdFx0Y2xhc3NOYW1lcy5kZWZhdWx0ID0gY2xhc3NOYW1lcztcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGNsYXNzTmFtZXM7XG5cdH0gZWxzZSBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgZGVmaW5lLmFtZCA9PT0gJ29iamVjdCcgJiYgZGVmaW5lLmFtZCkge1xuXHRcdC8vIHJlZ2lzdGVyIGFzICdjbGFzc25hbWVzJywgY29uc2lzdGVudCB3aXRoIG5wbSBwYWNrYWdlIG5hbWVcblx0XHRkZWZpbmUoJ2NsYXNzbmFtZXMnLCBbXSwgZnVuY3Rpb24gKCkge1xuXHRcdFx0cmV0dXJuIGNsYXNzTmFtZXM7XG5cdFx0fSk7XG5cdH0gZWxzZSB7XG5cdFx0d2luZG93LmNsYXNzTmFtZXMgPSBjbGFzc05hbWVzO1xuXHR9XG59KCkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/classnames@2.5.1/node_modules/classnames/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/@tonconnect+protocol@2.3.0/node_modules/@tonconnect/protocol/lib/esm/index.mjs":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@tonconnect+protocol@2.3.0/node_modules/@tonconnect/protocol/lib/esm/index.mjs ***!
  \***********************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Base64: function() { return /* binding */ Base64; },\n/* harmony export */   CHAIN: function() { return /* binding */ CHAIN; },\n/* harmony export */   CONNECT_EVENT_ERROR_CODES: function() { return /* binding */ CONNECT_EVENT_ERROR_CODES; },\n/* harmony export */   CONNECT_ITEM_ERROR_CODES: function() { return /* binding */ CONNECT_ITEM_ERROR_CODES; },\n/* harmony export */   DISCONNECT_ERROR_CODES: function() { return /* binding */ DISCONNECT_ERROR_CODES; },\n/* harmony export */   SEND_TRANSACTION_ERROR_CODES: function() { return /* binding */ SEND_TRANSACTION_ERROR_CODES; },\n/* harmony export */   SIGN_DATA_ERROR_CODES: function() { return /* binding */ SIGN_DATA_ERROR_CODES; },\n/* harmony export */   SessionCrypto: function() { return /* binding */ SessionCrypto; },\n/* harmony export */   concatUint8Arrays: function() { return /* binding */ concatUint8Arrays; },\n/* harmony export */   hexToByteArray: function() { return /* binding */ hexToByteArray; },\n/* harmony export */   isNode: function() { return /* binding */ isNode; },\n/* harmony export */   splitToUint8Arrays: function() { return /* binding */ splitToUint8Arrays; },\n/* harmony export */   toHexString: function() { return /* binding */ toHexString; }\n/* harmony export */ });\n/* harmony import */ var tweetnacl_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tweetnacl-util */ \"(app-pages-browser)/./node_modules/.pnpm/tweetnacl-util@0.15.1/node_modules/tweetnacl-util/nacl-util.js\");\n/* harmony import */ var tweetnacl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tweetnacl */ \"(app-pages-browser)/./node_modules/.pnpm/tweetnacl@1.0.3/node_modules/tweetnacl/nacl-fast.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/polyfills/process.js\");\n\n\n\nvar CONNECT_EVENT_ERROR_CODES;\n(function (CONNECT_EVENT_ERROR_CODES) {\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"MANIFEST_NOT_FOUND_ERROR\"] = 2] = \"MANIFEST_NOT_FOUND_ERROR\";\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"MANIFEST_CONTENT_ERROR\"] = 3] = \"MANIFEST_CONTENT_ERROR\";\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_EVENT_ERROR_CODES || (CONNECT_EVENT_ERROR_CODES = {}));\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (CONNECT_ITEM_ERROR_CODES = {}));\n\nvar SEND_TRANSACTION_ERROR_CODES;\n(function (SEND_TRANSACTION_ERROR_CODES) {\n    SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(SEND_TRANSACTION_ERROR_CODES || (SEND_TRANSACTION_ERROR_CODES = {}));\n\nvar SIGN_DATA_ERROR_CODES;\n(function (SIGN_DATA_ERROR_CODES) {\n    SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(SIGN_DATA_ERROR_CODES || (SIGN_DATA_ERROR_CODES = {}));\n\nvar DISCONNECT_ERROR_CODES;\n(function (DISCONNECT_ERROR_CODES) {\n    DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(DISCONNECT_ERROR_CODES || (DISCONNECT_ERROR_CODES = {}));\n\nvar CHAIN;\n(function (CHAIN) {\n    CHAIN[\"MAINNET\"] = \"-239\";\n    CHAIN[\"TESTNET\"] = \"-3\";\n})(CHAIN || (CHAIN = {}));\n\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util__WEBPACK_IMPORTED_MODULE_0__.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util__WEBPACK_IMPORTED_MODULE_0__.decodeBase64(value);\n}\nfunction encode(value, urlSafe = false) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = JSON.stringify(value);\n        }\n        uint8Array = tweetnacl_util__WEBPACK_IMPORTED_MODULE_0__.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction decode(value, urlSafe = false) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util__WEBPACK_IMPORTED_MODULE_0__.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return JSON.parse(tweetnacl_util__WEBPACK_IMPORTED_MODULE_0__.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nconst Base64 = {\n    encode,\n    decode\n};\n\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\n\nfunction isNode() {\n    return (typeof process !== 'undefined' && process.versions != null && process.versions.node != null);\n}\n\nclass SessionCrypto {\n    constructor(keyPair) {\n        this.nonceLength = 24;\n        this.keyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n        this.sessionId = toHexString(this.keyPair.publicKey);\n    }\n    createKeypair() {\n        return tweetnacl__WEBPACK_IMPORTED_MODULE_1__.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: hexToByteArray(keyPair.publicKey),\n            secretKey: hexToByteArray(keyPair.secretKey)\n        };\n    }\n    createNonce() {\n        return tweetnacl__WEBPACK_IMPORTED_MODULE_1__.randomBytes(this.nonceLength);\n    }\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl__WEBPACK_IMPORTED_MODULE_1__.box(encodedMessage, nonce, receiverPublicKey, this.keyPair.secretKey);\n        return concatUint8Arrays(nonce, encrypted);\n    }\n    decrypt(message, senderPublicKey) {\n        const [nonce, internalMessage] = splitToUint8Arrays(message, this.nonceLength);\n        const decrypted = tweetnacl__WEBPACK_IMPORTED_MODULE_1__.box.open(internalMessage, nonce, senderPublicKey, this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${this.keyPair.publicKey.toString()} \\n keypair secretkey: ${this.keyPair.secretKey.toString()}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: toHexString(this.keyPair.publicKey),\n            secretKey: toHexString(this.keyPair.secretKey)\n        };\n    }\n}\n\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@tonconnect+protocol@2.3.0/node_modules/@tonconnect/protocol/lib/esm/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/@tonconnect+sdk@3.2.0/node_modules/@tonconnect/sdk/lib/esm/index.mjs":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@tonconnect+sdk@3.2.0/node_modules/@tonconnect/sdk/lib/esm/index.mjs ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BadRequestError: function() { return /* binding */ BadRequestError; },\n/* harmony export */   BrowserEventDispatcher: function() { return /* binding */ BrowserEventDispatcher; },\n/* harmony export */   CHAIN: function() { return /* reexport safe */ _tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.CHAIN; },\n/* harmony export */   CONNECT_EVENT_ERROR_CODES: function() { return /* reexport safe */ _tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.CONNECT_EVENT_ERROR_CODES; },\n/* harmony export */   CONNECT_ITEM_ERROR_CODES: function() { return /* reexport safe */ _tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.CONNECT_ITEM_ERROR_CODES; },\n/* harmony export */   FetchWalletsError: function() { return /* binding */ FetchWalletsError; },\n/* harmony export */   LocalstorageNotFoundError: function() { return /* binding */ LocalstorageNotFoundError; },\n/* harmony export */   ParseHexError: function() { return /* binding */ ParseHexError; },\n/* harmony export */   SEND_TRANSACTION_ERROR_CODES: function() { return /* reexport safe */ _tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.SEND_TRANSACTION_ERROR_CODES; },\n/* harmony export */   SIGN_DATA_ERROR_CODES: function() { return /* reexport safe */ _tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.SIGN_DATA_ERROR_CODES; },\n/* harmony export */   TonConnect: function() { return /* binding */ TonConnect; },\n/* harmony export */   TonConnectError: function() { return /* binding */ TonConnectError; },\n/* harmony export */   UnknownAppError: function() { return /* binding */ UnknownAppError; },\n/* harmony export */   UnknownError: function() { return /* binding */ UnknownError; },\n/* harmony export */   UserRejectsError: function() { return /* binding */ UserRejectsError; },\n/* harmony export */   WalletAlreadyConnectedError: function() { return /* binding */ WalletAlreadyConnectedError; },\n/* harmony export */   WalletMissingRequiredFeaturesError: function() { return /* binding */ WalletMissingRequiredFeaturesError; },\n/* harmony export */   WalletNotConnectedError: function() { return /* binding */ WalletNotConnectedError; },\n/* harmony export */   WalletNotInjectedError: function() { return /* binding */ WalletNotInjectedError; },\n/* harmony export */   WalletNotSupportFeatureError: function() { return /* binding */ WalletNotSupportFeatureError; },\n/* harmony export */   WalletsListManager: function() { return /* binding */ WalletsListManager; },\n/* harmony export */   WrongAddressError: function() { return /* binding */ WrongAddressError; },\n/* harmony export */   checkRequiredWalletFeatures: function() { return /* binding */ checkRequiredWalletFeatures; },\n/* harmony export */   createConnectionCompletedEvent: function() { return /* binding */ createConnectionCompletedEvent; },\n/* harmony export */   createConnectionErrorEvent: function() { return /* binding */ createConnectionErrorEvent; },\n/* harmony export */   createConnectionRestoringCompletedEvent: function() { return /* binding */ createConnectionRestoringCompletedEvent; },\n/* harmony export */   createConnectionRestoringErrorEvent: function() { return /* binding */ createConnectionRestoringErrorEvent; },\n/* harmony export */   createConnectionRestoringStartedEvent: function() { return /* binding */ createConnectionRestoringStartedEvent; },\n/* harmony export */   createConnectionStartedEvent: function() { return /* binding */ createConnectionStartedEvent; },\n/* harmony export */   createDataSentForSignatureEvent: function() { return /* binding */ createDataSentForSignatureEvent; },\n/* harmony export */   createDataSignedEvent: function() { return /* binding */ createDataSignedEvent; },\n/* harmony export */   createDataSigningFailedEvent: function() { return /* binding */ createDataSigningFailedEvent; },\n/* harmony export */   createDisconnectionEvent: function() { return /* binding */ createDisconnectionEvent; },\n/* harmony export */   createRequestVersionEvent: function() { return /* binding */ createRequestVersionEvent; },\n/* harmony export */   createResponseVersionEvent: function() { return /* binding */ createResponseVersionEvent; },\n/* harmony export */   createTransactionSentForSignatureEvent: function() { return /* binding */ createTransactionSentForSignatureEvent; },\n/* harmony export */   createTransactionSignedEvent: function() { return /* binding */ createTransactionSignedEvent; },\n/* harmony export */   createTransactionSigningFailedEvent: function() { return /* binding */ createTransactionSigningFailedEvent; },\n/* harmony export */   createVersionInfo: function() { return /* binding */ createVersionInfo; },\n/* harmony export */   \"default\": function() { return /* binding */ TonConnect; },\n/* harmony export */   encodeTelegramUrlParameters: function() { return /* binding */ encodeTelegramUrlParameters; },\n/* harmony export */   isTelegramUrl: function() { return /* binding */ isTelegramUrl; },\n/* harmony export */   isWalletInfoCurrentlyEmbedded: function() { return /* binding */ isWalletInfoCurrentlyEmbedded; },\n/* harmony export */   isWalletInfoCurrentlyInjected: function() { return /* binding */ isWalletInfoCurrentlyInjected; },\n/* harmony export */   isWalletInfoInjectable: function() { return /* binding */ isWalletInfoInjectable; },\n/* harmony export */   isWalletInfoInjected: function() { return /* binding */ isWalletInfoInjected; },\n/* harmony export */   isWalletInfoRemote: function() { return /* binding */ isWalletInfoRemote; },\n/* harmony export */   toUserFriendlyAddress: function() { return /* binding */ toUserFriendlyAddress; }\n/* harmony export */ });\n/* harmony import */ var _tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tonconnect/protocol */ \"(app-pages-browser)/./node_modules/.pnpm/@tonconnect+protocol@2.3.0/node_modules/@tonconnect/protocol/lib/esm/index.mjs\");\n/* harmony import */ var _tonconnect_isomorphic_eventsource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tonconnect/isomorphic-eventsource */ \"(app-pages-browser)/./node_modules/.pnpm/@tonconnect+isomorphic-eventsource@0.0.2/node_modules/@tonconnect/isomorphic-eventsource/browser.js\");\n/* harmony import */ var _tonconnect_isomorphic_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tonconnect/isomorphic-fetch */ \"(app-pages-browser)/./node_modules/.pnpm/@tonconnect+isomorphic-fetch@0.0.3/node_modules/@tonconnect/isomorphic-fetch/browser.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/polyfills/process.js\");\n\n\n\n\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\n\n/**\n * Base class for TonConnect errors. You can check if the error was triggered by the @tonconnect/sdk using `err instanceof TonConnectError`.\n */\nclass TonConnectError extends Error {\n    constructor(message, options) {\n        super(message, options);\n        this.message = `${TonConnectError.prefix} ${this.constructor.name}${this.info ? ': ' + this.info : ''}${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, TonConnectError.prototype);\n    }\n    get info() {\n        return '';\n    }\n}\nTonConnectError.prefix = '[TON_CONNECT_SDK_ERROR]';\n\n/**\n * Thrown when passed DappMetadata is in incorrect format.\n */\nclass DappMetadataError extends TonConnectError {\n    get info() {\n        return 'Passed DappMetadata is in incorrect format.';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, DappMetadataError.prototype);\n    }\n}\n\n/**\n * Thrown when passed manifest contains errors.\n */\nclass ManifestContentErrorError extends TonConnectError {\n    get info() {\n        return 'Passed `tonconnect-manifest.json` contains errors. Check format of your manifest. See more https://github.com/ton-connect/docs/blob/main/requests-responses.md#app-manifest';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, ManifestContentErrorError.prototype);\n    }\n}\n\n/**\n * Thrown when wallet can't get manifest by passed manifestUrl.\n */\nclass ManifestNotFoundError extends TonConnectError {\n    get info() {\n        return 'Manifest not found. Make sure you added `tonconnect-manifest.json` to the root of your app or passed correct manifestUrl. See more https://github.com/ton-connect/docs/blob/main/requests-responses.md#app-manifest';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, ManifestNotFoundError.prototype);\n    }\n}\n\n/**\n * Thrown when wallet connection called but wallet already connected. To avoid the error, disconnect the wallet before doing a new connection.\n */\nclass WalletAlreadyConnectedError extends TonConnectError {\n    get info() {\n        return 'Wallet connection called but wallet already connected. To avoid the error, disconnect the wallet before doing a new connection.';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, WalletAlreadyConnectedError.prototype);\n    }\n}\n\n/**\n * Thrown when send transaction or other protocol methods called while wallet is not connected.\n */\nclass WalletNotConnectedError extends TonConnectError {\n    get info() {\n        return 'Send transaction or other protocol methods called while wallet is not connected.';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, WalletNotConnectedError.prototype);\n    }\n}\n\n/**\n * Thrown when there is an attempt to connect to the injected wallet while it is not exists in the webpage.\n */\nclass WalletNotInjectedError extends TonConnectError {\n    get info() {\n        return 'There is an attempt to connect to the injected wallet while it is not exists in the webpage.';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, WalletNotInjectedError.prototype);\n    }\n}\n\n/**\n * Thrown when wallet doesn't support requested feature method.\n */\nclass WalletNotSupportFeatureError extends TonConnectError {\n    get info() {\n        return \"Wallet doesn't support requested feature method.\";\n    }\n    constructor(message, options) {\n        super(message, options);\n        Object.setPrototypeOf(this, WalletNotSupportFeatureError.prototype);\n    }\n}\n\n/**\n * Thrown when wallet can't get manifest by passed manifestUrl.\n */\nclass WalletMissingRequiredFeaturesError extends TonConnectError {\n    get info() {\n        return 'Missing required features. You need to update your wallet.';\n    }\n    constructor(message, options) {\n        super(message, options);\n        Object.setPrototypeOf(this, WalletMissingRequiredFeaturesError.prototype);\n    }\n}\n\nfunction isWalletConnectionSourceJS(value) {\n    return 'jsBridgeKey' in value;\n}\n\n/**\n * Thrown when user rejects the action in the wallet.\n */\nclass UserRejectsError extends TonConnectError {\n    get info() {\n        return 'User rejects the action in the wallet.';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, UserRejectsError.prototype);\n    }\n}\n\n/**\n * Thrown when request to the wallet contains errors.\n */\nclass BadRequestError extends TonConnectError {\n    get info() {\n        return 'Request to the wallet contains errors.';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, BadRequestError.prototype);\n    }\n}\n\n/**\n * Thrown when app tries to send rpc request to the injected wallet while not connected.\n */\nclass UnknownAppError extends TonConnectError {\n    get info() {\n        return 'App tries to send rpc request to the injected wallet while not connected.';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, UnknownAppError.prototype);\n    }\n}\n\n/**\n * Thrown when `Storage` was not specified in the `DappMetadata` and default `localStorage` was not detected in the Node.js environment.\n */\nclass LocalstorageNotFoundError extends TonConnectError {\n    get info() {\n        return 'Storage was not specified in the `DappMetadata` and default `localStorage` was not detected in the environment.';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, LocalstorageNotFoundError.prototype);\n    }\n}\n\n/**\n * Thrown when an error occurred while fetching the wallets list.\n */\nclass FetchWalletsError extends TonConnectError {\n    get info() {\n        return 'An error occurred while fetching the wallets list.';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, FetchWalletsError.prototype);\n    }\n}\n\n/**\n * Thrown when passed address is in incorrect format.\n */\nclass WrongAddressError extends TonConnectError {\n    get info() {\n        return 'Passed address is in incorrect format.';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, WrongAddressError.prototype);\n    }\n}\n\n/**\n * Thrown when passed hex is in incorrect format.\n */\nclass ParseHexError extends TonConnectError {\n    get info() {\n        return 'Passed hex is in incorrect format.';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, ParseHexError.prototype);\n    }\n}\n\n/**\n * Unhanded unknown error.\n */\nclass UnknownError extends TonConnectError {\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, UnknownError.prototype);\n    }\n}\n\nconst connectEventErrorsCodes = {\n    [_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.CONNECT_EVENT_ERROR_CODES.UNKNOWN_ERROR]: UnknownError,\n    [_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.CONNECT_EVENT_ERROR_CODES.USER_REJECTS_ERROR]: UserRejectsError,\n    [_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.CONNECT_EVENT_ERROR_CODES.BAD_REQUEST_ERROR]: BadRequestError,\n    [_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.CONNECT_EVENT_ERROR_CODES.UNKNOWN_APP_ERROR]: UnknownAppError,\n    [_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.CONNECT_EVENT_ERROR_CODES.MANIFEST_NOT_FOUND_ERROR]: ManifestNotFoundError,\n    [_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.CONNECT_EVENT_ERROR_CODES.MANIFEST_CONTENT_ERROR]: ManifestContentErrorError\n};\nclass ConnectErrorsParser {\n    parseError(error) {\n        let ErrorConstructor = UnknownError;\n        if (error.code in connectEventErrorsCodes) {\n            ErrorConstructor = connectEventErrorsCodes[error.code] || UnknownError;\n        }\n        return new ErrorConstructor(error.message);\n    }\n}\nconst connectErrorsParser = new ConnectErrorsParser();\n\nclass RpcParser {\n    isError(response) {\n        return 'error' in response;\n    }\n}\n\nconst sendTransactionErrors = {\n    [_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.SEND_TRANSACTION_ERROR_CODES.UNKNOWN_ERROR]: UnknownError,\n    [_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.SEND_TRANSACTION_ERROR_CODES.USER_REJECTS_ERROR]: UserRejectsError,\n    [_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.SEND_TRANSACTION_ERROR_CODES.BAD_REQUEST_ERROR]: BadRequestError,\n    [_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.SEND_TRANSACTION_ERROR_CODES.UNKNOWN_APP_ERROR]: UnknownAppError\n};\nclass SendTransactionParser extends RpcParser {\n    convertToRpcRequest(request) {\n        return {\n            method: 'sendTransaction',\n            params: [JSON.stringify(request)]\n        };\n    }\n    parseAndThrowError(response) {\n        let ErrorConstructor = UnknownError;\n        if (response.error.code in sendTransactionErrors) {\n            ErrorConstructor = sendTransactionErrors[response.error.code] || UnknownError;\n        }\n        throw new ErrorConstructor(response.error.message);\n    }\n    convertFromRpcResponse(rpcResponse) {\n        return {\n            boc: rpcResponse.result\n        };\n    }\n}\nconst sendTransactionParser = new SendTransactionParser();\n\nconst signDataErrors = {\n    [_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.SIGN_DATA_ERROR_CODES.UNKNOWN_ERROR]: UnknownError,\n    [_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.SIGN_DATA_ERROR_CODES.USER_REJECTS_ERROR]: UserRejectsError,\n    [_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.SIGN_DATA_ERROR_CODES.BAD_REQUEST_ERROR]: BadRequestError,\n    [_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.SIGN_DATA_ERROR_CODES.UNKNOWN_APP_ERROR]: UnknownAppError\n};\nclass SignDataParser extends RpcParser {\n    convertToRpcRequest(payload) {\n        return {\n            method: 'signData',\n            params: [JSON.stringify(payload)]\n        };\n    }\n    parseAndThrowError(response) {\n        let ErrorConstructor = UnknownError;\n        if (response.error.code in signDataErrors) {\n            ErrorConstructor = signDataErrors[response.error.code] || UnknownError;\n        }\n        throw new ErrorConstructor(response.error.message);\n    }\n    convertFromRpcResponse(rpcResponse) {\n        return rpcResponse.result;\n    }\n}\nconst signDataParser = new SignDataParser();\n\nclass HttpBridgeGatewayStorage {\n    constructor(storage, bridgeUrl) {\n        this.storage = storage;\n        this.storeKey = 'ton-connect-storage_http-bridge-gateway::' + bridgeUrl;\n    }\n    storeLastEventId(lastEventId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.storage.setItem(this.storeKey, lastEventId);\n        });\n    }\n    removeLastEventId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.storage.removeItem(this.storeKey);\n        });\n    }\n    getLastEventId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const stored = yield this.storage.getItem(this.storeKey);\n            if (!stored) {\n                return null;\n            }\n            return stored;\n        });\n    }\n}\n\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    return parameters\n        .replaceAll('.', '%2E')\n        .replaceAll('-', '%2D')\n        .replaceAll('_', '%5F')\n        .replaceAll('&', '-')\n        .replaceAll('=', '__')\n        .replaceAll('%', '--');\n}\n\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new TonConnectError('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new TonConnectError('Delay aborted'));\n            });\n        });\n    });\n}\n\n/**\n * Creates an AbortController instance with an optional AbortSignal.\n *\n * @param {AbortSignal} [signal] - An optional AbortSignal to use for aborting the controller.\n * @returns {AbortController} - An instance of AbortController.\n */\nfunction createAbortController(signal) {\n    const abortController = new AbortController();\n    if (signal === null || signal === void 0 ? void 0 : signal.aborted) {\n        abortController.abort();\n    }\n    else {\n        signal === null || signal === void 0 ? void 0 : signal.addEventListener('abort', () => abortController.abort(), { once: true });\n    }\n    return abortController;\n}\n\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    var _a, _b;\n    return __awaiter(this, void 0, void 0, function* () {\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 10;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 200;\n        const abortController = createAbortController(options === null || options === void 0 ? void 0 : options.signal);\n        if (typeof fn !== 'function') {\n            throw new TonConnectError(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            if (abortController.signal.aborted) {\n                throw new TonConnectError(`Aborted after attempts ${i}`);\n            }\n            try {\n                return yield fn({ signal: abortController.signal });\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n\nfunction logDebug(...args) {\n    {\n        try {\n            console.debug('[TON_CONNECT_SDK]', ...args);\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    {\n        try {\n            console.error('[TON_CONNECT_SDK]', ...args);\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    {\n        try {\n            console.warn('[TON_CONNECT_SDK]', ...args);\n        }\n        catch (_a) { }\n    }\n}\n\n/**\n * Create a resource.\n *\n * @template T - The type of the resource.\n * @template Args - The type of the arguments for creating the resource.\n *\n * @param {(...args: Args) => Promise<T>} createFn - A function that creates the resource.\n * @param {(resource: T) => Promise<void>} [disposeFn] - An optional function that disposes the resource.\n */\nfunction createResource(createFn, disposeFn) {\n    let currentResource = null;\n    let currentArgs = null;\n    let currentPromise = null;\n    let currentSignal = null;\n    let abortController = null;\n    // create a new resource\n    const create = (signal, ...args) => __awaiter(this, void 0, void 0, function* () {\n        currentSignal = signal !== null && signal !== void 0 ? signal : null;\n        abortController === null || abortController === void 0 ? void 0 : abortController.abort();\n        abortController = createAbortController(signal);\n        if (abortController.signal.aborted) {\n            throw new TonConnectError('Resource creation was aborted');\n        }\n        currentArgs = args !== null && args !== void 0 ? args : null;\n        const promise = createFn(abortController.signal, ...args);\n        currentPromise = promise;\n        const resource = yield promise;\n        if (currentPromise !== promise && resource !== currentResource) {\n            yield disposeFn(resource);\n            throw new TonConnectError('Resource creation was aborted by a new resource creation');\n        }\n        currentResource = resource;\n        return currentResource;\n    });\n    // get the current resource\n    const current = () => {\n        return currentResource !== null && currentResource !== void 0 ? currentResource : null;\n    };\n    // dispose the current resource\n    const dispose = () => __awaiter(this, void 0, void 0, function* () {\n        try {\n            const resource = currentResource;\n            currentResource = null;\n            const promise = currentPromise;\n            currentPromise = null;\n            try {\n                abortController === null || abortController === void 0 ? void 0 : abortController.abort();\n            }\n            catch (e) { }\n            yield Promise.allSettled([\n                resource ? disposeFn(resource) : Promise.resolve(),\n                promise ? disposeFn(yield promise) : Promise.resolve()\n            ]);\n        }\n        catch (e) { }\n    });\n    // recreate the current resource\n    const recreate = (delayMs) => __awaiter(this, void 0, void 0, function* () {\n        const resource = currentResource;\n        const promise = currentPromise;\n        const args = currentArgs;\n        const signal = currentSignal;\n        yield delay(delayMs);\n        if (resource === currentResource &&\n            promise === currentPromise &&\n            args === currentArgs &&\n            signal === currentSignal) {\n            return yield create(currentSignal, ...(args !== null && args !== void 0 ? args : []));\n        }\n        throw new TonConnectError('Resource recreation was aborted by a new resource creation');\n    });\n    return {\n        create,\n        current,\n        dispose,\n        recreate\n    };\n}\n\n/**\n * Executes a function and provides deferred behavior, allowing for a timeout and abort functionality.\n *\n * @param {Deferrable<T>} fn - The function to execute. It should return a promise that resolves with the desired result.\n * @param {DeferOptions} options - Optional configuration options for the defer behavior.\n * @returns {Promise<T>} - A promise that resolves with the result of the executed function, or rejects with an error if it times out or is aborted.\n */\nfunction timeout(fn, options) {\n    const timeout = options === null || options === void 0 ? void 0 : options.timeout;\n    const signal = options === null || options === void 0 ? void 0 : options.signal;\n    const abortController = createAbortController(signal);\n    return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n        if (abortController.signal.aborted) {\n            reject(new TonConnectError('Operation aborted'));\n            return;\n        }\n        let timeoutId;\n        if (typeof timeout !== 'undefined') {\n            timeoutId = setTimeout(() => {\n                abortController.abort();\n                reject(new TonConnectError(`Timeout after ${timeout}ms`));\n            }, timeout);\n        }\n        abortController.signal.addEventListener('abort', () => {\n            clearTimeout(timeoutId);\n            reject(new TonConnectError('Operation aborted'));\n        }, { once: true });\n        const deferOptions = { timeout, abort: abortController.signal };\n        yield fn((...args) => {\n            clearTimeout(timeoutId);\n            resolve(...args);\n        }, () => {\n            clearTimeout(timeoutId);\n            reject();\n        }, deferOptions);\n    }));\n}\n\nclass BridgeGateway {\n    constructor(storage, bridgeUrl, sessionId, listener, errorsListener) {\n        this.bridgeUrl = bridgeUrl;\n        this.sessionId = sessionId;\n        this.listener = listener;\n        this.errorsListener = errorsListener;\n        this.ssePath = 'events';\n        this.postPath = 'message';\n        this.heartbeatMessage = 'heartbeat';\n        this.defaultTtl = 300;\n        this.defaultReconnectDelay = 2000;\n        this.defaultResendDelay = 5000;\n        this.eventSource = createResource((signal, openingDeadlineMS) => __awaiter(this, void 0, void 0, function* () {\n            const eventSourceConfig = {\n                bridgeUrl: this.bridgeUrl,\n                ssePath: this.ssePath,\n                sessionId: this.sessionId,\n                bridgeGatewayStorage: this.bridgeGatewayStorage,\n                errorHandler: this.errorsHandler.bind(this),\n                messageHandler: this.messagesHandler.bind(this),\n                signal: signal,\n                openingDeadlineMS: openingDeadlineMS\n            };\n            return yield createEventSource(eventSourceConfig);\n        }), (resource) => __awaiter(this, void 0, void 0, function* () {\n            resource.close();\n        }));\n        this.bridgeGatewayStorage = new HttpBridgeGatewayStorage(storage, bridgeUrl);\n    }\n    get isReady() {\n        const eventSource = this.eventSource.current();\n        return (eventSource === null || eventSource === void 0 ? void 0 : eventSource.readyState) === EventSource.OPEN;\n    }\n    get isClosed() {\n        const eventSource = this.eventSource.current();\n        return (eventSource === null || eventSource === void 0 ? void 0 : eventSource.readyState) !== EventSource.OPEN;\n    }\n    get isConnecting() {\n        const eventSource = this.eventSource.current();\n        return (eventSource === null || eventSource === void 0 ? void 0 : eventSource.readyState) === EventSource.CONNECTING;\n    }\n    registerSession(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.eventSource.create(options === null || options === void 0 ? void 0 : options.signal, options === null || options === void 0 ? void 0 : options.openingDeadlineMS);\n        });\n    }\n    send(message, receiver, topic, ttlOrOptions) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: remove deprecated method\n            const options = {};\n            if (typeof ttlOrOptions === 'number') {\n                options.ttl = ttlOrOptions;\n            }\n            else {\n                options.ttl = ttlOrOptions === null || ttlOrOptions === void 0 ? void 0 : ttlOrOptions.ttl;\n                options.signal = ttlOrOptions === null || ttlOrOptions === void 0 ? void 0 : ttlOrOptions.signal;\n                options.attempts = ttlOrOptions === null || ttlOrOptions === void 0 ? void 0 : ttlOrOptions.attempts;\n            }\n            const url = new URL(addPathToUrl(this.bridgeUrl, this.postPath));\n            url.searchParams.append('client_id', this.sessionId);\n            url.searchParams.append('to', receiver);\n            url.searchParams.append('ttl', ((options === null || options === void 0 ? void 0 : options.ttl) || this.defaultTtl).toString());\n            url.searchParams.append('topic', topic);\n            const body = _tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.Base64.encode(message);\n            yield callForSuccess((options) => __awaiter(this, void 0, void 0, function* () {\n                const response = yield this.post(url, body, options.signal);\n                if (!response.ok) {\n                    throw new TonConnectError(`Bridge send failed, status ${response.status}`);\n                }\n            }), {\n                attempts: (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : Number.MAX_SAFE_INTEGER,\n                delayMs: this.defaultResendDelay,\n                signal: options === null || options === void 0 ? void 0 : options.signal\n            });\n        });\n    }\n    pause() {\n        this.eventSource.dispose().catch(e => logError(`Bridge pause failed, ${e}`));\n    }\n    unPause() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const RECREATE_WITHOUT_DELAY = 0;\n            yield this.eventSource.recreate(RECREATE_WITHOUT_DELAY);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.eventSource.dispose().catch(e => logError(`Bridge close failed, ${e}`));\n        });\n    }\n    setListener(listener) {\n        this.listener = listener;\n    }\n    setErrorsListener(errorsListener) {\n        this.errorsListener = errorsListener;\n    }\n    post(url, body, signal) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield fetch(url, {\n                method: 'post',\n                body: body,\n                signal: signal\n            });\n            if (!response.ok) {\n                throw new TonConnectError(`Bridge send failed, status ${response.status}`);\n            }\n            return response;\n        });\n    }\n    errorsHandler(eventSource, e) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isConnecting) {\n                eventSource.close();\n                throw new TonConnectError('Bridge error, failed to connect');\n            }\n            if (this.isReady) {\n                try {\n                    this.errorsListener(e);\n                }\n                catch (e) { }\n                return;\n            }\n            if (this.isClosed) {\n                eventSource.close();\n                logDebug(`Bridge reconnecting, ${this.defaultReconnectDelay}ms delay`);\n                return yield this.eventSource.recreate(this.defaultReconnectDelay);\n            }\n            throw new TonConnectError('Bridge error, unknown state');\n        });\n    }\n    messagesHandler(e) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (e.data === this.heartbeatMessage) {\n                return;\n            }\n            yield this.bridgeGatewayStorage.storeLastEventId(e.lastEventId);\n            if (this.isClosed) {\n                return;\n            }\n            let bridgeIncomingMessage;\n            try {\n                bridgeIncomingMessage = JSON.parse(e.data);\n            }\n            catch (_) {\n                throw new TonConnectError(`Bridge message parse failed, message ${e.data}`);\n            }\n            this.listener(bridgeIncomingMessage);\n        });\n    }\n}\n/**\n * Creates an event source.\n * @param {CreateEventSourceConfig} config - Configuration for creating an event source.\n */\nfunction createEventSource(config) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return yield timeout((resolve, reject, deferOptions) => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const abortController = createAbortController(deferOptions.signal);\n            const signal = abortController.signal;\n            if (signal.aborted) {\n                reject(new TonConnectError('Bridge connection aborted'));\n                return;\n            }\n            const url = new URL(addPathToUrl(config.bridgeUrl, config.ssePath));\n            url.searchParams.append('client_id', config.sessionId);\n            const lastEventId = yield config.bridgeGatewayStorage.getLastEventId();\n            if (lastEventId) {\n                url.searchParams.append('last_event_id', lastEventId);\n            }\n            if (signal.aborted) {\n                reject(new TonConnectError('Bridge connection aborted'));\n                return;\n            }\n            const eventSource = new EventSource(url.toString());\n            eventSource.onerror = (reason) => __awaiter(this, void 0, void 0, function* () {\n                if (signal.aborted) {\n                    eventSource.close();\n                    reject(new TonConnectError('Bridge connection aborted'));\n                    return;\n                }\n                try {\n                    const newInstance = yield config.errorHandler(eventSource, reason);\n                    if (newInstance !== eventSource) {\n                        eventSource.close();\n                    }\n                    if (newInstance && newInstance !== eventSource) {\n                        resolve(newInstance);\n                    }\n                }\n                catch (e) {\n                    eventSource.close();\n                    reject(e);\n                }\n            });\n            eventSource.onopen = () => {\n                if (signal.aborted) {\n                    eventSource.close();\n                    reject(new TonConnectError('Bridge connection aborted'));\n                    return;\n                }\n                resolve(eventSource);\n            };\n            eventSource.onmessage = (event) => {\n                if (signal.aborted) {\n                    eventSource.close();\n                    reject(new TonConnectError('Bridge connection aborted'));\n                    return;\n                }\n                config.messageHandler(event);\n            };\n            (_a = config.signal) === null || _a === void 0 ? void 0 : _a.addEventListener('abort', () => {\n                eventSource.close();\n                reject(new TonConnectError('Bridge connection aborted'));\n            });\n        }), { timeout: config.openingDeadlineMS, signal: config.signal });\n    });\n}\n\nconst CONNECTION_HTTP_EXPIRATION_TIME = 5 * 60 * 1000;\nfunction isPendingConnectionHttp(connection) {\n    return !('connectEvent' in connection);\n}\nfunction isPendingConnectionHttpRaw(connection) {\n    return !('connectEvent' in connection);\n}\nfunction isExpiredPendingConnectionHttpRaw(connection) {\n    var _a;\n    return Date.now() - ((_a = connection.createdAt) !== null && _a !== void 0 ? _a : 0) > CONNECTION_HTTP_EXPIRATION_TIME;\n}\n\nclass BridgeConnectionStorage {\n    constructor(storage) {\n        this.storage = storage;\n        this.storeKey = 'ton-connect-storage_bridge-connection';\n    }\n    storeConnection(connection) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (connection.type === 'injected') {\n                return this.storage.setItem(this.storeKey, JSON.stringify(connection));\n            }\n            if (!isPendingConnectionHttp(connection)) {\n                const rawSession = {\n                    sessionKeyPair: connection.session.sessionCrypto.stringifyKeypair(),\n                    walletPublicKey: connection.session.walletPublicKey,\n                    bridgeUrl: connection.session.bridgeUrl\n                };\n                const rawConnection = {\n                    type: 'http',\n                    connectEvent: connection.connectEvent,\n                    session: rawSession,\n                    lastWalletEventId: connection.lastWalletEventId,\n                    nextRpcRequestId: connection.nextRpcRequestId\n                };\n                return this.storage.setItem(this.storeKey, JSON.stringify(rawConnection));\n            }\n            const rawConnection = {\n                type: 'http',\n                connectionSource: connection.connectionSource,\n                sessionCrypto: connection.sessionCrypto.stringifyKeypair(),\n                createdAt: Date.now()\n            };\n            return this.storage.setItem(this.storeKey, JSON.stringify(rawConnection));\n        });\n    }\n    removeConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.storage.removeItem(this.storeKey);\n        });\n    }\n    getConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const stored = yield this.storage.getItem(this.storeKey);\n            if (!stored) {\n                return null;\n            }\n            const connection = JSON.parse(stored);\n            if (connection.type === 'injected') {\n                return connection;\n            }\n            if (!isPendingConnectionHttpRaw(connection)) {\n                const sessionCrypto = new _tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.SessionCrypto(connection.session.sessionKeyPair);\n                return {\n                    type: 'http',\n                    connectEvent: connection.connectEvent,\n                    lastWalletEventId: connection.lastWalletEventId,\n                    nextRpcRequestId: connection.nextRpcRequestId,\n                    session: {\n                        sessionCrypto,\n                        bridgeUrl: connection.session.bridgeUrl,\n                        walletPublicKey: connection.session.walletPublicKey\n                    }\n                };\n            }\n            if (isExpiredPendingConnectionHttpRaw(connection)) {\n                yield this.removeConnection();\n                return null;\n            }\n            return {\n                type: 'http',\n                sessionCrypto: new _tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.SessionCrypto(connection.sessionCrypto),\n                connectionSource: connection.connectionSource\n            };\n        });\n    }\n    getHttpConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.getConnection();\n            if (!connection) {\n                throw new TonConnectError('Trying to read HTTP connection source while nothing is stored');\n            }\n            if (connection.type === 'injected') {\n                throw new TonConnectError('Trying to read HTTP connection source while injected connection is stored');\n            }\n            return connection;\n        });\n    }\n    getHttpPendingConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.getConnection();\n            if (!connection) {\n                throw new TonConnectError('Trying to read HTTP connection source while nothing is stored');\n            }\n            if (connection.type === 'injected') {\n                throw new TonConnectError('Trying to read HTTP connection source while injected connection is stored');\n            }\n            if (!isPendingConnectionHttp(connection)) {\n                throw new TonConnectError('Trying to read HTTP-pending connection while http connection is stored');\n            }\n            return connection;\n        });\n    }\n    getInjectedConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.getConnection();\n            if (!connection) {\n                throw new TonConnectError('Trying to read Injected bridge connection source while nothing is stored');\n            }\n            if ((connection === null || connection === void 0 ? void 0 : connection.type) === 'http') {\n                throw new TonConnectError('Trying to read Injected bridge connection source while HTTP connection is stored');\n            }\n            return connection;\n        });\n    }\n    storedConnectionType() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const stored = yield this.storage.getItem(this.storeKey);\n            if (!stored) {\n                return null;\n            }\n            const connection = JSON.parse(stored);\n            return connection.type;\n        });\n    }\n    storeLastWalletEventId(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.getConnection();\n            if (connection && connection.type === 'http' && !isPendingConnectionHttp(connection)) {\n                connection.lastWalletEventId = id;\n                return this.storeConnection(connection);\n            }\n        });\n    }\n    getLastWalletEventId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.getConnection();\n            if (connection && 'lastWalletEventId' in connection) {\n                return connection.lastWalletEventId;\n            }\n            return undefined;\n        });\n    }\n    increaseNextRpcRequestId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.getConnection();\n            if (connection && 'nextRpcRequestId' in connection) {\n                const lastId = connection.nextRpcRequestId || 0;\n                connection.nextRpcRequestId = lastId + 1;\n                return this.storeConnection(connection);\n            }\n        });\n    }\n    getNextRpcRequestId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.getConnection();\n            if (connection && 'nextRpcRequestId' in connection) {\n                return connection.nextRpcRequestId || 0;\n            }\n            return 0;\n        });\n    }\n}\n\nconst PROTOCOL_VERSION = 2;\n\nclass BridgeProvider {\n    constructor(storage, walletConnectionSource) {\n        this.storage = storage;\n        this.walletConnectionSource = walletConnectionSource;\n        this.type = 'http';\n        this.standardUniversalLink = 'tc://';\n        this.pendingRequests = new Map();\n        this.session = null;\n        this.gateway = null;\n        this.pendingGateways = [];\n        this.listeners = [];\n        this.defaultOpeningDeadlineMS = 12000;\n        this.defaultRetryTimeoutMS = 2000;\n        this.connectionStorage = new BridgeConnectionStorage(storage);\n    }\n    static fromStorage(storage) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const bridgeConnectionStorage = new BridgeConnectionStorage(storage);\n            const connection = yield bridgeConnectionStorage.getHttpConnection();\n            if (isPendingConnectionHttp(connection)) {\n                return new BridgeProvider(storage, connection.connectionSource);\n            }\n            return new BridgeProvider(storage, { bridgeUrl: connection.session.bridgeUrl });\n        });\n    }\n    connect(message, options) {\n        var _a;\n        const abortController = createAbortController(options === null || options === void 0 ? void 0 : options.signal);\n        (_a = this.abortController) === null || _a === void 0 ? void 0 : _a.abort();\n        this.abortController = abortController;\n        this.closeGateways();\n        const sessionCrypto = new _tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.SessionCrypto();\n        this.session = {\n            sessionCrypto,\n            bridgeUrl: 'bridgeUrl' in this.walletConnectionSource\n                ? this.walletConnectionSource.bridgeUrl\n                : ''\n        };\n        this.connectionStorage\n            .storeConnection({\n            type: 'http',\n            connectionSource: this.walletConnectionSource,\n            sessionCrypto\n        })\n            .then(() => __awaiter(this, void 0, void 0, function* () {\n            if (abortController.signal.aborted) {\n                return;\n            }\n            yield callForSuccess(_options => {\n                var _a;\n                return this.openGateways(sessionCrypto, {\n                    openingDeadlineMS: (_a = options === null || options === void 0 ? void 0 : options.openingDeadlineMS) !== null && _a !== void 0 ? _a : this.defaultOpeningDeadlineMS,\n                    signal: _options === null || _options === void 0 ? void 0 : _options.signal\n                });\n            }, {\n                attempts: Number.MAX_SAFE_INTEGER,\n                delayMs: this.defaultRetryTimeoutMS,\n                signal: abortController.signal\n            });\n        }));\n        const universalLink = 'universalLink' in this.walletConnectionSource &&\n            this.walletConnectionSource.universalLink\n            ? this.walletConnectionSource.universalLink\n            : this.standardUniversalLink;\n        return this.generateUniversalLink(universalLink, message);\n    }\n    restoreConnection(options) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            const abortController = createAbortController(options === null || options === void 0 ? void 0 : options.signal);\n            (_a = this.abortController) === null || _a === void 0 ? void 0 : _a.abort();\n            this.abortController = abortController;\n            if (abortController.signal.aborted) {\n                return;\n            }\n            this.closeGateways();\n            const storedConnection = yield this.connectionStorage.getHttpConnection();\n            if (!storedConnection) {\n                return;\n            }\n            if (abortController.signal.aborted) {\n                return;\n            }\n            const openingDeadlineMS = (_b = options === null || options === void 0 ? void 0 : options.openingDeadlineMS) !== null && _b !== void 0 ? _b : this.defaultOpeningDeadlineMS;\n            if (isPendingConnectionHttp(storedConnection)) {\n                this.session = {\n                    sessionCrypto: storedConnection.sessionCrypto,\n                    bridgeUrl: 'bridgeUrl' in this.walletConnectionSource\n                        ? this.walletConnectionSource.bridgeUrl\n                        : ''\n                };\n                return yield this.openGateways(storedConnection.sessionCrypto, {\n                    openingDeadlineMS: openingDeadlineMS,\n                    signal: abortController === null || abortController === void 0 ? void 0 : abortController.signal\n                });\n            }\n            if (Array.isArray(this.walletConnectionSource)) {\n                throw new TonConnectError('Internal error. Connection source is array while WalletConnectionSourceHTTP was expected.');\n            }\n            this.session = storedConnection.session;\n            if (this.gateway) {\n                logDebug('Gateway is already opened, closing previous gateway');\n                yield this.gateway.close();\n            }\n            this.gateway = new BridgeGateway(this.storage, this.walletConnectionSource.bridgeUrl, storedConnection.session.sessionCrypto.sessionId, this.gatewayListener.bind(this), this.gatewayErrorsListener.bind(this));\n            if (abortController.signal.aborted) {\n                return;\n            }\n            // notify listeners about stored connection\n            this.listeners.forEach(listener => listener(storedConnection.connectEvent));\n            // wait for the connection to be opened\n            try {\n                yield callForSuccess(options => this.gateway.registerSession({\n                    openingDeadlineMS: openingDeadlineMS,\n                    signal: options.signal\n                }), {\n                    attempts: Number.MAX_SAFE_INTEGER,\n                    delayMs: this.defaultRetryTimeoutMS,\n                    signal: abortController.signal\n                });\n            }\n            catch (e) {\n                yield this.disconnect({ signal: abortController.signal });\n                return;\n            }\n        });\n    }\n    sendRequest(request, optionsOrOnRequestSent) {\n        // TODO: remove deprecated method\n        const options = {};\n        if (typeof optionsOrOnRequestSent === 'function') {\n            options.onRequestSent = optionsOrOnRequestSent;\n        }\n        else {\n            options.onRequestSent = optionsOrOnRequestSent === null || optionsOrOnRequestSent === void 0 ? void 0 : optionsOrOnRequestSent.onRequestSent;\n            options.signal = optionsOrOnRequestSent === null || optionsOrOnRequestSent === void 0 ? void 0 : optionsOrOnRequestSent.signal;\n            options.attempts = optionsOrOnRequestSent === null || optionsOrOnRequestSent === void 0 ? void 0 : optionsOrOnRequestSent.attempts;\n        }\n        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            if (!this.gateway || !this.session || !('walletPublicKey' in this.session)) {\n                throw new TonConnectError('Trying to send bridge request without session');\n            }\n            const id = (yield this.connectionStorage.getNextRpcRequestId()).toString();\n            yield this.connectionStorage.increaseNextRpcRequestId();\n            logDebug('Send http-bridge request:', Object.assign(Object.assign({}, request), { id }));\n            const encodedRequest = this.session.sessionCrypto.encrypt(JSON.stringify(Object.assign(Object.assign({}, request), { id })), (0,_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.hexToByteArray)(this.session.walletPublicKey));\n            try {\n                yield this.gateway.send(encodedRequest, this.session.walletPublicKey, request.method, { attempts: options === null || options === void 0 ? void 0 : options.attempts, signal: options === null || options === void 0 ? void 0 : options.signal });\n                (_a = options === null || options === void 0 ? void 0 : options.onRequestSent) === null || _a === void 0 ? void 0 : _a.call(options);\n                this.pendingRequests.set(id.toString(), resolve);\n            }\n            catch (e) {\n                reject(e);\n            }\n        }));\n    }\n    closeConnection() {\n        this.closeGateways();\n        this.listeners = [];\n        this.session = null;\n        this.gateway = null;\n    }\n    disconnect(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                let timeoutId = null;\n                const onRequestSent = () => {\n                    if (!called) {\n                        called = true;\n                        this.removeBridgeAndSession().then(resolve);\n                    }\n                };\n                try {\n                    this.closeGateways();\n                    const abortController = createAbortController(options === null || options === void 0 ? void 0 : options.signal);\n                    timeoutId = setTimeout(() => {\n                        abortController.abort();\n                    }, this.defaultOpeningDeadlineMS);\n                    yield this.sendRequest({ method: 'disconnect', params: [] }, {\n                        onRequestSent: onRequestSent,\n                        signal: abortController.signal,\n                        attempts: 1\n                    });\n                }\n                catch (e) {\n                    logDebug('Disconnect error:', e);\n                    if (!called) {\n                        this.removeBridgeAndSession().then(resolve);\n                    }\n                }\n                finally {\n                    if (timeoutId) {\n                        clearTimeout(timeoutId);\n                    }\n                    onRequestSent();\n                }\n            }));\n        });\n    }\n    listen(callback) {\n        this.listeners.push(callback);\n        return () => (this.listeners = this.listeners.filter(listener => listener !== callback));\n    }\n    pause() {\n        var _a;\n        (_a = this.gateway) === null || _a === void 0 ? void 0 : _a.pause();\n        this.pendingGateways.forEach(bridge => bridge.pause());\n    }\n    unPause() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const promises = this.pendingGateways.map(bridge => bridge.unPause());\n            if (this.gateway) {\n                promises.push(this.gateway.unPause());\n            }\n            yield Promise.all(promises);\n        });\n    }\n    pendingGatewaysListener(gateway, bridgeUrl, bridgeIncomingMessage) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.pendingGateways.includes(gateway)) {\n                yield gateway.close();\n                return;\n            }\n            this.closeGateways({ except: gateway });\n            if (this.gateway) {\n                logDebug('Gateway is already opened, closing previous gateway');\n                yield this.gateway.close();\n            }\n            this.session.bridgeUrl = bridgeUrl;\n            this.gateway = gateway;\n            this.gateway.setErrorsListener(this.gatewayErrorsListener.bind(this));\n            this.gateway.setListener(this.gatewayListener.bind(this));\n            return this.gatewayListener(bridgeIncomingMessage);\n        });\n    }\n    gatewayListener(bridgeIncomingMessage) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const walletMessage = JSON.parse(this.session.sessionCrypto.decrypt(_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.Base64.decode(bridgeIncomingMessage.message).toUint8Array(), (0,_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.hexToByteArray)(bridgeIncomingMessage.from)));\n            logDebug('Wallet message received:', walletMessage);\n            if (!('event' in walletMessage)) {\n                const id = walletMessage.id.toString();\n                const resolve = this.pendingRequests.get(id);\n                if (!resolve) {\n                    logDebug(`Response id ${id} doesn't match any request's id`);\n                    return;\n                }\n                resolve(walletMessage);\n                this.pendingRequests.delete(id);\n                return;\n            }\n            if (walletMessage.id !== undefined) {\n                const lastId = yield this.connectionStorage.getLastWalletEventId();\n                if (lastId !== undefined && walletMessage.id <= lastId) {\n                    logError(`Received event id (=${walletMessage.id}) must be greater than stored last wallet event id (=${lastId}) `);\n                    return;\n                }\n                if (walletMessage.event !== 'connect') {\n                    yield this.connectionStorage.storeLastWalletEventId(walletMessage.id);\n                }\n            }\n            // `this.listeners` might be modified in the event handler\n            const listeners = this.listeners;\n            if (walletMessage.event === 'connect') {\n                yield this.updateSession(walletMessage, bridgeIncomingMessage.from);\n            }\n            if (walletMessage.event === 'disconnect') {\n                logDebug(`Removing bridge and session: received disconnect event`);\n                yield this.removeBridgeAndSession();\n            }\n            listeners.forEach(listener => listener(walletMessage));\n        });\n    }\n    gatewayErrorsListener(e) {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new TonConnectError(`Bridge error ${JSON.stringify(e)}`);\n        });\n    }\n    updateSession(connectEvent, walletPublicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = Object.assign(Object.assign({}, this.session), { walletPublicKey });\n            const tonAddrItem = connectEvent.payload.items.find(item => item.name === 'ton_addr');\n            const connectEventToSave = Object.assign(Object.assign({}, connectEvent), { payload: Object.assign(Object.assign({}, connectEvent.payload), { items: [tonAddrItem] }) });\n            yield this.connectionStorage.storeConnection({\n                type: 'http',\n                session: this.session,\n                lastWalletEventId: connectEvent.id,\n                connectEvent: connectEventToSave,\n                nextRpcRequestId: 0\n            });\n        });\n    }\n    removeBridgeAndSession() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.closeConnection();\n            yield this.connectionStorage.removeConnection();\n        });\n    }\n    generateUniversalLink(universalLink, message) {\n        if (isTelegramUrl(universalLink)) {\n            return this.generateTGUniversalLink(universalLink, message);\n        }\n        return this.generateRegularUniversalLink(universalLink, message);\n    }\n    generateRegularUniversalLink(universalLink, message) {\n        const url = new URL(universalLink);\n        url.searchParams.append('v', PROTOCOL_VERSION.toString());\n        url.searchParams.append('id', this.session.sessionCrypto.sessionId);\n        url.searchParams.append('r', JSON.stringify(message));\n        return url.toString();\n    }\n    generateTGUniversalLink(universalLink, message) {\n        const urlToWrap = this.generateRegularUniversalLink('about:blank', message);\n        const linkParams = urlToWrap.split('?')[1];\n        const startapp = 'tonconnect-' + encodeTelegramUrlParameters(linkParams);\n        // TODO: Remove this line after all dApps and the wallets-list.json have been updated\n        const updatedUniversalLink = this.convertToDirectLink(universalLink);\n        const url = new URL(updatedUniversalLink);\n        url.searchParams.append('startapp', startapp);\n        return url.toString();\n    }\n    // TODO: Remove this method after all dApps and the wallets-list.json have been updated\n    convertToDirectLink(universalLink) {\n        const url = new URL(universalLink);\n        if (url.searchParams.has('attach')) {\n            url.searchParams.delete('attach');\n            url.pathname += '/start';\n        }\n        return url.toString();\n    }\n    openGateways(sessionCrypto, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (Array.isArray(this.walletConnectionSource)) {\n                // close all gateways before opening new ones\n                this.pendingGateways.map(bridge => bridge.close().catch());\n                // open new gateways\n                this.pendingGateways = this.walletConnectionSource.map(source => {\n                    const gateway = new BridgeGateway(this.storage, source.bridgeUrl, sessionCrypto.sessionId, () => { }, () => { });\n                    gateway.setListener(message => this.pendingGatewaysListener(gateway, source.bridgeUrl, message));\n                    return gateway;\n                });\n                yield Promise.allSettled(this.pendingGateways.map(bridge => callForSuccess((_options) => {\n                    var _a;\n                    if (!this.pendingGateways.some(item => item === bridge)) {\n                        return bridge.close();\n                    }\n                    return bridge.registerSession({\n                        openingDeadlineMS: (_a = options === null || options === void 0 ? void 0 : options.openingDeadlineMS) !== null && _a !== void 0 ? _a : this.defaultOpeningDeadlineMS,\n                        signal: _options.signal\n                    });\n                }, {\n                    attempts: Number.MAX_SAFE_INTEGER,\n                    delayMs: this.defaultRetryTimeoutMS,\n                    signal: options === null || options === void 0 ? void 0 : options.signal\n                })));\n                return;\n            }\n            else {\n                if (this.gateway) {\n                    logDebug(`Gateway is already opened, closing previous gateway`);\n                    yield this.gateway.close();\n                }\n                this.gateway = new BridgeGateway(this.storage, this.walletConnectionSource.bridgeUrl, sessionCrypto.sessionId, this.gatewayListener.bind(this), this.gatewayErrorsListener.bind(this));\n                return yield this.gateway.registerSession({\n                    openingDeadlineMS: options === null || options === void 0 ? void 0 : options.openingDeadlineMS,\n                    signal: options === null || options === void 0 ? void 0 : options.signal\n                });\n            }\n        });\n    }\n    closeGateways(options) {\n        var _a;\n        (_a = this.gateway) === null || _a === void 0 ? void 0 : _a.close();\n        this.pendingGateways\n            .filter(item => item !== (options === null || options === void 0 ? void 0 : options.except))\n            .forEach(bridge => bridge.close());\n        this.pendingGateways = [];\n    }\n}\n\nfunction hasProperty(value, propertyKey) {\n    return hasProperties(value, [propertyKey]);\n}\nfunction hasProperties(value, propertyKeys) {\n    if (!value || typeof value !== 'object') {\n        return false;\n    }\n    return propertyKeys.every(propertyKey => propertyKey in value);\n}\n\nfunction isJSBridgeWithMetadata(value) {\n    try {\n        if (!hasProperty(value, 'tonconnect') || !hasProperty(value.tonconnect, 'walletInfo')) {\n            return false;\n        }\n        return hasProperties(value.tonconnect.walletInfo, [\n            'name',\n            'app_name',\n            'image',\n            'about_url',\n            'platforms'\n        ]);\n    }\n    catch (_a) {\n        return false;\n    }\n}\n\n/**\n * In memory storage like localStorage, but without persistence.\n * Uses as a fallback for localStorage in Safari's private mode.\n */\nclass InMemoryStorage {\n    constructor() {\n        this.storage = {};\n    }\n    static getInstance() {\n        if (!InMemoryStorage.instance) {\n            InMemoryStorage.instance = new InMemoryStorage();\n        }\n        return InMemoryStorage.instance;\n    }\n    get length() {\n        return Object.keys(this.storage).length;\n    }\n    clear() {\n        this.storage = {};\n    }\n    getItem(key) {\n        var _a;\n        return (_a = this.storage[key]) !== null && _a !== void 0 ? _a : null;\n    }\n    key(index) {\n        var _a;\n        const keys = Object.keys(this.storage);\n        if (index < 0 || index >= keys.length) {\n            return null;\n        }\n        return (_a = keys[index]) !== null && _a !== void 0 ? _a : null;\n    }\n    removeItem(key) {\n        delete this.storage[key];\n    }\n    setItem(key, value) {\n        this.storage[key] = value;\n    }\n}\n\nfunction getWindow() {\n    if (typeof window === 'undefined') {\n        return undefined;\n    }\n    return window;\n}\n/**\n * The function try to get window keys, if it is not available it returns empty array.\n * As an example, for Safari's private mode it returns empty array, because the browser does not allow to get window keys.\n */\nfunction tryGetWindowKeys() {\n    const window = getWindow();\n    if (!window) {\n        return [];\n    }\n    try {\n        return Object.keys(window);\n    }\n    catch (_a) {\n        return [];\n    }\n}\nfunction getDocument() {\n    if (typeof document === 'undefined') {\n        return undefined;\n    }\n    return document;\n}\nfunction getWebPageManifest() {\n    var _a;\n    const origin = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.location.origin;\n    if (origin) {\n        return origin + '/tonconnect-manifest.json';\n    }\n    return '';\n}\n/**\n * Returns `localStorage` if it is available. In Safari's private mode, it returns `InMemoryStorage`. In Node.js, it throws an error.\n */\nfunction tryGetLocalStorage() {\n    if (isLocalStorageAvailable()) {\n        return localStorage;\n    }\n    if (isNodeJs()) {\n        throw new TonConnectError('`localStorage` is unavailable, but it is required for TonConnect. For more details, see https://github.com/ton-connect/sdk/tree/main/packages/sdk#init-connector');\n    }\n    return InMemoryStorage.getInstance();\n}\n/**\n * Checks if `localStorage` is available.\n */\nfunction isLocalStorageAvailable() {\n    // We use a try/catch block because Safari's private mode throws an error when attempting to access localStorage.\n    try {\n        return typeof localStorage !== 'undefined';\n    }\n    catch (_a) {\n        return false;\n    }\n}\n/**\n * Checks if the environment is Node.js.\n */\nfunction isNodeJs() {\n    return (typeof process !== 'undefined' && process.versions != null && process.versions.node != null);\n}\n\nclass InjectedProvider {\n    constructor(storage, injectedWalletKey) {\n        this.injectedWalletKey = injectedWalletKey;\n        this.type = 'injected';\n        this.unsubscribeCallback = null;\n        this.listenSubscriptions = false;\n        this.listeners = [];\n        const window = InjectedProvider.window;\n        if (!InjectedProvider.isWindowContainsWallet(window, injectedWalletKey)) {\n            throw new WalletNotInjectedError();\n        }\n        this.connectionStorage = new BridgeConnectionStorage(storage);\n        this.injectedWallet = window[injectedWalletKey].tonconnect;\n    }\n    static fromStorage(storage) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const bridgeConnectionStorage = new BridgeConnectionStorage(storage);\n            const connection = yield bridgeConnectionStorage.getInjectedConnection();\n            return new InjectedProvider(storage, connection.jsBridgeKey);\n        });\n    }\n    static isWalletInjected(injectedWalletKey) {\n        return InjectedProvider.isWindowContainsWallet(this.window, injectedWalletKey);\n    }\n    static isInsideWalletBrowser(injectedWalletKey) {\n        if (InjectedProvider.isWindowContainsWallet(this.window, injectedWalletKey)) {\n            return this.window[injectedWalletKey].tonconnect.isWalletBrowser;\n        }\n        return false;\n    }\n    static getCurrentlyInjectedWallets() {\n        if (!this.window) {\n            return [];\n        }\n        const windowKeys = tryGetWindowKeys();\n        const wallets = windowKeys.filter(([_, value]) => isJSBridgeWithMetadata(value));\n        return wallets.map(([jsBridgeKey, wallet]) => ({\n            name: wallet.tonconnect.walletInfo.name,\n            appName: wallet.tonconnect.walletInfo.app_name,\n            aboutUrl: wallet.tonconnect.walletInfo.about_url,\n            imageUrl: wallet.tonconnect.walletInfo.image,\n            tondns: wallet.tonconnect.walletInfo.tondns,\n            jsBridgeKey,\n            injected: true,\n            embedded: wallet.tonconnect.isWalletBrowser,\n            platforms: wallet.tonconnect.walletInfo.platforms,\n            features: wallet.tonconnect.walletInfo.features\n        }));\n    }\n    static isWindowContainsWallet(window, injectedWalletKey) {\n        return (!!window &&\n            injectedWalletKey in window &&\n            typeof window[injectedWalletKey] === 'object' &&\n            'tonconnect' in window[injectedWalletKey]);\n    }\n    connect(message) {\n        this._connect(PROTOCOL_VERSION, message);\n    }\n    restoreConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                logDebug(`Injected Provider restoring connection...`);\n                const connectEvent = yield this.injectedWallet.restoreConnection();\n                logDebug('Injected Provider restoring connection response', connectEvent);\n                if (connectEvent.event === 'connect') {\n                    this.makeSubscriptions();\n                    this.listeners.forEach(listener => listener(connectEvent));\n                }\n                else {\n                    yield this.connectionStorage.removeConnection();\n                }\n            }\n            catch (e) {\n                yield this.connectionStorage.removeConnection();\n                console.error(e);\n            }\n        });\n    }\n    closeConnection() {\n        if (this.listenSubscriptions) {\n            this.injectedWallet.disconnect();\n        }\n        this.closeAllListeners();\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise(resolve => {\n                const onRequestSent = () => {\n                    this.closeAllListeners();\n                    this.connectionStorage.removeConnection().then(resolve);\n                };\n                try {\n                    this.injectedWallet.disconnect();\n                    onRequestSent();\n                }\n                catch (e) {\n                    logDebug(e);\n                    this.sendRequest({\n                        method: 'disconnect',\n                        params: []\n                    }, onRequestSent);\n                }\n            });\n        });\n    }\n    closeAllListeners() {\n        var _a;\n        this.listenSubscriptions = false;\n        this.listeners = [];\n        (_a = this.unsubscribeCallback) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n    listen(eventsCallback) {\n        this.listeners.push(eventsCallback);\n        return () => (this.listeners = this.listeners.filter(listener => listener !== eventsCallback));\n    }\n    sendRequest(request, optionsOrOnRequestSent) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: remove deprecated method\n            const options = {};\n            if (typeof optionsOrOnRequestSent === 'function') {\n                options.onRequestSent = optionsOrOnRequestSent;\n            }\n            else {\n                options.onRequestSent = optionsOrOnRequestSent === null || optionsOrOnRequestSent === void 0 ? void 0 : optionsOrOnRequestSent.onRequestSent;\n                options.signal = optionsOrOnRequestSent === null || optionsOrOnRequestSent === void 0 ? void 0 : optionsOrOnRequestSent.signal;\n            }\n            const id = (yield this.connectionStorage.getNextRpcRequestId()).toString();\n            yield this.connectionStorage.increaseNextRpcRequestId();\n            logDebug('Send injected-bridge request:', Object.assign(Object.assign({}, request), { id }));\n            const result = this.injectedWallet.send(Object.assign(Object.assign({}, request), { id }));\n            result.then(response => logDebug('Wallet message received:', response));\n            (_a = options === null || options === void 0 ? void 0 : options.onRequestSent) === null || _a === void 0 ? void 0 : _a.call(options);\n            return result;\n        });\n    }\n    _connect(protocolVersion, message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                logDebug(`Injected Provider connect request: protocolVersion: ${protocolVersion}, message:`, message);\n                const connectEvent = yield this.injectedWallet.connect(protocolVersion, message);\n                logDebug('Injected Provider connect response:', connectEvent);\n                if (connectEvent.event === 'connect') {\n                    yield this.updateSession();\n                    this.makeSubscriptions();\n                }\n                this.listeners.forEach(listener => listener(connectEvent));\n            }\n            catch (e) {\n                logDebug('Injected Provider connect error:', e);\n                const connectEventError = {\n                    event: 'connect_error',\n                    payload: {\n                        code: 0,\n                        message: e === null || e === void 0 ? void 0 : e.toString()\n                    }\n                };\n                this.listeners.forEach(listener => listener(connectEventError));\n            }\n        });\n    }\n    makeSubscriptions() {\n        this.listenSubscriptions = true;\n        this.unsubscribeCallback = this.injectedWallet.listen(e => {\n            logDebug('Wallet message received:', e);\n            if (this.listenSubscriptions) {\n                this.listeners.forEach(listener => listener(e));\n            }\n            if (e.event === 'disconnect') {\n                this.disconnect();\n            }\n        });\n    }\n    updateSession() {\n        return this.connectionStorage.storeConnection({\n            type: 'injected',\n            jsBridgeKey: this.injectedWalletKey,\n            nextRpcRequestId: 0\n        });\n    }\n}\nInjectedProvider.window = getWindow();\n\n/**\n * Default storage to save protocol data, uses `localStorage` if it is available. In Safari's private mode, it uses `InMemoryStorage`. In Node.js, it throws an error.\n */\nclass DefaultStorage {\n    constructor() {\n        this.localStorage = tryGetLocalStorage();\n    }\n    getItem(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.localStorage.getItem(key);\n        });\n    }\n    removeItem(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.localStorage.removeItem(key);\n        });\n    }\n    setItem(key, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.localStorage.setItem(key, value);\n        });\n    }\n}\n\n/**\n * Checks if `WalletInfo` is `WalletInfoInjectable` and `WalletInfo` is injected to the current webpage (`walletInfo.injected === true`).\n * @param value WalletInfo to check.\n */\nfunction isWalletInfoCurrentlyInjected(value) {\n    return isWalletInfoInjectable(value) && value.injected;\n}\n/**\n * Checks if `WalletInfo` is `WalletInfoInjectable` and dApp is opened inside this wallet's browser.\n * @param value WalletInfo to check.\n */\nfunction isWalletInfoCurrentlyEmbedded(value) {\n    return isWalletInfoCurrentlyInjected(value) && value.embedded;\n}\n/**\n * Checks if `WalletInfo` is `WalletInfoInjected`, but doesn't check if it is injected to the page or not.\n * @param value WalletInfo to check.\n */\nfunction isWalletInfoInjectable(value) {\n    return 'jsBridgeKey' in value;\n}\n/**\n * Checks if `WalletInfo` is `WalletInfoRemote`.\n * @param value WalletInfo to check.\n */\nfunction isWalletInfoRemote(value) {\n    return 'bridgeUrl' in value;\n}\n/**\n * @deprecated use `isWalletInfoInjectable` or `isWalletInfoCurrentlyInjected` instead.\n * @param value WalletInfo to check.\n */\nfunction isWalletInfoInjected(value) {\n    return 'jsBridgeKey' in value;\n}\n\nconst FALLBACK_WALLETS_LIST = [\n    {\n        app_name: 'telegram-wallet',\n        name: 'Wallet',\n        image: 'https://wallet.tg/images/logo-288.png',\n        about_url: 'https://wallet.tg/',\n        universal_url: 'https://t.me/wallet?attach=wallet',\n        bridge: [\n            {\n                type: 'sse',\n                url: 'https://walletbot.me/tonconnect-bridge/bridge'\n            }\n        ],\n        platforms: ['ios', 'android', 'macos', 'windows', 'linux']\n    },\n    {\n        app_name: 'tonkeeper',\n        name: 'Tonkeeper',\n        image: 'https://tonkeeper.com/assets/tonconnect-icon.png',\n        tondns: 'tonkeeper.ton',\n        about_url: 'https://tonkeeper.com',\n        universal_url: 'https://app.tonkeeper.com/ton-connect',\n        deepLink: 'tonkeeper-tc://',\n        bridge: [\n            {\n                type: 'sse',\n                url: 'https://bridge.tonapi.io/bridge'\n            },\n            {\n                type: 'js',\n                key: 'tonkeeper'\n            }\n        ],\n        platforms: ['ios', 'android', 'chrome', 'firefox', 'macos']\n    },\n    {\n        app_name: 'mytonwallet',\n        name: 'MyTonWallet',\n        image: 'https://static.mytonwallet.io/icon-256.png',\n        about_url: 'https://mytonwallet.io',\n        universal_url: 'https://connect.mytonwallet.org',\n        bridge: [\n            {\n                type: 'js',\n                key: 'mytonwallet'\n            },\n            {\n                type: 'sse',\n                url: 'https://tonconnectbridge.mytonwallet.org/bridge/'\n            }\n        ],\n        platforms: ['chrome', 'windows', 'macos', 'linux', 'ios', 'android', 'firefox']\n    },\n    {\n        app_name: 'tonhub',\n        name: 'Tonhub',\n        image: 'https://tonhub.com/tonconnect_logo.png',\n        about_url: 'https://tonhub.com',\n        universal_url: 'https://tonhub.com/ton-connect',\n        bridge: [\n            {\n                type: 'js',\n                key: 'tonhub'\n            },\n            {\n                type: 'sse',\n                url: 'https://connect.tonhubapi.com/tonconnect'\n            }\n        ],\n        platforms: ['ios', 'android']\n    },\n    {\n        app_name: 'bitgetTonWallet',\n        name: 'Bitget Wallet',\n        image: 'https://raw.githubusercontent.com/bitgetwallet/download/refs/heads/main/logo/png/bitget_wallet_logo_288_mini.png',\n        about_url: 'https://web3.bitget.com',\n        deepLink: 'bitkeep://',\n        bridge: [\n            {\n                type: 'js',\n                key: 'bitgetTonWallet'\n            },\n            {\n                type: 'sse',\n                url: 'https://ton-connect-bridge.bgwapi.io/bridge'\n            }\n        ],\n        platforms: ['ios', 'android', 'chrome'],\n        universal_url: 'https://bkcode.vip/ton-connect'\n    },\n    {\n        app_name: 'okxMiniWallet',\n        name: 'OKX Mini Wallet',\n        image: 'https://static.okx.com/cdn/assets/imgs/2411/8BE1A4A434D8F58A.png',\n        about_url: 'https://www.okx.com/web3',\n        universal_url: 'https://t.me/OKX_WALLET_BOT?attach=wallet',\n        bridge: [\n            {\n                type: 'sse',\n                url: 'https://www.okx.com/tonbridge/discover/rpc/bridge'\n            }\n        ],\n        platforms: ['ios', 'android', 'macos', 'windows', 'linux']\n    },\n    {\n        app_name: 'binanceWeb3TonWallet',\n        name: 'Binance Web3 Wallet',\n        image: 'https://public.bnbstatic.com/static/binance-w3w/ton-provider/binancew3w.png',\n        about_url: 'https://www.binance.com/en/web3wallet',\n        deepLink: 'bnc://app.binance.com/cedefi/ton-connect',\n        bridge: [\n            {\n                type: 'js',\n                key: 'binancew3w'\n            },\n            {\n                type: 'sse',\n                url: 'https://wallet.binance.com/tonbridge/bridge'\n            }\n        ],\n        platforms: ['ios', 'android', 'macos', 'windows', 'linux'],\n        universal_url: 'https://app.binance.com/cedefi/ton-connect'\n    },\n    {\n        app_name: 'fintopio-tg',\n        name: 'Fintopio',\n        image: 'https://fintopio.com/tonconnect-icon.png',\n        about_url: 'https://fintopio.com',\n        universal_url: 'https://t.me/fintopio?attach=wallet',\n        bridge: [\n            {\n                type: 'sse',\n                url: 'https://wallet-bridge.fintopio.com/bridge'\n            }\n        ],\n        platforms: ['ios', 'android', 'macos', 'windows', 'linux']\n    },\n    {\n        app_name: 'okxTonWallet',\n        name: 'OKX Wallet',\n        image: 'https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png',\n        about_url: 'https://www.okx.com/web3',\n        universal_url: 'https://www.okx.com/download?appendQuery=true&deeplink=okx://web3/wallet/tonconnect',\n        bridge: [\n            {\n                type: 'js',\n                key: 'okxTonWallet'\n            },\n            {\n                type: 'sse',\n                url: 'https://www.okx.com/tonbridge/discover/rpc/bridge'\n            }\n        ],\n        platforms: ['chrome', 'safari', 'firefox', 'ios', 'android']\n    },\n    {\n        app_name: 'hot',\n        name: 'HOT',\n        image: 'https://raw.githubusercontent.com/hot-dao/media/main/logo.png',\n        about_url: 'https://hot-labs.org/',\n        universal_url: 'https://t.me/herewalletbot?attach=wallet',\n        bridge: [\n            {\n                type: 'sse',\n                url: 'https://sse-bridge.hot-labs.org'\n            },\n            {\n                type: 'js',\n                key: 'hotWallet'\n            }\n        ],\n        platforms: ['ios', 'android', 'macos', 'windows', 'linux']\n    },\n    {\n        app_name: 'bybitTonWallet',\n        name: 'Bybit Wallet',\n        image: 'https://raw.githubusercontent.com/bybit-web3/bybit-web3.github.io/main/docs/images/bybit-logo.png',\n        about_url: 'https://www.bybit.com/web3',\n        universal_url: 'https://app.bybit.com/ton-connect',\n        deepLink: 'bybitapp://',\n        bridge: [\n            {\n                type: 'js',\n                key: 'bybitTonWallet'\n            },\n            {\n                type: 'sse',\n                url: 'https://api-node.bybit.com/spot/api/web3/bridge/ton/bridge'\n            }\n        ],\n        platforms: ['ios', 'android', 'chrome']\n    },\n    {\n        app_name: 'dewallet',\n        name: 'DeWallet',\n        image: 'https://raw.githubusercontent.com/delab-team/manifests-images/main/WalletAvatar.png',\n        about_url: 'https://delabwallet.com',\n        universal_url: 'https://t.me/dewallet?attach=wallet',\n        bridge: [\n            {\n                type: 'sse',\n                url: 'https://bridge.dewallet.pro/bridge'\n            }\n        ],\n        platforms: ['ios', 'android', 'macos', 'windows', 'linux']\n    },\n    {\n        app_name: 'safepalwallet',\n        name: 'SafePal',\n        image: 'https://s.pvcliping.com/web/public_image/SafePal_x288.png',\n        tondns: '',\n        about_url: 'https://www.safepal.com',\n        universal_url: 'https://link.safepal.io/ton-connect',\n        deepLink: 'safepal-tc://',\n        bridge: [\n            {\n                type: 'sse',\n                url: 'https://ton-bridge.safepal.com/tonbridge/v1/bridge'\n            },\n            {\n                type: 'js',\n                key: 'safepalwallet'\n            }\n        ],\n        platforms: ['ios', 'android', 'chrome', 'firefox']\n    },\n    {\n        app_name: 'GateWallet',\n        name: 'GateWallet',\n        image: 'https://img.gatedataimg.com/prd-ordinal-imgs/036f07bb8730716e/gateio-0925.png',\n        about_url: 'https://www.gate.io/',\n        bridge: [\n            {\n                type: 'js',\n                key: 'gatetonwallet'\n            },\n            {\n                type: 'sse',\n                url: 'https://dapp.gateio.services/tonbridge_api/bridge/v1'\n            }\n        ],\n        platforms: ['ios', 'android'],\n        universal_url: 'https://gateio.go.link/gateio/web3?adj_t=1ff8khdw_1fu4ccc7'\n    },\n    {\n        app_name: 'openmask',\n        name: 'OpenMask',\n        image: 'https://raw.githubusercontent.com/OpenProduct/openmask-extension/main/public/openmask-logo-288.png',\n        about_url: 'https://www.openmask.app/',\n        bridge: [\n            {\n                type: 'js',\n                key: 'openmask'\n            }\n        ],\n        platforms: ['chrome']\n    },\n    {\n        app_name: 'BitgetWeb3',\n        name: 'BitgetWeb3',\n        image: 'https://img.bitgetimg.com/image/third/1731638059795.png',\n        about_url: '​https://www.bitget.com',\n        universal_url: 'https://t.me/BitgetOfficialBot?attach=wallet',\n        bridge: [\n            {\n                type: 'sse',\n                url: 'https://ton-connect-bridge.bgwapi.io/bridge'\n            }\n        ],\n        platforms: ['ios', 'android', 'windows', 'macos', 'linux']\n    },\n    {\n        app_name: 'tobi',\n        name: 'Tobi',\n        image: 'https://app.tobiwallet.app/icons/logo-288.png',\n        about_url: 'https://tobi.fun',\n        universal_url: 'https://t.me/TobiCopilotBot?attach=wallet',\n        bridge: [\n            {\n                type: 'sse',\n                url: 'https://ton-bridge.tobiwallet.app/bridge'\n            }\n        ],\n        platforms: ['ios', 'android', 'macos', 'windows', 'linux']\n    },\n    {\n        app_name: 'xtonwallet',\n        name: 'XTONWallet',\n        image: 'https://xtonwallet.com/assets/img/icon-256-back.png',\n        about_url: 'https://xtonwallet.com',\n        bridge: [\n            {\n                type: 'js',\n                key: 'xtonwallet'\n            }\n        ],\n        platforms: ['chrome', 'firefox']\n    },\n    {\n        app_name: 'tonwallet',\n        name: 'TON Wallet',\n        image: 'https://wallet.ton.org/assets/ui/qr-logo.png',\n        about_url: 'https://chrome.google.com/webstore/detail/ton-wallet/nphplpgoakhhjchkkhmiggakijnkhfnd',\n        bridge: [\n            {\n                type: 'js',\n                key: 'tonwallet'\n            }\n        ],\n        platforms: ['chrome']\n    }\n];\n\nclass WalletsListManager {\n    constructor(options) {\n        var _a;\n        this.walletsListCache = null;\n        this.walletsListCacheCreationTimestamp = null;\n        this.walletsListSource =\n            (_a = options === null || options === void 0 ? void 0 : options.walletsListSource) !== null && _a !== void 0 ? _a : 'https://raw.githubusercontent.com/ton-blockchain/wallets-list/main/wallets-v2.json';\n        this.cacheTTLMs = options === null || options === void 0 ? void 0 : options.cacheTTLMs;\n    }\n    getWallets() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.cacheTTLMs &&\n                this.walletsListCacheCreationTimestamp &&\n                Date.now() > this.walletsListCacheCreationTimestamp + this.cacheTTLMs) {\n                this.walletsListCache = null;\n            }\n            if (!this.walletsListCache) {\n                this.walletsListCache = this.fetchWalletsList();\n                this.walletsListCache\n                    .then(() => {\n                    this.walletsListCacheCreationTimestamp = Date.now();\n                })\n                    .catch(() => {\n                    this.walletsListCache = null;\n                    this.walletsListCacheCreationTimestamp = null;\n                });\n            }\n            return this.walletsListCache;\n        });\n    }\n    getEmbeddedWallet() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const walletsList = yield this.getWallets();\n            const embeddedWallets = walletsList.filter(isWalletInfoCurrentlyEmbedded);\n            return embeddedWallets.length === 1 ? embeddedWallets[0] : null;\n        });\n    }\n    fetchWalletsList() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let walletsList = [];\n            try {\n                const walletsResponse = yield fetch(this.walletsListSource);\n                walletsList = yield walletsResponse.json();\n                if (!Array.isArray(walletsList)) {\n                    throw new FetchWalletsError('Wrong wallets list format, wallets list must be an array.');\n                }\n                const wrongFormatWallets = walletsList.filter(wallet => !this.isCorrectWalletConfigDTO(wallet));\n                if (wrongFormatWallets.length) {\n                    logError(`Wallet(s) ${wrongFormatWallets\n                        .map(wallet => (wallet === null || wallet === void 0 ? void 0 : wallet.name) || 'unknown')\n                        .join(', ')} config format is wrong. They were removed from the wallets list.`);\n                    walletsList = walletsList.filter(wallet => this.isCorrectWalletConfigDTO(wallet));\n                }\n            }\n            catch (e) {\n                logError(e);\n                walletsList = FALLBACK_WALLETS_LIST;\n            }\n            let currentlyInjectedWallets = [];\n            try {\n                currentlyInjectedWallets = InjectedProvider.getCurrentlyInjectedWallets();\n            }\n            catch (e) {\n                logError(e);\n            }\n            return this.mergeWalletsLists(this.walletConfigDTOListToWalletConfigList(walletsList), currentlyInjectedWallets);\n        });\n    }\n    walletConfigDTOListToWalletConfigList(walletConfigDTO) {\n        return walletConfigDTO.map(walletConfigDTO => {\n            const walletConfig = {\n                name: walletConfigDTO.name,\n                appName: walletConfigDTO.app_name,\n                imageUrl: walletConfigDTO.image,\n                aboutUrl: walletConfigDTO.about_url,\n                tondns: walletConfigDTO.tondns,\n                platforms: walletConfigDTO.platforms,\n                features: walletConfigDTO.features\n            };\n            walletConfigDTO.bridge.forEach(bridge => {\n                if (bridge.type === 'sse') {\n                    walletConfig.bridgeUrl = bridge.url;\n                    walletConfig.universalLink =\n                        walletConfigDTO.universal_url;\n                    walletConfig.deepLink = walletConfigDTO.deepLink;\n                }\n                if (bridge.type === 'js') {\n                    const jsBridgeKey = bridge.key;\n                    walletConfig.jsBridgeKey = jsBridgeKey;\n                    walletConfig.injected =\n                        InjectedProvider.isWalletInjected(jsBridgeKey);\n                    walletConfig.embedded =\n                        InjectedProvider.isInsideWalletBrowser(jsBridgeKey);\n                }\n            });\n            return walletConfig;\n        });\n    }\n    mergeWalletsLists(list1, list2) {\n        const names = new Set(list1.concat(list2).map(item => item.name));\n        return [...names.values()].map(name => {\n            const list1Item = list1.find(item => item.name === name);\n            const list2Item = list2.find(item => item.name === name);\n            return Object.assign(Object.assign({}, (list1Item && Object.assign({}, list1Item))), (list2Item && Object.assign({}, list2Item)));\n        });\n    }\n    // eslint-disable-next-line complexity\n    isCorrectWalletConfigDTO(value) {\n        if (!value || !(typeof value === 'object')) {\n            return false;\n        }\n        const containsName = 'name' in value;\n        const containsAppName = 'app_name' in value;\n        const containsImage = 'image' in value;\n        const containsAbout = 'about_url' in value;\n        const containsPlatforms = 'platforms' in value;\n        if (!containsName ||\n            !containsImage ||\n            !containsAbout ||\n            !containsPlatforms ||\n            !containsAppName) {\n            return false;\n        }\n        if (!value.platforms ||\n            !Array.isArray(value.platforms) ||\n            !value.platforms.length) {\n            return false;\n        }\n        if (!('bridge' in value) ||\n            !Array.isArray(value.bridge) ||\n            !value.bridge.length) {\n            return false;\n        }\n        const bridge = value.bridge;\n        if (bridge.some(item => !item || typeof item !== 'object' || !('type' in item))) {\n            return false;\n        }\n        const sseBridge = bridge.find(item => item.type === 'sse');\n        if (sseBridge) {\n            if (!(typeof sseBridge === 'object' && 'url' in sseBridge) ||\n                !sseBridge.url ||\n                !value.universal_url) {\n                return false;\n            }\n        }\n        const jsBridge = bridge.find(item => item.type === 'js');\n        if (jsBridge) {\n            if (typeof jsBridge !== 'object' ||\n                !('key' in jsBridge) ||\n                !jsBridge.key) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\nfunction checkSendTransactionSupport(features, options) {\n    const supportsDeprecatedSendTransactionFeature = features.includes('SendTransaction');\n    const sendTransactionFeature = findFeature(features, 'SendTransaction');\n    const requiredFeature = {\n        minMessages: options.requiredMessagesNumber,\n        extraCurrencyRequired: options.requireExtraCurrencies\n    };\n    if (!supportsDeprecatedSendTransactionFeature && !sendTransactionFeature) {\n        throw new WalletNotSupportFeatureError(\"Wallet doesn't support SendTransaction feature.\", {\n            cause: { requiredFeature: { featureName: 'SendTransaction', value: requiredFeature } }\n        });\n    }\n    if (options.requireExtraCurrencies) {\n        if (!sendTransactionFeature || !sendTransactionFeature.extraCurrencySupported) {\n            throw new WalletNotSupportFeatureError(`Wallet is not able to handle such SendTransaction request. Extra currencies support is required.`, {\n                cause: {\n                    requiredFeature: { featureName: 'SendTransaction', value: requiredFeature }\n                }\n            });\n        }\n    }\n    if (sendTransactionFeature && sendTransactionFeature.maxMessages !== undefined) {\n        if (sendTransactionFeature.maxMessages < options.requiredMessagesNumber) {\n            throw new WalletNotSupportFeatureError(`Wallet is not able to handle such SendTransaction request. Max support messages number is ${sendTransactionFeature.maxMessages}, but ${options.requiredMessagesNumber} is required.`, {\n                cause: {\n                    requiredFeature: { featureName: 'SendTransaction', value: requiredFeature }\n                }\n            });\n        }\n        return;\n    }\n    logWarning(\"Connected wallet didn't provide information about max allowed messages in the SendTransaction request. Request may be rejected by the wallet.\");\n}\nfunction checkSignDataSupport(features, options) {\n    const signDataFeature = features.find(feature => feature && typeof feature === 'object' && feature.name === 'SignData');\n    if (!signDataFeature) {\n        throw new WalletNotSupportFeatureError(\"Wallet doesn't support SignData feature.\", {\n            cause: {\n                requiredFeature: {\n                    featureName: 'SignData',\n                    value: { types: options.requiredTypes }\n                }\n            }\n        });\n    }\n    const unsupportedTypes = options.requiredTypes.filter(requiredType => !signDataFeature.types.includes(requiredType));\n    if (unsupportedTypes.length) {\n        throw new WalletNotSupportFeatureError(`Wallet doesn't support required SignData types: ${unsupportedTypes.join(', ')}.`, {\n            cause: {\n                requiredFeature: { featureName: 'SignData', value: { types: unsupportedTypes } }\n            }\n        });\n    }\n}\nfunction checkRequiredWalletFeatures(features, walletsRequiredFeatures) {\n    if (typeof walletsRequiredFeatures !== 'object') {\n        return true;\n    }\n    const { sendTransaction, signData } = walletsRequiredFeatures;\n    if (sendTransaction) {\n        const feature = findFeature(features, 'SendTransaction');\n        if (!feature) {\n            return false;\n        }\n        if (!checkSendTransaction(feature, sendTransaction)) {\n            return false;\n        }\n    }\n    if (signData) {\n        const feature = findFeature(features, 'SignData');\n        if (!feature) {\n            return false;\n        }\n        if (!checkSignData(feature, signData)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction findFeature(features, requiredFeatureName) {\n    return features.find(f => f && typeof f === 'object' && f.name === requiredFeatureName);\n}\nfunction checkSendTransaction(feature, requiredFeature) {\n    const correctMessagesNumber = requiredFeature.minMessages === undefined ||\n        requiredFeature.minMessages <= feature.maxMessages;\n    const correctExtraCurrency = !requiredFeature.extraCurrencyRequired || feature.extraCurrencySupported;\n    return !!(correctMessagesNumber && correctExtraCurrency);\n}\nfunction checkSignData(feature, requiredFeature) {\n    return requiredFeature.types.every(requiredType => feature.types.includes(requiredType));\n}\n\n/**\n * Create a request version event.\n */\nfunction createRequestVersionEvent() {\n    return {\n        type: 'request-version'\n    };\n}\n/**\n * Create a response version event.\n * @param version\n */\nfunction createResponseVersionEvent(version) {\n    return {\n        type: 'response-version',\n        version: version\n    };\n}\n/**\n * Create a version info.\n * @param version\n */\nfunction createVersionInfo(version) {\n    return {\n        ton_connect_sdk_lib: version.ton_connect_sdk_lib,\n        ton_connect_ui_lib: version.ton_connect_ui_lib\n    };\n}\nfunction createConnectionInfo(version, wallet) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    const isTonProof = ((_a = wallet === null || wallet === void 0 ? void 0 : wallet.connectItems) === null || _a === void 0 ? void 0 : _a.tonProof) && 'proof' in wallet.connectItems.tonProof;\n    const authType = isTonProof ? 'ton_proof' : 'ton_addr';\n    return {\n        wallet_address: (_c = (_b = wallet === null || wallet === void 0 ? void 0 : wallet.account) === null || _b === void 0 ? void 0 : _b.address) !== null && _c !== void 0 ? _c : null,\n        wallet_type: (_d = wallet === null || wallet === void 0 ? void 0 : wallet.device.appName) !== null && _d !== void 0 ? _d : null,\n        wallet_version: (_e = wallet === null || wallet === void 0 ? void 0 : wallet.device.appVersion) !== null && _e !== void 0 ? _e : null,\n        auth_type: authType,\n        custom_data: Object.assign({ chain_id: (_g = (_f = wallet === null || wallet === void 0 ? void 0 : wallet.account) === null || _f === void 0 ? void 0 : _f.chain) !== null && _g !== void 0 ? _g : null, provider: (_h = wallet === null || wallet === void 0 ? void 0 : wallet.provider) !== null && _h !== void 0 ? _h : null }, createVersionInfo(version))\n    };\n}\n/**\n * Create a connection init event.\n */\nfunction createConnectionStartedEvent(version) {\n    return {\n        type: 'connection-started',\n        custom_data: createVersionInfo(version)\n    };\n}\n/**\n * Create a connection completed event.\n * @param version\n * @param wallet\n */\nfunction createConnectionCompletedEvent(version, wallet) {\n    return Object.assign({ type: 'connection-completed', is_success: true }, createConnectionInfo(version, wallet));\n}\n/**\n * Create a connection error event.\n * @param version\n * @param error_message\n * @param errorCode\n */\nfunction createConnectionErrorEvent(version, error_message, errorCode) {\n    return {\n        type: 'connection-error',\n        is_success: false,\n        error_message: error_message,\n        error_code: errorCode !== null && errorCode !== void 0 ? errorCode : null,\n        custom_data: createVersionInfo(version)\n    };\n}\n/**\n * Create a connection restoring started event.\n */\nfunction createConnectionRestoringStartedEvent(version) {\n    return {\n        type: 'connection-restoring-started',\n        custom_data: createVersionInfo(version)\n    };\n}\n/**\n * Create a connection restoring completed event.\n * @param version\n * @param wallet\n */\nfunction createConnectionRestoringCompletedEvent(version, wallet) {\n    return Object.assign({ type: 'connection-restoring-completed', is_success: true }, createConnectionInfo(version, wallet));\n}\n/**\n * Create a connection restoring error event.\n * @param version\n * @param errorMessage\n */\nfunction createConnectionRestoringErrorEvent(version, errorMessage) {\n    return {\n        type: 'connection-restoring-error',\n        is_success: false,\n        error_message: errorMessage,\n        custom_data: createVersionInfo(version)\n    };\n}\nfunction createTransactionInfo(wallet, transaction) {\n    var _a, _b, _c, _d;\n    return {\n        valid_until: (_a = String(transaction.validUntil)) !== null && _a !== void 0 ? _a : null,\n        from: (_d = (_b = transaction.from) !== null && _b !== void 0 ? _b : (_c = wallet === null || wallet === void 0 ? void 0 : wallet.account) === null || _c === void 0 ? void 0 : _c.address) !== null && _d !== void 0 ? _d : null,\n        messages: transaction.messages.map(message => {\n            var _a, _b;\n            return ({\n                address: (_a = message.address) !== null && _a !== void 0 ? _a : null,\n                amount: (_b = message.amount) !== null && _b !== void 0 ? _b : null\n            });\n        })\n    };\n}\n/**\n * Create a transaction init event.\n * @param version\n * @param wallet\n * @param transaction\n */\nfunction createTransactionSentForSignatureEvent(version, wallet, transaction) {\n    return Object.assign(Object.assign({ type: 'transaction-sent-for-signature' }, createConnectionInfo(version, wallet)), createTransactionInfo(wallet, transaction));\n}\n/**\n * Create a transaction signed event.\n * @param version\n * @param wallet\n * @param transaction\n * @param signedTransaction\n */\nfunction createTransactionSignedEvent(version, wallet, transaction, signedTransaction) {\n    return Object.assign(Object.assign({ type: 'transaction-signed', is_success: true, signed_transaction: signedTransaction.boc }, createConnectionInfo(version, wallet)), createTransactionInfo(wallet, transaction));\n}\n/**\n * Create a transaction error event.\n * @param version\n * @param wallet\n * @param transaction\n * @param errorMessage\n * @param errorCode\n */\nfunction createTransactionSigningFailedEvent(version, wallet, transaction, errorMessage, errorCode) {\n    return Object.assign(Object.assign({ type: 'transaction-signing-failed', is_success: false, error_message: errorMessage, error_code: errorCode !== null && errorCode !== void 0 ? errorCode : null }, createConnectionInfo(version, wallet)), createTransactionInfo(wallet, transaction));\n}\nfunction createDataSentForSignatureEvent(version, wallet, data) {\n    return Object.assign({ type: 'sign-data-request-initiated', data }, createConnectionInfo(version, wallet));\n}\nfunction createDataSignedEvent(version, wallet, data, signedData) {\n    return Object.assign({ type: 'sign-data-request-completed', is_success: true, data, signed_data: signedData }, createConnectionInfo(version, wallet));\n}\nfunction createDataSigningFailedEvent(version, wallet, data, errorMessage, errorCode) {\n    return Object.assign({ type: 'sign-data-request-failed', is_success: false, data, error_message: errorMessage, error_code: errorCode !== null && errorCode !== void 0 ? errorCode : null }, createConnectionInfo(version, wallet));\n}\n/**\n * Create a disconnect event.\n * @param version\n * @param wallet\n * @param scope\n * @returns\n */\nfunction createDisconnectionEvent(version, wallet, scope) {\n    return Object.assign({ type: 'disconnection', scope: scope }, createConnectionInfo(version, wallet));\n}\n\n/**\n * A concrete implementation of EventDispatcher that dispatches events to the browser window.\n */\nclass BrowserEventDispatcher {\n    constructor() {\n        /**\n         * The window object, possibly undefined in a server environment.\n         * @private\n         */\n        this.window = getWindow();\n    }\n    /**\n     * Dispatches an event with the given name and details to the browser window.\n     * @param eventName - The name of the event to dispatch.\n     * @param eventDetails - The details of the event to dispatch.\n     * @returns A promise that resolves when the event has been dispatched.\n     */\n    dispatchEvent(eventName, eventDetails) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const event = new CustomEvent(eventName, { detail: eventDetails });\n            (_a = this.window) === null || _a === void 0 ? void 0 : _a.dispatchEvent(event);\n        });\n    }\n    /**\n     * Adds an event listener to the browser window.\n     * @param eventName - The name of the event to listen for.\n     * @param listener - The listener to add.\n     * @param options - The options for the listener.\n     * @returns A function that removes the listener.\n     */\n    addEventListener(eventName, listener, options) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            (_a = this.window) === null || _a === void 0 ? void 0 : _a.addEventListener(eventName, listener, options);\n            return () => {\n                var _a;\n                return (_a = this.window) === null || _a === void 0 ? void 0 : _a.removeEventListener(eventName, listener);\n            };\n        });\n    }\n}\n\n/**\n * Tracker for TonConnect user actions, such as transaction signing, connection, etc.\n *\n * List of events:\n *  * `connection-started`: when a user starts connecting a wallet.\n *  * `connection-completed`: when a user successfully connected a wallet.\n *  * `connection-error`: when a user cancels a connection or there is an error during the connection process.\n *  * `connection-restoring-started`: when the dApp starts restoring a connection.\n *  * `connection-restoring-completed`: when the dApp successfully restores a connection.\n *  * `connection-restoring-error`: when the dApp fails to restore a connection.\n *  * `disconnection`: when a user starts disconnecting a wallet.\n *  * `transaction-sent-for-signature`: when a user sends a transaction for signature.\n *  * `transaction-signed`: when a user successfully signs a transaction.\n *  * `transaction-signing-failed`: when a user cancels transaction signing or there is an error during the signing process.\n *  * `sign-data-request-initiated`: when a user sends data for signature.\n *  * `sign-data-request-completed`: when a user successfully signs data.\n *  * `sign-data-request-failed`: when a user cancels data signing or there is an error during the signing process.\n *\n * If you want to track user actions, you can subscribe to the window events with prefix `ton-connect-`:\n *\n * @example\n * window.addEventListener('ton-connect-transaction-sent-for-signature', (event) => {\n *    console.log('Transaction init', event.detail);\n * });\n *\n * @internal\n */\nclass TonConnectTracker {\n    constructor(options) {\n        var _a;\n        /**\n         * Event prefix for user actions.\n         * @private\n         */\n        this.eventPrefix = 'ton-connect-';\n        /**\n         * TonConnect UI version.\n         */\n        this.tonConnectUiVersion = null;\n        this.eventDispatcher = (_a = options === null || options === void 0 ? void 0 : options.eventDispatcher) !== null && _a !== void 0 ? _a : new BrowserEventDispatcher();\n        this.tonConnectSdkVersion = options.tonConnectSdkVersion;\n        this.init().catch();\n    }\n    /**\n     * Version of the library.\n     */\n    get version() {\n        return createVersionInfo({\n            ton_connect_sdk_lib: this.tonConnectSdkVersion,\n            ton_connect_ui_lib: this.tonConnectUiVersion\n        });\n    }\n    /**\n     * Called once when the tracker is created and request version other libraries.\n     */\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.setRequestVersionHandler();\n                this.tonConnectUiVersion = yield this.requestTonConnectUiVersion();\n            }\n            catch (e) { }\n        });\n    }\n    /**\n     * Set request version handler.\n     * @private\n     */\n    setRequestVersionHandler() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.eventDispatcher.addEventListener('ton-connect-request-version', () => __awaiter(this, void 0, void 0, function* () {\n                yield this.eventDispatcher.dispatchEvent('ton-connect-response-version', createResponseVersionEvent(this.tonConnectSdkVersion));\n            }));\n        });\n    }\n    /**\n     * Request TonConnect UI version.\n     * @private\n     */\n    requestTonConnectUiVersion() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    yield this.eventDispatcher.addEventListener('ton-connect-ui-response-version', (event) => {\n                        resolve(event.detail.version);\n                    }, { once: true });\n                    yield this.eventDispatcher.dispatchEvent('ton-connect-ui-request-version', createRequestVersionEvent());\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    /**\n     * Emit user action event to the window.\n     * @param eventDetails\n     * @private\n     */\n    dispatchUserActionEvent(eventDetails) {\n        try {\n            this.eventDispatcher\n                .dispatchEvent(`${this.eventPrefix}${eventDetails.type}`, eventDetails)\n                .catch();\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection init event.\n     * @param args\n     */\n    trackConnectionStarted(...args) {\n        try {\n            const event = createConnectionStartedEvent(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection success event.\n     * @param args\n     */\n    trackConnectionCompleted(...args) {\n        try {\n            const event = createConnectionCompletedEvent(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection error event.\n     * @param args\n     */\n    trackConnectionError(...args) {\n        try {\n            const event = createConnectionErrorEvent(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection restoring init event.\n     * @param args\n     */\n    trackConnectionRestoringStarted(...args) {\n        try {\n            const event = createConnectionRestoringStartedEvent(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection restoring success event.\n     * @param args\n     */\n    trackConnectionRestoringCompleted(...args) {\n        try {\n            const event = createConnectionRestoringCompletedEvent(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection restoring error event.\n     * @param args\n     */\n    trackConnectionRestoringError(...args) {\n        try {\n            const event = createConnectionRestoringErrorEvent(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track disconnect event.\n     * @param args\n     */\n    trackDisconnection(...args) {\n        try {\n            const event = createDisconnectionEvent(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track transaction init event.\n     * @param args\n     */\n    trackTransactionSentForSignature(...args) {\n        try {\n            const event = createTransactionSentForSignatureEvent(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track transaction signed event.\n     * @param args\n     */\n    trackTransactionSigned(...args) {\n        try {\n            const event = createTransactionSignedEvent(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track transaction error event.\n     * @param args\n     */\n    trackTransactionSigningFailed(...args) {\n        try {\n            const event = createTransactionSigningFailedEvent(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track sign data init event.\n     * @param args\n     */\n    trackDataSentForSignature(...args) {\n        try {\n            const event = createDataSentForSignatureEvent(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track sign data success event.\n     * @param args\n     */\n    trackDataSigned(...args) {\n        try {\n            const event = createDataSignedEvent(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track sign data error event.\n     * @param args\n     */\n    trackDataSigningFailed(...args) {\n        try {\n            const event = createDataSigningFailedEvent(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n}\n\nconst tonConnectSdkVersion = \"3.2.0\";\n\nclass TonConnect {\n    constructor(options) {\n        this.walletsList = new WalletsListManager();\n        this._wallet = null;\n        this.provider = null;\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.dappSettings = {\n            manifestUrl: (options === null || options === void 0 ? void 0 : options.manifestUrl) || getWebPageManifest(),\n            storage: (options === null || options === void 0 ? void 0 : options.storage) || new DefaultStorage()\n        };\n        this.walletsRequiredFeatures = options === null || options === void 0 ? void 0 : options.walletsRequiredFeatures;\n        this.walletsList = new WalletsListManager({\n            walletsListSource: options === null || options === void 0 ? void 0 : options.walletsListSource,\n            cacheTTLMs: options === null || options === void 0 ? void 0 : options.walletsListCacheTTLMs\n        });\n        this.tracker = new TonConnectTracker({\n            eventDispatcher: options === null || options === void 0 ? void 0 : options.eventDispatcher,\n            tonConnectSdkVersion: tonConnectSdkVersion\n        });\n        if (!this.dappSettings.manifestUrl) {\n            throw new DappMetadataError('Dapp tonconnect-manifest.json must be specified if window.location.origin is undefined. See more https://github.com/ton-connect/docs/blob/main/requests-responses.md#app-manifest');\n        }\n        this.bridgeConnectionStorage = new BridgeConnectionStorage(this.dappSettings.storage);\n        if (!(options === null || options === void 0 ? void 0 : options.disableAutoPauseConnection)) {\n            this.addWindowFocusAndBlurSubscriptions();\n        }\n    }\n    /**\n     * Returns available wallets list.\n     */\n    static getWallets() {\n        return this.walletsList.getWallets();\n    }\n    /**\n     * Shows if the wallet is connected right now.\n     */\n    get connected() {\n        return this._wallet !== null;\n    }\n    /**\n     * Current connected account or null if no account is connected.\n     */\n    get account() {\n        var _a;\n        return ((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.account) || null;\n    }\n    /**\n     * Current connected wallet or null if no account is connected.\n     */\n    get wallet() {\n        return this._wallet;\n    }\n    set wallet(value) {\n        this._wallet = value;\n        this.statusChangeSubscriptions.forEach(callback => callback(this._wallet));\n    }\n    /**\n     * Returns available wallets list.\n     */\n    getWallets() {\n        return this.walletsList.getWallets();\n    }\n    /**\n     * Allows to subscribe to connection status changes and handle connection errors.\n     * @param callback will be called after connections status changes with actual wallet or null.\n     * @param errorsHandler (optional) will be called with some instance of TonConnectError when connect error is received.\n     * @returns unsubscribe callback.\n     */\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    connect(wallet, requestOrOptions) {\n        var _a, _b;\n        // TODO: remove deprecated method\n        const options = {};\n        if (typeof requestOrOptions === 'object' && 'tonProof' in requestOrOptions) {\n            options.request = requestOrOptions;\n        }\n        if (typeof requestOrOptions === 'object' &&\n            ('openingDeadlineMS' in requestOrOptions ||\n                'signal' in requestOrOptions ||\n                'request' in requestOrOptions)) {\n            options.request = requestOrOptions === null || requestOrOptions === void 0 ? void 0 : requestOrOptions.request;\n            options.openingDeadlineMS = requestOrOptions === null || requestOrOptions === void 0 ? void 0 : requestOrOptions.openingDeadlineMS;\n            options.signal = requestOrOptions === null || requestOrOptions === void 0 ? void 0 : requestOrOptions.signal;\n        }\n        if (this.connected) {\n            throw new WalletAlreadyConnectedError();\n        }\n        const abortController = createAbortController(options === null || options === void 0 ? void 0 : options.signal);\n        (_a = this.abortController) === null || _a === void 0 ? void 0 : _a.abort();\n        this.abortController = abortController;\n        if (abortController.signal.aborted) {\n            throw new TonConnectError('Connection was aborted');\n        }\n        (_b = this.provider) === null || _b === void 0 ? void 0 : _b.closeConnection();\n        this.provider = this.createProvider(wallet);\n        abortController.signal.addEventListener('abort', () => {\n            var _a;\n            (_a = this.provider) === null || _a === void 0 ? void 0 : _a.closeConnection();\n            this.provider = null;\n        });\n        this.tracker.trackConnectionStarted();\n        return this.provider.connect(this.createConnectRequest(options === null || options === void 0 ? void 0 : options.request), {\n            openingDeadlineMS: options === null || options === void 0 ? void 0 : options.openingDeadlineMS,\n            signal: abortController.signal\n        });\n    }\n    /**\n     * Try to restore existing session and reconnect to the corresponding wallet. Call it immediately when your app is loaded.\n     */\n    restoreConnection(options) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            this.tracker.trackConnectionRestoringStarted();\n            const abortController = createAbortController(options === null || options === void 0 ? void 0 : options.signal);\n            (_a = this.abortController) === null || _a === void 0 ? void 0 : _a.abort();\n            this.abortController = abortController;\n            if (abortController.signal.aborted) {\n                this.tracker.trackConnectionRestoringError('Connection restoring was aborted');\n                return;\n            }\n            // TODO: potentially race condition here\n            const [bridgeConnectionType, embeddedWallet] = yield Promise.all([\n                this.bridgeConnectionStorage.storedConnectionType(),\n                this.walletsList.getEmbeddedWallet()\n            ]);\n            if (abortController.signal.aborted) {\n                this.tracker.trackConnectionRestoringError('Connection restoring was aborted');\n                return;\n            }\n            let provider = null;\n            try {\n                switch (bridgeConnectionType) {\n                    case 'http':\n                        provider = yield BridgeProvider.fromStorage(this.dappSettings.storage);\n                        break;\n                    case 'injected':\n                        provider = yield InjectedProvider.fromStorage(this.dappSettings.storage);\n                        break;\n                    default:\n                        if (embeddedWallet) {\n                            provider = this.createProvider(embeddedWallet);\n                        }\n                        else {\n                            return;\n                        }\n                }\n            }\n            catch (_c) {\n                this.tracker.trackConnectionRestoringError('Provider is not restored');\n                yield this.bridgeConnectionStorage.removeConnection();\n                provider === null || provider === void 0 ? void 0 : provider.closeConnection();\n                provider = null;\n                return;\n            }\n            if (abortController.signal.aborted) {\n                provider === null || provider === void 0 ? void 0 : provider.closeConnection();\n                this.tracker.trackConnectionRestoringError('Connection restoring was aborted');\n                return;\n            }\n            if (!provider) {\n                logError('Provider is not restored');\n                this.tracker.trackConnectionRestoringError('Provider is not restored');\n                return;\n            }\n            (_b = this.provider) === null || _b === void 0 ? void 0 : _b.closeConnection();\n            this.provider = provider;\n            provider.listen(this.walletEventsListener.bind(this));\n            const onAbortRestore = () => {\n                this.tracker.trackConnectionRestoringError('Connection restoring was aborted');\n                provider === null || provider === void 0 ? void 0 : provider.closeConnection();\n                provider = null;\n            };\n            abortController.signal.addEventListener('abort', onAbortRestore);\n            const restoreConnectionTask = callForSuccess((_options) => __awaiter(this, void 0, void 0, function* () {\n                yield (provider === null || provider === void 0 ? void 0 : provider.restoreConnection({\n                    openingDeadlineMS: options === null || options === void 0 ? void 0 : options.openingDeadlineMS,\n                    signal: _options.signal\n                }));\n                abortController.signal.removeEventListener('abort', onAbortRestore);\n                if (this.connected) {\n                    this.tracker.trackConnectionRestoringCompleted(this.wallet);\n                }\n                else {\n                    this.tracker.trackConnectionRestoringError('Connection restoring failed');\n                }\n            }), {\n                attempts: Number.MAX_SAFE_INTEGER,\n                delayMs: 2000,\n                signal: options === null || options === void 0 ? void 0 : options.signal\n            });\n            const restoreConnectionTimeout = new Promise(resolve => setTimeout(() => resolve(), 12000) // connection deadline\n            );\n            return Promise.race([restoreConnectionTask, restoreConnectionTimeout]);\n        });\n    }\n    sendTransaction(transaction, optionsOrOnRequestSent) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: remove deprecated method\n            const options = {};\n            if (typeof optionsOrOnRequestSent === 'function') {\n                options.onRequestSent = optionsOrOnRequestSent;\n            }\n            else {\n                options.onRequestSent = optionsOrOnRequestSent === null || optionsOrOnRequestSent === void 0 ? void 0 : optionsOrOnRequestSent.onRequestSent;\n                options.signal = optionsOrOnRequestSent === null || optionsOrOnRequestSent === void 0 ? void 0 : optionsOrOnRequestSent.signal;\n            }\n            const abortController = createAbortController(options === null || options === void 0 ? void 0 : options.signal);\n            if (abortController.signal.aborted) {\n                throw new TonConnectError('Transaction sending was aborted');\n            }\n            this.checkConnection();\n            const requiredMessagesNumber = transaction.messages.length;\n            const requireExtraCurrencies = transaction.messages.some(m => m.extraCurrency && Object.keys(m.extraCurrency).length > 0);\n            checkSendTransactionSupport(this.wallet.device.features, {\n                requiredMessagesNumber,\n                requireExtraCurrencies\n            });\n            this.tracker.trackTransactionSentForSignature(this.wallet, transaction);\n            const { validUntil, messages } = transaction, tx = __rest(transaction, [\"validUntil\", \"messages\"]);\n            const from = transaction.from || this.account.address;\n            const network = transaction.network || this.account.chain;\n            const response = yield this.provider.sendRequest(sendTransactionParser.convertToRpcRequest(Object.assign(Object.assign({}, tx), { from,\n                network, valid_until: validUntil, messages: messages.map((_a) => {\n                    var { extraCurrency } = _a, msg = __rest(_a, [\"extraCurrency\"]);\n                    return (Object.assign(Object.assign({}, msg), { extra_currency: extraCurrency }));\n                }) })), { onRequestSent: options.onRequestSent, signal: abortController.signal });\n            if (sendTransactionParser.isError(response)) {\n                this.tracker.trackTransactionSigningFailed(this.wallet, transaction, response.error.message, response.error.code);\n                return sendTransactionParser.parseAndThrowError(response);\n            }\n            const result = sendTransactionParser.convertFromRpcResponse(response);\n            this.tracker.trackTransactionSigned(this.wallet, transaction, result);\n            return result;\n        });\n    }\n    signData(data, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const abortController = createAbortController(options === null || options === void 0 ? void 0 : options.signal);\n            if (abortController.signal.aborted) {\n                throw new TonConnectError('data sending was aborted');\n            }\n            this.checkConnection();\n            checkSignDataSupport(this.wallet.device.features, { requiredTypes: [data.type] });\n            this.tracker.trackDataSentForSignature(this.wallet, data);\n            const from = data.from || this.account.address;\n            const network = data.network || this.account.chain;\n            const response = yield this.provider.sendRequest(signDataParser.convertToRpcRequest(Object.assign(Object.assign({}, data), { from,\n                network })), { onRequestSent: options === null || options === void 0 ? void 0 : options.onRequestSent, signal: abortController.signal });\n            if (signDataParser.isError(response)) {\n                this.tracker.trackDataSigningFailed(this.wallet, data, response.error.message, response.error.code);\n                return signDataParser.parseAndThrowError(response);\n            }\n            const result = signDataParser.convertFromRpcResponse(response);\n            this.tracker.trackDataSigned(this.wallet, data, result);\n            return result;\n        });\n    }\n    /**\n     * Disconnect form thw connected wallet and drop current session.\n     */\n    disconnect(options) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.connected) {\n                throw new WalletNotConnectedError();\n            }\n            const abortController = createAbortController(options === null || options === void 0 ? void 0 : options.signal);\n            const prevAbortController = this.abortController;\n            this.abortController = abortController;\n            if (abortController.signal.aborted) {\n                throw new TonConnectError('Disconnect was aborted');\n            }\n            this.onWalletDisconnected('dapp');\n            yield ((_a = this.provider) === null || _a === void 0 ? void 0 : _a.disconnect({\n                signal: abortController.signal\n            }));\n            prevAbortController === null || prevAbortController === void 0 ? void 0 : prevAbortController.abort();\n        });\n    }\n    /**\n     * Pause bridge HTTP connection. Might be helpful, if you want to pause connections while browser tab is unfocused,\n     * or if you use SDK with NodeJS and want to save server resources.\n     */\n    pauseConnection() {\n        var _a;\n        if (((_a = this.provider) === null || _a === void 0 ? void 0 : _a.type) !== 'http') {\n            return;\n        }\n        this.provider.pause();\n    }\n    /**\n     * Unpause bridge HTTP connection if it is paused.\n     */\n    unPauseConnection() {\n        var _a;\n        if (((_a = this.provider) === null || _a === void 0 ? void 0 : _a.type) !== 'http') {\n            return Promise.resolve();\n        }\n        return this.provider.unPause();\n    }\n    addWindowFocusAndBlurSubscriptions() {\n        const document = getDocument();\n        if (!document) {\n            return;\n        }\n        try {\n            document.addEventListener('visibilitychange', () => {\n                if (document.hidden) {\n                    this.pauseConnection();\n                }\n                else {\n                    this.unPauseConnection().catch();\n                }\n            });\n        }\n        catch (e) {\n            logError('Cannot subscribe to the document.visibilitychange: ', e);\n        }\n    }\n    createProvider(wallet) {\n        let provider;\n        if (!Array.isArray(wallet) && isWalletConnectionSourceJS(wallet)) {\n            provider = new InjectedProvider(this.dappSettings.storage, wallet.jsBridgeKey);\n        }\n        else {\n            provider = new BridgeProvider(this.dappSettings.storage, wallet);\n        }\n        provider.listen(this.walletEventsListener.bind(this));\n        return provider;\n    }\n    walletEventsListener(e) {\n        switch (e.event) {\n            case 'connect':\n                this.onWalletConnected(e.payload);\n                break;\n            case 'connect_error':\n                this.tracker.trackConnectionError(e.payload.message, e.payload.code);\n                const walletError = connectErrorsParser.parseError(e.payload);\n                this.onWalletConnectError(walletError);\n                break;\n            case 'disconnect':\n                this.onWalletDisconnected('wallet');\n        }\n    }\n    onWalletConnected(connectEvent) {\n        var _a;\n        const tonAccountItem = connectEvent.items.find(item => item.name === 'ton_addr');\n        const tonProofItem = connectEvent.items.find(item => item.name === 'ton_proof');\n        if (!tonAccountItem) {\n            throw new TonConnectError('ton_addr connection item was not found');\n        }\n        const hasRequiredFeatures = checkRequiredWalletFeatures(connectEvent.device.features, this.walletsRequiredFeatures);\n        if (!hasRequiredFeatures) {\n            (_a = this.provider) === null || _a === void 0 ? void 0 : _a.disconnect();\n            this.onWalletConnectError(new WalletMissingRequiredFeaturesError('Wallet does not support required features', { cause: { connectEvent } }));\n            return;\n        }\n        const wallet = {\n            device: connectEvent.device,\n            provider: this.provider.type,\n            account: {\n                address: tonAccountItem.address,\n                chain: tonAccountItem.network,\n                walletStateInit: tonAccountItem.walletStateInit,\n                publicKey: tonAccountItem.publicKey\n            }\n        };\n        if (tonProofItem) {\n            let tonProof = undefined;\n            try {\n                if ('proof' in tonProofItem) { // success\n                    tonProof = {\n                        name: 'ton_proof',\n                        proof: {\n                            timestamp: tonProofItem.proof.timestamp,\n                            domain: {\n                                lengthBytes: tonProofItem.proof.domain.lengthBytes,\n                                value: tonProofItem.proof.domain.value,\n                            },\n                            payload: tonProofItem.proof.payload,\n                            signature: tonProofItem.proof.signature,\n                        }\n                    };\n                }\n                else if ('error' in tonProofItem) { // error\n                    tonProof = {\n                        name: 'ton_proof',\n                        error: {\n                            code: tonProofItem.error.code,\n                            message: tonProofItem.error.message,\n                        }\n                    };\n                }\n                else {\n                    throw new TonConnectError('Invalid data format');\n                }\n            }\n            catch (e) {\n                tonProof = {\n                    name: 'ton_proof',\n                    error: {\n                        code: _tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.CONNECT_ITEM_ERROR_CODES.UNKNOWN_ERROR,\n                        message: 'Invalid data format'\n                    }\n                };\n            }\n            wallet.connectItems = { tonProof };\n        }\n        this.wallet = wallet;\n        this.tracker.trackConnectionCompleted(wallet);\n    }\n    onWalletConnectError(error) {\n        this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        logDebug(error);\n        if (error instanceof ManifestNotFoundError || error instanceof ManifestContentErrorError) {\n            logError(error);\n            throw error;\n        }\n    }\n    onWalletDisconnected(scope) {\n        this.tracker.trackDisconnection(this.wallet, scope);\n        this.wallet = null;\n    }\n    checkConnection() {\n        if (!this.connected) {\n            throw new WalletNotConnectedError();\n        }\n    }\n    createConnectRequest(request) {\n        const items = [\n            {\n                name: 'ton_addr'\n            }\n        ];\n        if (request === null || request === void 0 ? void 0 : request.tonProof) {\n            items.push({\n                name: 'ton_proof',\n                payload: request.tonProof\n            });\n        }\n        return {\n            manifestUrl: this.dappSettings.manifestUrl,\n            items\n        };\n    }\n}\nTonConnect.walletsList = new WalletsListManager();\n/**\n * Check if specified wallet is injected and available to use with the app.\n * @param walletJSKey target wallet's js bridge key.\n */\nTonConnect.isWalletInjected = (walletJSKey) => InjectedProvider.isWalletInjected(walletJSKey);\n/**\n * Check if the app is opened inside specified wallet's browser.\n * @param walletJSKey target wallet's js bridge key.\n */\nTonConnect.isInsideWalletBrowser = (walletJSKey) => InjectedProvider.isInsideWalletBrowser(walletJSKey);\n\nconst noBounceableTag = 0x51;\nconst testOnlyTag = 0x80;\n/**\n * Converts raw TON address to no-bounceable user-friendly format. [See details]{@link https://ton.org/docs/learn/overviews/addresses#user-friendly-address}\n * @param hexAddress raw TON address formatted as \"0:<hex string without 0x>\".\n * @param [testOnly=false] convert address to test-only form. [See details]{@link https://ton.org/docs/learn/overviews/addresses#user-friendly-address}\n */\nfunction toUserFriendlyAddress(hexAddress, testOnly = false) {\n    const { wc, hex } = parseHexAddress(hexAddress);\n    let tag = noBounceableTag;\n    if (testOnly) {\n        tag |= testOnlyTag;\n    }\n    const addr = new Int8Array(34);\n    addr[0] = tag;\n    addr[1] = wc;\n    addr.set(hex, 2);\n    const addressWithChecksum = new Uint8Array(36);\n    addressWithChecksum.set(addr);\n    addressWithChecksum.set(crc16(addr), 34);\n    let addressBase64 = _tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.Base64.encode(addressWithChecksum);\n    return addressBase64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\nfunction parseHexAddress(hexAddress) {\n    if (!hexAddress.includes(':')) {\n        throw new WrongAddressError(`Wrong address ${hexAddress}. Address must include \":\".`);\n    }\n    const parts = hexAddress.split(':');\n    if (parts.length !== 2) {\n        throw new WrongAddressError(`Wrong address ${hexAddress}. Address must include \":\" only once.`);\n    }\n    const wc = parseInt(parts[0]);\n    if (wc !== 0 && wc !== -1) {\n        throw new WrongAddressError(`Wrong address ${hexAddress}. WC must be eq 0 or -1, but ${wc} received.`);\n    }\n    const hex = parts[1];\n    if ((hex === null || hex === void 0 ? void 0 : hex.length) !== 64) {\n        throw new WrongAddressError(`Wrong address ${hexAddress}. Hex part must be 64bytes length, but ${hex === null || hex === void 0 ? void 0 : hex.length} received.`);\n    }\n    return {\n        wc,\n        hex: hexToBytes(hex)\n    };\n}\nfunction crc16(data) {\n    const poly = 0x1021;\n    let reg = 0;\n    const message = new Uint8Array(data.length + 2);\n    message.set(data);\n    for (let byte of message) {\n        let mask = 0x80;\n        while (mask > 0) {\n            reg <<= 1;\n            if (byte & mask) {\n                reg += 1;\n            }\n            mask >>= 1;\n            if (reg > 0xffff) {\n                reg &= 0xffff;\n                reg ^= poly;\n            }\n        }\n    }\n    return new Uint8Array([Math.floor(reg / 256), reg % 256]);\n}\nconst toByteMap = {};\nfor (let ord = 0; ord <= 0xff; ord++) {\n    let s = ord.toString(16);\n    if (s.length < 2) {\n        s = '0' + s;\n    }\n    toByteMap[s] = ord;\n}\nfunction hexToBytes(hex) {\n    hex = hex.toLowerCase();\n    const length2 = hex.length;\n    if (length2 % 2 !== 0) {\n        throw new ParseHexError('Hex string must have length a multiple of 2: ' + hex);\n    }\n    const length = length2 / 2;\n    const result = new Uint8Array(length);\n    for (let i = 0; i < length; i++) {\n        const doubled = i * 2;\n        const hexSubstring = hex.substring(doubled, doubled + 2);\n        if (!toByteMap.hasOwnProperty(hexSubstring)) {\n            throw new ParseHexError('Invalid hex character: ' + hexSubstring);\n        }\n        result[i] = toByteMap[hexSubstring];\n    }\n    return result;\n}\n\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@tonconnect+sdk@3.2.0/node_modules/@tonconnect/sdk/lib/esm/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/@tonconnect+ui-react@2.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@tonconnect/ui-react/lib/index.mjs":
/*!***************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@tonconnect+ui-react@2.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@tonconnect/ui-react/lib/index.mjs ***!
  \***************************************************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BadRequestError: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.BadRequestError; },\n/* harmony export */   BrowserEventDispatcher: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.BrowserEventDispatcher; },\n/* harmony export */   CHAIN: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.CHAIN; },\n/* harmony export */   CONNECT_EVENT_ERROR_CODES: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.CONNECT_EVENT_ERROR_CODES; },\n/* harmony export */   CONNECT_ITEM_ERROR_CODES: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.CONNECT_ITEM_ERROR_CODES; },\n/* harmony export */   FetchWalletsError: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.FetchWalletsError; },\n/* harmony export */   LocalstorageNotFoundError: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.LocalstorageNotFoundError; },\n/* harmony export */   ParseHexError: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.ParseHexError; },\n/* harmony export */   SEND_TRANSACTION_ERROR_CODES: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.SEND_TRANSACTION_ERROR_CODES; },\n/* harmony export */   SIGN_DATA_ERROR_CODES: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.SIGN_DATA_ERROR_CODES; },\n/* harmony export */   THEME: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.THEME; },\n/* harmony export */   TonConnect: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.TonConnect; },\n/* harmony export */   TonConnectButton: function() { return /* binding */ TonConnectButton$1; },\n/* harmony export */   TonConnectError: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.TonConnectError; },\n/* harmony export */   TonConnectProviderNotSetError: function() { return /* binding */ TonConnectProviderNotSetError; },\n/* harmony export */   TonConnectUI: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.TonConnectUI; },\n/* harmony export */   TonConnectUIContext: function() { return /* binding */ TonConnectUIContext; },\n/* harmony export */   TonConnectUIError: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.TonConnectUIError; },\n/* harmony export */   TonConnectUIProvider: function() { return /* binding */ TonConnectUIProvider$1; },\n/* harmony export */   TonConnectUIReactError: function() { return /* binding */ TonConnectUIReactError; },\n/* harmony export */   UnknownAppError: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.UnknownAppError; },\n/* harmony export */   UnknownError: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.UnknownError; },\n/* harmony export */   UserRejectsError: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.UserRejectsError; },\n/* harmony export */   WalletAlreadyConnectedError: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.WalletAlreadyConnectedError; },\n/* harmony export */   WalletMissingRequiredFeaturesError: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.WalletMissingRequiredFeaturesError; },\n/* harmony export */   WalletNotConnectedError: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.WalletNotConnectedError; },\n/* harmony export */   WalletNotInjectedError: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.WalletNotInjectedError; },\n/* harmony export */   WalletNotSupportFeatureError: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.WalletNotSupportFeatureError; },\n/* harmony export */   WalletsListManager: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.WalletsListManager; },\n/* harmony export */   WrongAddressError: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.WrongAddressError; },\n/* harmony export */   checkRequiredWalletFeatures: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.checkRequiredWalletFeatures; },\n/* harmony export */   createConnectionCompletedEvent: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.createConnectionCompletedEvent; },\n/* harmony export */   createConnectionErrorEvent: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.createConnectionErrorEvent; },\n/* harmony export */   createConnectionRestoringCompletedEvent: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.createConnectionRestoringCompletedEvent; },\n/* harmony export */   createConnectionRestoringErrorEvent: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.createConnectionRestoringErrorEvent; },\n/* harmony export */   createConnectionRestoringStartedEvent: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.createConnectionRestoringStartedEvent; },\n/* harmony export */   createConnectionStartedEvent: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.createConnectionStartedEvent; },\n/* harmony export */   createDataSentForSignatureEvent: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.createDataSentForSignatureEvent; },\n/* harmony export */   createDataSignedEvent: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.createDataSignedEvent; },\n/* harmony export */   createDataSigningFailedEvent: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.createDataSigningFailedEvent; },\n/* harmony export */   createDisconnectionEvent: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.createDisconnectionEvent; },\n/* harmony export */   createRequestVersionEvent: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.createRequestVersionEvent; },\n/* harmony export */   createResponseVersionEvent: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.createResponseVersionEvent; },\n/* harmony export */   createTransactionSentForSignatureEvent: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.createTransactionSentForSignatureEvent; },\n/* harmony export */   createTransactionSignedEvent: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.createTransactionSignedEvent; },\n/* harmony export */   createTransactionSigningFailedEvent: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.createTransactionSigningFailedEvent; },\n/* harmony export */   createVersionInfo: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.createVersionInfo; },\n/* harmony export */   encodeTelegramUrlParameters: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.encodeTelegramUrlParameters; },\n/* harmony export */   isTelegramUrl: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.isTelegramUrl; },\n/* harmony export */   isWalletInfoCurrentlyEmbedded: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.isWalletInfoCurrentlyEmbedded; },\n/* harmony export */   isWalletInfoCurrentlyInjected: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.isWalletInfoCurrentlyInjected; },\n/* harmony export */   isWalletInfoInjectable: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.isWalletInfoInjectable; },\n/* harmony export */   isWalletInfoInjected: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.isWalletInfoInjected; },\n/* harmony export */   isWalletInfoRemote: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.isWalletInfoRemote; },\n/* harmony export */   toUserFriendlyAddress: function() { return /* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.toUserFriendlyAddress; },\n/* harmony export */   useIsConnectionRestored: function() { return /* binding */ useIsConnectionRestored; },\n/* harmony export */   useTonAddress: function() { return /* binding */ useTonAddress; },\n/* harmony export */   useTonConnectModal: function() { return /* binding */ useTonConnectModal; },\n/* harmony export */   useTonConnectUI: function() { return /* binding */ useTonConnectUI; },\n/* harmony export */   useTonWallet: function() { return /* binding */ useTonWallet; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tonconnect/ui */ \"(app-pages-browser)/./node_modules/.pnpm/@tonconnect+ui@2.2.0/node_modules/@tonconnect/ui/lib/index.mjs\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\n\n\n\n\nfunction isClientSide() {\n  return typeof window !== \"undefined\";\n}\nfunction isServerSide() {\n  return !isClientSide();\n}\nconst TonConnectUIContext = (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(null);\nlet tonConnectUI = null;\nconst TonConnectUIProvider = (_a) => {\n  var _b = _a, {\n    children\n  } = _b, options = __objRest(_b, [\n    \"children\"\n  ]);\n  if (isClientSide() && !tonConnectUI) {\n    tonConnectUI = new _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.TonConnectUI(options);\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(TonConnectUIContext.Provider, { value: tonConnectUI, children });\n};\nconst TonConnectUIProvider$1 = (0,react__WEBPACK_IMPORTED_MODULE_1__.memo)(TonConnectUIProvider);\nclass TonConnectUIReactError extends _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.TonConnectUIError {\n  constructor(...args) {\n    super(...args);\n    Object.setPrototypeOf(this, TonConnectUIReactError.prototype);\n  }\n}\nclass TonConnectProviderNotSetError extends TonConnectUIReactError {\n  constructor(...args) {\n    super(...args);\n    Object.setPrototypeOf(this, TonConnectProviderNotSetError.prototype);\n  }\n}\nfunction checkProvider(provider) {\n  if (!provider) {\n    throw new TonConnectProviderNotSetError(\n      \"You should add <TonConnectUIProvider> on the top of the app to use TonConnect\"\n    );\n  }\n  return true;\n}\nfunction useTonConnectUI() {\n  const tonConnectUI2 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(TonConnectUIContext);\n  const setOptions = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (options) => {\n      if (tonConnectUI2) {\n        tonConnectUI2.uiOptions = options;\n      }\n    },\n    [tonConnectUI2]\n  );\n  if (isServerSide()) {\n    return [null, () => {\n    }];\n  }\n  checkProvider(tonConnectUI2);\n  return [tonConnectUI2, setOptions];\n}\nconst buttonRootId = \"ton-connect-button\";\nconst TonConnectButton = ({ className, style }) => {\n  const [_, setOptions] = useTonConnectUI();\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    setOptions({ buttonRootId });\n    return () => setOptions({ buttonRootId: null });\n  }, [setOptions]);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"div\",\n    {\n      id: buttonRootId,\n      className,\n      style: __spreadValues({ width: \"fit-content\" }, style)\n    }\n  );\n};\nconst TonConnectButton$1 = (0,react__WEBPACK_IMPORTED_MODULE_1__.memo)(TonConnectButton);\nfunction useTonWallet() {\n  const [tonConnectUI2] = useTonConnectUI();\n  const [wallet, setWallet] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\n    (tonConnectUI2 == null ? void 0 : tonConnectUI2.wallet) || null\n  );\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (tonConnectUI2) {\n      setWallet(tonConnectUI2.wallet);\n      return tonConnectUI2.onStatusChange((value) => {\n        setWallet(value);\n      });\n    }\n  }, [tonConnectUI2]);\n  return wallet;\n}\nfunction useTonAddress(userFriendly = true) {\n  const wallet = useTonWallet();\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\n    if (wallet) {\n      return userFriendly ? (0,_tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.toUserFriendlyAddress)(\n        wallet.account.address,\n        wallet.account.chain === _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.CHAIN.TESTNET\n      ) : wallet.account.address;\n    } else {\n      return \"\";\n    }\n  }, [wallet, userFriendly, wallet == null ? void 0 : wallet.account.address, wallet == null ? void 0 : wallet.account.chain]);\n}\nfunction useTonConnectModal() {\n  const [tonConnectUI2] = useTonConnectUI();\n  const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)((tonConnectUI2 == null ? void 0 : tonConnectUI2.modal.state) || null);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (tonConnectUI2) {\n      setState(tonConnectUI2.modal.state);\n      return tonConnectUI2.onModalStateChange((value) => {\n        setState(value);\n      });\n    }\n  }, [tonConnectUI2]);\n  return {\n    state,\n    open: () => tonConnectUI2 == null ? void 0 : tonConnectUI2.modal.open(),\n    close: () => tonConnectUI2 == null ? void 0 : tonConnectUI2.modal.close()\n  };\n}\nfunction useIsConnectionRestored() {\n  const [restored, setRestored] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n  const [tonConnectUI2] = useTonConnectUI();\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (tonConnectUI2) {\n      tonConnectUI2.connectionRestored.then(() => setRestored(true));\n    }\n  }, [tonConnectUI2]);\n  return restored;\n}\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@tonconnect+ui-react@2.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@tonconnect/ui-react/lib/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/@tonconnect+ui@2.2.0/node_modules/@tonconnect/ui/lib/index.mjs":
/*!*******************************************************************************************!*\
  !*** ./node_modules/.pnpm/@tonconnect+ui@2.2.0/node_modules/@tonconnect/ui/lib/index.mjs ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BadRequestError: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.BadRequestError; },\n/* harmony export */   BrowserEventDispatcher: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.BrowserEventDispatcher; },\n/* harmony export */   CHAIN: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.CHAIN; },\n/* harmony export */   CONNECT_EVENT_ERROR_CODES: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.CONNECT_EVENT_ERROR_CODES; },\n/* harmony export */   CONNECT_ITEM_ERROR_CODES: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.CONNECT_ITEM_ERROR_CODES; },\n/* harmony export */   FetchWalletsError: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.FetchWalletsError; },\n/* harmony export */   LocalstorageNotFoundError: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.LocalstorageNotFoundError; },\n/* harmony export */   ParseHexError: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.ParseHexError; },\n/* harmony export */   SEND_TRANSACTION_ERROR_CODES: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.SEND_TRANSACTION_ERROR_CODES; },\n/* harmony export */   SIGN_DATA_ERROR_CODES: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.SIGN_DATA_ERROR_CODES; },\n/* harmony export */   THEME: function() { return /* binding */ THEME; },\n/* harmony export */   TonConnect: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.TonConnect; },\n/* harmony export */   TonConnectError: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.TonConnectError; },\n/* harmony export */   TonConnectUI: function() { return /* binding */ TonConnectUI; },\n/* harmony export */   TonConnectUIError: function() { return /* binding */ TonConnectUIError; },\n/* harmony export */   UnknownAppError: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.UnknownAppError; },\n/* harmony export */   UnknownError: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.UnknownError; },\n/* harmony export */   UserRejectsError: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.UserRejectsError; },\n/* harmony export */   WalletAlreadyConnectedError: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.WalletAlreadyConnectedError; },\n/* harmony export */   WalletMissingRequiredFeaturesError: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.WalletMissingRequiredFeaturesError; },\n/* harmony export */   WalletNotConnectedError: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.WalletNotConnectedError; },\n/* harmony export */   WalletNotInjectedError: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.WalletNotInjectedError; },\n/* harmony export */   WalletNotSupportFeatureError: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.WalletNotSupportFeatureError; },\n/* harmony export */   WalletsListManager: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.WalletsListManager; },\n/* harmony export */   WrongAddressError: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.WrongAddressError; },\n/* harmony export */   checkRequiredWalletFeatures: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.checkRequiredWalletFeatures; },\n/* harmony export */   createConnectionCompletedEvent: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionCompletedEvent; },\n/* harmony export */   createConnectionErrorEvent: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionErrorEvent; },\n/* harmony export */   createConnectionRestoringCompletedEvent: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionRestoringCompletedEvent; },\n/* harmony export */   createConnectionRestoringErrorEvent: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionRestoringErrorEvent; },\n/* harmony export */   createConnectionRestoringStartedEvent: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionRestoringStartedEvent; },\n/* harmony export */   createConnectionStartedEvent: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionStartedEvent; },\n/* harmony export */   createDataSentForSignatureEvent: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createDataSentForSignatureEvent; },\n/* harmony export */   createDataSignedEvent: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createDataSignedEvent; },\n/* harmony export */   createDataSigningFailedEvent: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createDataSigningFailedEvent; },\n/* harmony export */   createDisconnectionEvent: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createDisconnectionEvent; },\n/* harmony export */   createRequestVersionEvent: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createRequestVersionEvent; },\n/* harmony export */   createResponseVersionEvent: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createResponseVersionEvent; },\n/* harmony export */   createTransactionSentForSignatureEvent: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createTransactionSentForSignatureEvent; },\n/* harmony export */   createTransactionSignedEvent: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createTransactionSignedEvent; },\n/* harmony export */   createTransactionSigningFailedEvent: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createTransactionSigningFailedEvent; },\n/* harmony export */   createVersionInfo: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createVersionInfo; },\n/* harmony export */   encodeTelegramUrlParameters: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.encodeTelegramUrlParameters; },\n/* harmony export */   isTelegramUrl: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isTelegramUrl; },\n/* harmony export */   isWalletInfoCurrentlyEmbedded: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyEmbedded; },\n/* harmony export */   isWalletInfoCurrentlyInjected: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyInjected; },\n/* harmony export */   isWalletInfoInjectable: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoInjectable; },\n/* harmony export */   isWalletInfoInjected: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoInjected; },\n/* harmony export */   isWalletInfoRemote: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoRemote; },\n/* harmony export */   toUserFriendlyAddress: function() { return /* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.toUserFriendlyAddress; }\n/* harmony export */ });\n/* harmony import */ var _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tonconnect/sdk */ \"(app-pages-browser)/./node_modules/.pnpm/@tonconnect+sdk@3.2.0/node_modules/@tonconnect/sdk/lib/esm/index.mjs\");\n/* harmony import */ var ua_parser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ua-parser-js */ \"(app-pages-browser)/./node_modules/.pnpm/ua-parser-js@1.0.40/node_modules/ua-parser-js/src/ua-parser.js\");\n/* harmony import */ var deepmerge__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! deepmerge */ \"(app-pages-browser)/./node_modules/.pnpm/deepmerge@4.3.1/node_modules/deepmerge/dist/cjs.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! classnames */ \"(app-pages-browser)/./node_modules/.pnpm/classnames@2.5.1/node_modules/classnames/index.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/polyfills/process.js\");\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a2, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a2, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a2, prop, b[prop]);\n    }\n  return a2;\n};\nvar __spreadProps = (a2, b) => __defProps(a2, __getOwnPropDescs(b));\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e2) {\n        reject(e2);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e2) {\n        reject(e2);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\nvar _a, _b, _c, _d, _e, _f, _g, _h;\n\n\n\n\n\nconst sharedConfig = {};\nfunction setHydrateContext(context) {\n  sharedConfig.context = context;\n}\nconst equalFn = (a2, b) => a2 === b;\nconst $PROXY = Symbol(\"solid-proxy\");\nconst $TRACK = Symbol(\"solid-track\");\nconst signalOptions = {\n  equals: equalFn\n};\nlet runEffects = runQueue;\nconst STALE = 1;\nconst PENDING = 2;\nconst UNOWNED = {\n  owned: null,\n  cleanups: null,\n  context: null,\n  owner: null\n};\nconst NO_INIT = {};\nvar Owner = null;\nlet Transition$1 = null;\nlet Listener = null;\nlet Updates = null;\nlet Effects = null;\nlet ExecCount = 0;\nfunction createRoot(fn, detachedOwner) {\n  const listener = Listener, owner = Owner, unowned = fn.length === 0, root = unowned ? UNOWNED : {\n    owned: null,\n    cleanups: null,\n    context: null,\n    owner: detachedOwner === void 0 ? owner : detachedOwner\n  }, updateFn = unowned ? fn : () => fn(() => untrack(() => cleanNode(root)));\n  Owner = root;\n  Listener = null;\n  try {\n    return runUpdates(updateFn, true);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n}\nfunction createSignal(value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const s2 = {\n    value,\n    observers: null,\n    observerSlots: null,\n    comparator: options.equals || void 0\n  };\n  const setter = (value2) => {\n    if (typeof value2 === \"function\") {\n      value2 = value2(s2.value);\n    }\n    return writeSignal(s2, value2);\n  };\n  return [readSignal.bind(s2), setter];\n}\nfunction createComputed(fn, value, options) {\n  const c2 = createComputation(fn, value, true, STALE);\n  updateComputation(c2);\n}\nfunction createRenderEffect(fn, value, options) {\n  const c2 = createComputation(fn, value, false, STALE);\n  updateComputation(c2);\n}\nfunction createEffect(fn, value, options) {\n  runEffects = runUserEffects;\n  const c2 = createComputation(fn, value, false, STALE);\n  c2.user = true;\n  Effects ? Effects.push(c2) : updateComputation(c2);\n}\nfunction createMemo(fn, value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const c2 = createComputation(fn, value, true, 0);\n  c2.observers = null;\n  c2.observerSlots = null;\n  c2.comparator = options.equals || void 0;\n  updateComputation(c2);\n  return readSignal.bind(c2);\n}\nfunction createResource(pSource, pFetcher, pOptions) {\n  let source;\n  let fetcher;\n  let options;\n  if (arguments.length === 2 && typeof pFetcher === \"object\" || arguments.length === 1) {\n    source = true;\n    fetcher = pSource;\n    options = pFetcher || {};\n  } else {\n    source = pSource;\n    fetcher = pFetcher;\n    options = pOptions || {};\n  }\n  let pr = null, initP = NO_INIT, id = null, scheduled = false, resolved = \"initialValue\" in options, dynamic = typeof source === \"function\" && createMemo(source);\n  const contexts = /* @__PURE__ */ new Set(), [value, setValue] = (options.storage || createSignal)(options.initialValue), [error, setError] = createSignal(void 0), [track, trigger] = createSignal(void 0, {\n    equals: false\n  }), [state, setState] = createSignal(resolved ? \"ready\" : \"unresolved\");\n  if (sharedConfig.context) {\n    id = `${sharedConfig.context.id}${sharedConfig.context.count++}`;\n    let v;\n    if (options.ssrLoadFrom === \"initial\")\n      initP = options.initialValue;\n    else if (sharedConfig.load && (v = sharedConfig.load(id)))\n      initP = v[0];\n  }\n  function loadEnd(p2, v, error2, key) {\n    if (pr === p2) {\n      pr = null;\n      resolved = true;\n      if ((p2 === initP || v === initP) && options.onHydrated)\n        queueMicrotask(() => options.onHydrated(key, {\n          value: v\n        }));\n      initP = NO_INIT;\n      completeLoad(v, error2);\n    }\n    return v;\n  }\n  function completeLoad(v, err) {\n    runUpdates(() => {\n      if (err === void 0)\n        setValue(() => v);\n      setState(err !== void 0 ? \"errored\" : \"ready\");\n      setError(err);\n      for (const c2 of contexts.keys())\n        c2.decrement();\n      contexts.clear();\n    }, false);\n  }\n  function read() {\n    const c2 = SuspenseContext, v = value(), err = error();\n    if (err !== void 0 && !pr)\n      throw err;\n    if (Listener && !Listener.user && c2) {\n      createComputed(() => {\n        track();\n        if (pr) {\n          if (c2.resolved)\n            ;\n          else if (!contexts.has(c2)) {\n            c2.increment();\n            contexts.add(c2);\n          }\n        }\n      });\n    }\n    return v;\n  }\n  function load(refetching = true) {\n    if (refetching !== false && scheduled)\n      return;\n    scheduled = false;\n    const lookup2 = dynamic ? dynamic() : source;\n    if (lookup2 == null || lookup2 === false) {\n      loadEnd(pr, untrack(value));\n      return;\n    }\n    const p2 = initP !== NO_INIT ? initP : untrack(() => fetcher(lookup2, {\n      value: value(),\n      refetching\n    }));\n    if (typeof p2 !== \"object\" || !(p2 && \"then\" in p2)) {\n      loadEnd(pr, p2, void 0, lookup2);\n      return p2;\n    }\n    pr = p2;\n    scheduled = true;\n    queueMicrotask(() => scheduled = false);\n    runUpdates(() => {\n      setState(resolved ? \"refreshing\" : \"pending\");\n      trigger();\n    }, false);\n    return p2.then((v) => loadEnd(p2, v, void 0, lookup2), (e2) => loadEnd(p2, void 0, castError(e2), lookup2));\n  }\n  Object.defineProperties(read, {\n    state: {\n      get: () => state()\n    },\n    error: {\n      get: () => error()\n    },\n    loading: {\n      get() {\n        const s2 = state();\n        return s2 === \"pending\" || s2 === \"refreshing\";\n      }\n    },\n    latest: {\n      get() {\n        if (!resolved)\n          return read();\n        const err = error();\n        if (err && !pr)\n          throw err;\n        return value();\n      }\n    }\n  });\n  if (dynamic)\n    createComputed(() => load(false));\n  else\n    load(false);\n  return [read, {\n    refetch: load,\n    mutate: setValue\n  }];\n}\nfunction batch(fn) {\n  return runUpdates(fn, false);\n}\nfunction untrack(fn) {\n  if (Listener === null)\n    return fn();\n  const listener = Listener;\n  Listener = null;\n  try {\n    return fn();\n  } finally {\n    Listener = listener;\n  }\n}\nfunction on(deps, fn, options) {\n  const isArray = Array.isArray(deps);\n  let prevInput;\n  let defer = options && options.defer;\n  return (prevValue) => {\n    let input;\n    if (isArray) {\n      input = Array(deps.length);\n      for (let i2 = 0; i2 < deps.length; i2++)\n        input[i2] = deps[i2]();\n    } else\n      input = deps();\n    if (defer) {\n      defer = false;\n      return void 0;\n    }\n    const result = untrack(() => fn(input, prevInput, prevValue));\n    prevInput = input;\n    return result;\n  };\n}\nfunction onMount(fn) {\n  createEffect(() => untrack(fn));\n}\nfunction onCleanup(fn) {\n  if (Owner === null)\n    ;\n  else if (Owner.cleanups === null)\n    Owner.cleanups = [fn];\n  else\n    Owner.cleanups.push(fn);\n  return fn;\n}\nfunction getListener() {\n  return Listener;\n}\nfunction getOwner() {\n  return Owner;\n}\nfunction createContext(defaultValue, options) {\n  const id = Symbol(\"context\");\n  return {\n    id,\n    Provider: createProvider(id),\n    defaultValue\n  };\n}\nfunction useContext(context) {\n  let ctx;\n  return (ctx = lookup(Owner, context.id)) !== void 0 ? ctx : context.defaultValue;\n}\nfunction children(fn) {\n  const children2 = createMemo(fn);\n  const memo = createMemo(() => resolveChildren(children2()));\n  memo.toArray = () => {\n    const c2 = memo();\n    return Array.isArray(c2) ? c2 : c2 != null ? [c2] : [];\n  };\n  return memo;\n}\nlet SuspenseContext;\nfunction readSignal() {\n  const runningTransition = Transition$1;\n  if (this.sources && (this.state || runningTransition)) {\n    if (this.state === STALE || runningTransition)\n      updateComputation(this);\n    else {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(this), false);\n      Updates = updates;\n    }\n  }\n  if (Listener) {\n    const sSlot = this.observers ? this.observers.length : 0;\n    if (!Listener.sources) {\n      Listener.sources = [this];\n      Listener.sourceSlots = [sSlot];\n    } else {\n      Listener.sources.push(this);\n      Listener.sourceSlots.push(sSlot);\n    }\n    if (!this.observers) {\n      this.observers = [Listener];\n      this.observerSlots = [Listener.sources.length - 1];\n    } else {\n      this.observers.push(Listener);\n      this.observerSlots.push(Listener.sources.length - 1);\n    }\n  }\n  return this.value;\n}\nfunction writeSignal(node, value, isComp) {\n  let current = node.value;\n  if (!node.comparator || !node.comparator(current, value)) {\n    node.value = value;\n    if (node.observers && node.observers.length) {\n      runUpdates(() => {\n        for (let i2 = 0; i2 < node.observers.length; i2 += 1) {\n          const o2 = node.observers[i2];\n          const TransitionRunning = Transition$1 && Transition$1.running;\n          if (TransitionRunning && Transition$1.disposed.has(o2))\n            ;\n          if (TransitionRunning && !o2.tState || !TransitionRunning && !o2.state) {\n            if (o2.pure)\n              Updates.push(o2);\n            else\n              Effects.push(o2);\n            if (o2.observers)\n              markDownstream(o2);\n          }\n          if (TransitionRunning)\n            ;\n          else\n            o2.state = STALE;\n        }\n        if (Updates.length > 1e6) {\n          Updates = [];\n          if (false)\n            {}\n          throw new Error();\n        }\n      }, false);\n    }\n  }\n  return value;\n}\nfunction updateComputation(node) {\n  if (!node.fn)\n    return;\n  cleanNode(node);\n  const owner = Owner, listener = Listener, time = ExecCount;\n  Listener = Owner = node;\n  runComputation(node, node.value, time);\n  Listener = listener;\n  Owner = owner;\n}\nfunction runComputation(node, value, time) {\n  let nextValue;\n  try {\n    nextValue = node.fn(value);\n  } catch (err) {\n    if (node.pure) {\n      {\n        node.state = STALE;\n        node.owned && node.owned.forEach(cleanNode);\n        node.owned = null;\n      }\n    }\n    handleError(err);\n  }\n  if (!node.updatedAt || node.updatedAt <= time) {\n    if (node.updatedAt != null && \"observers\" in node) {\n      writeSignal(node, nextValue);\n    } else\n      node.value = nextValue;\n    node.updatedAt = time;\n  }\n}\nfunction createComputation(fn, init, pure, state = STALE, options) {\n  const c2 = {\n    fn,\n    state,\n    updatedAt: null,\n    owned: null,\n    sources: null,\n    sourceSlots: null,\n    cleanups: null,\n    value: init,\n    owner: Owner,\n    context: null,\n    pure\n  };\n  if (Owner === null)\n    ;\n  else if (Owner !== UNOWNED) {\n    {\n      if (!Owner.owned)\n        Owner.owned = [c2];\n      else\n        Owner.owned.push(c2);\n    }\n  }\n  return c2;\n}\nfunction runTop(node) {\n  const runningTransition = Transition$1;\n  if (node.state === 0 || runningTransition)\n    return;\n  if (node.state === PENDING || runningTransition)\n    return lookUpstream(node);\n  if (node.suspense && untrack(node.suspense.inFallback))\n    return node.suspense.effects.push(node);\n  const ancestors = [node];\n  while ((node = node.owner) && (!node.updatedAt || node.updatedAt < ExecCount)) {\n    if (node.state || runningTransition)\n      ancestors.push(node);\n  }\n  for (let i2 = ancestors.length - 1; i2 >= 0; i2--) {\n    node = ancestors[i2];\n    if (node.state === STALE || runningTransition) {\n      updateComputation(node);\n    } else if (node.state === PENDING || runningTransition) {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(node, ancestors[0]), false);\n      Updates = updates;\n    }\n  }\n}\nfunction runUpdates(fn, init) {\n  if (Updates)\n    return fn();\n  let wait = false;\n  if (!init)\n    Updates = [];\n  if (Effects)\n    wait = true;\n  else\n    Effects = [];\n  ExecCount++;\n  try {\n    const res = fn();\n    completeUpdates(wait);\n    return res;\n  } catch (err) {\n    if (!wait)\n      Effects = null;\n    Updates = null;\n    handleError(err);\n  }\n}\nfunction completeUpdates(wait) {\n  if (Updates) {\n    runQueue(Updates);\n    Updates = null;\n  }\n  if (wait)\n    return;\n  const e2 = Effects;\n  Effects = null;\n  if (e2.length)\n    runUpdates(() => runEffects(e2), false);\n}\nfunction runQueue(queue) {\n  for (let i2 = 0; i2 < queue.length; i2++)\n    runTop(queue[i2]);\n}\nfunction runUserEffects(queue) {\n  let i2, userLength = 0;\n  for (i2 = 0; i2 < queue.length; i2++) {\n    const e2 = queue[i2];\n    if (!e2.user)\n      runTop(e2);\n    else\n      queue[userLength++] = e2;\n  }\n  if (sharedConfig.context)\n    setHydrateContext();\n  for (i2 = 0; i2 < userLength; i2++)\n    runTop(queue[i2]);\n}\nfunction lookUpstream(node, ignore) {\n  const runningTransition = Transition$1;\n  node.state = 0;\n  for (let i2 = 0; i2 < node.sources.length; i2 += 1) {\n    const source = node.sources[i2];\n    if (source.sources) {\n      if (source.state === STALE || runningTransition) {\n        if (source !== ignore)\n          runTop(source);\n      } else if (source.state === PENDING || runningTransition)\n        lookUpstream(source, ignore);\n    }\n  }\n}\nfunction markDownstream(node) {\n  const runningTransition = Transition$1;\n  for (let i2 = 0; i2 < node.observers.length; i2 += 1) {\n    const o2 = node.observers[i2];\n    if (!o2.state || runningTransition) {\n      o2.state = PENDING;\n      if (o2.pure)\n        Updates.push(o2);\n      else\n        Effects.push(o2);\n      o2.observers && markDownstream(o2);\n    }\n  }\n}\nfunction cleanNode(node) {\n  let i2;\n  if (node.sources) {\n    while (node.sources.length) {\n      const source = node.sources.pop(), index = node.sourceSlots.pop(), obs = source.observers;\n      if (obs && obs.length) {\n        const n2 = obs.pop(), s2 = source.observerSlots.pop();\n        if (index < obs.length) {\n          n2.sourceSlots[s2] = index;\n          obs[index] = n2;\n          source.observerSlots[index] = s2;\n        }\n      }\n    }\n  }\n  if (node.owned) {\n    for (i2 = 0; i2 < node.owned.length; i2++)\n      cleanNode(node.owned[i2]);\n    node.owned = null;\n  }\n  if (node.cleanups) {\n    for (i2 = 0; i2 < node.cleanups.length; i2++)\n      node.cleanups[i2]();\n    node.cleanups = null;\n  }\n  node.state = 0;\n  node.context = null;\n}\nfunction castError(err) {\n  if (err instanceof Error || typeof err === \"string\")\n    return err;\n  return new Error(\"Unknown error\");\n}\nfunction handleError(err) {\n  err = castError(err);\n  throw err;\n}\nfunction lookup(owner, key) {\n  return owner ? owner.context && owner.context[key] !== void 0 ? owner.context[key] : lookup(owner.owner, key) : void 0;\n}\nfunction resolveChildren(children2) {\n  if (typeof children2 === \"function\" && !children2.length)\n    return resolveChildren(children2());\n  if (Array.isArray(children2)) {\n    const results = [];\n    for (let i2 = 0; i2 < children2.length; i2++) {\n      const result = resolveChildren(children2[i2]);\n      Array.isArray(result) ? results.push.apply(results, result) : results.push(result);\n    }\n    return results;\n  }\n  return children2;\n}\nfunction createProvider(id, options) {\n  return function provider(props) {\n    let res;\n    createRenderEffect(() => res = untrack(() => {\n      Owner.context = {\n        [id]: props.value\n      };\n      return children(() => props.children);\n    }), void 0);\n    return res;\n  };\n}\nconst FALLBACK = Symbol(\"fallback\");\nfunction dispose(d) {\n  for (let i2 = 0; i2 < d.length; i2++)\n    d[i2]();\n}\nfunction mapArray(list, mapFn, options = {}) {\n  let items = [], mapped = [], disposers = [], len = 0, indexes = mapFn.length > 1 ? [] : null;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    let newItems = list() || [], i2, j;\n    newItems[$TRACK];\n    return untrack(() => {\n      let newLen = newItems.length, newIndices, newIndicesNext, temp, tempdisposers, tempIndexes, start, end, newEnd, item;\n      if (newLen === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          indexes && (indexes = []);\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot((disposer) => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n      } else if (len === 0) {\n        mapped = new Array(newLen);\n        for (j = 0; j < newLen; j++) {\n          items[j] = newItems[j];\n          mapped[j] = createRoot(mapper);\n        }\n        len = newLen;\n      } else {\n        temp = new Array(newLen);\n        tempdisposers = new Array(newLen);\n        indexes && (tempIndexes = new Array(newLen));\n        for (start = 0, end = Math.min(len, newLen); start < end && items[start] === newItems[start]; start++)\n          ;\n        for (end = len - 1, newEnd = newLen - 1; end >= start && newEnd >= start && items[end] === newItems[newEnd]; end--, newEnd--) {\n          temp[newEnd] = mapped[end];\n          tempdisposers[newEnd] = disposers[end];\n          indexes && (tempIndexes[newEnd] = indexes[end]);\n        }\n        newIndices = /* @__PURE__ */ new Map();\n        newIndicesNext = new Array(newEnd + 1);\n        for (j = newEnd; j >= start; j--) {\n          item = newItems[j];\n          i2 = newIndices.get(item);\n          newIndicesNext[j] = i2 === void 0 ? -1 : i2;\n          newIndices.set(item, j);\n        }\n        for (i2 = start; i2 <= end; i2++) {\n          item = items[i2];\n          j = newIndices.get(item);\n          if (j !== void 0 && j !== -1) {\n            temp[j] = mapped[i2];\n            tempdisposers[j] = disposers[i2];\n            indexes && (tempIndexes[j] = indexes[i2]);\n            j = newIndicesNext[j];\n            newIndices.set(item, j);\n          } else\n            disposers[i2]();\n        }\n        for (j = start; j < newLen; j++) {\n          if (j in temp) {\n            mapped[j] = temp[j];\n            disposers[j] = tempdisposers[j];\n            if (indexes) {\n              indexes[j] = tempIndexes[j];\n              indexes[j](j);\n            }\n          } else\n            mapped[j] = createRoot(mapper);\n        }\n        mapped = mapped.slice(0, len = newLen);\n        items = newItems.slice(0);\n      }\n      return mapped;\n    });\n    function mapper(disposer) {\n      disposers[j] = disposer;\n      if (indexes) {\n        const [s2, set] = createSignal(j);\n        indexes[j] = set;\n        return mapFn(newItems[j], s2);\n      }\n      return mapFn(newItems[j]);\n    }\n  };\n}\nfunction createComponent(Comp, props) {\n  return untrack(() => Comp(props || {}));\n}\nfunction trueFn() {\n  return true;\n}\nconst propTraps = {\n  get(_, property, receiver) {\n    if (property === $PROXY)\n      return receiver;\n    return _.get(property);\n  },\n  has(_, property) {\n    if (property === $PROXY)\n      return true;\n    return _.has(property);\n  },\n  set: trueFn,\n  deleteProperty: trueFn,\n  getOwnPropertyDescriptor(_, property) {\n    return {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return _.get(property);\n      },\n      set: trueFn,\n      deleteProperty: trueFn\n    };\n  },\n  ownKeys(_) {\n    return _.keys();\n  }\n};\nfunction resolveSource(s2) {\n  return !(s2 = typeof s2 === \"function\" ? s2() : s2) ? {} : s2;\n}\nfunction mergeProps(...sources) {\n  let proxy = false;\n  for (let i2 = 0; i2 < sources.length; i2++) {\n    const s2 = sources[i2];\n    proxy = proxy || !!s2 && $PROXY in s2;\n    sources[i2] = typeof s2 === \"function\" ? (proxy = true, createMemo(s2)) : s2;\n  }\n  if (proxy) {\n    return new Proxy({\n      get(property) {\n        for (let i2 = sources.length - 1; i2 >= 0; i2--) {\n          const v = resolveSource(sources[i2])[property];\n          if (v !== void 0)\n            return v;\n        }\n      },\n      has(property) {\n        for (let i2 = sources.length - 1; i2 >= 0; i2--) {\n          if (property in resolveSource(sources[i2]))\n            return true;\n        }\n        return false;\n      },\n      keys() {\n        const keys = [];\n        for (let i2 = 0; i2 < sources.length; i2++)\n          keys.push(...Object.keys(resolveSource(sources[i2])));\n        return [...new Set(keys)];\n      }\n    }, propTraps);\n  }\n  const target = {};\n  for (let i2 = sources.length - 1; i2 >= 0; i2--) {\n    if (sources[i2]) {\n      const descriptors = Object.getOwnPropertyDescriptors(sources[i2]);\n      for (const key in descriptors) {\n        if (key in target)\n          continue;\n        Object.defineProperty(target, key, {\n          enumerable: true,\n          get() {\n            for (let i3 = sources.length - 1; i3 >= 0; i3--) {\n              const v = (sources[i3] || {})[key];\n              if (v !== void 0)\n                return v;\n            }\n          }\n        });\n      }\n    }\n  }\n  return target;\n}\nfunction splitProps(props, ...keys) {\n  const blocked = new Set(keys.flat());\n  if ($PROXY in props) {\n    const res = keys.map((k) => {\n      return new Proxy({\n        get(property) {\n          return k.includes(property) ? props[property] : void 0;\n        },\n        has(property) {\n          return k.includes(property) && property in props;\n        },\n        keys() {\n          return k.filter((property) => property in props);\n        }\n      }, propTraps);\n    });\n    res.push(new Proxy({\n      get(property) {\n        return blocked.has(property) ? void 0 : props[property];\n      },\n      has(property) {\n        return blocked.has(property) ? false : property in props;\n      },\n      keys() {\n        return Object.keys(props).filter((k) => !blocked.has(k));\n      }\n    }, propTraps));\n    return res;\n  }\n  const descriptors = Object.getOwnPropertyDescriptors(props);\n  keys.push(Object.keys(descriptors).filter((k) => !blocked.has(k)));\n  return keys.map((k) => {\n    const clone = {};\n    for (let i2 = 0; i2 < k.length; i2++) {\n      const key = k[i2];\n      if (!(key in props))\n        continue;\n      Object.defineProperty(clone, key, descriptors[key] ? descriptors[key] : {\n        get() {\n          return props[key];\n        },\n        set() {\n          return true;\n        },\n        enumerable: true\n      });\n    }\n    return clone;\n  });\n}\nfunction For(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(mapArray(() => props.each, props.children, fallback || void 0));\n}\nfunction Show(props) {\n  let strictEqual = false;\n  const keyed = props.keyed;\n  const condition = createMemo(() => props.when, void 0, {\n    equals: (a2, b) => strictEqual ? a2 === b : !a2 === !b\n  });\n  return createMemo(() => {\n    const c2 = condition();\n    if (c2) {\n      const child = props.children;\n      const fn = typeof child === \"function\" && child.length > 0;\n      strictEqual = keyed || fn;\n      return fn ? untrack(() => child(c2)) : child;\n    }\n    return props.fallback;\n  }, void 0, void 0);\n}\nfunction Switch(props) {\n  let strictEqual = false;\n  let keyed = false;\n  const equals = (a2, b) => a2[0] === b[0] && (strictEqual ? a2[1] === b[1] : !a2[1] === !b[1]) && a2[2] === b[2];\n  const conditions = children(() => props.children), evalConditions = createMemo(() => {\n    let conds = conditions();\n    if (!Array.isArray(conds))\n      conds = [conds];\n    for (let i2 = 0; i2 < conds.length; i2++) {\n      const c2 = conds[i2].when;\n      if (c2) {\n        keyed = !!conds[i2].keyed;\n        return [i2, c2, conds[i2]];\n      }\n    }\n    return [-1];\n  }, void 0, {\n    equals\n  });\n  return createMemo(() => {\n    const [index, when, cond] = evalConditions();\n    if (index < 0)\n      return props.fallback;\n    const c2 = cond.children;\n    const fn = typeof c2 === \"function\" && c2.length > 0;\n    strictEqual = keyed || fn;\n    return fn ? untrack(() => c2(when)) : c2;\n  }, void 0, void 0);\n}\nfunction Match(props) {\n  return props;\n}\nconst booleans = [\"allowfullscreen\", \"async\", \"autofocus\", \"autoplay\", \"checked\", \"controls\", \"default\", \"disabled\", \"formnovalidate\", \"hidden\", \"indeterminate\", \"ismap\", \"loop\", \"multiple\", \"muted\", \"nomodule\", \"novalidate\", \"open\", \"playsinline\", \"readonly\", \"required\", \"reversed\", \"seamless\", \"selected\"];\nconst Properties = /* @__PURE__ */ new Set([\"className\", \"value\", \"readOnly\", \"formNoValidate\", \"isMap\", \"noModule\", \"playsInline\", ...booleans]);\nconst ChildProperties = /* @__PURE__ */ new Set([\"innerHTML\", \"textContent\", \"innerText\", \"children\"]);\nconst Aliases = /* @__PURE__ */ Object.assign(/* @__PURE__ */ Object.create(null), {\n  className: \"class\",\n  htmlFor: \"for\"\n});\nconst PropAliases = /* @__PURE__ */ Object.assign(/* @__PURE__ */ Object.create(null), {\n  class: \"className\",\n  formnovalidate: \"formNoValidate\",\n  ismap: \"isMap\",\n  nomodule: \"noModule\",\n  playsinline: \"playsInline\",\n  readonly: \"readOnly\"\n});\nconst DelegatedEvents = /* @__PURE__ */ new Set([\"beforeinput\", \"click\", \"dblclick\", \"contextmenu\", \"focusin\", \"focusout\", \"input\", \"keydown\", \"keyup\", \"mousedown\", \"mousemove\", \"mouseout\", \"mouseover\", \"mouseup\", \"pointerdown\", \"pointermove\", \"pointerout\", \"pointerover\", \"pointerup\", \"touchend\", \"touchmove\", \"touchstart\"]);\nconst SVGElements = /* @__PURE__ */ new Set([\n  \"altGlyph\",\n  \"altGlyphDef\",\n  \"altGlyphItem\",\n  \"animate\",\n  \"animateColor\",\n  \"animateMotion\",\n  \"animateTransform\",\n  \"circle\",\n  \"clipPath\",\n  \"color-profile\",\n  \"cursor\",\n  \"defs\",\n  \"desc\",\n  \"ellipse\",\n  \"feBlend\",\n  \"feColorMatrix\",\n  \"feComponentTransfer\",\n  \"feComposite\",\n  \"feConvolveMatrix\",\n  \"feDiffuseLighting\",\n  \"feDisplacementMap\",\n  \"feDistantLight\",\n  \"feFlood\",\n  \"feFuncA\",\n  \"feFuncB\",\n  \"feFuncG\",\n  \"feFuncR\",\n  \"feGaussianBlur\",\n  \"feImage\",\n  \"feMerge\",\n  \"feMergeNode\",\n  \"feMorphology\",\n  \"feOffset\",\n  \"fePointLight\",\n  \"feSpecularLighting\",\n  \"feSpotLight\",\n  \"feTile\",\n  \"feTurbulence\",\n  \"filter\",\n  \"font\",\n  \"font-face\",\n  \"font-face-format\",\n  \"font-face-name\",\n  \"font-face-src\",\n  \"font-face-uri\",\n  \"foreignObject\",\n  \"g\",\n  \"glyph\",\n  \"glyphRef\",\n  \"hkern\",\n  \"image\",\n  \"line\",\n  \"linearGradient\",\n  \"marker\",\n  \"mask\",\n  \"metadata\",\n  \"missing-glyph\",\n  \"mpath\",\n  \"path\",\n  \"pattern\",\n  \"polygon\",\n  \"polyline\",\n  \"radialGradient\",\n  \"rect\",\n  \"set\",\n  \"stop\",\n  \"svg\",\n  \"switch\",\n  \"symbol\",\n  \"text\",\n  \"textPath\",\n  \"tref\",\n  \"tspan\",\n  \"use\",\n  \"view\",\n  \"vkern\"\n]);\nconst SVGNamespace = {\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\"\n};\nfunction reconcileArrays(parentNode, a2, b) {\n  let bLength = b.length, aEnd = a2.length, bEnd = bLength, aStart = 0, bStart = 0, after = a2[aEnd - 1].nextSibling, map = null;\n  while (aStart < aEnd || bStart < bEnd) {\n    if (a2[aStart] === b[bStart]) {\n      aStart++;\n      bStart++;\n      continue;\n    }\n    while (a2[aEnd - 1] === b[bEnd - 1]) {\n      aEnd--;\n      bEnd--;\n    }\n    if (aEnd === aStart) {\n      const node = bEnd < bLength ? bStart ? b[bStart - 1].nextSibling : b[bEnd - bStart] : after;\n      while (bStart < bEnd)\n        parentNode.insertBefore(b[bStart++], node);\n    } else if (bEnd === bStart) {\n      while (aStart < aEnd) {\n        if (!map || !map.has(a2[aStart]))\n          a2[aStart].remove();\n        aStart++;\n      }\n    } else if (a2[aStart] === b[bEnd - 1] && b[bStart] === a2[aEnd - 1]) {\n      const node = a2[--aEnd].nextSibling;\n      parentNode.insertBefore(b[bStart++], a2[aStart++].nextSibling);\n      parentNode.insertBefore(b[--bEnd], node);\n      a2[aEnd] = b[bEnd];\n    } else {\n      if (!map) {\n        map = /* @__PURE__ */ new Map();\n        let i2 = bStart;\n        while (i2 < bEnd)\n          map.set(b[i2], i2++);\n      }\n      const index = map.get(a2[aStart]);\n      if (index != null) {\n        if (bStart < index && index < bEnd) {\n          let i2 = aStart, sequence = 1, t2;\n          while (++i2 < aEnd && i2 < bEnd) {\n            if ((t2 = map.get(a2[i2])) == null || t2 !== index + sequence)\n              break;\n            sequence++;\n          }\n          if (sequence > index - bStart) {\n            const node = a2[aStart];\n            while (bStart < index)\n              parentNode.insertBefore(b[bStart++], node);\n          } else\n            parentNode.replaceChild(b[bStart++], a2[aStart++]);\n        } else\n          aStart++;\n      } else\n        a2[aStart++].remove();\n    }\n  }\n}\nconst $$EVENTS = \"_$DX_DELEGATE\";\nfunction render(code, element, init, options = {}) {\n  let disposer;\n  createRoot((dispose2) => {\n    disposer = dispose2;\n    element === document ? code() : insert(element, code(), element.firstChild ? null : void 0, init);\n  }, options.owner);\n  return () => {\n    disposer();\n    element.textContent = \"\";\n  };\n}\nfunction template$1(html, check, isSVG) {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  const t2 = document.createElement(\"template\");\n  t2.innerHTML = html;\n  let node = t2.content.firstChild;\n  if (isSVG)\n    node = node.firstChild;\n  return node;\n}\nfunction delegateEvents(eventNames, document2 = window.document) {\n  const e2 = document2[$$EVENTS] || (document2[$$EVENTS] = /* @__PURE__ */ new Set());\n  for (let i2 = 0, l2 = eventNames.length; i2 < l2; i2++) {\n    const name = eventNames[i2];\n    if (!e2.has(name)) {\n      e2.add(name);\n      document2.addEventListener(name, eventHandler);\n    }\n  }\n}\nfunction setAttribute(node, name, value) {\n  if (value == null)\n    node.removeAttribute(name);\n  else\n    node.setAttribute(name, value);\n}\nfunction setAttributeNS(node, namespace, name, value) {\n  if (value == null)\n    node.removeAttributeNS(namespace, name);\n  else\n    node.setAttributeNS(namespace, name, value);\n}\nfunction className(node, value) {\n  if (value == null)\n    node.removeAttribute(\"class\");\n  else\n    node.className = value;\n}\nfunction addEventListener(node, name, handler, delegate) {\n  if (delegate) {\n    if (Array.isArray(handler)) {\n      node[`$$${name}`] = handler[0];\n      node[`$$${name}Data`] = handler[1];\n    } else\n      node[`$$${name}`] = handler;\n  } else if (Array.isArray(handler)) {\n    const handlerFn = handler[0];\n    node.addEventListener(name, handler[0] = (e2) => handlerFn.call(node, handler[1], e2));\n  } else\n    node.addEventListener(name, handler);\n}\nfunction classList(node, value, prev = {}) {\n  const classKeys = Object.keys(value || {}), prevKeys = Object.keys(prev);\n  let i2, len;\n  for (i2 = 0, len = prevKeys.length; i2 < len; i2++) {\n    const key = prevKeys[i2];\n    if (!key || key === \"undefined\" || value[key])\n      continue;\n    toggleClassKey(node, key, false);\n    delete prev[key];\n  }\n  for (i2 = 0, len = classKeys.length; i2 < len; i2++) {\n    const key = classKeys[i2], classValue = !!value[key];\n    if (!key || key === \"undefined\" || prev[key] === classValue || !classValue)\n      continue;\n    toggleClassKey(node, key, true);\n    prev[key] = classValue;\n  }\n  return prev;\n}\nfunction style(node, value, prev) {\n  if (!value)\n    return prev ? setAttribute(node, \"style\") : value;\n  const nodeStyle = node.style;\n  if (typeof value === \"string\")\n    return nodeStyle.cssText = value;\n  typeof prev === \"string\" && (nodeStyle.cssText = prev = void 0);\n  prev || (prev = {});\n  value || (value = {});\n  let v, s2;\n  for (s2 in prev) {\n    value[s2] == null && nodeStyle.removeProperty(s2);\n    delete prev[s2];\n  }\n  for (s2 in value) {\n    v = value[s2];\n    if (v !== prev[s2]) {\n      nodeStyle.setProperty(s2, v);\n      prev[s2] = v;\n    }\n  }\n  return prev;\n}\nfunction spread(node, props = {}, isSVG, skipChildren) {\n  const prevProps = {};\n  if (!skipChildren) {\n    createRenderEffect(() => prevProps.children = insertExpression(node, props.children, prevProps.children));\n  }\n  createRenderEffect(() => props.ref && props.ref(node));\n  createRenderEffect(() => assign(node, props, isSVG, true, prevProps, true));\n  return prevProps;\n}\nfunction use(fn, element, arg) {\n  return untrack(() => fn(element, arg));\n}\nfunction insert(parent, accessor, marker, initial) {\n  if (marker !== void 0 && !initial)\n    initial = [];\n  if (typeof accessor !== \"function\")\n    return insertExpression(parent, accessor, initial, marker);\n  createRenderEffect((current) => insertExpression(parent, accessor(), current, marker), initial);\n}\nfunction assign(node, props, isSVG, skipChildren, prevProps = {}, skipRef = false) {\n  props || (props = {});\n  for (const prop in prevProps) {\n    if (!(prop in props)) {\n      if (prop === \"children\")\n        continue;\n      prevProps[prop] = assignProp(node, prop, null, prevProps[prop], isSVG, skipRef);\n    }\n  }\n  for (const prop in props) {\n    if (prop === \"children\") {\n      if (!skipChildren)\n        insertExpression(node, props.children);\n      continue;\n    }\n    const value = props[prop];\n    prevProps[prop] = assignProp(node, prop, value, prevProps[prop], isSVG, skipRef);\n  }\n}\nfunction getNextElement(template2) {\n  let node, key;\n  if (!sharedConfig.context || !(node = sharedConfig.registry.get(key = getHydrationKey()))) {\n    return template2.cloneNode(true);\n  }\n  if (sharedConfig.completed)\n    sharedConfig.completed.add(node);\n  sharedConfig.registry.delete(key);\n  return node;\n}\nfunction toPropertyName(name) {\n  return name.toLowerCase().replace(/-([a-z])/g, (_, w) => w.toUpperCase());\n}\nfunction toggleClassKey(node, key, value) {\n  const classNames = key.trim().split(/\\s+/);\n  for (let i2 = 0, nameLen = classNames.length; i2 < nameLen; i2++)\n    node.classList.toggle(classNames[i2], value);\n}\nfunction assignProp(node, prop, value, prev, isSVG, skipRef) {\n  let isCE, isProp, isChildProp;\n  if (prop === \"style\")\n    return style(node, value, prev);\n  if (prop === \"classList\")\n    return classList(node, value, prev);\n  if (value === prev)\n    return prev;\n  if (prop === \"ref\") {\n    if (!skipRef)\n      value(node);\n  } else if (prop.slice(0, 3) === \"on:\") {\n    const e2 = prop.slice(3);\n    prev && node.removeEventListener(e2, prev);\n    value && node.addEventListener(e2, value);\n  } else if (prop.slice(0, 10) === \"oncapture:\") {\n    const e2 = prop.slice(10);\n    prev && node.removeEventListener(e2, prev, true);\n    value && node.addEventListener(e2, value, true);\n  } else if (prop.slice(0, 2) === \"on\") {\n    const name = prop.slice(2).toLowerCase();\n    const delegate = DelegatedEvents.has(name);\n    if (!delegate && prev) {\n      const h2 = Array.isArray(prev) ? prev[0] : prev;\n      node.removeEventListener(name, h2);\n    }\n    if (delegate || value) {\n      addEventListener(node, name, value, delegate);\n      delegate && delegateEvents([name]);\n    }\n  } else if ((isChildProp = ChildProperties.has(prop)) || !isSVG && (PropAliases[prop] || (isProp = Properties.has(prop))) || (isCE = node.nodeName.includes(\"-\"))) {\n    if (prop === \"class\" || prop === \"className\")\n      className(node, value);\n    else if (isCE && !isProp && !isChildProp)\n      node[toPropertyName(prop)] = value;\n    else\n      node[PropAliases[prop] || prop] = value;\n  } else {\n    const ns = isSVG && prop.indexOf(\":\") > -1 && SVGNamespace[prop.split(\":\")[0]];\n    if (ns)\n      setAttributeNS(node, ns, prop, value);\n    else\n      setAttribute(node, Aliases[prop] || prop, value);\n  }\n  return value;\n}\nfunction eventHandler(e2) {\n  const key = `$$${e2.type}`;\n  let node = e2.composedPath && e2.composedPath()[0] || e2.target;\n  if (e2.target !== node) {\n    Object.defineProperty(e2, \"target\", {\n      configurable: true,\n      value: node\n    });\n  }\n  Object.defineProperty(e2, \"currentTarget\", {\n    configurable: true,\n    get() {\n      return node || document;\n    }\n  });\n  if (sharedConfig.registry && !sharedConfig.done) {\n    sharedConfig.done = true;\n    document.querySelectorAll(\"[id^=pl-]\").forEach((elem) => {\n      while (elem && elem.nodeType !== 8 && elem.nodeValue !== \"pl-\" + e2) {\n        let x = elem.nextSibling;\n        elem.remove();\n        elem = x;\n      }\n      elem && elem.remove();\n    });\n  }\n  while (node) {\n    const handler = node[key];\n    if (handler && !node.disabled) {\n      const data = node[`${key}Data`];\n      data !== void 0 ? handler.call(node, data, e2) : handler.call(node, e2);\n      if (e2.cancelBubble)\n        return;\n    }\n    node = node._$host || node.parentNode || node.host;\n  }\n}\nfunction insertExpression(parent, value, current, marker, unwrapArray) {\n  if (sharedConfig.context && !current)\n    current = [...parent.childNodes];\n  while (typeof current === \"function\")\n    current = current();\n  if (value === current)\n    return current;\n  const t2 = typeof value, multi = marker !== void 0;\n  parent = multi && current[0] && current[0].parentNode || parent;\n  if (t2 === \"string\" || t2 === \"number\") {\n    if (sharedConfig.context)\n      return current;\n    if (t2 === \"number\")\n      value = value.toString();\n    if (multi) {\n      let node = current[0];\n      if (node && node.nodeType === 3) {\n        node.data = value;\n      } else\n        node = document.createTextNode(value);\n      current = cleanChildren(parent, current, marker, node);\n    } else {\n      if (current !== \"\" && typeof current === \"string\") {\n        current = parent.firstChild.data = value;\n      } else\n        current = parent.textContent = value;\n    }\n  } else if (value == null || t2 === \"boolean\") {\n    if (sharedConfig.context)\n      return current;\n    current = cleanChildren(parent, current, marker);\n  } else if (t2 === \"function\") {\n    createRenderEffect(() => {\n      let v = value();\n      while (typeof v === \"function\")\n        v = v();\n      current = insertExpression(parent, v, current, marker);\n    });\n    return () => current;\n  } else if (Array.isArray(value)) {\n    const array = [];\n    const currentArray = current && Array.isArray(current);\n    if (normalizeIncomingArray(array, value, current, unwrapArray)) {\n      createRenderEffect(() => current = insertExpression(parent, array, current, marker, true));\n      return () => current;\n    }\n    if (sharedConfig.context) {\n      if (!array.length)\n        return current;\n      for (let i2 = 0; i2 < array.length; i2++) {\n        if (array[i2].parentNode)\n          return current = array;\n      }\n    }\n    if (array.length === 0) {\n      current = cleanChildren(parent, current, marker);\n      if (multi)\n        return current;\n    } else if (currentArray) {\n      if (current.length === 0) {\n        appendNodes(parent, array, marker);\n      } else\n        reconcileArrays(parent, current, array);\n    } else {\n      current && cleanChildren(parent);\n      appendNodes(parent, array);\n    }\n    current = array;\n  } else if (value instanceof Node) {\n    if (sharedConfig.context && value.parentNode)\n      return current = multi ? [value] : value;\n    if (Array.isArray(current)) {\n      if (multi)\n        return current = cleanChildren(parent, current, marker, value);\n      cleanChildren(parent, current, null, value);\n    } else if (current == null || current === \"\" || !parent.firstChild) {\n      parent.appendChild(value);\n    } else\n      parent.replaceChild(value, parent.firstChild);\n    current = value;\n  } else\n    ;\n  return current;\n}\nfunction normalizeIncomingArray(normalized, array, current, unwrap2) {\n  let dynamic = false;\n  for (let i2 = 0, len = array.length; i2 < len; i2++) {\n    let item = array[i2], prev = current && current[i2];\n    if (item instanceof Node) {\n      normalized.push(item);\n    } else if (item == null || item === true || item === false)\n      ;\n    else if (Array.isArray(item)) {\n      dynamic = normalizeIncomingArray(normalized, item, prev) || dynamic;\n    } else if (typeof item === \"function\") {\n      if (unwrap2) {\n        while (typeof item === \"function\")\n          item = item();\n        dynamic = normalizeIncomingArray(normalized, Array.isArray(item) ? item : [item], Array.isArray(prev) ? prev : [prev]) || dynamic;\n      } else {\n        normalized.push(item);\n        dynamic = true;\n      }\n    } else {\n      const value = String(item);\n      if (prev && prev.nodeType === 3 && prev.data === value) {\n        normalized.push(prev);\n      } else\n        normalized.push(document.createTextNode(value));\n    }\n  }\n  return dynamic;\n}\nfunction appendNodes(parent, array, marker = null) {\n  for (let i2 = 0, len = array.length; i2 < len; i2++)\n    parent.insertBefore(array[i2], marker);\n}\nfunction cleanChildren(parent, current, marker, replacement) {\n  if (marker === void 0)\n    return parent.textContent = \"\";\n  const node = replacement || document.createTextNode(\"\");\n  if (current.length) {\n    let inserted = false;\n    for (let i2 = current.length - 1; i2 >= 0; i2--) {\n      const el = current[i2];\n      if (node !== el) {\n        const isParent = el.parentNode === parent;\n        if (!inserted && !i2)\n          isParent ? parent.replaceChild(node, el) : parent.insertBefore(node, marker);\n        else\n          isParent && el.remove();\n      } else\n        inserted = true;\n    }\n  } else\n    parent.insertBefore(node, marker);\n  return [node];\n}\nfunction getHydrationKey() {\n  const hydrate = sharedConfig.context;\n  return `${hydrate.id}${hydrate.count++}`;\n}\nconst SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nfunction createElement(tagName, isSVG = false) {\n  return isSVG ? document.createElementNS(SVG_NAMESPACE, tagName) : document.createElement(tagName);\n}\nfunction Portal(props) {\n  const {\n    useShadow\n  } = props, marker = document.createTextNode(\"\"), mount = props.mount || document.body;\n  function renderPortal() {\n    if (sharedConfig.context) {\n      const [s2, set] = createSignal(false);\n      queueMicrotask(() => set(true));\n      return () => s2() && props.children;\n    } else\n      return () => props.children;\n  }\n  if (mount instanceof HTMLHeadElement) {\n    const [clean, setClean] = createSignal(false);\n    const cleanup = () => setClean(true);\n    createRoot((dispose2) => insert(mount, () => !clean() ? renderPortal()() : dispose2(), null));\n    onCleanup(() => {\n      if (sharedConfig.context)\n        queueMicrotask(cleanup);\n      else\n        cleanup();\n    });\n  } else {\n    const container = createElement(props.isSVG ? \"g\" : \"div\", props.isSVG), renderRoot = useShadow && container.attachShadow ? container.attachShadow({\n      mode: \"open\"\n    }) : container;\n    Object.defineProperty(container, \"_$host\", {\n      get() {\n        return marker.parentNode;\n      },\n      configurable: true\n    });\n    insert(renderRoot, renderPortal());\n    mount.appendChild(container);\n    props.ref && props.ref(container);\n    onCleanup(() => mount.removeChild(container));\n  }\n  return marker;\n}\nfunction Dynamic(props) {\n  const [p2, others] = splitProps(props, [\"component\"]);\n  const cached = createMemo(() => p2.component);\n  return createMemo(() => {\n    const component = cached();\n    switch (typeof component) {\n      case \"function\":\n        return untrack(() => component(others));\n      case \"string\":\n        const isSvg = SVGElements.has(component);\n        const el = sharedConfig.context ? getNextElement() : createElement(component, isSvg);\n        spread(el, others, isSvg);\n        return el;\n    }\n  });\n}\nvar THEME = /* @__PURE__ */ ((THEME2) => {\n  THEME2[\"DARK\"] = \"DARK\";\n  THEME2[\"LIGHT\"] = \"LIGHT\";\n  return THEME2;\n})(THEME || {});\nlet e = { data: \"\" }, t = (t2) => \"object\" == typeof window ? ((t2 ? t2.querySelector(\"#_goober\") : window._goober) || Object.assign((t2 || document.head).appendChild(document.createElement(\"style\")), { innerHTML: \" \", id: \"_goober\" })).firstChild : t2 || e, l = /(?:([\\u0080-\\uFFFF\\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\\s*)/g, a = /\\/\\*[^]*?\\*\\/|  +/g, n = /\\n+/g, o = (e2, t2) => {\n  let r = \"\", l2 = \"\", a2 = \"\";\n  for (let n2 in e2) {\n    let c2 = e2[n2];\n    \"@\" == n2[0] ? \"i\" == n2[1] ? r = n2 + \" \" + c2 + \";\" : l2 += \"f\" == n2[1] ? o(c2, n2) : n2 + \"{\" + o(c2, \"k\" == n2[1] ? \"\" : t2) + \"}\" : \"object\" == typeof c2 ? l2 += o(c2, t2 ? t2.replace(/([^,])+/g, (e3) => n2.replace(/(^:.*)|([^,])+/g, (t3) => /&/.test(t3) ? t3.replace(/&/g, e3) : e3 ? e3 + \" \" + t3 : t3)) : n2) : null != c2 && (n2 = /^--/.test(n2) ? n2 : n2.replace(/[A-Z]/g, \"-$&\").toLowerCase(), a2 += o.p ? o.p(n2, c2) : n2 + \":\" + c2 + \";\");\n  }\n  return r + (t2 && a2 ? t2 + \"{\" + a2 + \"}\" : a2) + l2;\n}, c = {}, s = (e2) => {\n  if (\"object\" == typeof e2) {\n    let t2 = \"\";\n    for (let r in e2)\n      t2 += r + s(e2[r]);\n    return t2;\n  }\n  return e2;\n}, i = (e2, t2, r, i2, p2) => {\n  let u2 = s(e2), d = c[u2] || (c[u2] = ((e3) => {\n    let t3 = 0, r2 = 11;\n    for (; t3 < e3.length; )\n      r2 = 101 * r2 + e3.charCodeAt(t3++) >>> 0;\n    return \"go\" + r2;\n  })(u2));\n  if (!c[d]) {\n    let t3 = u2 !== e2 ? e2 : ((e3) => {\n      let t4, r2, o2 = [{}];\n      for (; t4 = l.exec(e3.replace(a, \"\")); )\n        t4[4] ? o2.shift() : t4[3] ? (r2 = t4[3].replace(n, \" \").trim(), o2.unshift(o2[0][r2] = o2[0][r2] || {})) : o2[0][t4[1]] = t4[2].replace(n, \" \").trim();\n      return o2[0];\n    })(e2);\n    c[d] = o(p2 ? { [\"@keyframes \" + d]: t3 } : t3, r ? \"\" : \".\" + d);\n  }\n  let f = r && c.g ? c.g : null;\n  return r && (c.g = c[d]), ((e3, t3, r2, l2) => {\n    l2 ? t3.data = t3.data.replace(l2, e3) : -1 === t3.data.indexOf(e3) && (t3.data = r2 ? e3 + t3.data : t3.data + e3);\n  })(c[d], t2, i2, f), d;\n}, p = (e2, t2, r) => e2.reduce((e3, l2, a2) => {\n  let n2 = t2[a2];\n  if (n2 && n2.call) {\n    let e4 = n2(r), t3 = e4 && e4.props && e4.props.className || /^go/.test(e4) && e4;\n    n2 = t3 ? \".\" + t3 : e4 && \"object\" == typeof e4 ? e4.props ? \"\" : o(e4, \"\") : false === e4 ? \"\" : e4;\n  }\n  return e3 + l2 + (null == n2 ? \"\" : n2);\n}, \"\");\nfunction u(e2) {\n  let r = this || {}, l2 = e2.call ? e2(r.p) : e2;\n  return i(l2.unshift ? l2.raw ? p(l2, [].slice.call(arguments, 1), r.p) : l2.reduce((e3, t2) => Object.assign(e3, t2 && t2.call ? t2(r.p) : t2), {}) : l2, t(r.target), r.g, r.o, r.k);\n}\nu.bind({ g: 1 });\nlet h = u.bind({ k: 1 });\nconst ThemeContext = createContext();\nfunction ThemeProvider(props) {\n  return createComponent(ThemeContext.Provider, {\n    value: props.theme,\n    get children() {\n      return props.children;\n    }\n  });\n}\nfunction useTheme() {\n  return useContext(ThemeContext);\n}\nfunction makeStyled(tag) {\n  let _ctx = this || {};\n  return (...args) => {\n    const Styled = (props) => {\n      const theme = useContext(ThemeContext);\n      const withTheme = mergeProps(props, { theme });\n      const clone = mergeProps(withTheme, {\n        get class() {\n          const pClass = withTheme.class, append = \"class\" in withTheme && /^go[0-9]+/.test(pClass);\n          let className2 = u.apply(\n            { target: _ctx.target, o: append, p: withTheme, g: _ctx.g },\n            args\n          );\n          return [pClass, className2].filter(Boolean).join(\" \");\n        }\n      });\n      const [local, newProps] = splitProps(clone, [\"as\", \"theme\"]);\n      const htmlProps = newProps;\n      const createTag = local.as || tag;\n      let el;\n      if (typeof createTag === \"function\") {\n        el = createTag(htmlProps);\n      } else {\n        {\n          if (_ctx.g == 1) {\n            el = document.createElement(createTag);\n            spread(el, htmlProps);\n          } else {\n            el = Dynamic(mergeProps({ component: createTag }, htmlProps));\n          }\n        }\n      }\n      return el;\n    };\n    Styled.class = (props) => {\n      return untrack(() => {\n        return u.apply({ target: _ctx.target, p: props, g: _ctx.g }, args);\n      });\n    };\n    return Styled;\n  };\n}\nconst styled = new Proxy(makeStyled, {\n  get(target, tag) {\n    return target(tag);\n  }\n});\nfunction createGlobalStyles() {\n  const fn = makeStyled.call({ g: 1 }, \"div\").apply(null, arguments);\n  return function GlobalStyles2(props) {\n    fn(props);\n    return null;\n  };\n}\nconst globalStylesTag = \"tc-root\";\nconst disableScrollClass = \"tc-disable-scroll\";\nconst usingMouseClass = \"tc-using-mouse\";\nconst GlobalStyles = () => {\n  document.body.addEventListener(\"mousedown\", () => document.body.classList.add(usingMouseClass));\n  document.body.addEventListener(\"keydown\", (event) => {\n    if (event.key === \"Tab\") {\n      document.body.classList.remove(usingMouseClass);\n    }\n  });\n  const Styles = createGlobalStyles`\n    ${globalStylesTag} * {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n        \n        font-family: -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', Arial, Tahoma, Verdana, sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;        \n        -webkit-tap-highlight-color: transparent;\n    }\n    \n    ${globalStylesTag} img {\n      -webkit-user-select: none;\n      -webkit-touch-callout: none;\n    }   \n \n    ${globalStylesTag} *:focus {\n        outline: #08f auto 2px;\n    }\n    \n    ${globalStylesTag} li {\n        list-style: none;\n    }\n    \n    ${globalStylesTag} button {\n        outline: none;\n    }\n    \n    body.${disableScrollClass} {\n        position: fixed; \n        overflow-y: scroll;\n        right: 0;\n        left: 0;\n    }\n    \n    body.${usingMouseClass} ${globalStylesTag} *:focus {\n        outline: none;\n    }\n`;\n  return createComponent(Styles, {});\n};\nfunction hexToRgb(hex) {\n  if (hex[0] === \"#\") {\n    hex = hex.slice(1);\n  }\n  const bigint = parseInt(hex, 16);\n  const r = bigint >> 16 & 255;\n  const g = bigint >> 8 & 255;\n  const b = bigint & 255;\n  return [r, g, b].join(\",\");\n}\nfunction rgba(color, opacity) {\n  if (color[0] === \"#\") {\n    color = hexToRgb(color);\n  }\n  return `rgba(${color}, ${opacity})`;\n}\nfunction toPx(value) {\n  return value.toString() + \"px\";\n}\nconst _InMemoryStorage = class {\n  constructor() {\n    __publicField(this, \"storage\", {});\n  }\n  static getInstance() {\n    if (!_InMemoryStorage.instance) {\n      _InMemoryStorage.instance = new _InMemoryStorage();\n    }\n    return _InMemoryStorage.instance;\n  }\n  get length() {\n    return Object.keys(this.storage).length;\n  }\n  clear() {\n    this.storage = {};\n  }\n  getItem(key) {\n    var _a2;\n    return (_a2 = this.storage[key]) != null ? _a2 : null;\n  }\n  key(index) {\n    var _a2;\n    const keys = Object.keys(this.storage);\n    if (index < 0 || index >= keys.length) {\n      return null;\n    }\n    return (_a2 = keys[index]) != null ? _a2 : null;\n  }\n  removeItem(key) {\n    delete this.storage[key];\n  }\n  setItem(key, value) {\n    this.storage[key] = value;\n  }\n};\nlet InMemoryStorage = _InMemoryStorage;\n__publicField(InMemoryStorage, \"instance\");\nclass TonConnectUIError extends _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.TonConnectError {\n  constructor(...args) {\n    super(...args);\n    Object.setPrototypeOf(this, TonConnectUIError.prototype);\n  }\n}\nfunction logDebug(...args) {\n  {\n    try {\n      console.debug(\"[TON_CONNECT_UI]\", ...args);\n    } catch (e2) {\n    }\n  }\n}\nfunction logError(...args) {\n  {\n    try {\n      console.error(\"[TON_CONNECT_UI]\", ...args);\n    } catch (e2) {\n    }\n  }\n}\nfunction logWarning(...args) {\n  {\n    try {\n      console.warn(\"[TON_CONNECT_UI]\", ...args);\n    } catch (e2) {\n    }\n  }\n}\nfunction openLink(href, target = \"_self\") {\n  logDebug(\"openLink\", href, target);\n  window.open(href, target, \"noopener noreferrer\");\n}\nfunction openLinkBlank(href) {\n  openLink(href, \"_blank\");\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n  const doFallback = () => {\n    if (isBrowser(\"safari\") || isOS(\"android\") && isBrowser(\"firefox\")) {\n      return;\n    }\n    fallback();\n  };\n  const fallbackTimeout = setTimeout(() => doFallback(), 200);\n  window.addEventListener(\"blur\", () => clearTimeout(fallbackTimeout), { once: true });\n  openLink(href, \"_self\");\n}\nfunction getSystemTheme() {\n  if (window.matchMedia && window.matchMedia(\"(prefers-color-scheme: light)\").matches) {\n    return THEME.LIGHT;\n  }\n  return THEME.DARK;\n}\nfunction subscribeToThemeChange(callback) {\n  const handler = (event) => callback(event.matches ? THEME.DARK : THEME.LIGHT);\n  window.matchMedia(\"(prefers-color-scheme: dark)\").addEventListener(\"change\", handler);\n  return () => window.matchMedia(\"(prefers-color-scheme: dark)\").removeEventListener(\"change\", handler);\n}\nfunction disableScroll() {\n  if (document.documentElement.scrollHeight === document.documentElement.clientHeight) {\n    return;\n  }\n  document.body.style.top = toPx(-document.documentElement.scrollTop);\n  document.body.classList.add(disableScrollClass);\n}\nfunction enableScroll() {\n  document.body.classList.remove(disableScrollClass);\n  document.documentElement.scrollTo({ top: -parseFloat(getComputedStyle(document.body).top) });\n  document.body.style.top = \"auto\";\n}\nfunction fixMobileSafariActiveTransition() {\n  if (!document.body.hasAttribute(\"ontouchstart\")) {\n    document.body.setAttribute(\"ontouchstart\", \"\");\n  }\n}\nfunction defineStylesRoot() {\n  customElements.define(globalStylesTag, class TcRootElement extends HTMLElement {\n  });\n}\nfunction createMacrotask(callback) {\n  return __async(this, null, function* () {\n    yield new Promise((resolve) => requestAnimationFrame(resolve));\n    callback();\n  });\n}\nfunction createMacrotaskAsync(callback) {\n  return __async(this, null, function* () {\n    yield new Promise((resolve) => requestAnimationFrame(resolve));\n    return callback();\n  });\n}\nfunction preloadImages(images) {\n  if (document.readyState !== \"complete\") {\n    window.addEventListener(\"load\", () => createMacrotask(() => preloadImages(images)), {\n      once: true\n    });\n  } else {\n    images.forEach((img) => {\n      const node = new window.Image();\n      node.src = img;\n    });\n  }\n}\nfunction getWindow$1() {\n  if (typeof window !== \"undefined\") {\n    return window;\n  }\n  return void 0;\n}\nfunction tryGetLocalStorage() {\n  if (isLocalStorageAvailable()) {\n    return localStorage;\n  }\n  if (isNodeJs()) {\n    throw new TonConnectUIError(\n      \"`localStorage` is unavailable, but it is required for TonConnect. For more details, see https://github.com/ton-connect/sdk/tree/main/packages/sdk#init-connector\"\n    );\n  }\n  return InMemoryStorage.getInstance();\n}\nfunction isLocalStorageAvailable() {\n  try {\n    return typeof localStorage !== \"undefined\";\n  } catch (e2) {\n    return false;\n  }\n}\nfunction isNodeJs() {\n  return typeof process !== \"undefined\" && process.versions != null && process.versions.node != null;\n}\nfunction getUserAgent() {\n  var _a2, _b2, _c2;\n  const results = new ua_parser_js__WEBPACK_IMPORTED_MODULE_1__().getResult();\n  const osName = (_a2 = results.os.name) == null ? void 0 : _a2.toLowerCase();\n  const deviceModel = (_b2 = results.device.model) == null ? void 0 : _b2.toLowerCase();\n  let os;\n  switch (true) {\n    case deviceModel === \"ipad\":\n      os = \"ipad\";\n      break;\n    case osName === \"ios\":\n      os = \"ios\";\n      break;\n    case osName === \"android\":\n      os = \"android\";\n      break;\n    case osName === \"mac os\":\n      os = \"macos\";\n      break;\n    case osName === \"linux\":\n      os = \"linux\";\n      break;\n    case (osName == null ? void 0 : osName.includes(\"windows\")):\n      os = \"windows\";\n      break;\n  }\n  const browserName = (_c2 = results.browser.name) == null ? void 0 : _c2.toLowerCase();\n  let browser;\n  switch (true) {\n    case browserName === \"chrome\":\n      browser = \"chrome\";\n      break;\n    case browserName === \"firefox\":\n      browser = \"firefox\";\n      break;\n    case (browserName == null ? void 0 : browserName.includes(\"safari\")):\n      browser = \"safari\";\n      break;\n    case (browserName == null ? void 0 : browserName.includes(\"opera\")):\n      browser = \"opera\";\n      break;\n  }\n  return {\n    os,\n    browser\n  };\n}\nfunction isOS(...os) {\n  return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n  return browser.includes(getUserAgent().browser);\n}\nfunction toDeeplink(universalLink, deeplink) {\n  const url = new URL(universalLink);\n  return deeplink + url.search;\n}\nclass WalletInfoStorage {\n  constructor() {\n    __publicField(this, \"localStorage\");\n    __publicField(this, \"storageKey\", \"ton-connect-ui_wallet-info\");\n    this.localStorage = tryGetLocalStorage();\n  }\n  setWalletInfo(walletInfo) {\n    this.localStorage.setItem(this.storageKey, JSON.stringify(walletInfo));\n  }\n  getWalletInfo() {\n    const walletInfoString = this.localStorage.getItem(this.storageKey);\n    if (!walletInfoString) {\n      return null;\n    }\n    return JSON.parse(walletInfoString);\n  }\n  removeWalletInfo() {\n    this.localStorage.removeItem(this.storageKey);\n  }\n}\nclass PreferredWalletStorage {\n  constructor() {\n    __publicField(this, \"localStorage\");\n    __publicField(this, \"storageKey\", \"ton-connect-ui_preferred-wallet\");\n    this.localStorage = tryGetLocalStorage();\n  }\n  setPreferredWalletAppName(name) {\n    this.localStorage.setItem(this.storageKey, name);\n  }\n  getPreferredWalletAppName() {\n    return this.localStorage.getItem(this.storageKey) || void 0;\n  }\n}\nclass LastSelectedWalletInfoStorage {\n  constructor() {\n    __publicField(this, \"localStorage\");\n    __publicField(this, \"storageKey\", \"ton-connect-ui_last-selected-wallet-info\");\n    this.localStorage = tryGetLocalStorage();\n  }\n  setLastSelectedWalletInfo(walletInfo) {\n    this.localStorage.setItem(this.storageKey, JSON.stringify(walletInfo));\n  }\n  getLastSelectedWalletInfo() {\n    const walletInfoString = this.localStorage.getItem(this.storageKey);\n    if (!walletInfoString) {\n      return null;\n    }\n    return JSON.parse(walletInfoString);\n  }\n  removeLastSelectedWalletInfo() {\n    this.localStorage.removeItem(this.storageKey);\n  }\n}\nconst [walletsModalState, setWalletsModalState] = createSignal({\n  status: \"closed\",\n  closeReason: null\n});\nconst getWalletsModalIsOpened = createMemo(() => walletsModalState().status === \"opened\");\nconst [singleWalletModalState, setSingleWalletModalState] = createSignal({\n  status: \"closed\",\n  closeReason: null\n});\nconst getSingleWalletModalIsOpened = createMemo(\n  () => singleWalletModalState().status === \"opened\"\n);\nconst getSingleWalletModalWalletInfo = createMemo(() => {\n  const state = singleWalletModalState();\n  if (state.status === \"opened\") {\n    return state.walletInfo;\n  }\n  return null;\n});\nlet lastSelectedWalletInfoStorage = typeof window !== \"undefined\" ? new LastSelectedWalletInfoStorage() : void 0;\nconst [lastSelectedWalletInfo, _setLastSelectedWalletInfo] = createSignal((lastSelectedWalletInfoStorage == null ? void 0 : lastSelectedWalletInfoStorage.getLastSelectedWalletInfo()) || null);\nconst setLastSelectedWalletInfo = (walletInfo) => {\n  if (!lastSelectedWalletInfoStorage) {\n    lastSelectedWalletInfoStorage = new LastSelectedWalletInfoStorage();\n  }\n  if (walletInfo) {\n    lastSelectedWalletInfoStorage.setLastSelectedWalletInfo(walletInfo);\n  } else {\n    lastSelectedWalletInfoStorage.removeLastSelectedWalletInfo();\n  }\n  _setLastSelectedWalletInfo(walletInfo);\n};\nconst [action, setAction] = createSignal(null);\nconst common$1 = {\n  close: \"Close\",\n  openWallet: \"Open wallet\",\n  copyLink: \"Copy Link\",\n  linkCopied: \"Link Copied\",\n  copied: \"Copied\",\n  yourWallet: \"Your Wallet\",\n  retry: \"Retry\",\n  get: \"GET\",\n  mobile: \"Mobile\",\n  browserExtension: \"Browser Extension\",\n  desktop: \"Desktop\"\n};\nconst button$1 = {\n  connectWallet: \"Connect Wallet\",\n  dropdown: {\n    copy: \"Copy address\",\n    copied: \"Address copied!\",\n    disconnect: \"Disconnect\"\n  }\n};\nconst notifications$1 = {\n  confirm: {\n    header: \"Open {{ name }} to\\xA0confirm the\\xA0transaction.\"\n  },\n  transactionSent: {\n    header: \"Transaction sent\",\n    text: \"Your transaction\\xA0will be\\xA0processed in\\xA0a\\xA0few seconds.\"\n  },\n  transactionCanceled: {\n    header: \"Transaction canceled\",\n    text: \"There will be no changes to\\xA0your account.\"\n  },\n  dataSigned: {\n    header: \"Data signed\"\n  },\n  signDataCanceled: {\n    header: \"Sign data canceled\"\n  }\n};\nconst walletItem$1 = {\n  walletOn: \"Wallet in\",\n  recent: \"Recent\",\n  installed: \"Installed\",\n  popular: \"Popular\"\n};\nconst walletModal$1 = {\n  loading: \"Loading wallets\",\n  wallets: \"Wallets\",\n  mobileUniversalModal: {\n    connectYourWallet: \"Connect your TON\\xA0wallet\",\n    openWalletOnTelegramOrSelect: \"Use Wallet in Telegram or choose other application\",\n    openWalletOnTelegram: \"Connect Wallet in Telegram\",\n    chooseOtherApplication: \"Choose other application\",\n    openLink: \"Open Link\",\n    scan: \"Scan with your mobile\\xA0wallet\"\n  },\n  desktopUniversalModal: {\n    connectYourWallet: \"Connect your TON wallet\",\n    scan: \"Scan with your mobile wallet\",\n    availableWallets: \"Available wallets\"\n  },\n  mobileConnectionModal: {\n    showQR: \"Show QR Code\",\n    scanQR: \"Scan the\\xA0QR code below with your phone\\u2019s\\xA0or\\xA0{{ name }}\\u2019s camera\",\n    missingFeatures: \"Please update {{ name }}, your version does not support required features for this dApp\",\n    notSupportedWallet: \"{{ name }} doesn\\u2019t support the requested action. Please connect another wallet that supports it\",\n    continueIn: \"Continue in {{ name }}\\u2026\",\n    updateWallet: \"Update {{ name }}\",\n    chooseAnotherWallet: \"Choose Another Wallet\",\n    connectionDeclined: \"Connection declined\"\n  },\n  desktopConnectionModal: {\n    scanQR: \"Scan the\\xA0QR code below with your phone\\u2019s\\xA0or\\xA0{{ name }}\\u2019s camera\",\n    continueInExtension: \"Continue in\\xA0{{ name }} browser extension\\u2026\",\n    dontHaveExtension: \"Seems you don't have installed {{ name }}\\xA0browser\\xA0extension\",\n    missingFeatures: \"Please update {{ name }}, your version does not support required features for this dApp\",\n    notSupportedWallet: \"{{ name }} doesn\\u2019t support the requested action. Please connect another wallet that supports it\",\n    getWallet: \"Get {{ name }}\",\n    updateWallet: \"Update {{ name }}\",\n    chooseAnotherWallet: \"Choose Another Wallet\",\n    continueOnDesktop: \"Continue in\\xA0{{ name }} on desktop\\u2026\",\n    openWalletOnTelegram: \"Connect Wallet in Telegram on desktop\",\n    connectionDeclined: \"Connection declined\"\n  },\n  infoModal: {\n    whatIsAWallet: \"What is a wallet\",\n    secureDigitalAssets: \"Secure digital assets storage\",\n    walletProtects: \"A wallet protects and manages your digital assets\\xA0including TON, tokens and collectables.\",\n    controlIdentity: \"Control your Web3 identity\",\n    manageIdentity: \"Manage your digital identity and access decentralized applications with ease. Maintain control over your data and engage securely in\\xA0the\\xA0blockchain ecosystem.\",\n    effortlessCryptoTransactions: \"Effortless crypto transactions\",\n    easilySend: \"Easily send, receive, monitor your cryptocurrencies.\\xA0Streamline your operations with\\xA0decentralized applications.\",\n    getAWallet: \"Get a Wallet\"\n  },\n  restoreModal: {\n    title: \"Restore\",\n    step1: {\n      title: \"Find your current recovery phrase\",\n      text: \"Open your wallet settings and locate the\\xA0recovery\\xA0phrase\"\n    },\n    step2: {\n      title: \"Copy your recovery phrase\",\n      text: \"Write it down or copy it to a safe place\"\n    },\n    step3: {\n      title: \"Restore in a supported wallet\",\n      text: \"Enter the recovery phrase to access your wallet\"\n    }\n  },\n  allWallets: {\n    walletsBelowNotSupported: \"The wallets below don\\u2019t support all features of\\xA0the connected service. You can use your recovery phrase in one of the supported wallets above.\",\n    walletNotSupportService: \"{{ name }} doesn\\u2019t support connected service\"\n  },\n  featureNotSupported: {\n    wallet: {\n      title: \"{{ name }} doesn\\u2019t support the requested\\xA0action\",\n      description: \"Install a supported wallet from the list below, restore it with your recovery phrase, then connect it and try again.\",\n      info: \"Learn how to restore your wallet\"\n    },\n    version: {\n      description: \"Your current version of {{ name }} or wallet contract type doesn't support the required features. Please update it to continue.\",\n      updateButton: \"Update {{ name }}\",\n      aboutW5: \"About W5\"\n    },\n    disconnect: {\n      title: \"Confirm Disconnect\",\n      description: \"You will be disconnected from your current wallet and redirected to connect {{ name }}.\",\n      button: \"Disconnect\"\n    }\n  }\n};\nconst actionModal$1 = {\n  confirmTransaction: {\n    header: \"Confirm the\\xA0transaction in\\xA0{{ name }}\",\n    text: \"It will only take a\\xA0moment.\"\n  },\n  signData: {\n    header: \"Sign the\\xA0data in\\xA0{{ name }}\",\n    text: \"It will only take a\\xA0moment.\"\n  },\n  transactionSent: \"$notifications.transactionSent\",\n  transactionCanceled: \"$notifications.transactionCanceled\",\n  dataSigned: \"$notifications.dataSigned\",\n  signDataCanceled: \"$notifications.signDataCanceled\"\n};\nconst en = {\n  common: common$1,\n  button: button$1,\n  notifications: notifications$1,\n  walletItem: walletItem$1,\n  walletModal: walletModal$1,\n  actionModal: actionModal$1\n};\nconst common = {\n  close: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\",\n  openWallet: \"\\u041E\\u0442\\u043A\\u0440\\u044B\\u0442\\u044C \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A\",\n  copyLink: \"\\u0421\\u043A\\u043E\\u043F\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\",\n  linkCopied: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u0441\\u043A\\u043E\\u043F\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0430\",\n  copied: \"\\u0421\\u043A\\u043E\\u043F\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u043E\",\n  yourWallet: \"\\u0412\\u0430\\u0448 \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A\",\n  retry: \"\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0438\\u0442\\u044C\",\n  get: \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C\",\n  mobile: \"\\u041C\\u043E\\u0431\\u0438\\u043B\\u044C\\u043D\\u044B\\u0439\",\n  browserExtension: \"\\u0420\\u0430\\u0441\\u0448\\u0438\\u0440\\u0435\\u043D\\u0438\\u0435\",\n  desktop: \"\\u0414\\u0435\\u0441\\u043A\\u0442\\u043E\\u043F\"\n};\nconst button = {\n  connectWallet: \"\\u041F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u044C \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A\",\n  dropdown: {\n    copy: \"\\u0421\\u043A\\u043E\\u043F\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0430\\u0434\\u0440\\u0435\\u0441\",\n    copied: \"\\u0410\\u0434\\u0440\\u0435\\u0441 \\u0441\\u043A\\u043E\\u043F\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D!\",\n    disconnect: \"\\u041E\\u0442\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u044C \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A\"\n  }\n};\nconst notifications = {\n  confirm: {\n    header: \"\\u041E\\u0442\\u043A\\u0440\\u043E\\u0439\\u0442\\u0435 {{ name }}, \\u0447\\u0442\\u043E\\u0431\\u044B\\xA0\\u043F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u044C \\u0442\\u0440\\u0430\\u043D\\u0437\\u0430\\u043A\\u0446\\u0438\\u044E.\"\n  },\n  transactionSent: {\n    header: \"\\u0422\\u0440\\u0430\\u043D\\u0437\\u0430\\u043A\\u0446\\u0438\\u044F \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0430\",\n    text: \"\\u0412\\u0430\\u0448\\u0430 \\u0442\\u0440\\u0430\\u043D\\u0437\\u0430\\u043A\\u0446\\u0438\\u044F\\xA0\\u0431\\u0443\\u0434\\u0435\\u0442 \\u043E\\u0431\\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\u043D\\u0430 \\u0447\\u0435\\u0440\\u0435\\u0437\\xA0\\u043D\\u0435\\u0441\\u043A\\u043E\\u043B\\u044C\\u043A\\u043E \\u0441\\u0435\\u043A\\u0443\\u043D\\u0434.\"\n  },\n  transactionCanceled: {\n    header: \"\\u0422\\u0440\\u0430\\u043D\\u0437\\u0430\\u043A\\u0446\\u0438\\u044F \\u043E\\u0442\\u043C\\u0435\\u043D\\u0435\\u043D\\u0430\",\n    text: \"\\u0421\\u043E\\u0441\\u0442\\u043E\\u044F\\u043D\\u0438\\u0435 \\u0432\\u0430\\u0448\\u0435\\u0433\\u043E \\u0441\\u0447\\u0451\\u0442\\u0430 \\u043D\\u0435\\xA0\\u0438\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u0441\\u044F.\"\n  },\n  dataSigned: {\n    header: \"\\u0414\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043F\\u043E\\u0434\\u043F\\u0438\\u0441\\u0430\\u043D\\u044B\"\n  },\n  signDataCanceled: {\n    header: \"\\u041F\\u043E\\u0434\\u043F\\u0438\\u0441\\u044C \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u043E\\u0442\\u043C\\u0435\\u043D\\u0435\\u043D\\u0430\"\n  }\n};\nconst walletItem = {\n  walletOn: \"Wallet \\u0432\",\n  recent: \"\\u041D\\u0435\\u0434\\u0430\\u0432\\u043D\\u0438\\u0439\",\n  installed: \"\\u0423\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\",\n  popular: \"\\u041F\\u043E\\u043F\\u0443\\u043B\\u044F\\u0440\\u0435\\u043D\"\n};\nconst walletModal = {\n  loading: \"\\u041A\\u043E\\u0448\\u0435\\u043B\\u044C\\u043A\\u0438 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0436\\u0430\\u044E\\u0442\\u0441\\u044F\",\n  wallets: \"\\u041A\\u043E\\u0448\\u0435\\u043B\\u044C\\u043A\\u0438\",\n  mobileUniversalModal: {\n    connectYourWallet: \"\\u041F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u0435 TON\\xA0\\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A\",\n    openWalletOnTelegramOrSelect: \"\\u041F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u0435 Wallet \\u0432\\xA0Telegram \\u0438\\u043B\\u0438\\xA0\\u0432\\u044B\\u0431\\u0435\\u0440\\u0435\\u0442\\u0435 \\u0434\\u0440\\u0443\\u0433\\u043E\\u0435 \\u043F\\u0440\\u0438\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0435\",\n    openWalletOnTelegram: \"\\u041E\\u0442\\u043A\\u0440\\u044B\\u0442\\u044C Wallet \\u0432 Telegram\",\n    chooseOtherApplication: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0440\\u0443\\u0433\\u043E\\u0435 \\u043F\\u0440\\u0438\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0435\",\n    openLink: \"\\u041E\\u0442\\u043A\\u0440\\u044B\\u0442\\u044C\",\n    scan: \"\\u041E\\u0442\\u0441\\u043A\\u0430\\u043D\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435 \\u043A\\u0430\\u043C\\u0435\\u0440\\u043E\\u0439 \\u0432\\u0430\\u0448\\u0435\\u0433\\u043E\\xA0\\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\"\n  },\n  desktopUniversalModal: {\n    connectYourWallet: \"\\u041F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u0435 TON \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A\",\n    scan: \"\\u041E\\u0442\\u0441\\u043A\\u0430\\u043D\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435 QR-\\u043A\\u043E\\u0434 \\u043A\\u0430\\u043C\\u0435\\u0440\\u043E\\u0439 \\u0432\\u0430\\u0448\\u0435\\u0433\\u043E\\xA0\\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\",\n    availableWallets: \"\\u0414\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435 \\u043A\\u043E\\u0448\\u0435\\u043B\\u044C\\u043A\\u0438\"\n  },\n  mobileConnectionModal: {\n    showQR: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C QR-\\u043A\\u043E\\u0434\",\n    scanQR: \"\\u041E\\u0442\\u0441\\u043A\\u0430\\u043D\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435 QR-\\u043A\\u043E\\u0434 \\u043D\\u0438\\u0436\\u0435 \\u043A\\u0430\\u043C\\u0435\\u0440\\u043E\\u0439 \\u0432\\xA0\\u043F\\u0440\\u0438\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0438 {{ name }}, \\u0438\\u043B\\u0438\\xA0\\u043A\\u0430\\u043C\\u0435\\u0440\\u043E\\u0439 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\",\n    missingFeatures: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u0435 {{ name }}, \\u0432\\u0430\\u0448\\u0430 \\u0432\\u0435\\u0440\\u0441\\u0438\\u044F \\u043D\\u0435 \\u043F\\u043E\\u0434\\u0434\\u0435\\u0440\\u0436\\u0438\\u0432\\u0430\\u0435\\u0442 \\u043D\\u0435\\u043E\\u0431\\u0445\\u043E\\u0434\\u0438\\u043C\\u044B\\u0435 \\u0444\\u0443\\u043D\\u043A\\u0446\\u0438\\u0438 \\u0434\\u043B\\u044F \\u044D\\u0442\\u043E\\u0433\\u043E dApp\",\n    notSupportedWallet: \"{{ name }} \\u043D\\u0435 \\u043F\\u043E\\u0434\\u0434\\u0435\\u0440\\u0436\\u0438\\u0432\\u0430\\u0435\\u0442 \\u0437\\u0430\\u043F\\u0440\\u043E\\u0448\\u0435\\u043D\\u043D\\u043E\\u0435 \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435. \\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u043F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u0435 \\u0434\\u0440\\u0443\\u0433\\u043E\\u0439 \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A, \\u043A\\u043E\\u0442\\u043E\\u0440\\u044B\\u0439 \\u043F\\u043E\\u0434\\u0434\\u0435\\u0440\\u0436\\u0438\\u0432\\u0430\\u0435\\u0442 \\u044D\\u0442\\u043E\",\n    continueIn: \"\\u041F\\u0440\\u043E\\u0434\\u043E\\u043B\\u0436\\u0438\\u0442\\u0435 \\u0432 {{ name }}\\u2026\",\n    updateWallet: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C {{ name }}\",\n    chooseAnotherWallet: \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0434\\u0440\\u0443\\u0433\\u043E\\u0439 \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A\",\n    connectionDeclined: \"\\u041F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0435\\u043D\\u0438\\u0435 \\u043E\\u0442\\u043A\\u043B\\u043E\\u043D\\u0435\\u043D\\u043E\"\n  },\n  desktopConnectionModal: {\n    scanQR: \"\\u041E\\u0442\\u0441\\u043A\\u0430\\u043D\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435 QR-\\u043A\\u043E\\u0434 \\u043D\\u0438\\u0436\\u0435 \\u043A\\u0430\\u043C\\u0435\\u0440\\u043E\\u0439 \\u0432\\xA0\\u043F\\u0440\\u0438\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0438 {{ name }}, \\u0438\\u043B\\u0438\\xA0\\u043A\\u0430\\u043C\\u0435\\u0440\\u043E\\u0439 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\",\n    continueInExtension: \"\\u041E\\u0442\\u043A\\u0440\\u043E\\u0439\\u0442\\u0435 \\u0431\\u0440\\u0430\\u0443\\u0437\\u0435\\u0440\\u043D\\u043E\\u0435 \\u0440\\u0430\\u0441\\u0448\\u0438\\u0440\\u0435\\u043D\\u0438\\u0435 {{ name }}\",\n    dontHaveExtension: \"\\u041F\\u043E\\u0445\\u043E\\u0436\\u0435, \\u0443 \\u0432\\u0430\\u0441 \\u043D\\u0435\\xA0\\u0443\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u043E \\u0431\\u0440\\u0430\\u0443\\u0437\\u0435\\u0440\\u043D\\u043E\\u0435\\xA0\\u0440\\u0430\\u0441\\u0448\\u0438\\u0440\\u0435\\u043D\\u0438\\u0435\\xA0{{ name }}\",\n    missingFeatures: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u0435 {{ name }}, \\u0432\\u0430\\u0448\\u0430 \\u0432\\u0435\\u0440\\u0441\\u0438\\u044F \\u043D\\u0435 \\u043F\\u043E\\u0434\\u0434\\u0435\\u0440\\u0436\\u0438\\u0432\\u0430\\u0435\\u0442 \\u043D\\u0435\\u043E\\u0431\\u0445\\u043E\\u0434\\u0438\\u043C\\u044B\\u0435 \\u0444\\u0443\\u043D\\u043A\\u0446\\u0438\\u0438 \\u0434\\u043B\\u044F \\u044D\\u0442\\u043E\\u0433\\u043E dApp\",\n    notSupportedWallet: \"{{ name }} \\u043D\\u0435 \\u043F\\u043E\\u0434\\u0434\\u0435\\u0440\\u0436\\u0438\\u0432\\u0430\\u0435\\u0442 \\u0437\\u0430\\u043F\\u0440\\u043E\\u0448\\u0435\\u043D\\u043D\\u043E\\u0435 \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435. \\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u043F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u0435 \\u0434\\u0440\\u0443\\u0433\\u043E\\u0439 \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A, \\u043A\\u043E\\u0442\\u043E\\u0440\\u044B\\u0439 \\u043F\\u043E\\u0434\\u0434\\u0435\\u0440\\u0436\\u0438\\u0432\\u0430\\u0435\\u0442 \\u044D\\u0442\\u043E\",\n    getWallet: \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C {{ name }}\",\n    updateWallet: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C {{ name }}\",\n    chooseAnotherWallet: \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0434\\u0440\\u0443\\u0433\\u043E\\u0439 \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A\",\n    continueOnDesktop: \"\\u041E\\u0442\\u043A\\u0440\\u043E\\u0439\\u0442\\u0435 {{ name }} \\u043D\\u0430\\xA0\\u043A\\u043E\\u043C\\u043F\\u044C\\u044E\\u0442\\u0435\\u0440\\u0435\\u2026\",\n    openWalletOnTelegram: \"\\u041E\\u0442\\u043A\\u0440\\u044B\\u0442\\u044C Wallet \\u0432\\xA0Telegram\",\n    connectionDeclined: \"\\u041F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0435\\u043D\\u0438\\u0435 \\u043E\\u0442\\u043A\\u043B\\u043E\\u043D\\u0435\\u043D\\u043E\"\n  },\n  infoModal: {\n    whatIsAWallet: \"\\u0427\\u0442\\u043E \\u0442\\u0430\\u043A\\u043E\\u0435 \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A?\",\n    secureDigitalAssets: \"\\u041D\\u0430\\u0434\\u0435\\u0436\\u043D\\u043E\\u0435 \\u0445\\u0440\\u0430\\u043D\\u0438\\u043B\\u0438\\u0449\\u0435 \\u0446\\u0438\\u0444\\u0440\\u043E\\u0432\\u044B\\u0445 \\u0430\\u043A\\u0442\\u0438\\u0432\\u043E\\u0432\",\n    walletProtects: \"\\u041A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A \\u0437\\u0430\\u0449\\u0438\\u0449\\u0430\\u0435\\u0442 \\u0432\\u0430\\u0448\\u0438 \\u0446\\u0438\\u0444\\u0440\\u043E\\u0432\\u044B\\u0435 \\u0430\\u043A\\u0442\\u0438\\u0432\\u044B, \\u0432\\u043A\\u043B\\u044E\\u0447\\u0430\\u044F TON, \\u0442\\u043E\\u043A\\u0435\\u043D\\u044B \\u0438\\xA0\\u043F\\u0440\\u0435\\u0434\\u043C\\u0435\\u0442\\u044B \\u043A\\u043E\\u043B\\u043B\\u0435\\u043A\\u0446\\u0438\\u043E\\u043D\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F, \\u0438\\xA0\\u0443\\u043F\\u0440\\u0430\\u0432\\u043B\\u044F\\u0435\\u0442 \\u0438\\u043C\\u0438.\",\n    controlIdentity: \"\\u041A\\u043E\\u043D\\u0442\\u0440\\u043E\\u043B\\u044C \\u0441\\u0432\\u043E\\u0435\\u0439 \\u043B\\u0438\\u0447\\u043D\\u043E\\u0441\\u0442\\u0438 Web3\",\n    manageIdentity: \"\\u0423\\u043F\\u0440\\u0430\\u0432\\u043B\\u044F\\u0439\\u0442\\u0435 \\u0441\\u0432\\u043E\\u0435\\u0439 \\u0446\\u0438\\u0444\\u0440\\u043E\\u0432\\u043E\\u0439 \\u0438\\u0434\\u0435\\u043D\\u0442\\u0438\\u0444\\u0438\\u043A\\u0430\\u0446\\u0438\\u0435\\u0439 \\u0438\\xA0\\u0441\\xA0\\u043B\\u0435\\u0433\\u043A\\u043E\\u0441\\u0442\\u044C\\u044E \\u043F\\u043E\\u043B\\u0443\\u0447\\u0430\\u0439\\u0442\\u0435 \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F \\u043A\\xA0\\u0434\\u0435\\u0446\\u0435\\u043D\\u0442\\u0440\\u0430\\u043B\\u0438\\u0437\\u043E\\u0432\\u0430\\u043D\\u043D\\u044B\\u043C \\u043F\\u0440\\u0438\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u044F\\u043C. \\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u044F\\u0439\\u0442\\u0435 \\u043A\\u043E\\u043D\\u0442\\u0440\\u043E\\u043B\\u044C \\u043D\\u0430\\u0434\\xA0\\u0441\\u0432\\u043E\\u0438\\u043C\\u0438 \\u0434\\u0430\\u043D\\u043D\\u044B\\u043C\\u0438 \\u0438\\xA0\\u0431\\u0435\\u0437\\u043E\\u043F\\u0430\\u0441\\u043D\\u043E \\u0443\\u0447\\u0430\\u0441\\u0442\\u0432\\u0443\\u0439\\u0442\\u0435 \\u0432\\xA0\\u044D\\u043A\\u043E\\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0435\\xA0\\u0431\\u043B\\u043E\\u043A\\u0447\\u0435\\u0439\\u043D\\u0430.\",\n    effortlessCryptoTransactions: \"\\u041F\\u0440\\u043E\\u0441\\u0442\\u044B\\u0435 \\u043A\\u0440\\u0438\\u043F\\u0442\\u043E\\u0442\\u0440\\u0430\\u043D\\u0437\\u0430\\u043A\\u0446\\u0438\\u0438\",\n    easilySend: \"\\u041B\\u0435\\u0433\\u043A\\u043E \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043B\\u044F\\u0439\\u0442\\u0435, \\u043F\\u043E\\u043B\\u0443\\u0447\\u0430\\u0439\\u0442\\u0435 \\u0438\\xA0\\u043E\\u0442\\u0441\\u043B\\u0435\\u0436\\u0438\\u0432\\u0430\\u0439\\u0442\\u0435 \\u0441\\u0432\\u043E\\u0438 \\u043A\\u0440\\u0438\\u043F\\u0442\\u043E\\u0432\\u0430\\u043B\\u044E\\u0442\\u044B. \\u041E\\u043F\\u0442\\u0438\\u043C\\u0438\\u0437\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435 \\u0441\\u0432\\u043E\\u0438 \\u043E\\u043F\\u0435\\u0440\\u0430\\u0446\\u0438\\u0438 \\u0441\\xA0\\u043F\\u043E\\u043C\\u043E\\u0449\\u044C\\u044E \\u0434\\u0435\\u0446\\u0435\\u043D\\u0442\\u0440\\u0430\\u043B\\u0438\\u0437\\u043E\\u0432\\u0430\\u043D\\u043D\\u044B\\u0445 \\u043F\\u0440\\u0438\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0439.\",\n    getAWallet: \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A\"\n  },\n  restoreModal: {\n    title: \"\\u0412\\u043E\\u0441\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435\",\n    step1: {\n      title: \"\\u041D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448\\u0443 \\u0442\\u0435\\u043A\\u0443\\u0449\\u0443\\u044E \\u0444\\u0440\\u0430\\u0437\\u0443 \\u0432\\u043E\\u0441\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F\",\n      text: \"\\u041E\\u0442\\u043A\\u0440\\u043E\\u0439\\u0442\\u0435 \\u043D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0439\\u043A\\u0438 \\u043A\\u043E\\u0448\\u0435\\u043B\\u044C\\u043A\\u0430 \\u0438 \\u043D\\u0430\\u0439\\u0434\\u0438\\u0442\\u0435 \\u0444\\u0440\\u0430\\u0437\\u0443\\xA0\\u0432\\u043E\\u0441\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F\"\n    },\n    step2: {\n      title: \"\\u0421\\u043A\\u043E\\u043F\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435 \\u0432\\u0430\\u0448\\u0443 \\u0444\\u0440\\u0430\\u0437\\u0443 \\u0432\\u043E\\u0441\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F\",\n      text: \"\\u0417\\u0430\\u043F\\u0438\\u0448\\u0438\\u0442\\u0435 \\u0435\\u0451 \\u0438\\u043B\\u0438 \\u0441\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u0435 \\u0432 \\u0431\\u0435\\u0437\\u043E\\u043F\\u0430\\u0441\\u043D\\u043E\\u043C \\u043C\\u0435\\u0441\\u0442\\u0435\"\n    },\n    step3: {\n      title: \"\\u0412\\u043E\\u0441\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u0438\\u0442\\u0435 \\u0432 \\u043F\\u043E\\u0434\\u0434\\u0435\\u0440\\u0436\\u0438\\u0432\\u0430\\u0435\\u043C\\u043E\\u043C \\u043A\\u043E\\u0448\\u0435\\u043B\\u044C\\u043A\\u0435\",\n      text: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0444\\u0440\\u0430\\u0437\\u0443 \\u0432\\u043E\\u0441\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F \\u0434\\u043B\\u044F \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u0430\\xA0\\u043A\\xA0\\u0432\\u0430\\u0448\\u0435\\u043C\\u0443\\xA0\\u043A\\u043E\\u0448\\u0435\\u043B\\u044C\\u043A\\u0443\"\n    }\n  },\n  allWallets: {\n    walletsBelowNotSupported: \"\\u041A\\u043E\\u0448\\u0435\\u043B\\u044C\\u043A\\u0438 \\u043D\\u0438\\u0436\\u0435 \\u043D\\u0435 \\u043F\\u043E\\u0434\\u0434\\u0435\\u0440\\u0436\\u0438\\u0432\\u0430\\u044E\\u0442 \\u0432\\u0441\\u0435 \\u0444\\u0443\\u043D\\u043A\\u0446\\u0438\\u0438 \\u043F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0451\\u043D\\u043D\\u043E\\u0433\\u043E \\u0441\\u0435\\u0440\\u0432\\u0438\\u0441\\u0430. \\u0412\\u044B \\u043C\\u043E\\u0436\\u0435\\u0442\\u0435 \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u044C \\u0441\\u0432\\u043E\\u044E \\u0444\\u0440\\u0430\\u0437\\u0443 \\u0432\\u043E\\u0441\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F \\u0432 \\u043E\\u0434\\u043D\\u043E\\u043C \\u0438\\u0437 \\u043F\\u043E\\u0434\\u0434\\u0435\\u0440\\u0436\\u0438\\u0432\\u0430\\u0435\\u043C\\u044B\\u0445 \\u0432\\u044B\\u0448\\u0435 \\u043A\\u043E\\u0448\\u0435\\u043B\\u044C\\u043A\\u043E\\u0432.\",\n    walletNotSupportService: \"{{ name }} \\u043D\\u0435 \\u043F\\u043E\\u0434\\u0434\\u0435\\u0440\\u0436\\u0438\\u0432\\u0430\\u0435\\u0442 \\u043F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0451\\u043D\\u043D\\u044B\\u0439 \\u0441\\u0435\\u0440\\u0432\\u0438\\u0441\"\n  },\n  featureNotSupported: {\n    wallet: {\n      title: \"{{ name }} \\u043D\\u0435 \\u043F\\u043E\\u0434\\u0434\\u0435\\u0440\\u0436\\u0438\\u0432\\u0430\\u0435\\u0442 \\u0437\\u0430\\u043F\\u0440\\u043E\\u0448\\u0435\\u043D\\u043D\\u043E\\u0435\\xA0\\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435\",\n      description: \"\\u0423\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u0438\\u0442\\u0435 \\u043F\\u043E\\u0434\\u0434\\u0435\\u0440\\u0436\\u0438\\u0432\\u0430\\u0435\\u043C\\u044B\\u0439 \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A \\u0438\\u0437 \\u0441\\u043F\\u0438\\u0441\\u043A\\u0430 \\u043D\\u0438\\u0436\\u0435, \\u0432\\u043E\\u0441\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u0438\\u0442\\u0435 \\u0435\\u0433\\u043E \\u0441 \\u043F\\u043E\\u043C\\u043E\\u0449\\u044C\\u044E \\u0444\\u0440\\u0430\\u0437\\u044B \\u0432\\u043E\\u0441\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F, \\u0437\\u0430\\u0442\\u0435\\u043C \\u043F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u0435\\u0441\\u044C \\u0438 \\u043F\\u043E\\u043F\\u0440\\u043E\\u0431\\u0443\\u0439\\u0442\\u0435 \\u0441\\u043D\\u043E\\u0432\\u0430.\",\n      info: \"\\u0423\\u0437\\u043D\\u0430\\u0442\\u044C, \\u043A\\u0430\\u043A \\u0432\\u043E\\u0441\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A\"\n    },\n    version: {\n      description: \"\\u0422\\u0435\\u043A\\u0443\\u0449\\u0430\\u044F \\u0432\\u0435\\u0440\\u0441\\u0438\\u044F {{ name }} \\u0438\\u043B\\u0438 \\u0442\\u0438\\u043F \\u043A\\u043E\\u043D\\u0442\\u0440\\u0430\\u043A\\u0442\\u0430 \\u043A\\u043E\\u0448\\u0435\\u043B\\u044C\\u043A\\u0430 \\u043D\\u0435 \\u043F\\u043E\\u0434\\u0434\\u0435\\u0440\\u0436\\u0438\\u0432\\u0430\\u0435\\u0442 \\u043D\\u0435\\u043E\\u0431\\u0445\\u043E\\u0434\\u0438\\u043C\\u044B\\u0435 \\u0444\\u0443\\u043D\\u043A\\u0446\\u0438\\u0438. \\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u0435 \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A, \\u0447\\u0442\\u043E\\u0431\\u044B \\u043F\\u0440\\u043E\\u0434\\u043E\\u043B\\u0436\\u0438\\u0442\\u044C.\",\n      updateButton: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C {{ name }}\",\n      aboutW5: \"\\u041F\\u0440\\u043E W5\"\n    },\n    disconnect: {\n      title: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u0435 \\u043E\\u0442\\u043A\\u043B\\u044E\\u0447\\u0435\\u043D\\u0438\\u0435\",\n      description: \"\\u0412\\u044B \\u0431\\u0443\\u0434\\u0435\\u0442\\u0435 \\u043E\\u0442\\u043A\\u043B\\u044E\\u0447\\u0435\\u043D\\u044B \\u043E\\u0442 \\u0442\\u0435\\u043A\\u0443\\u0449\\u0435\\u0433\\u043E \\u043A\\u043E\\u0448\\u0435\\u043B\\u044C\\u043A\\u0430 \\u0438 \\u043F\\u0435\\u0440\\u0435\\u043D\\u0430\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u044B \\u043D\\u0430 \\u043F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0435\\u043D\\u0438\\u0435 {{ name }}.\",\n      button: \"\\u041E\\u0442\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u044C\\u0441\\u044F\"\n    }\n  }\n};\nconst actionModal = {\n  confirmTransaction: {\n    header: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u0435 \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435 \\u0432\\xA0{{ name }}\",\n    text: \"\\u042D\\u0442\\u043E \\u0437\\u0430\\u0439\\u043C\\u0435\\u0442 \\u043F\\u0430\\u0440\\u0443 \\u0441\\u0435\\u043A\\u0443\\u043D\\u0434.\"\n  },\n  signData: {\n    header: \"\\u041F\\u043E\\u0434\\u043F\\u0438\\u0448\\u0438\\u0442\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435 \\u0432\\xA0{{ name }}\",\n    text: \"\\u042D\\u0442\\u043E \\u0437\\u0430\\u0439\\u043C\\u0435\\u0442 \\u043F\\u0430\\u0440\\u0443 \\u0441\\u0435\\u043A\\u0443\\u043D\\u0434.\"\n  },\n  transactionSent: \"$notifications.transactionSent\",\n  transactionCanceled: \"$notifications.transactionCanceled\",\n  dataSigned: \"$notifications.dataSigned\",\n  signDataCanceled: \"$notifications.signDataCanceled\"\n};\nconst ru = {\n  common,\n  button,\n  notifications,\n  walletItem,\n  walletModal,\n  actionModal\n};\nconst i18nDictionary = {\n  en: parseDictionary(en),\n  ru: parseDictionary(ru)\n};\nfunction parseDictionary(dictionary) {\n  const refSymbol = \"$\";\n  const iterate = (subDictionary) => {\n    Object.entries(subDictionary).forEach(([key, value]) => {\n      if (typeof value === \"object\" && value) {\n        return iterate(value);\n      }\n      if (typeof value === \"string\") {\n        if (value[0] === refSymbol) {\n          const path = value.slice(1).split(\".\");\n          let obj = dictionary;\n          path.forEach((item) => {\n            if (item in obj) {\n              obj = obj[item];\n            } else {\n              throw new Error(\n                `Cannot parse translations: there is no property ${item} in translation`\n              );\n            }\n          });\n          subDictionary[key] = obj;\n        }\n        if (value.slice(0, 2) === `\\\\${refSymbol}`) {\n          subDictionary[key] = value.slice(1);\n        }\n      }\n    });\n  };\n  iterate(dictionary);\n  return dictionary;\n}\nconst ConnectorContext = createContext();\nconst $RAW = Symbol(\"store-raw\"), $NODE = Symbol(\"store-node\"), $NAME = Symbol(\"store-name\");\nfunction wrap$1(value, name) {\n  let p2 = value[$PROXY];\n  if (!p2) {\n    Object.defineProperty(value, $PROXY, {\n      value: p2 = new Proxy(value, proxyTraps$1)\n    });\n    if (!Array.isArray(value)) {\n      const keys = Object.keys(value), desc = Object.getOwnPropertyDescriptors(value);\n      for (let i2 = 0, l2 = keys.length; i2 < l2; i2++) {\n        const prop = keys[i2];\n        if (desc[prop].get) {\n          Object.defineProperty(value, prop, {\n            enumerable: desc[prop].enumerable,\n            get: desc[prop].get.bind(p2)\n          });\n        }\n      }\n    }\n  }\n  return p2;\n}\nfunction isWrappable(obj) {\n  let proto;\n  return obj != null && typeof obj === \"object\" && (obj[$PROXY] || !(proto = Object.getPrototypeOf(obj)) || proto === Object.prototype || Array.isArray(obj));\n}\nfunction unwrap(item, set = /* @__PURE__ */ new Set()) {\n  let result, unwrapped, v, prop;\n  if (result = item != null && item[$RAW])\n    return result;\n  if (!isWrappable(item) || set.has(item))\n    return item;\n  if (Array.isArray(item)) {\n    if (Object.isFrozen(item))\n      item = item.slice(0);\n    else\n      set.add(item);\n    for (let i2 = 0, l2 = item.length; i2 < l2; i2++) {\n      v = item[i2];\n      if ((unwrapped = unwrap(v, set)) !== v)\n        item[i2] = unwrapped;\n    }\n  } else {\n    if (Object.isFrozen(item))\n      item = Object.assign({}, item);\n    else\n      set.add(item);\n    const keys = Object.keys(item), desc = Object.getOwnPropertyDescriptors(item);\n    for (let i2 = 0, l2 = keys.length; i2 < l2; i2++) {\n      prop = keys[i2];\n      if (desc[prop].get)\n        continue;\n      v = item[prop];\n      if ((unwrapped = unwrap(v, set)) !== v)\n        item[prop] = unwrapped;\n    }\n  }\n  return item;\n}\nfunction getDataNodes(target) {\n  let nodes = target[$NODE];\n  if (!nodes)\n    Object.defineProperty(target, $NODE, {\n      value: nodes = {}\n    });\n  return nodes;\n}\nfunction getDataNode(nodes, property, value) {\n  return nodes[property] || (nodes[property] = createDataNode(value));\n}\nfunction proxyDescriptor$1(target, property) {\n  const desc = Reflect.getOwnPropertyDescriptor(target, property);\n  if (!desc || desc.get || !desc.configurable || property === $PROXY || property === $NODE || property === $NAME)\n    return desc;\n  delete desc.value;\n  delete desc.writable;\n  desc.get = () => target[$PROXY][property];\n  return desc;\n}\nfunction trackSelf(target) {\n  if (getListener()) {\n    const nodes = getDataNodes(target);\n    (nodes._ || (nodes._ = createDataNode()))();\n  }\n}\nfunction ownKeys(target) {\n  trackSelf(target);\n  return Reflect.ownKeys(target);\n}\nfunction createDataNode(value) {\n  const [s2, set] = createSignal(value, {\n    equals: false,\n    internal: true\n  });\n  s2.$ = set;\n  return s2;\n}\nconst proxyTraps$1 = {\n  get(target, property, receiver) {\n    if (property === $RAW)\n      return target;\n    if (property === $PROXY)\n      return receiver;\n    if (property === $TRACK) {\n      trackSelf(target);\n      return receiver;\n    }\n    const nodes = getDataNodes(target);\n    const tracked = nodes.hasOwnProperty(property);\n    let value = tracked ? nodes[property]() : target[property];\n    if (property === $NODE || property === \"__proto__\")\n      return value;\n    if (!tracked) {\n      const desc = Object.getOwnPropertyDescriptor(target, property);\n      if (getListener() && (typeof value !== \"function\" || target.hasOwnProperty(property)) && !(desc && desc.get))\n        value = getDataNode(nodes, property, value)();\n    }\n    return isWrappable(value) ? wrap$1(value) : value;\n  },\n  has(target, property) {\n    if (property === $RAW || property === $PROXY || property === $TRACK || property === $NODE || property === \"__proto__\")\n      return true;\n    this.get(target, property, target);\n    return property in target;\n  },\n  set() {\n    return true;\n  },\n  deleteProperty() {\n    return true;\n  },\n  ownKeys,\n  getOwnPropertyDescriptor: proxyDescriptor$1\n};\nfunction setProperty(state, property, value, deleting = false) {\n  if (!deleting && state[property] === value)\n    return;\n  const prev = state[property], len = state.length;\n  if (value === void 0)\n    delete state[property];\n  else\n    state[property] = value;\n  let nodes = getDataNodes(state), node;\n  if (node = getDataNode(nodes, property, prev))\n    node.$(() => value);\n  if (Array.isArray(state) && state.length !== len)\n    (node = getDataNode(nodes, \"length\", len)) && node.$(state.length);\n  (node = nodes._) && node.$();\n}\nfunction mergeStoreNode(state, value) {\n  const keys = Object.keys(value);\n  for (let i2 = 0; i2 < keys.length; i2 += 1) {\n    const key = keys[i2];\n    setProperty(state, key, value[key]);\n  }\n}\nfunction updateArray(current, next) {\n  if (typeof next === \"function\")\n    next = next(current);\n  next = unwrap(next);\n  if (Array.isArray(next)) {\n    if (current === next)\n      return;\n    let i2 = 0, len = next.length;\n    for (; i2 < len; i2++) {\n      const value = next[i2];\n      if (current[i2] !== value)\n        setProperty(current, i2, value);\n    }\n    setProperty(current, \"length\", len);\n  } else\n    mergeStoreNode(current, next);\n}\nfunction updatePath(current, path, traversed = []) {\n  let part, prev = current;\n  if (path.length > 1) {\n    part = path.shift();\n    const partType = typeof part, isArray = Array.isArray(current);\n    if (Array.isArray(part)) {\n      for (let i2 = 0; i2 < part.length; i2++) {\n        updatePath(current, [part[i2]].concat(path), traversed);\n      }\n      return;\n    } else if (isArray && partType === \"function\") {\n      for (let i2 = 0; i2 < current.length; i2++) {\n        if (part(current[i2], i2))\n          updatePath(current, [i2].concat(path), traversed);\n      }\n      return;\n    } else if (isArray && partType === \"object\") {\n      const {\n        from = 0,\n        to = current.length - 1,\n        by = 1\n      } = part;\n      for (let i2 = from; i2 <= to; i2 += by) {\n        updatePath(current, [i2].concat(path), traversed);\n      }\n      return;\n    } else if (path.length > 1) {\n      updatePath(current[part], path, [part].concat(traversed));\n      return;\n    }\n    prev = current[part];\n    traversed = [part].concat(traversed);\n  }\n  let value = path[0];\n  if (typeof value === \"function\") {\n    value = value(prev, traversed);\n    if (value === prev)\n      return;\n  }\n  if (part === void 0 && value == void 0)\n    return;\n  value = unwrap(value);\n  if (part === void 0 || isWrappable(prev) && isWrappable(value) && !Array.isArray(value)) {\n    mergeStoreNode(prev, value);\n  } else\n    setProperty(current, part, value);\n}\nfunction createStore(...[store, options]) {\n  const unwrappedStore = unwrap(store || {});\n  const isArray = Array.isArray(unwrappedStore);\n  const wrappedStore = wrap$1(unwrappedStore);\n  function setStore(...args) {\n    batch(() => {\n      isArray && args.length === 1 ? updateArray(unwrappedStore, args[0]) : updatePath(unwrappedStore, args);\n    });\n  }\n  return [wrappedStore, setStore];\n}\nconst defaultLightColorsSet = {\n  constant: {\n    black: \"#000000\",\n    white: \"#FFFFFF\"\n  },\n  connectButton: {\n    background: \"#0098EA\",\n    foreground: \"#FFFFFF\"\n  },\n  accent: \"#0098EA\",\n  telegramButton: \"#0098EA\",\n  icon: {\n    primary: \"#0F0F0F\",\n    secondary: \"#7A8999\",\n    tertiary: \"#C1CAD2\",\n    success: \"#29CC6A\",\n    error: \"#F5A73B\"\n  },\n  background: {\n    primary: \"#FFFFFF\",\n    secondary: \"#F1F3F5\",\n    segment: \"#FFFFFF\",\n    tint: \"#F1F3F5\",\n    qr: \"#F1F3F5\"\n  },\n  text: {\n    primary: \"#0F0F0F\",\n    secondary: \"#6A7785\"\n  }\n};\nconst defaultDarkColorsSet = {\n  constant: {\n    black: \"#000000\",\n    white: \"#FFFFFF\"\n  },\n  connectButton: {\n    background: \"#0098EA\",\n    foreground: \"#FFFFFF\"\n  },\n  accent: \"#E5E5EA\",\n  telegramButton: \"#31A6F5\",\n  icon: {\n    primary: \"#E5E5EA\",\n    secondary: \"#909099\",\n    tertiary: \"#434347\",\n    success: \"#29CC6A\",\n    error: \"#F5A73B\"\n  },\n  background: {\n    primary: \"#121214\",\n    secondary: \"#18181A\",\n    segment: \"#262629\",\n    tint: \"#222224\",\n    qr: \"#FFFFFF\"\n  },\n  text: {\n    primary: \"#E5E5EA\",\n    secondary: \"#7D7D85\"\n  }\n};\n/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\nfunction isObject(o2) {\n  return Object.prototype.toString.call(o2) === \"[object Object]\";\n}\nfunction isPlainObject(o2) {\n  var ctor, prot;\n  if (isObject(o2) === false)\n    return false;\n  ctor = o2.constructor;\n  if (ctor === void 0)\n    return true;\n  prot = ctor.prototype;\n  if (isObject(prot) === false)\n    return false;\n  if (prot.hasOwnProperty(\"isPrototypeOf\") === false) {\n    return false;\n  }\n  return true;\n}\nfunction mergeOptions(options, defaultOptions) {\n  if (!options) {\n    return defaultOptions;\n  }\n  const overwriteMerge = (_, sourceArray, __) => sourceArray;\n  return deepmerge__WEBPACK_IMPORTED_MODULE_2__(defaultOptions, options, {\n    arrayMerge: overwriteMerge,\n    isMergeableObject: isPlainObject\n  });\n}\nconst [themeState, setThemeState] = createStore({\n  theme: THEME.LIGHT,\n  colors: defaultLightColorsSet,\n  borderRadius: \"m\"\n});\nconst themeColorsMappingDefault = {\n  [THEME.LIGHT]: defaultLightColorsSet,\n  [THEME.DARK]: defaultDarkColorsSet\n};\nconst themeCustomColors = {\n  [THEME.LIGHT]: void 0,\n  [THEME.DARK]: void 0\n};\nfunction setTheme(theme, colorsSet) {\n  if (colorsSet) {\n    themeCustomColors[THEME.DARK] = mergeOptions(\n      colorsSet[THEME.DARK],\n      themeCustomColors[THEME.DARK]\n    );\n    themeCustomColors[THEME.LIGHT] = mergeOptions(\n      colorsSet[THEME.LIGHT],\n      themeCustomColors[THEME.LIGHT]\n    );\n  }\n  setThemeState({\n    theme,\n    colors: mergeOptions(themeCustomColors[theme], themeColorsMappingDefault[theme])\n  });\n}\nfunction setBorderRadius(borderRadius) {\n  setThemeState({ borderRadius });\n}\nfunction setColors(colorsSet) {\n  themeCustomColors[THEME.DARK] = mergeOptions(\n    colorsSet[THEME.DARK],\n    themeCustomColors[THEME.DARK]\n  );\n  themeCustomColors[THEME.LIGHT] = mergeOptions(\n    colorsSet[THEME.LIGHT],\n    themeCustomColors[THEME.LIGHT]\n  );\n  setThemeState((state) => ({\n    colors: mergeOptions(\n      themeCustomColors[state.theme],\n      themeColorsMappingDefault[state.theme]\n    )\n  }));\n}\nconst ImagePlaceholder = styled.div`\n    background-color: ${(props) => props.theme.colors.background.secondary};\n`;\nconst Image = (props) => {\n  let imgRef;\n  const [image, setImage] = createSignal(null);\n  createEffect(() => {\n    const img = new window.Image();\n    img.src = props.src;\n    img.alt = props.alt || \"\";\n    img.setAttribute(\"draggable\", \"false\");\n    if (props.class) {\n      img.classList.add(props.class);\n    }\n    if (img.complete) {\n      return setImage(img);\n    }\n    img.addEventListener(\"load\", () => setImage(img));\n    return () => img.removeEventListener(\"load\", () => setImage(img));\n  });\n  return [createComponent(Show, {\n    get when() {\n      return image();\n    },\n    get children() {\n      return image();\n    }\n  }), createComponent(Show, {\n    get when() {\n      return !image();\n    },\n    get children() {\n      return createComponent(ImagePlaceholder, {\n        get [\"class\"]() {\n          return props.class;\n        },\n        ref(r$) {\n          const _ref$ = imgRef;\n          typeof _ref$ === \"function\" ? _ref$(r$) : imgRef = r$;\n        }\n      });\n    }\n  })];\n};\nlet initParams = {};\ntry {\n  let locationHash = location.hash.toString();\n  initParams = urlParseHashParams(locationHash);\n} catch (e2) {\n}\nlet tmaPlatform = \"unknown\";\nif (initParams == null ? void 0 : initParams.tgWebAppPlatform) {\n  tmaPlatform = (_a = initParams.tgWebAppPlatform) != null ? _a : \"unknown\";\n}\nif (tmaPlatform === \"unknown\") {\n  const window2 = getWindow$1();\n  tmaPlatform = (_d = (_c = (_b = window2 == null ? void 0 : window2.Telegram) == null ? void 0 : _b.WebApp) == null ? void 0 : _c.platform) != null ? _d : \"unknown\";\n}\nlet webAppVersion = \"6.0\";\nif (initParams == null ? void 0 : initParams.tgWebAppVersion) {\n  webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n  const window2 = getWindow$1();\n  webAppVersion = (_g = (_f = (_e = window2 == null ? void 0 : window2.Telegram) == null ? void 0 : _e.WebApp) == null ? void 0 : _f.version) != null ? _g : \"6.0\";\n}\nfunction isTmaPlatform(...platforms) {\n  return platforms.includes(tmaPlatform);\n}\nfunction isInTMA() {\n  var _a2;\n  return tmaPlatform !== \"unknown\" || !!((_a2 = getWindow$1()) == null ? void 0 : _a2.TelegramWebviewProxy);\n}\nfunction isInTelegramBrowser() {\n  var _a2;\n  const isTelegramWebview = !!((_a2 = getWindow$1()) == null ? void 0 : _a2.TelegramWebview);\n  return (isInTMA() || isTelegramWebview) && tmaPlatform === \"unknown\";\n}\nfunction sendExpand() {\n  postEvent(\"web_app_expand\", {});\n}\nfunction sendOpenTelegramLink(link, fallback) {\n  const url = new URL(link);\n  if (url.protocol !== \"http:\" && url.protocol !== \"https:\") {\n    if (fallback) {\n      return fallback();\n    }\n    throw new TonConnectUIError(`Url protocol is not supported: ${url}`);\n  }\n  if (url.hostname !== \"t.me\") {\n    if (fallback) {\n      return fallback();\n    }\n    throw new TonConnectUIError(`Url host is not supported: ${url}`);\n  }\n  const pathFull = url.pathname + url.search;\n  if (isIframe() || versionAtLeast(\"6.1\")) {\n    postEvent(\"web_app_open_tg_link\", { path_full: pathFull });\n  } else {\n    openLinkBlank(\"https://t.me\" + pathFull);\n  }\n}\nfunction isIframe() {\n  try {\n    const window2 = getWindow$1();\n    if (!window2) {\n      return false;\n    }\n    return window2.parent != null && window2 !== window2.parent;\n  } catch (e2) {\n    return false;\n  }\n}\nfunction postEvent(eventType, eventData) {\n  try {\n    const window2 = getWindow$1();\n    if (!window2) {\n      throw new TonConnectUIError(`Can't post event to parent window: window is not defined`);\n    }\n    if (window2.TelegramWebviewProxy !== void 0) {\n      logDebug(\"postEvent\", eventType, eventData);\n      window2.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n    } else if (window2.external && \"notify\" in window2.external) {\n      logDebug(\"postEvent\", eventType, eventData);\n      window2.external.notify(JSON.stringify({ eventType, eventData }));\n    } else if (isIframe()) {\n      const trustedTarget = \"*\";\n      const message = JSON.stringify({ eventType, eventData });\n      logDebug(\"postEvent\", eventType, eventData);\n      window2.parent.postMessage(message, trustedTarget);\n    } else {\n      throw new TonConnectUIError(`Can't post event to TMA`);\n    }\n  } catch (e2) {\n    logError(`Can't post event to parent window: ${e2}`);\n  }\n}\nfunction urlParseHashParams(locationHash) {\n  locationHash = locationHash.replace(/^#/, \"\");\n  let params = {};\n  if (!locationHash.length) {\n    return params;\n  }\n  if (locationHash.indexOf(\"=\") < 0 && locationHash.indexOf(\"?\") < 0) {\n    params._path = urlSafeDecode(locationHash);\n    return params;\n  }\n  let qIndex = locationHash.indexOf(\"?\");\n  if (qIndex >= 0) {\n    let pathParam = locationHash.substr(0, qIndex);\n    params._path = urlSafeDecode(pathParam);\n    locationHash = locationHash.substr(qIndex + 1);\n  }\n  let query_params = urlParseQueryString(locationHash);\n  for (let k in query_params) {\n    params[k] = query_params[k];\n  }\n  return params;\n}\nfunction urlSafeDecode(urlencoded) {\n  try {\n    urlencoded = urlencoded.replace(/\\+/g, \"%20\");\n    return decodeURIComponent(urlencoded);\n  } catch (e2) {\n    return urlencoded;\n  }\n}\nfunction urlParseQueryString(queryString) {\n  let params = {};\n  if (!queryString.length) {\n    return params;\n  }\n  let queryStringParams = queryString.split(\"&\");\n  let i2, param, paramName, paramValue;\n  for (i2 = 0; i2 < queryStringParams.length; i2++) {\n    param = queryStringParams[i2].split(\"=\");\n    paramName = urlSafeDecode(param[0]);\n    paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n    params[paramName] = paramValue;\n  }\n  return params;\n}\nfunction versionCompare(v1, v2) {\n  if (typeof v1 !== \"string\")\n    v1 = \"\";\n  if (typeof v2 !== \"string\")\n    v2 = \"\";\n  let v1List = v1.replace(/^\\s+|\\s+$/g, \"\").split(\".\");\n  let v2List = v2.replace(/^\\s+|\\s+$/g, \"\").split(\".\");\n  let a2, i2, p1, p2;\n  a2 = Math.max(v1List.length, v2List.length);\n  for (i2 = 0; i2 < a2; i2++) {\n    p1 = parseInt(v1List[i2]) || 0;\n    p2 = parseInt(v2List[i2]) || 0;\n    if (p1 === p2)\n      continue;\n    if (p1 > p2)\n      return 1;\n    return -1;\n  }\n  return 0;\n}\nfunction versionAtLeast(ver) {\n  return versionCompare(webAppVersion, ver) >= 0;\n}\nconst maxWidth = {\n  mobile: 440,\n  tablet: 1020\n};\nfunction isDevice(device) {\n  const window2 = getWindow$1();\n  if (!window2) {\n    return device === \"desktop\";\n  }\n  if (isTmaPlatform(\"weba\")) {\n    return true;\n  }\n  const width = window2.innerWidth;\n  switch (device) {\n    case \"desktop\":\n      return width > maxWidth.tablet;\n    case \"tablet\":\n      return width > maxWidth.mobile;\n    default:\n    case \"mobile\":\n      return width <= maxWidth.mobile || isOS(\"ios\", \"android\", \"ipad\");\n  }\n}\nfunction media(device) {\n  switch (device) {\n    case \"mobile\":\n      return `@media (max-width: ${maxWidth.mobile}px)`;\n    case \"tablet\":\n      return `@media (max-width: ${maxWidth.tablet}px) (min-width: ${maxWidth.mobile}px)`;\n    default:\n    case \"desktop\":\n      return `@media (min-width: ${maxWidth.tablet}px)`;\n  }\n}\nconst mediaTouch = \"@media (hover: none)\";\nconst mediaNotTouch = \"@media not all and (hover: none)\";\nconst borders$6 = {\n  m: \"100vh\",\n  s: \"8px\",\n  none: \"0\"\n};\nconst scaleValues = {\n  s: 0.02,\n  m: 0.04\n};\nconst ButtonStyled$1 = styled.button`\n    display: ${(props) => props.leftIcon || props.rightIcon ? \"flex\" : \"inline-block\"};\n    gap: ${(props) => props.leftIcon || props.rightIcon ? \"6px\" : \"unset\"};\n    align-items: ${(props) => props.leftIcon || props.rightIcon ? \"center\" : \"unset\"};\n    justify-content: ${(props) => props.leftIcon || props.rightIcon ? \"space-between\" : \"unset\"};\n    background-color: ${(props) => props.appearance === \"flat\" ? \"transparent\" : props.appearance === \"secondary\" ? props.theme.colors.background.tint : rgba(props.theme.colors.accent, 0.12)};\n    color: ${(props) => props.appearance === \"secondary\" ? props.theme.colors.text.primary : props.theme.colors.accent};\n\n    padding: ${(props) => props.appearance === \"flat\" ? \"0\" : \"9px 16px\"};\n    padding-left: ${(props) => props.leftIcon && props.appearance !== \"flat\" ? \"12px\" : \"16px\"};\n    padding-right: ${(props) => props.rightIcon && props.appearance !== \"flat\" ? \"12px\" : \"16px\"};\n    border: none;\n    border-radius: ${(props) => borders$6[props.theme.borderRadius]};\n    cursor: ${(props) => props.disabled ? \"not-allowed\" : \"pointer\"};\n\n    font-size: 14px;\n    font-weight: 510;\n    line-height: 18px;\n\n    transition: transform 0.125s ease-in-out;\n\n    ${mediaNotTouch} {\n        &:hover {\n            transform: ${(props) => props.disabled ? \"unset\" : `scale(${1 + scaleValues[props.scale]})`};\n        }\n    }\n\n    &:active {\n        transform: ${(props) => props.disabled ? \"unset\" : `scale(${1 - scaleValues[props.scale]})`};\n    }\n\n    ${mediaTouch} {\n        &:active {\n            transform: ${(props) => props.disabled ? \"unset\" : `scale(${1 - scaleValues[props.scale] * 2})`};\n        }\n    }\n`;\nfunction useDataAttributes(props) {\n  const keys = untrack(() => Object.keys(props).filter((key) => key.startsWith(\"data-\")));\n  const [dataAttrs] = splitProps(props, keys);\n  return dataAttrs;\n}\nconst Button = (props) => {\n  const dataAttrs = useDataAttributes(props);\n  return createComponent(ButtonStyled$1, mergeProps({\n    get appearance() {\n      return props.appearance || \"primary\";\n    },\n    get [\"class\"]() {\n      return props.class;\n    },\n    onClick: (e2) => {\n      var _a2;\n      return (_a2 = props.onClick) == null ? void 0 : _a2.call(props, e2);\n    },\n    onMouseEnter: (e2) => {\n      var _a2;\n      return (_a2 = props.onMouseEnter) == null ? void 0 : _a2.call(props, e2);\n    },\n    onMouseLeave: (e2) => {\n      var _a2;\n      return (_a2 = props.onMouseLeave) == null ? void 0 : _a2.call(props, e2);\n    },\n    ref(r$) {\n      const _ref$ = props.ref;\n      typeof _ref$ === \"function\" ? _ref$(r$) : props.ref = r$;\n    },\n    get disabled() {\n      return props.disabled;\n    },\n    get scale() {\n      return props.scale || \"m\";\n    },\n    get leftIcon() {\n      return !!props.leftIcon;\n    },\n    get rightIcon() {\n      return !!props.rightIcon;\n    },\n    \"data-tc-button\": \"true\"\n  }, dataAttrs, {\n    get children() {\n      return [createMemo(() => props.leftIcon), createMemo(() => props.children), createMemo(() => props.rightIcon)];\n    }\n  }));\n};\nfunction nextFrame(fn) {\n  requestAnimationFrame(() => {\n    requestAnimationFrame(fn);\n  });\n}\nconst Transition = (props) => {\n  let el;\n  let first = true;\n  const [s1, set1] = createSignal();\n  const [s2, set2] = createSignal();\n  const resolved = children(() => props.children);\n  const {\n    onBeforeEnter,\n    onEnter,\n    onAfterEnter,\n    onBeforeExit,\n    onExit,\n    onAfterExit\n  } = props;\n  const classnames = createMemo(() => {\n    const name = props.name || \"s\";\n    return {\n      enterActiveClass: props.enterActiveClass || name + \"-enter-active\",\n      enterClass: props.enterClass || name + \"-enter\",\n      enterToClass: props.enterToClass || name + \"-enter-to\",\n      exitActiveClass: props.exitActiveClass || name + \"-exit-active\",\n      exitClass: props.exitClass || name + \"-exit\",\n      exitToClass: props.exitToClass || name + \"-exit-to\"\n    };\n  });\n  function enterTransition(el2, prev) {\n    if (!first || props.appear) {\n      let endTransition = function(e2) {\n        if (el2 && (!e2 || e2.target === el2)) {\n          el2.removeEventListener(\"transitionend\", endTransition);\n          el2.removeEventListener(\"animationend\", endTransition);\n          el2.classList.remove(...enterActiveClasses);\n          el2.classList.remove(...enterToClasses);\n          batch(() => {\n            s1() !== el2 && set1(el2);\n            s2() === el2 && set2(void 0);\n          });\n          onAfterEnter && onAfterEnter(el2);\n          if (props.mode === \"inout\")\n            exitTransition(el2, prev);\n        }\n      };\n      const enterClasses = classnames().enterClass.split(\" \");\n      const enterActiveClasses = classnames().enterActiveClass.split(\" \");\n      const enterToClasses = classnames().enterToClass.split(\" \");\n      onBeforeEnter && onBeforeEnter(el2);\n      el2.classList.add(...enterClasses);\n      el2.classList.add(...enterActiveClasses);\n      nextFrame(() => {\n        el2.classList.remove(...enterClasses);\n        el2.classList.add(...enterToClasses);\n        onEnter && onEnter(el2, () => endTransition());\n        if (!onEnter || onEnter.length < 2) {\n          el2.addEventListener(\"transitionend\", endTransition);\n          el2.addEventListener(\"animationend\", endTransition);\n        }\n      });\n    }\n    prev && !props.mode ? set2(el2) : set1(el2);\n  }\n  function exitTransition(el2, prev) {\n    const exitClasses = classnames().exitClass.split(\" \");\n    const exitActiveClasses = classnames().exitActiveClass.split(\" \");\n    const exitToClasses = classnames().exitToClass.split(\" \");\n    if (!prev.parentNode)\n      return endTransition();\n    onBeforeExit && onBeforeExit(prev);\n    prev.classList.add(...exitClasses);\n    prev.classList.add(...exitActiveClasses);\n    nextFrame(() => {\n      prev.classList.remove(...exitClasses);\n      prev.classList.add(...exitToClasses);\n    });\n    onExit && onExit(prev, () => endTransition());\n    if (!onExit || onExit.length < 2) {\n      prev.addEventListener(\"transitionend\", endTransition);\n      prev.addEventListener(\"animationend\", endTransition);\n    }\n    function endTransition(e2) {\n      if (!e2 || e2.target === prev) {\n        prev.removeEventListener(\"transitionend\", endTransition);\n        prev.removeEventListener(\"animationend\", endTransition);\n        prev.classList.remove(...exitActiveClasses);\n        prev.classList.remove(...exitToClasses);\n        s1() === prev && set1(void 0);\n        onAfterExit && onAfterExit(prev);\n        if (props.mode === \"outin\")\n          enterTransition(el2, prev);\n      }\n    }\n  }\n  createComputed((prev) => {\n    el = resolved();\n    while (typeof el === \"function\")\n      el = el();\n    return untrack(() => {\n      if (el && el !== prev) {\n        if (props.mode !== \"outin\")\n          enterTransition(el, prev);\n        else if (first)\n          set1(el);\n      }\n      if (prev && prev !== el && props.mode !== \"inout\")\n        exitTransition(el, prev);\n      first = false;\n      return el;\n    });\n  });\n  return [s1, s2];\n};\nfunction getRect(element) {\n  const {\n    top,\n    bottom,\n    left,\n    right,\n    width,\n    height\n  } = element.getBoundingClientRect();\n  const parentRect = element.parentNode.getBoundingClientRect();\n  return {\n    top: top - parentRect.top,\n    bottom,\n    left: left - parentRect.left,\n    right,\n    width,\n    height\n  };\n}\nconst TransitionGroup = (props) => {\n  const resolved = children(() => props.children);\n  const classnames = createMemo(() => {\n    const name = props.name || \"s\";\n    return {\n      enterActiveClass: props.enterActiveClass || name + \"-enter-active\",\n      enterClass: props.enterClass || name + \"-enter\",\n      enterToClass: props.enterToClass || name + \"-enter-to\",\n      exitActiveClass: props.exitActiveClass || name + \"-exit-active\",\n      exitClass: props.exitClass || name + \"-exit\",\n      exitToClass: props.exitToClass || name + \"-exit-to\",\n      moveClass: props.moveClass || name + \"-move\"\n    };\n  });\n  const {\n    onBeforeEnter,\n    onEnter,\n    onAfterEnter,\n    onBeforeExit,\n    onExit,\n    onAfterExit\n  } = props;\n  const [combined, setCombined] = createSignal();\n  let p2 = [];\n  let first = true;\n  createComputed(() => {\n    const c2 = resolved();\n    const comb = [...c2];\n    const next = new Set(c2);\n    const prev = new Set(p2);\n    const enterClasses = classnames().enterClass.split(\" \");\n    const enterActiveClasses = classnames().enterActiveClass.split(\" \");\n    const enterToClasses = classnames().enterToClass.split(\" \");\n    const exitClasses = classnames().exitClass.split(\" \");\n    const exitActiveClasses = classnames().exitActiveClass.split(\" \");\n    const exitToClasses = classnames().exitToClass.split(\" \");\n    for (let i2 = 0; i2 < c2.length; i2++) {\n      const el = c2[i2];\n      if (!first && !prev.has(el)) {\n        let endTransition = function(e2) {\n          if (el && (!e2 || e2.target === el)) {\n            el.removeEventListener(\"transitionend\", endTransition);\n            el.removeEventListener(\"animationend\", endTransition);\n            el.classList.remove(...enterActiveClasses);\n            el.classList.remove(...enterToClasses);\n            onAfterEnter && onAfterEnter(el);\n          }\n        };\n        onBeforeEnter && onBeforeEnter(el);\n        el.classList.add(...enterClasses);\n        el.classList.add(...enterActiveClasses);\n        nextFrame(() => {\n          el.classList.remove(...enterClasses);\n          el.classList.add(...enterToClasses);\n          onEnter && onEnter(el, () => endTransition());\n          if (!onEnter || onEnter.length < 2) {\n            el.addEventListener(\"transitionend\", endTransition);\n            el.addEventListener(\"animationend\", endTransition);\n          }\n        });\n      }\n    }\n    for (let i2 = 0; i2 < p2.length; i2++) {\n      const old = p2[i2];\n      if (!next.has(old) && old.parentNode) {\n        let endTransition = function(e2) {\n          if (!e2 || e2.target === old) {\n            old.removeEventListener(\"transitionend\", endTransition);\n            old.removeEventListener(\"animationend\", endTransition);\n            old.classList.remove(...exitActiveClasses);\n            old.classList.remove(...exitToClasses);\n            onAfterExit && onAfterExit(old);\n            p2 = p2.filter((i3) => i3 !== old);\n            setCombined(p2);\n          }\n        };\n        comb.splice(i2, 0, old);\n        onBeforeExit && onBeforeExit(old);\n        old.classList.add(...exitClasses);\n        old.classList.add(...exitActiveClasses);\n        nextFrame(() => {\n          old.classList.remove(...exitClasses);\n          old.classList.add(...exitToClasses);\n        });\n        onExit && onExit(old, () => endTransition());\n        if (!onExit || onExit.length < 2) {\n          old.addEventListener(\"transitionend\", endTransition);\n          old.addEventListener(\"animationend\", endTransition);\n        }\n      }\n    }\n    p2 = comb;\n    setCombined(comb);\n  });\n  createEffect((nodes) => {\n    const c2 = combined();\n    c2.forEach((child) => {\n      let n2;\n      if (!(n2 = nodes.get(child))) {\n        nodes.set(child, n2 = {\n          pos: getRect(child),\n          new: !first\n        });\n      } else if (n2.new) {\n        n2.new = false;\n        n2.newPos = getRect(child);\n      }\n      if (n2.new) {\n        child.addEventListener(\"transitionend\", () => {\n          n2.new = false;\n          child.parentNode && (n2.newPos = getRect(child));\n        }, {\n          once: true\n        });\n      }\n      n2.newPos && (n2.pos = n2.newPos);\n      n2.newPos = getRect(child);\n    });\n    if (first) {\n      first = false;\n      return nodes;\n    }\n    c2.forEach((child) => {\n      const c3 = nodes.get(child);\n      const oldPos = c3.pos;\n      const newPos = c3.newPos;\n      const dx = oldPos.left - newPos.left;\n      const dy = oldPos.top - newPos.top;\n      if (dx || dy) {\n        c3.moved = true;\n        const s2 = child.style;\n        s2.transform = `translate(${dx}px,${dy}px)`;\n        s2.transitionDuration = \"0s\";\n      }\n    });\n    document.body.offsetHeight;\n    c2.forEach((child) => {\n      const c3 = nodes.get(child);\n      if (c3.moved) {\n        let endTransition = function(e2) {\n          if (e2 && e2.target !== child || !child.parentNode)\n            return;\n          if (!e2 || /transform$/.test(e2.propertyName)) {\n            child.removeEventListener(\"transitionend\", endTransition);\n            child.classList.remove(...moveClasses);\n          }\n        };\n        c3.moved = false;\n        const s2 = child.style;\n        const moveClasses = classnames().moveClass.split(\" \");\n        child.classList.add(...moveClasses);\n        s2.transform = s2.transitionDuration = \"\";\n        child.addEventListener(\"transitionend\", endTransition);\n      }\n    });\n    return nodes;\n  }, /* @__PURE__ */ new Map());\n  return combined;\n};\nfunction clickOutside$1(el, accessor) {\n  const onClick = (e2) => {\n    var _a2;\n    return !el.contains(e2.target) && ((_a2 = accessor()) == null ? void 0 : _a2());\n  };\n  document.body.addEventListener(\"click\", onClick);\n  onCleanup(() => document.body.removeEventListener(\"click\", onClick));\n}\nfunction escPressed(_, accessor) {\n  const onKeyPress = (e2) => {\n    var _a2, _b2;\n    if (e2.key === \"Escape\") {\n      (_a2 = document.activeElement) == null ? void 0 : _a2.blur();\n      (_b2 = accessor()) == null ? void 0 : _b2();\n    }\n  };\n  document.body.addEventListener(\"keydown\", onKeyPress);\n  onCleanup(() => document.body.removeEventListener(\"keydown\", onKeyPress));\n}\nfunction androidBackHandler$1(_, config) {\n  const {\n    isEnabled,\n    onClose\n  } = config();\n  if (!isEnabled) {\n    return;\n  }\n  const userOSIsAndroid = getUserAgent().os === \"android\";\n  if (!userOSIsAndroid) {\n    return;\n  }\n  window.history.pushState(ROUTE_STATE, \"\");\n  const popstateHandler = (event) => {\n    event.preventDefault();\n    onClose();\n  };\n  window.addEventListener(\"popstate\", popstateHandler, {\n    once: true\n  });\n  onCleanup(() => {\n    window.removeEventListener(\"popstate\", popstateHandler);\n    createMacrotask(() => {\n      var _a2;\n      if (((_a2 = window.history.state) == null ? void 0 : _a2[ROUTE_STATE_KEY]) === true) {\n        window.history.back();\n      }\n    });\n  });\n}\nconst ROUTE_STATE_KEY = \"androidBackHandler\";\nconst ROUTE_STATE = {\n  [ROUTE_STATE_KEY]: true\n};\nconst _tmpl$$v = /* @__PURE__ */ template$1(`<svg><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.2122 14.3407C10.5384 14.0854 10.5959 13.614 10.3406 13.2878L6.20237 8.00003L10.3406 2.71227C10.5959 2.38607 10.5384 1.91469 10.2122 1.6594C9.88604 1.40412 9.41465 1.46161 9.15937 1.7878L4.65937 7.5378C4.44688 7.80932 4.44688 8.19074 4.65937 8.46226L9.15937 14.2123C9.41465 14.5385 9.88604 14.5959 10.2122 14.3407Z\"></path></svg>`, 4, true);\nconst rotationDegrees = {\n  left: 0,\n  top: 90,\n  right: 180,\n  bottom: 270\n};\nconst ArrowIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.secondary;\n  const direction = () => props.direction || \"left\";\n  const Svg = styled(\"svg\")`\n        transform: rotate(${(props2) => rotationDegrees[props2.svgDirection]}deg);\n        transition: transform 0.1s ease-in-out;\n    `;\n  return createComponent(Svg, {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"16\",\n    height: \"16\",\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    get svgDirection() {\n      return direction();\n    },\n    get children() {\n      const _el$ = _tmpl$$v.cloneNode(true);\n      createRenderEffect(() => setAttribute(_el$, \"fill\", fill()));\n      return _el$;\n    }\n  });\n};\nconst _tmpl$$u = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.71966 2.71968C3.01255 2.42678 3.48743 2.42677 3.78032 2.71966L8.00002 6.93925L12.2197 2.71967C12.5126 2.42677 12.9874 2.42678 13.2803 2.71967C13.5732 3.01257 13.5732 3.48744 13.2803 3.78033L9.06068 7.99991L13.2803 12.2197C13.5732 12.5126 13.5732 12.9874 13.2803 13.2803C12.9874 13.5732 12.5126 13.5732 12.2197 13.2803L8.00002 9.06057L3.78033 13.2803C3.48744 13.5732 3.01257 13.5732 2.71967 13.2803C2.42678 12.9874 2.42677 12.5126 2.71967 12.2197L6.93936 7.99991L2.71968 3.78034C2.42678 3.48745 2.42677 3.01257 2.71966 2.71968Z\"></path></svg>`);\nconst CloseIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.secondary;\n  return (() => {\n    const _el$ = _tmpl$$u.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect(() => setAttribute(_el$2, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst IconButtonStyled = styled.button`\n    padding: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    background-color: ${(props) => props.theme.colors.background.tint};\n    border: none;\n    cursor: pointer;\n\n    transition: transform 0.125s ease-in-out;\n\n    ${mediaNotTouch} {\n        &:hover {\n            transform: scale(1.04);\n        }\n    }\n\n    &:active {\n        transform: scale(0.96);\n    }\n\n    ${mediaTouch} {\n        &:active {\n            transform: scale(0.92);\n        }\n    }\n`;\nconst IconButton = (props) => {\n  const dataAttrs = useDataAttributes(props);\n  const icon = () => props.icon || \"close\";\n  return createComponent(IconButtonStyled, mergeProps({\n    get [\"class\"]() {\n      return props.class;\n    },\n    onClick: () => props.onClick(),\n    \"data-tc-icon-button\": \"true\"\n  }, dataAttrs, {\n    get children() {\n      return [createComponent(Show, {\n        get when() {\n          return !!props.children;\n        },\n        get children() {\n          return props.children;\n        }\n      }), createComponent(Show, {\n        get when() {\n          return !props.children;\n        },\n        get children() {\n          return createComponent(Switch, {\n            get children() {\n              return [createComponent(Match, {\n                get when() {\n                  return icon() === \"close\";\n                },\n                get children() {\n                  return createComponent(CloseIcon, {\n                    get fill() {\n                      return props.fill;\n                    }\n                  });\n                }\n              }), createComponent(Match, {\n                get when() {\n                  return icon() === \"arrow\";\n                },\n                get children() {\n                  return createComponent(ArrowIcon, {\n                    get fill() {\n                      return props.fill;\n                    }\n                  });\n                }\n              }), createComponent(Match, {\n                get when() {\n                  return icon() === \"question\";\n                },\n                get children() {\n                  return createComponent(QuestionIcon, {\n                    get fill() {\n                      return props.fill;\n                    }\n                  });\n                }\n              }), createComponent(Match, {\n                get when() {\n                  return typeof icon() !== \"string\";\n                },\n                get children() {\n                  return icon();\n                }\n              })];\n            }\n          });\n        }\n      })];\n    }\n  }));\n};\nconst borders$5 = {\n  m: \"24px\",\n  s: \"16px\",\n  none: \"0\"\n};\nconst ModalBackgroundStyled = styled.div`\n    display: flex;\n    position: fixed;\n    z-index: 1000;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.4);\n    padding: 20px 0;\n    overflow-y: auto;\n\n    ${media(\"mobile\")} {\n        padding-bottom: 0;\n    }\n`;\nconst ModalWrapperClass = u`\n    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08), 0 16px 64px rgba(0, 0, 0, 0.16);\n    width: fit-content;\n    margin: auto;\n\n    ${media(\"mobile\")} {\n        width: 100%;\n        height: fit-content;\n        margin: auto 0 0 0;\n    }\n`;\nconst ModalBodyStyled = styled.div`\n    position: relative;\n    min-height: 100px;\n    width: 416px;\n    padding: 44px 56px 24px;\n\n    box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.04);\n\n    background-color: ${(props) => props.theme.colors.background.primary};\n    border-radius: ${(props) => borders$5[props.theme.borderRadius]};\n\n    ${media(\"mobile\")} {\n        width: 100%;\n    }\n`;\nconst CloseButtonStyled = styled(IconButton)`\n    position: absolute;\n    right: 16px;\n    top: 16px;\n`;\nconst ModalFooterStyled = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 16px 16px 16px 18px;\n    border-radius: 0 0 ${(props) => borders$5[props.theme.borderRadius]}\n        ${(props) => borders$5[props.theme.borderRadius]};\n`;\nconst QuestionButtonStyled = styled(IconButton)`\n    background-color: ${(props) => rgba(props.theme.colors.icon.secondary, 0.12)};\n`;\nclass AnimationTimelineNoop {\n  constructor() {\n    __publicField(this, \"currentTime\", 0);\n  }\n}\nconst _AnimationNoop = class {\n  constructor() {\n    __publicField(this, \"currentTime\", 0);\n    __publicField(this, \"playbackRate\", 1);\n    __publicField(this, \"startTime\", null);\n    __publicField(this, \"timeline\", new AnimationTimelineNoop());\n    __publicField(this, \"finished\", Promise.resolve(this));\n    __publicField(this, \"effect\", null);\n    __publicField(this, \"id\", \"\");\n    __publicField(this, \"pending\", false);\n    __publicField(this, \"playState\", \"finished\");\n    __publicField(this, \"replaceState\", \"active\");\n    __publicField(this, \"ready\", Promise.resolve(this));\n    __publicField(this, \"oncancel\", null);\n    __publicField(this, \"onfinish\", null);\n    __publicField(this, \"onremove\", null);\n  }\n  static create() {\n    if (!_AnimationNoop._instance) {\n      logWarning(\n        \"Animation is not supported in this environment: please consider using the `web-animations-js` polyfill to provide a fallback implementation of the Web Animations API.\"\n      );\n      _AnimationNoop._instance = new _AnimationNoop();\n    }\n    return _AnimationNoop._instance;\n  }\n  cancel() {\n  }\n  finish() {\n  }\n  pause() {\n  }\n  play() {\n  }\n  reverse() {\n  }\n  addEventListener(_type, _listener, _options) {\n  }\n  dispatchEvent(_event) {\n    return false;\n  }\n  removeEventListener(_type, _callback, _options) {\n  }\n  updatePlaybackRate(_playbackRate) {\n  }\n  commitStyles() {\n  }\n  persist() {\n  }\n};\nlet AnimationNoop = _AnimationNoop;\n__publicField(AnimationNoop, \"_instance\", null);\nfunction animate(element, keyframes, options) {\n  if (\"animate\" in element) {\n    return element.animate(keyframes, options);\n  }\n  return AnimationNoop.create();\n}\nconst _tmpl$$t = /* @__PURE__ */ template$1(`<div></div>`);\nconst clickOutside = clickOutside$1;\nconst keyPressed = escPressed;\nconst androidBackHandler = androidBackHandler$1;\nconst Modal = (props) => {\n  const theme = useTheme();\n  const dataAttrs = useDataAttributes(props);\n  createEffect(() => {\n    if (props.opened) {\n      disableScroll();\n    } else {\n      enableScroll();\n    }\n  });\n  return createComponent(Transition, {\n    onBeforeEnter: (el) => {\n      const duration = isDevice(\"mobile\") ? 200 : 100;\n      animate(el, [{\n        opacity: 0\n      }, {\n        opacity: 1\n      }], {\n        duration\n      });\n      if (isDevice(\"mobile\")) {\n        animate(el.firstElementChild, [{\n          transform: \"translateY(390px)\"\n        }, {\n          transform: \"translateY(0)\"\n        }], {\n          duration\n        });\n      }\n    },\n    onExit: (el, done) => {\n      const duration = isDevice(\"mobile\") ? 200 : 100;\n      const backgroundAnimation = animate(el, [{\n        opacity: 1\n      }, {\n        opacity: 0\n      }], {\n        duration\n      });\n      if (isDevice(\"mobile\")) {\n        const contentAnimation = animate(el.firstElementChild, [{\n          transform: \"translateY(0)\"\n        }, {\n          transform: \"translateY(390px)\"\n        }], {\n          duration\n        });\n        Promise.all([backgroundAnimation.finished, contentAnimation.finished]).then(done);\n      } else {\n        backgroundAnimation.finished.then(done);\n      }\n    },\n    get children() {\n      return createComponent(Show, {\n        get when() {\n          return props.opened;\n        },\n        get children() {\n          return createComponent(ModalBackgroundStyled, mergeProps({\n            \"data-tc-modal\": \"true\"\n          }, dataAttrs, {\n            get children() {\n              const _el$ = _tmpl$$t.cloneNode(true);\n              use(androidBackHandler, _el$, () => ({\n                isEnabled: props.enableAndroidBackHandler,\n                onClose: () => props.onClose()\n              }));\n              use(keyPressed, _el$, () => () => props.onClose());\n              use(clickOutside, _el$, () => () => props.onClose());\n              insert(_el$, createComponent(ModalBodyStyled, {\n                get [\"class\"]() {\n                  return props.class;\n                },\n                get children() {\n                  return [createComponent(CloseButtonStyled, {\n                    icon: \"close\",\n                    onClick: () => props.onClose()\n                  }), createMemo(() => props.children)];\n                }\n              }), null);\n              insert(_el$, createComponent(Show, {\n                get when() {\n                  return props.onClickQuestion && props.showFooter;\n                },\n                get children() {\n                  return createComponent(ModalFooterStyled, {\n                    get children() {\n                      return [createComponent(TonConnectBrand, {}), createComponent(QuestionButtonStyled, {\n                        get onClick() {\n                          return props.onClickQuestion;\n                        },\n                        icon: \"question\"\n                      })];\n                    }\n                  });\n                }\n              }), null);\n              createRenderEffect(() => className(_el$, classnames__WEBPACK_IMPORTED_MODULE_3__(ModalWrapperClass, u`\n                                border-radius: ${borders$5[theme.borderRadius]};\n                                background-color: ${theme.colors.background.tint};\n\n                                ${media(\"mobile\")} {\n                                    border-radius: ${borders$5[theme.borderRadius]}\n                                        ${borders$5[theme.borderRadius]} 0 0;\n                                }\n                            `)));\n              return _el$;\n            }\n          }));\n        }\n      });\n    }\n  });\n};\nconst wrapperBorderRadius = {\n  m: \"22px\",\n  s: \"12px\",\n  none: \"0\"\n};\nconst sliderBorderRadius = {\n  m: \"18px\",\n  s: \"8px\",\n  none: \"0\"\n};\nconst TabBarStyled = styled.div`\n    display: grid;\n    grid-template: 1fr / 1fr 1fr;\n    width: fit-content;\n    justify-items: center;\n    gap: 4px;\n\n    position: relative;\n    padding: 4px;\n    border-radius: ${(props) => wrapperBorderRadius[props.theme.borderRadius]};\n\n    background-color: ${(props) => props.theme.colors.background.secondary};\n`;\nconst SliderStyled = styled.div`\n    position: absolute;\n    top: 4px;\n    left: 4px;\n\n    height: calc(100% - 8px);\n    width: calc(50% - 4px);\n\n    border-radius: ${(props) => sliderBorderRadius[props.theme.borderRadius]};\n    background-color: ${(props) => props.theme.colors.background.segment};\n\n    transform: ${(props) => props.right ? \"translateX(100%)\" : \"translateX(0)\"};\n\n    transition: transform 0.13s ease-in-out;\n`;\nconst InputStyled = styled.input`\n    display: none;\n`;\nconst LabelStyled = styled.label`\n    padding: 9px 12px;\n    z-index: 1;\n\n    cursor: ${(props) => props.isActive ? \"default\" : \"pointer\"};\n\n    transition: transform 0.13s ease-in-out;\n\n    &:hover {\n        transform: ${(props) => props.isActive ? \"none\" : \"scale(1.025)\"};\n    }\n\n    > * {\n        ${(props) => !props.isActive ? `color: ${props.theme.colors.text.secondary};` : \"\"}\n    }\n`;\nconst TabBar = (props) => {\n  const groupName = \"tabBar\" + Math.floor(Math.random() * 1e4);\n  return createComponent(TabBarStyled, {\n    get [\"class\"]() {\n      return props.class;\n    },\n    \"data-tc-tab-bar\": \"true\",\n    get children() {\n      return [createComponent(SliderStyled, {\n        get right() {\n          return props.selectedTabIndex === 1;\n        }\n      }), createComponent(LabelStyled, {\n        get isActive() {\n          return props.selectedTabIndex === 0;\n        },\n        get children() {\n          return [createComponent(InputStyled, {\n            type: \"radio\",\n            name: groupName,\n            get checked() {\n              return props.selectedTabIndex === 0;\n            },\n            onInput: () => {\n              var _a2;\n              return (_a2 = props.onSelectedTabIndexChange) == null ? void 0 : _a2.call(props, 0);\n            }\n          }), createMemo(() => props.tab1)];\n        }\n      }), createComponent(LabelStyled, {\n        get isActive() {\n          return props.selectedTabIndex === 1;\n        },\n        get children() {\n          return [createComponent(InputStyled, {\n            type: \"radio\",\n            get checked() {\n              return props.selectedTabIndex === 1;\n            },\n            name: groupName,\n            onInput: () => {\n              var _a2;\n              return (_a2 = props.onSelectedTabIndexChange) == null ? void 0 : _a2.call(props, 1);\n            }\n          }), createMemo(() => props.tab2)];\n        }\n      })];\n    }\n  });\n};\nconst backgroundBorders = {\n  m: \"16px\",\n  s: \"12px\",\n  none: \"0\"\n};\nconst imageBorders = {\n  m: \"12px\",\n  s: \"8px\",\n  none: \"0\"\n};\nconst qrNormalSize = 256;\nconst imgSizeDefault = 60;\nconst picSizeDefault = 48;\nconst qrPaddingTop = 24;\nconst CopyIconButton = styled.div`\n    width: 52px;\n    height: 52px;\n    background: transparent;\n    position: absolute;\n    right: 0;\n    bottom: 0;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: transform 0.125s ease-in-out;\n`;\nconst QrCodeBackground = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    background-color: ${(props) => props.theme.colors.background.qr};\n    border-radius: ${(props) => backgroundBorders[props.theme.borderRadius]};\n    padding: ${toPx(qrPaddingTop)} 0;\n    height: ${toPx(qrNormalSize + qrPaddingTop * 2)};\n    width: 100%;\n\n    overflow: hidden;\n    cursor: pointer;\n    border: none;\n\n    ${mediaNotTouch} {\n        &:hover {\n            ${CopyIconButton.class} {\n                transform: scale(1.04);\n            }\n        }\n    }\n\n    &:active {\n        ${CopyIconButton.class} {\n            transform: scale(0.96);\n        }\n    }\n\n    ${mediaTouch} {\n        &:active {\n            ${CopyIconButton.class} {\n                transform: scale(0.92);\n            }\n        }\n    }\n`;\nconst QrCodeWrapper$2 = styled.div`\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 0 auto;\n\n    > div:first-child {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n\n    rect {\n        fill: transparent;\n    }\n\n    path {\n        fill: ${(props) => props.theme.colors.constant.black};\n    }\n`;\nconst ImageBackground = styled.div`\n    position: absolute;\n    width: ${toPx(imgSizeDefault)};\n    height: ${toPx(imgSizeDefault)};\n    background: ${(props) => props.theme.colors.background.qr};\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\nconst ImageStyled$3 = styled(Image)`\n    width: ${(props) => toPx(props.size)};\n    height: ${(props) => toPx(props.size)};\n    border-radius: ${(props) => imageBorders[props.theme.borderRadius]};\n    background-color: ${(props) => props.theme.colors.background.qr};\n`;\nconst CopiedBoxStyled = styled.div`\n    position: absolute;\n    bottom: 14px;\n    left: 50%;\n    transform: translate(-50%, 0);\n\n    display: flex;\n    gap: 6px;\n    align-items: center;\n    border-radius: 18px;\n    min-width: 126px;\n    padding: 9px 16px 9px 10px;\n\n    filter: drop-shadow(0px 2px 8px rgba(0, 0, 0, 0.08));\n    background-color: ${(props) => props.theme.colors.background.segment};\n`;\nvar qrcode$1 = { exports: {} };\n(function(module, exports) {\n  var qrcode2 = function() {\n    var qrcode3 = function(typeNumber, errorCorrectionLevel) {\n      var PAD0 = 236;\n      var PAD1 = 17;\n      var _typeNumber = typeNumber;\n      var _errorCorrectionLevel = QRErrorCorrectionLevel[errorCorrectionLevel];\n      var _modules = null;\n      var _moduleCount = 0;\n      var _dataCache = null;\n      var _dataList = [];\n      var _this = {};\n      var makeImpl = function(test, maskPattern) {\n        _moduleCount = _typeNumber * 4 + 17;\n        _modules = function(moduleCount) {\n          var modules = new Array(moduleCount);\n          for (var row = 0; row < moduleCount; row += 1) {\n            modules[row] = new Array(moduleCount);\n            for (var col = 0; col < moduleCount; col += 1) {\n              modules[row][col] = null;\n            }\n          }\n          return modules;\n        }(_moduleCount);\n        setupPositionProbePattern(0, 0);\n        setupPositionProbePattern(_moduleCount - 7, 0);\n        setupPositionProbePattern(0, _moduleCount - 7);\n        setupPositionAdjustPattern();\n        setupTimingPattern();\n        setupTypeInfo(test, maskPattern);\n        if (_typeNumber >= 7) {\n          setupTypeNumber(test);\n        }\n        if (_dataCache == null) {\n          _dataCache = createData(_typeNumber, _errorCorrectionLevel, _dataList);\n        }\n        mapData(_dataCache, maskPattern);\n      };\n      var setupPositionProbePattern = function(row, col) {\n        for (var r = -1; r <= 7; r += 1) {\n          if (row + r <= -1 || _moduleCount <= row + r)\n            continue;\n          for (var c2 = -1; c2 <= 7; c2 += 1) {\n            if (col + c2 <= -1 || _moduleCount <= col + c2)\n              continue;\n            if (0 <= r && r <= 6 && (c2 == 0 || c2 == 6) || 0 <= c2 && c2 <= 6 && (r == 0 || r == 6) || 2 <= r && r <= 4 && 2 <= c2 && c2 <= 4) {\n              _modules[row + r][col + c2] = true;\n            } else {\n              _modules[row + r][col + c2] = false;\n            }\n          }\n        }\n      };\n      var getBestMaskPattern = function() {\n        var minLostPoint = 0;\n        var pattern = 0;\n        for (var i2 = 0; i2 < 8; i2 += 1) {\n          makeImpl(true, i2);\n          var lostPoint = QRUtil.getLostPoint(_this);\n          if (i2 == 0 || minLostPoint > lostPoint) {\n            minLostPoint = lostPoint;\n            pattern = i2;\n          }\n        }\n        return pattern;\n      };\n      var setupTimingPattern = function() {\n        for (var r = 8; r < _moduleCount - 8; r += 1) {\n          if (_modules[r][6] != null) {\n            continue;\n          }\n          _modules[r][6] = r % 2 == 0;\n        }\n        for (var c2 = 8; c2 < _moduleCount - 8; c2 += 1) {\n          if (_modules[6][c2] != null) {\n            continue;\n          }\n          _modules[6][c2] = c2 % 2 == 0;\n        }\n      };\n      var setupPositionAdjustPattern = function() {\n        var pos = QRUtil.getPatternPosition(_typeNumber);\n        for (var i2 = 0; i2 < pos.length; i2 += 1) {\n          for (var j = 0; j < pos.length; j += 1) {\n            var row = pos[i2];\n            var col = pos[j];\n            if (_modules[row][col] != null) {\n              continue;\n            }\n            for (var r = -2; r <= 2; r += 1) {\n              for (var c2 = -2; c2 <= 2; c2 += 1) {\n                if (r == -2 || r == 2 || c2 == -2 || c2 == 2 || r == 0 && c2 == 0) {\n                  _modules[row + r][col + c2] = true;\n                } else {\n                  _modules[row + r][col + c2] = false;\n                }\n              }\n            }\n          }\n        }\n      };\n      var setupTypeNumber = function(test) {\n        var bits = QRUtil.getBCHTypeNumber(_typeNumber);\n        for (var i2 = 0; i2 < 18; i2 += 1) {\n          var mod = !test && (bits >> i2 & 1) == 1;\n          _modules[Math.floor(i2 / 3)][i2 % 3 + _moduleCount - 8 - 3] = mod;\n        }\n        for (var i2 = 0; i2 < 18; i2 += 1) {\n          var mod = !test && (bits >> i2 & 1) == 1;\n          _modules[i2 % 3 + _moduleCount - 8 - 3][Math.floor(i2 / 3)] = mod;\n        }\n      };\n      var setupTypeInfo = function(test, maskPattern) {\n        var data = _errorCorrectionLevel << 3 | maskPattern;\n        var bits = QRUtil.getBCHTypeInfo(data);\n        for (var i2 = 0; i2 < 15; i2 += 1) {\n          var mod = !test && (bits >> i2 & 1) == 1;\n          if (i2 < 6) {\n            _modules[i2][8] = mod;\n          } else if (i2 < 8) {\n            _modules[i2 + 1][8] = mod;\n          } else {\n            _modules[_moduleCount - 15 + i2][8] = mod;\n          }\n        }\n        for (var i2 = 0; i2 < 15; i2 += 1) {\n          var mod = !test && (bits >> i2 & 1) == 1;\n          if (i2 < 8) {\n            _modules[8][_moduleCount - i2 - 1] = mod;\n          } else if (i2 < 9) {\n            _modules[8][15 - i2 - 1 + 1] = mod;\n          } else {\n            _modules[8][15 - i2 - 1] = mod;\n          }\n        }\n        _modules[_moduleCount - 8][8] = !test;\n      };\n      var mapData = function(data, maskPattern) {\n        var inc = -1;\n        var row = _moduleCount - 1;\n        var bitIndex = 7;\n        var byteIndex = 0;\n        var maskFunc = QRUtil.getMaskFunction(maskPattern);\n        for (var col = _moduleCount - 1; col > 0; col -= 2) {\n          if (col == 6)\n            col -= 1;\n          while (true) {\n            for (var c2 = 0; c2 < 2; c2 += 1) {\n              if (_modules[row][col - c2] == null) {\n                var dark = false;\n                if (byteIndex < data.length) {\n                  dark = (data[byteIndex] >>> bitIndex & 1) == 1;\n                }\n                var mask = maskFunc(row, col - c2);\n                if (mask) {\n                  dark = !dark;\n                }\n                _modules[row][col - c2] = dark;\n                bitIndex -= 1;\n                if (bitIndex == -1) {\n                  byteIndex += 1;\n                  bitIndex = 7;\n                }\n              }\n            }\n            row += inc;\n            if (row < 0 || _moduleCount <= row) {\n              row -= inc;\n              inc = -inc;\n              break;\n            }\n          }\n        }\n      };\n      var createBytes = function(buffer, rsBlocks) {\n        var offset = 0;\n        var maxDcCount = 0;\n        var maxEcCount = 0;\n        var dcdata = new Array(rsBlocks.length);\n        var ecdata = new Array(rsBlocks.length);\n        for (var r = 0; r < rsBlocks.length; r += 1) {\n          var dcCount = rsBlocks[r].dataCount;\n          var ecCount = rsBlocks[r].totalCount - dcCount;\n          maxDcCount = Math.max(maxDcCount, dcCount);\n          maxEcCount = Math.max(maxEcCount, ecCount);\n          dcdata[r] = new Array(dcCount);\n          for (var i2 = 0; i2 < dcdata[r].length; i2 += 1) {\n            dcdata[r][i2] = 255 & buffer.getBuffer()[i2 + offset];\n          }\n          offset += dcCount;\n          var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n          var rawPoly = qrPolynomial(dcdata[r], rsPoly.getLength() - 1);\n          var modPoly = rawPoly.mod(rsPoly);\n          ecdata[r] = new Array(rsPoly.getLength() - 1);\n          for (var i2 = 0; i2 < ecdata[r].length; i2 += 1) {\n            var modIndex = i2 + modPoly.getLength() - ecdata[r].length;\n            ecdata[r][i2] = modIndex >= 0 ? modPoly.getAt(modIndex) : 0;\n          }\n        }\n        var totalCodeCount = 0;\n        for (var i2 = 0; i2 < rsBlocks.length; i2 += 1) {\n          totalCodeCount += rsBlocks[i2].totalCount;\n        }\n        var data = new Array(totalCodeCount);\n        var index = 0;\n        for (var i2 = 0; i2 < maxDcCount; i2 += 1) {\n          for (var r = 0; r < rsBlocks.length; r += 1) {\n            if (i2 < dcdata[r].length) {\n              data[index] = dcdata[r][i2];\n              index += 1;\n            }\n          }\n        }\n        for (var i2 = 0; i2 < maxEcCount; i2 += 1) {\n          for (var r = 0; r < rsBlocks.length; r += 1) {\n            if (i2 < ecdata[r].length) {\n              data[index] = ecdata[r][i2];\n              index += 1;\n            }\n          }\n        }\n        return data;\n      };\n      var createData = function(typeNumber2, errorCorrectionLevel2, dataList) {\n        var rsBlocks = QRRSBlock.getRSBlocks(typeNumber2, errorCorrectionLevel2);\n        var buffer = qrBitBuffer();\n        for (var i2 = 0; i2 < dataList.length; i2 += 1) {\n          var data = dataList[i2];\n          buffer.put(data.getMode(), 4);\n          buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber2));\n          data.write(buffer);\n        }\n        var totalDataCount = 0;\n        for (var i2 = 0; i2 < rsBlocks.length; i2 += 1) {\n          totalDataCount += rsBlocks[i2].dataCount;\n        }\n        if (buffer.getLengthInBits() > totalDataCount * 8) {\n          throw \"code length overflow. (\" + buffer.getLengthInBits() + \">\" + totalDataCount * 8 + \")\";\n        }\n        if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n          buffer.put(0, 4);\n        }\n        while (buffer.getLengthInBits() % 8 != 0) {\n          buffer.putBit(false);\n        }\n        while (true) {\n          if (buffer.getLengthInBits() >= totalDataCount * 8) {\n            break;\n          }\n          buffer.put(PAD0, 8);\n          if (buffer.getLengthInBits() >= totalDataCount * 8) {\n            break;\n          }\n          buffer.put(PAD1, 8);\n        }\n        return createBytes(buffer, rsBlocks);\n      };\n      _this.addData = function(data, mode) {\n        mode = mode || \"Byte\";\n        var newData = null;\n        switch (mode) {\n          case \"Numeric\":\n            newData = qrNumber(data);\n            break;\n          case \"Alphanumeric\":\n            newData = qrAlphaNum(data);\n            break;\n          case \"Byte\":\n            newData = qr8BitByte(data);\n            break;\n          case \"Kanji\":\n            newData = qrKanji(data);\n            break;\n          default:\n            throw \"mode:\" + mode;\n        }\n        _dataList.push(newData);\n        _dataCache = null;\n      };\n      _this.isDark = function(row, col) {\n        if (row < 0 || _moduleCount <= row || col < 0 || _moduleCount <= col) {\n          throw row + \",\" + col;\n        }\n        return _modules[row][col];\n      };\n      _this.getModuleCount = function() {\n        return _moduleCount;\n      };\n      _this.make = function() {\n        if (_typeNumber < 1) {\n          var typeNumber2 = 1;\n          for (; typeNumber2 < 40; typeNumber2++) {\n            var rsBlocks = QRRSBlock.getRSBlocks(typeNumber2, _errorCorrectionLevel);\n            var buffer = qrBitBuffer();\n            for (var i2 = 0; i2 < _dataList.length; i2++) {\n              var data = _dataList[i2];\n              buffer.put(data.getMode(), 4);\n              buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber2));\n              data.write(buffer);\n            }\n            var totalDataCount = 0;\n            for (var i2 = 0; i2 < rsBlocks.length; i2++) {\n              totalDataCount += rsBlocks[i2].dataCount;\n            }\n            if (buffer.getLengthInBits() <= totalDataCount * 8) {\n              break;\n            }\n          }\n          _typeNumber = typeNumber2;\n        }\n        makeImpl(false, getBestMaskPattern());\n      };\n      _this.createTableTag = function(cellSize, margin) {\n        cellSize = cellSize || 2;\n        margin = typeof margin == \"undefined\" ? cellSize * 4 : margin;\n        var qrHtml = \"\";\n        qrHtml += '<table style=\"';\n        qrHtml += \" border-width: 0px; border-style: none;\";\n        qrHtml += \" border-collapse: collapse;\";\n        qrHtml += \" padding: 0px; margin: \" + margin + \"px;\";\n        qrHtml += '\">';\n        qrHtml += \"<tbody>\";\n        for (var r = 0; r < _this.getModuleCount(); r += 1) {\n          qrHtml += \"<tr>\";\n          for (var c2 = 0; c2 < _this.getModuleCount(); c2 += 1) {\n            qrHtml += '<td style=\"';\n            qrHtml += \" border-width: 0px; border-style: none;\";\n            qrHtml += \" border-collapse: collapse;\";\n            qrHtml += \" padding: 0px; margin: 0px;\";\n            qrHtml += \" width: \" + cellSize + \"px;\";\n            qrHtml += \" height: \" + cellSize + \"px;\";\n            qrHtml += \" background-color: \";\n            qrHtml += _this.isDark(r, c2) ? \"#000000\" : \"#ffffff\";\n            qrHtml += \";\";\n            qrHtml += '\"/>';\n          }\n          qrHtml += \"</tr>\";\n        }\n        qrHtml += \"</tbody>\";\n        qrHtml += \"</table>\";\n        return qrHtml;\n      };\n      _this.createSvgTag = function(cellSize, margin, alt, title) {\n        var opts = {};\n        if (typeof arguments[0] == \"object\") {\n          opts = arguments[0];\n          cellSize = opts.cellSize;\n          margin = opts.margin;\n          alt = opts.alt;\n          title = opts.title;\n        }\n        cellSize = cellSize || 2;\n        margin = typeof margin == \"undefined\" ? cellSize * 4 : margin;\n        alt = typeof alt === \"string\" ? { text: alt } : alt || {};\n        alt.text = alt.text || null;\n        alt.id = alt.text ? alt.id || \"qrcode-description\" : null;\n        title = typeof title === \"string\" ? { text: title } : title || {};\n        title.text = title.text || null;\n        title.id = title.text ? title.id || \"qrcode-title\" : null;\n        var size = _this.getModuleCount() * cellSize + margin * 2;\n        var c2, mc, r, mr, qrSvg = \"\", rect;\n        rect = \"l\" + cellSize + \",0 0,\" + cellSize + \" -\" + cellSize + \",0 0,-\" + cellSize + \"z \";\n        qrSvg += '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"';\n        qrSvg += !opts.scalable ? ' width=\"' + size + 'px\" height=\"' + size + 'px\"' : \"\";\n        qrSvg += ' viewBox=\"0 0 ' + size + \" \" + size + '\" ';\n        qrSvg += ' preserveAspectRatio=\"xMinYMin meet\"';\n        qrSvg += title.text || alt.text ? ' role=\"img\" aria-labelledby=\"' + escapeXml([title.id, alt.id].join(\" \").trim()) + '\"' : \"\";\n        qrSvg += \">\";\n        qrSvg += title.text ? '<title id=\"' + escapeXml(title.id) + '\">' + escapeXml(title.text) + \"</title>\" : \"\";\n        qrSvg += alt.text ? '<description id=\"' + escapeXml(alt.id) + '\">' + escapeXml(alt.text) + \"</description>\" : \"\";\n        qrSvg += '<rect width=\"100%\" height=\"100%\" fill=\"white\" cx=\"0\" cy=\"0\"/>';\n        qrSvg += '<path d=\"';\n        for (r = 0; r < _this.getModuleCount(); r += 1) {\n          mr = r * cellSize + margin;\n          for (c2 = 0; c2 < _this.getModuleCount(); c2 += 1) {\n            if (_this.isDark(r, c2)) {\n              mc = c2 * cellSize + margin;\n              qrSvg += \"M\" + mc + \",\" + mr + rect;\n            }\n          }\n        }\n        qrSvg += '\" stroke=\"transparent\" fill=\"black\"/>';\n        qrSvg += \"</svg>\";\n        return qrSvg;\n      };\n      _this.createDataURL = function(cellSize, margin) {\n        cellSize = cellSize || 2;\n        margin = typeof margin == \"undefined\" ? cellSize * 4 : margin;\n        var size = _this.getModuleCount() * cellSize + margin * 2;\n        var min2 = margin;\n        var max2 = size - margin;\n        return createDataURL(size, size, function(x, y) {\n          if (min2 <= x && x < max2 && min2 <= y && y < max2) {\n            var c2 = Math.floor((x - min2) / cellSize);\n            var r = Math.floor((y - min2) / cellSize);\n            return _this.isDark(r, c2) ? 0 : 1;\n          } else {\n            return 1;\n          }\n        });\n      };\n      _this.createImgTag = function(cellSize, margin, alt) {\n        cellSize = cellSize || 2;\n        margin = typeof margin == \"undefined\" ? cellSize * 4 : margin;\n        var size = _this.getModuleCount() * cellSize + margin * 2;\n        var img = \"\";\n        img += \"<img\";\n        img += ' src=\"';\n        img += _this.createDataURL(cellSize, margin);\n        img += '\"';\n        img += ' width=\"';\n        img += size;\n        img += '\"';\n        img += ' height=\"';\n        img += size;\n        img += '\"';\n        if (alt) {\n          img += ' alt=\"';\n          img += escapeXml(alt);\n          img += '\"';\n        }\n        img += \"/>\";\n        return img;\n      };\n      var escapeXml = function(s2) {\n        var escaped = \"\";\n        for (var i2 = 0; i2 < s2.length; i2 += 1) {\n          var c2 = s2.charAt(i2);\n          switch (c2) {\n            case \"<\":\n              escaped += \"&lt;\";\n              break;\n            case \">\":\n              escaped += \"&gt;\";\n              break;\n            case \"&\":\n              escaped += \"&amp;\";\n              break;\n            case '\"':\n              escaped += \"&quot;\";\n              break;\n            default:\n              escaped += c2;\n              break;\n          }\n        }\n        return escaped;\n      };\n      var _createHalfASCII = function(margin) {\n        var cellSize = 1;\n        margin = typeof margin == \"undefined\" ? cellSize * 2 : margin;\n        var size = _this.getModuleCount() * cellSize + margin * 2;\n        var min2 = margin;\n        var max2 = size - margin;\n        var y, x, r1, r2, p2;\n        var blocks = {\n          \"\\u2588\\u2588\": \"\\u2588\",\n          \"\\u2588 \": \"\\u2580\",\n          \" \\u2588\": \"\\u2584\",\n          \"  \": \" \"\n        };\n        var blocksLastLineNoMargin = {\n          \"\\u2588\\u2588\": \"\\u2580\",\n          \"\\u2588 \": \"\\u2580\",\n          \" \\u2588\": \" \",\n          \"  \": \" \"\n        };\n        var ascii = \"\";\n        for (y = 0; y < size; y += 2) {\n          r1 = Math.floor((y - min2) / cellSize);\n          r2 = Math.floor((y + 1 - min2) / cellSize);\n          for (x = 0; x < size; x += 1) {\n            p2 = \"\\u2588\";\n            if (min2 <= x && x < max2 && min2 <= y && y < max2 && _this.isDark(r1, Math.floor((x - min2) / cellSize))) {\n              p2 = \" \";\n            }\n            if (min2 <= x && x < max2 && min2 <= y + 1 && y + 1 < max2 && _this.isDark(r2, Math.floor((x - min2) / cellSize))) {\n              p2 += \" \";\n            } else {\n              p2 += \"\\u2588\";\n            }\n            ascii += margin < 1 && y + 1 >= max2 ? blocksLastLineNoMargin[p2] : blocks[p2];\n          }\n          ascii += \"\\n\";\n        }\n        if (size % 2 && margin > 0) {\n          return ascii.substring(0, ascii.length - size - 1) + Array(size + 1).join(\"\\u2580\");\n        }\n        return ascii.substring(0, ascii.length - 1);\n      };\n      _this.createASCII = function(cellSize, margin) {\n        cellSize = cellSize || 1;\n        if (cellSize < 2) {\n          return _createHalfASCII(margin);\n        }\n        cellSize -= 1;\n        margin = typeof margin == \"undefined\" ? cellSize * 2 : margin;\n        var size = _this.getModuleCount() * cellSize + margin * 2;\n        var min2 = margin;\n        var max2 = size - margin;\n        var y, x, r, p2;\n        var white = Array(cellSize + 1).join(\"\\u2588\\u2588\");\n        var black = Array(cellSize + 1).join(\"  \");\n        var ascii = \"\";\n        var line = \"\";\n        for (y = 0; y < size; y += 1) {\n          r = Math.floor((y - min2) / cellSize);\n          line = \"\";\n          for (x = 0; x < size; x += 1) {\n            p2 = 1;\n            if (min2 <= x && x < max2 && min2 <= y && y < max2 && _this.isDark(r, Math.floor((x - min2) / cellSize))) {\n              p2 = 0;\n            }\n            line += p2 ? white : black;\n          }\n          for (r = 0; r < cellSize; r += 1) {\n            ascii += line + \"\\n\";\n          }\n        }\n        return ascii.substring(0, ascii.length - 1);\n      };\n      _this.renderTo2dContext = function(context, cellSize) {\n        cellSize = cellSize || 2;\n        var length = _this.getModuleCount();\n        for (var row = 0; row < length; row++) {\n          for (var col = 0; col < length; col++) {\n            context.fillStyle = _this.isDark(row, col) ? \"black\" : \"white\";\n            context.fillRect(row * cellSize, col * cellSize, cellSize, cellSize);\n          }\n        }\n      };\n      return _this;\n    };\n    qrcode3.stringToBytesFuncs = {\n      \"default\": function(s2) {\n        var bytes = [];\n        for (var i2 = 0; i2 < s2.length; i2 += 1) {\n          var c2 = s2.charCodeAt(i2);\n          bytes.push(c2 & 255);\n        }\n        return bytes;\n      }\n    };\n    qrcode3.stringToBytes = qrcode3.stringToBytesFuncs[\"default\"];\n    qrcode3.createStringToBytes = function(unicodeData, numChars) {\n      var unicodeMap = function() {\n        var bin = base64DecodeInputStream(unicodeData);\n        var read = function() {\n          var b = bin.read();\n          if (b == -1)\n            throw \"eof\";\n          return b;\n        };\n        var count = 0;\n        var unicodeMap2 = {};\n        while (true) {\n          var b0 = bin.read();\n          if (b0 == -1)\n            break;\n          var b1 = read();\n          var b2 = read();\n          var b3 = read();\n          var k = String.fromCharCode(b0 << 8 | b1);\n          var v = b2 << 8 | b3;\n          unicodeMap2[k] = v;\n          count += 1;\n        }\n        if (count != numChars) {\n          throw count + \" != \" + numChars;\n        }\n        return unicodeMap2;\n      }();\n      var unknownChar = \"?\".charCodeAt(0);\n      return function(s2) {\n        var bytes = [];\n        for (var i2 = 0; i2 < s2.length; i2 += 1) {\n          var c2 = s2.charCodeAt(i2);\n          if (c2 < 128) {\n            bytes.push(c2);\n          } else {\n            var b = unicodeMap[s2.charAt(i2)];\n            if (typeof b == \"number\") {\n              if ((b & 255) == b) {\n                bytes.push(b);\n              } else {\n                bytes.push(b >>> 8);\n                bytes.push(b & 255);\n              }\n            } else {\n              bytes.push(unknownChar);\n            }\n          }\n        }\n        return bytes;\n      };\n    };\n    var QRMode = {\n      MODE_NUMBER: 1 << 0,\n      MODE_ALPHA_NUM: 1 << 1,\n      MODE_8BIT_BYTE: 1 << 2,\n      MODE_KANJI: 1 << 3\n    };\n    var QRErrorCorrectionLevel = {\n      L: 1,\n      M: 0,\n      Q: 3,\n      H: 2\n    };\n    var QRMaskPattern = {\n      PATTERN000: 0,\n      PATTERN001: 1,\n      PATTERN010: 2,\n      PATTERN011: 3,\n      PATTERN100: 4,\n      PATTERN101: 5,\n      PATTERN110: 6,\n      PATTERN111: 7\n    };\n    var QRUtil = function() {\n      var PATTERN_POSITION_TABLE = [\n        [],\n        [6, 18],\n        [6, 22],\n        [6, 26],\n        [6, 30],\n        [6, 34],\n        [6, 22, 38],\n        [6, 24, 42],\n        [6, 26, 46],\n        [6, 28, 50],\n        [6, 30, 54],\n        [6, 32, 58],\n        [6, 34, 62],\n        [6, 26, 46, 66],\n        [6, 26, 48, 70],\n        [6, 26, 50, 74],\n        [6, 30, 54, 78],\n        [6, 30, 56, 82],\n        [6, 30, 58, 86],\n        [6, 34, 62, 90],\n        [6, 28, 50, 72, 94],\n        [6, 26, 50, 74, 98],\n        [6, 30, 54, 78, 102],\n        [6, 28, 54, 80, 106],\n        [6, 32, 58, 84, 110],\n        [6, 30, 58, 86, 114],\n        [6, 34, 62, 90, 118],\n        [6, 26, 50, 74, 98, 122],\n        [6, 30, 54, 78, 102, 126],\n        [6, 26, 52, 78, 104, 130],\n        [6, 30, 56, 82, 108, 134],\n        [6, 34, 60, 86, 112, 138],\n        [6, 30, 58, 86, 114, 142],\n        [6, 34, 62, 90, 118, 146],\n        [6, 30, 54, 78, 102, 126, 150],\n        [6, 24, 50, 76, 102, 128, 154],\n        [6, 28, 54, 80, 106, 132, 158],\n        [6, 32, 58, 84, 110, 136, 162],\n        [6, 26, 54, 82, 110, 138, 166],\n        [6, 30, 58, 86, 114, 142, 170]\n      ];\n      var G15 = 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0;\n      var G18 = 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0;\n      var G15_MASK = 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1;\n      var _this = {};\n      var getBCHDigit = function(data) {\n        var digit = 0;\n        while (data != 0) {\n          digit += 1;\n          data >>>= 1;\n        }\n        return digit;\n      };\n      _this.getBCHTypeInfo = function(data) {\n        var d = data << 10;\n        while (getBCHDigit(d) - getBCHDigit(G15) >= 0) {\n          d ^= G15 << getBCHDigit(d) - getBCHDigit(G15);\n        }\n        return (data << 10 | d) ^ G15_MASK;\n      };\n      _this.getBCHTypeNumber = function(data) {\n        var d = data << 12;\n        while (getBCHDigit(d) - getBCHDigit(G18) >= 0) {\n          d ^= G18 << getBCHDigit(d) - getBCHDigit(G18);\n        }\n        return data << 12 | d;\n      };\n      _this.getPatternPosition = function(typeNumber) {\n        return PATTERN_POSITION_TABLE[typeNumber - 1];\n      };\n      _this.getMaskFunction = function(maskPattern) {\n        switch (maskPattern) {\n          case QRMaskPattern.PATTERN000:\n            return function(i2, j) {\n              return (i2 + j) % 2 == 0;\n            };\n          case QRMaskPattern.PATTERN001:\n            return function(i2, j) {\n              return i2 % 2 == 0;\n            };\n          case QRMaskPattern.PATTERN010:\n            return function(i2, j) {\n              return j % 3 == 0;\n            };\n          case QRMaskPattern.PATTERN011:\n            return function(i2, j) {\n              return (i2 + j) % 3 == 0;\n            };\n          case QRMaskPattern.PATTERN100:\n            return function(i2, j) {\n              return (Math.floor(i2 / 2) + Math.floor(j / 3)) % 2 == 0;\n            };\n          case QRMaskPattern.PATTERN101:\n            return function(i2, j) {\n              return i2 * j % 2 + i2 * j % 3 == 0;\n            };\n          case QRMaskPattern.PATTERN110:\n            return function(i2, j) {\n              return (i2 * j % 2 + i2 * j % 3) % 2 == 0;\n            };\n          case QRMaskPattern.PATTERN111:\n            return function(i2, j) {\n              return (i2 * j % 3 + (i2 + j) % 2) % 2 == 0;\n            };\n          default:\n            throw \"bad maskPattern:\" + maskPattern;\n        }\n      };\n      _this.getErrorCorrectPolynomial = function(errorCorrectLength) {\n        var a2 = qrPolynomial([1], 0);\n        for (var i2 = 0; i2 < errorCorrectLength; i2 += 1) {\n          a2 = a2.multiply(qrPolynomial([1, QRMath.gexp(i2)], 0));\n        }\n        return a2;\n      };\n      _this.getLengthInBits = function(mode, type) {\n        if (1 <= type && type < 10) {\n          switch (mode) {\n            case QRMode.MODE_NUMBER:\n              return 10;\n            case QRMode.MODE_ALPHA_NUM:\n              return 9;\n            case QRMode.MODE_8BIT_BYTE:\n              return 8;\n            case QRMode.MODE_KANJI:\n              return 8;\n            default:\n              throw \"mode:\" + mode;\n          }\n        } else if (type < 27) {\n          switch (mode) {\n            case QRMode.MODE_NUMBER:\n              return 12;\n            case QRMode.MODE_ALPHA_NUM:\n              return 11;\n            case QRMode.MODE_8BIT_BYTE:\n              return 16;\n            case QRMode.MODE_KANJI:\n              return 10;\n            default:\n              throw \"mode:\" + mode;\n          }\n        } else if (type < 41) {\n          switch (mode) {\n            case QRMode.MODE_NUMBER:\n              return 14;\n            case QRMode.MODE_ALPHA_NUM:\n              return 13;\n            case QRMode.MODE_8BIT_BYTE:\n              return 16;\n            case QRMode.MODE_KANJI:\n              return 12;\n            default:\n              throw \"mode:\" + mode;\n          }\n        } else {\n          throw \"type:\" + type;\n        }\n      };\n      _this.getLostPoint = function(qrcode4) {\n        var moduleCount = qrcode4.getModuleCount();\n        var lostPoint = 0;\n        for (var row = 0; row < moduleCount; row += 1) {\n          for (var col = 0; col < moduleCount; col += 1) {\n            var sameCount = 0;\n            var dark = qrcode4.isDark(row, col);\n            for (var r = -1; r <= 1; r += 1) {\n              if (row + r < 0 || moduleCount <= row + r) {\n                continue;\n              }\n              for (var c2 = -1; c2 <= 1; c2 += 1) {\n                if (col + c2 < 0 || moduleCount <= col + c2) {\n                  continue;\n                }\n                if (r == 0 && c2 == 0) {\n                  continue;\n                }\n                if (dark == qrcode4.isDark(row + r, col + c2)) {\n                  sameCount += 1;\n                }\n              }\n            }\n            if (sameCount > 5) {\n              lostPoint += 3 + sameCount - 5;\n            }\n          }\n        }\n        for (var row = 0; row < moduleCount - 1; row += 1) {\n          for (var col = 0; col < moduleCount - 1; col += 1) {\n            var count = 0;\n            if (qrcode4.isDark(row, col))\n              count += 1;\n            if (qrcode4.isDark(row + 1, col))\n              count += 1;\n            if (qrcode4.isDark(row, col + 1))\n              count += 1;\n            if (qrcode4.isDark(row + 1, col + 1))\n              count += 1;\n            if (count == 0 || count == 4) {\n              lostPoint += 3;\n            }\n          }\n        }\n        for (var row = 0; row < moduleCount; row += 1) {\n          for (var col = 0; col < moduleCount - 6; col += 1) {\n            if (qrcode4.isDark(row, col) && !qrcode4.isDark(row, col + 1) && qrcode4.isDark(row, col + 2) && qrcode4.isDark(row, col + 3) && qrcode4.isDark(row, col + 4) && !qrcode4.isDark(row, col + 5) && qrcode4.isDark(row, col + 6)) {\n              lostPoint += 40;\n            }\n          }\n        }\n        for (var col = 0; col < moduleCount; col += 1) {\n          for (var row = 0; row < moduleCount - 6; row += 1) {\n            if (qrcode4.isDark(row, col) && !qrcode4.isDark(row + 1, col) && qrcode4.isDark(row + 2, col) && qrcode4.isDark(row + 3, col) && qrcode4.isDark(row + 4, col) && !qrcode4.isDark(row + 5, col) && qrcode4.isDark(row + 6, col)) {\n              lostPoint += 40;\n            }\n          }\n        }\n        var darkCount = 0;\n        for (var col = 0; col < moduleCount; col += 1) {\n          for (var row = 0; row < moduleCount; row += 1) {\n            if (qrcode4.isDark(row, col)) {\n              darkCount += 1;\n            }\n          }\n        }\n        var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n        lostPoint += ratio * 10;\n        return lostPoint;\n      };\n      return _this;\n    }();\n    var QRMath = function() {\n      var EXP_TABLE = new Array(256);\n      var LOG_TABLE = new Array(256);\n      for (var i2 = 0; i2 < 8; i2 += 1) {\n        EXP_TABLE[i2] = 1 << i2;\n      }\n      for (var i2 = 8; i2 < 256; i2 += 1) {\n        EXP_TABLE[i2] = EXP_TABLE[i2 - 4] ^ EXP_TABLE[i2 - 5] ^ EXP_TABLE[i2 - 6] ^ EXP_TABLE[i2 - 8];\n      }\n      for (var i2 = 0; i2 < 255; i2 += 1) {\n        LOG_TABLE[EXP_TABLE[i2]] = i2;\n      }\n      var _this = {};\n      _this.glog = function(n2) {\n        if (n2 < 1) {\n          throw \"glog(\" + n2 + \")\";\n        }\n        return LOG_TABLE[n2];\n      };\n      _this.gexp = function(n2) {\n        while (n2 < 0) {\n          n2 += 255;\n        }\n        while (n2 >= 256) {\n          n2 -= 255;\n        }\n        return EXP_TABLE[n2];\n      };\n      return _this;\n    }();\n    function qrPolynomial(num, shift) {\n      if (typeof num.length == \"undefined\") {\n        throw num.length + \"/\" + shift;\n      }\n      var _num = function() {\n        var offset = 0;\n        while (offset < num.length && num[offset] == 0) {\n          offset += 1;\n        }\n        var _num2 = new Array(num.length - offset + shift);\n        for (var i2 = 0; i2 < num.length - offset; i2 += 1) {\n          _num2[i2] = num[i2 + offset];\n        }\n        return _num2;\n      }();\n      var _this = {};\n      _this.getAt = function(index) {\n        return _num[index];\n      };\n      _this.getLength = function() {\n        return _num.length;\n      };\n      _this.multiply = function(e2) {\n        var num2 = new Array(_this.getLength() + e2.getLength() - 1);\n        for (var i2 = 0; i2 < _this.getLength(); i2 += 1) {\n          for (var j = 0; j < e2.getLength(); j += 1) {\n            num2[i2 + j] ^= QRMath.gexp(QRMath.glog(_this.getAt(i2)) + QRMath.glog(e2.getAt(j)));\n          }\n        }\n        return qrPolynomial(num2, 0);\n      };\n      _this.mod = function(e2) {\n        if (_this.getLength() - e2.getLength() < 0) {\n          return _this;\n        }\n        var ratio = QRMath.glog(_this.getAt(0)) - QRMath.glog(e2.getAt(0));\n        var num2 = new Array(_this.getLength());\n        for (var i2 = 0; i2 < _this.getLength(); i2 += 1) {\n          num2[i2] = _this.getAt(i2);\n        }\n        for (var i2 = 0; i2 < e2.getLength(); i2 += 1) {\n          num2[i2] ^= QRMath.gexp(QRMath.glog(e2.getAt(i2)) + ratio);\n        }\n        return qrPolynomial(num2, 0).mod(e2);\n      };\n      return _this;\n    }\n    var QRRSBlock = function() {\n      var RS_BLOCK_TABLE = [\n        [1, 26, 19],\n        [1, 26, 16],\n        [1, 26, 13],\n        [1, 26, 9],\n        [1, 44, 34],\n        [1, 44, 28],\n        [1, 44, 22],\n        [1, 44, 16],\n        [1, 70, 55],\n        [1, 70, 44],\n        [2, 35, 17],\n        [2, 35, 13],\n        [1, 100, 80],\n        [2, 50, 32],\n        [2, 50, 24],\n        [4, 25, 9],\n        [1, 134, 108],\n        [2, 67, 43],\n        [2, 33, 15, 2, 34, 16],\n        [2, 33, 11, 2, 34, 12],\n        [2, 86, 68],\n        [4, 43, 27],\n        [4, 43, 19],\n        [4, 43, 15],\n        [2, 98, 78],\n        [4, 49, 31],\n        [2, 32, 14, 4, 33, 15],\n        [4, 39, 13, 1, 40, 14],\n        [2, 121, 97],\n        [2, 60, 38, 2, 61, 39],\n        [4, 40, 18, 2, 41, 19],\n        [4, 40, 14, 2, 41, 15],\n        [2, 146, 116],\n        [3, 58, 36, 2, 59, 37],\n        [4, 36, 16, 4, 37, 17],\n        [4, 36, 12, 4, 37, 13],\n        [2, 86, 68, 2, 87, 69],\n        [4, 69, 43, 1, 70, 44],\n        [6, 43, 19, 2, 44, 20],\n        [6, 43, 15, 2, 44, 16],\n        [4, 101, 81],\n        [1, 80, 50, 4, 81, 51],\n        [4, 50, 22, 4, 51, 23],\n        [3, 36, 12, 8, 37, 13],\n        [2, 116, 92, 2, 117, 93],\n        [6, 58, 36, 2, 59, 37],\n        [4, 46, 20, 6, 47, 21],\n        [7, 42, 14, 4, 43, 15],\n        [4, 133, 107],\n        [8, 59, 37, 1, 60, 38],\n        [8, 44, 20, 4, 45, 21],\n        [12, 33, 11, 4, 34, 12],\n        [3, 145, 115, 1, 146, 116],\n        [4, 64, 40, 5, 65, 41],\n        [11, 36, 16, 5, 37, 17],\n        [11, 36, 12, 5, 37, 13],\n        [5, 109, 87, 1, 110, 88],\n        [5, 65, 41, 5, 66, 42],\n        [5, 54, 24, 7, 55, 25],\n        [11, 36, 12, 7, 37, 13],\n        [5, 122, 98, 1, 123, 99],\n        [7, 73, 45, 3, 74, 46],\n        [15, 43, 19, 2, 44, 20],\n        [3, 45, 15, 13, 46, 16],\n        [1, 135, 107, 5, 136, 108],\n        [10, 74, 46, 1, 75, 47],\n        [1, 50, 22, 15, 51, 23],\n        [2, 42, 14, 17, 43, 15],\n        [5, 150, 120, 1, 151, 121],\n        [9, 69, 43, 4, 70, 44],\n        [17, 50, 22, 1, 51, 23],\n        [2, 42, 14, 19, 43, 15],\n        [3, 141, 113, 4, 142, 114],\n        [3, 70, 44, 11, 71, 45],\n        [17, 47, 21, 4, 48, 22],\n        [9, 39, 13, 16, 40, 14],\n        [3, 135, 107, 5, 136, 108],\n        [3, 67, 41, 13, 68, 42],\n        [15, 54, 24, 5, 55, 25],\n        [15, 43, 15, 10, 44, 16],\n        [4, 144, 116, 4, 145, 117],\n        [17, 68, 42],\n        [17, 50, 22, 6, 51, 23],\n        [19, 46, 16, 6, 47, 17],\n        [2, 139, 111, 7, 140, 112],\n        [17, 74, 46],\n        [7, 54, 24, 16, 55, 25],\n        [34, 37, 13],\n        [4, 151, 121, 5, 152, 122],\n        [4, 75, 47, 14, 76, 48],\n        [11, 54, 24, 14, 55, 25],\n        [16, 45, 15, 14, 46, 16],\n        [6, 147, 117, 4, 148, 118],\n        [6, 73, 45, 14, 74, 46],\n        [11, 54, 24, 16, 55, 25],\n        [30, 46, 16, 2, 47, 17],\n        [8, 132, 106, 4, 133, 107],\n        [8, 75, 47, 13, 76, 48],\n        [7, 54, 24, 22, 55, 25],\n        [22, 45, 15, 13, 46, 16],\n        [10, 142, 114, 2, 143, 115],\n        [19, 74, 46, 4, 75, 47],\n        [28, 50, 22, 6, 51, 23],\n        [33, 46, 16, 4, 47, 17],\n        [8, 152, 122, 4, 153, 123],\n        [22, 73, 45, 3, 74, 46],\n        [8, 53, 23, 26, 54, 24],\n        [12, 45, 15, 28, 46, 16],\n        [3, 147, 117, 10, 148, 118],\n        [3, 73, 45, 23, 74, 46],\n        [4, 54, 24, 31, 55, 25],\n        [11, 45, 15, 31, 46, 16],\n        [7, 146, 116, 7, 147, 117],\n        [21, 73, 45, 7, 74, 46],\n        [1, 53, 23, 37, 54, 24],\n        [19, 45, 15, 26, 46, 16],\n        [5, 145, 115, 10, 146, 116],\n        [19, 75, 47, 10, 76, 48],\n        [15, 54, 24, 25, 55, 25],\n        [23, 45, 15, 25, 46, 16],\n        [13, 145, 115, 3, 146, 116],\n        [2, 74, 46, 29, 75, 47],\n        [42, 54, 24, 1, 55, 25],\n        [23, 45, 15, 28, 46, 16],\n        [17, 145, 115],\n        [10, 74, 46, 23, 75, 47],\n        [10, 54, 24, 35, 55, 25],\n        [19, 45, 15, 35, 46, 16],\n        [17, 145, 115, 1, 146, 116],\n        [14, 74, 46, 21, 75, 47],\n        [29, 54, 24, 19, 55, 25],\n        [11, 45, 15, 46, 46, 16],\n        [13, 145, 115, 6, 146, 116],\n        [14, 74, 46, 23, 75, 47],\n        [44, 54, 24, 7, 55, 25],\n        [59, 46, 16, 1, 47, 17],\n        [12, 151, 121, 7, 152, 122],\n        [12, 75, 47, 26, 76, 48],\n        [39, 54, 24, 14, 55, 25],\n        [22, 45, 15, 41, 46, 16],\n        [6, 151, 121, 14, 152, 122],\n        [6, 75, 47, 34, 76, 48],\n        [46, 54, 24, 10, 55, 25],\n        [2, 45, 15, 64, 46, 16],\n        [17, 152, 122, 4, 153, 123],\n        [29, 74, 46, 14, 75, 47],\n        [49, 54, 24, 10, 55, 25],\n        [24, 45, 15, 46, 46, 16],\n        [4, 152, 122, 18, 153, 123],\n        [13, 74, 46, 32, 75, 47],\n        [48, 54, 24, 14, 55, 25],\n        [42, 45, 15, 32, 46, 16],\n        [20, 147, 117, 4, 148, 118],\n        [40, 75, 47, 7, 76, 48],\n        [43, 54, 24, 22, 55, 25],\n        [10, 45, 15, 67, 46, 16],\n        [19, 148, 118, 6, 149, 119],\n        [18, 75, 47, 31, 76, 48],\n        [34, 54, 24, 34, 55, 25],\n        [20, 45, 15, 61, 46, 16]\n      ];\n      var qrRSBlock = function(totalCount, dataCount) {\n        var _this2 = {};\n        _this2.totalCount = totalCount;\n        _this2.dataCount = dataCount;\n        return _this2;\n      };\n      var _this = {};\n      var getRsBlockTable = function(typeNumber, errorCorrectionLevel) {\n        switch (errorCorrectionLevel) {\n          case QRErrorCorrectionLevel.L:\n            return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n          case QRErrorCorrectionLevel.M:\n            return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n          case QRErrorCorrectionLevel.Q:\n            return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n          case QRErrorCorrectionLevel.H:\n            return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n          default:\n            return void 0;\n        }\n      };\n      _this.getRSBlocks = function(typeNumber, errorCorrectionLevel) {\n        var rsBlock = getRsBlockTable(typeNumber, errorCorrectionLevel);\n        if (typeof rsBlock == \"undefined\") {\n          throw \"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectionLevel:\" + errorCorrectionLevel;\n        }\n        var length = rsBlock.length / 3;\n        var list = [];\n        for (var i2 = 0; i2 < length; i2 += 1) {\n          var count = rsBlock[i2 * 3 + 0];\n          var totalCount = rsBlock[i2 * 3 + 1];\n          var dataCount = rsBlock[i2 * 3 + 2];\n          for (var j = 0; j < count; j += 1) {\n            list.push(qrRSBlock(totalCount, dataCount));\n          }\n        }\n        return list;\n      };\n      return _this;\n    }();\n    var qrBitBuffer = function() {\n      var _buffer = [];\n      var _length = 0;\n      var _this = {};\n      _this.getBuffer = function() {\n        return _buffer;\n      };\n      _this.getAt = function(index) {\n        var bufIndex = Math.floor(index / 8);\n        return (_buffer[bufIndex] >>> 7 - index % 8 & 1) == 1;\n      };\n      _this.put = function(num, length) {\n        for (var i2 = 0; i2 < length; i2 += 1) {\n          _this.putBit((num >>> length - i2 - 1 & 1) == 1);\n        }\n      };\n      _this.getLengthInBits = function() {\n        return _length;\n      };\n      _this.putBit = function(bit) {\n        var bufIndex = Math.floor(_length / 8);\n        if (_buffer.length <= bufIndex) {\n          _buffer.push(0);\n        }\n        if (bit) {\n          _buffer[bufIndex] |= 128 >>> _length % 8;\n        }\n        _length += 1;\n      };\n      return _this;\n    };\n    var qrNumber = function(data) {\n      var _mode = QRMode.MODE_NUMBER;\n      var _data = data;\n      var _this = {};\n      _this.getMode = function() {\n        return _mode;\n      };\n      _this.getLength = function(buffer) {\n        return _data.length;\n      };\n      _this.write = function(buffer) {\n        var data2 = _data;\n        var i2 = 0;\n        while (i2 + 2 < data2.length) {\n          buffer.put(strToNum(data2.substring(i2, i2 + 3)), 10);\n          i2 += 3;\n        }\n        if (i2 < data2.length) {\n          if (data2.length - i2 == 1) {\n            buffer.put(strToNum(data2.substring(i2, i2 + 1)), 4);\n          } else if (data2.length - i2 == 2) {\n            buffer.put(strToNum(data2.substring(i2, i2 + 2)), 7);\n          }\n        }\n      };\n      var strToNum = function(s2) {\n        var num = 0;\n        for (var i2 = 0; i2 < s2.length; i2 += 1) {\n          num = num * 10 + chatToNum(s2.charAt(i2));\n        }\n        return num;\n      };\n      var chatToNum = function(c2) {\n        if (\"0\" <= c2 && c2 <= \"9\") {\n          return c2.charCodeAt(0) - \"0\".charCodeAt(0);\n        }\n        throw \"illegal char :\" + c2;\n      };\n      return _this;\n    };\n    var qrAlphaNum = function(data) {\n      var _mode = QRMode.MODE_ALPHA_NUM;\n      var _data = data;\n      var _this = {};\n      _this.getMode = function() {\n        return _mode;\n      };\n      _this.getLength = function(buffer) {\n        return _data.length;\n      };\n      _this.write = function(buffer) {\n        var s2 = _data;\n        var i2 = 0;\n        while (i2 + 1 < s2.length) {\n          buffer.put(\n            getCode(s2.charAt(i2)) * 45 + getCode(s2.charAt(i2 + 1)),\n            11\n          );\n          i2 += 2;\n        }\n        if (i2 < s2.length) {\n          buffer.put(getCode(s2.charAt(i2)), 6);\n        }\n      };\n      var getCode = function(c2) {\n        if (\"0\" <= c2 && c2 <= \"9\") {\n          return c2.charCodeAt(0) - \"0\".charCodeAt(0);\n        } else if (\"A\" <= c2 && c2 <= \"Z\") {\n          return c2.charCodeAt(0) - \"A\".charCodeAt(0) + 10;\n        } else {\n          switch (c2) {\n            case \" \":\n              return 36;\n            case \"$\":\n              return 37;\n            case \"%\":\n              return 38;\n            case \"*\":\n              return 39;\n            case \"+\":\n              return 40;\n            case \"-\":\n              return 41;\n            case \".\":\n              return 42;\n            case \"/\":\n              return 43;\n            case \":\":\n              return 44;\n            default:\n              throw \"illegal char :\" + c2;\n          }\n        }\n      };\n      return _this;\n    };\n    var qr8BitByte = function(data) {\n      var _mode = QRMode.MODE_8BIT_BYTE;\n      var _bytes = qrcode3.stringToBytes(data);\n      var _this = {};\n      _this.getMode = function() {\n        return _mode;\n      };\n      _this.getLength = function(buffer) {\n        return _bytes.length;\n      };\n      _this.write = function(buffer) {\n        for (var i2 = 0; i2 < _bytes.length; i2 += 1) {\n          buffer.put(_bytes[i2], 8);\n        }\n      };\n      return _this;\n    };\n    var qrKanji = function(data) {\n      var _mode = QRMode.MODE_KANJI;\n      var stringToBytes = qrcode3.stringToBytesFuncs[\"SJIS\"];\n      if (!stringToBytes) {\n        throw \"sjis not supported.\";\n      }\n      !function(c2, code) {\n        var test = stringToBytes(c2);\n        if (test.length != 2 || (test[0] << 8 | test[1]) != code) {\n          throw \"sjis not supported.\";\n        }\n      }(\"\\u53CB\", 38726);\n      var _bytes = stringToBytes(data);\n      var _this = {};\n      _this.getMode = function() {\n        return _mode;\n      };\n      _this.getLength = function(buffer) {\n        return ~~(_bytes.length / 2);\n      };\n      _this.write = function(buffer) {\n        var data2 = _bytes;\n        var i2 = 0;\n        while (i2 + 1 < data2.length) {\n          var c2 = (255 & data2[i2]) << 8 | 255 & data2[i2 + 1];\n          if (33088 <= c2 && c2 <= 40956) {\n            c2 -= 33088;\n          } else if (57408 <= c2 && c2 <= 60351) {\n            c2 -= 49472;\n          } else {\n            throw \"illegal char at \" + (i2 + 1) + \"/\" + c2;\n          }\n          c2 = (c2 >>> 8 & 255) * 192 + (c2 & 255);\n          buffer.put(c2, 13);\n          i2 += 2;\n        }\n        if (i2 < data2.length) {\n          throw \"illegal char at \" + (i2 + 1);\n        }\n      };\n      return _this;\n    };\n    var byteArrayOutputStream = function() {\n      var _bytes = [];\n      var _this = {};\n      _this.writeByte = function(b) {\n        _bytes.push(b & 255);\n      };\n      _this.writeShort = function(i2) {\n        _this.writeByte(i2);\n        _this.writeByte(i2 >>> 8);\n      };\n      _this.writeBytes = function(b, off, len) {\n        off = off || 0;\n        len = len || b.length;\n        for (var i2 = 0; i2 < len; i2 += 1) {\n          _this.writeByte(b[i2 + off]);\n        }\n      };\n      _this.writeString = function(s2) {\n        for (var i2 = 0; i2 < s2.length; i2 += 1) {\n          _this.writeByte(s2.charCodeAt(i2));\n        }\n      };\n      _this.toByteArray = function() {\n        return _bytes;\n      };\n      _this.toString = function() {\n        var s2 = \"\";\n        s2 += \"[\";\n        for (var i2 = 0; i2 < _bytes.length; i2 += 1) {\n          if (i2 > 0) {\n            s2 += \",\";\n          }\n          s2 += _bytes[i2];\n        }\n        s2 += \"]\";\n        return s2;\n      };\n      return _this;\n    };\n    var base64EncodeOutputStream = function() {\n      var _buffer = 0;\n      var _buflen = 0;\n      var _length = 0;\n      var _base64 = \"\";\n      var _this = {};\n      var writeEncoded = function(b) {\n        _base64 += String.fromCharCode(encode(b & 63));\n      };\n      var encode = function(n2) {\n        if (n2 < 0)\n          ;\n        else if (n2 < 26) {\n          return 65 + n2;\n        } else if (n2 < 52) {\n          return 97 + (n2 - 26);\n        } else if (n2 < 62) {\n          return 48 + (n2 - 52);\n        } else if (n2 == 62) {\n          return 43;\n        } else if (n2 == 63) {\n          return 47;\n        }\n        throw \"n:\" + n2;\n      };\n      _this.writeByte = function(n2) {\n        _buffer = _buffer << 8 | n2 & 255;\n        _buflen += 8;\n        _length += 1;\n        while (_buflen >= 6) {\n          writeEncoded(_buffer >>> _buflen - 6);\n          _buflen -= 6;\n        }\n      };\n      _this.flush = function() {\n        if (_buflen > 0) {\n          writeEncoded(_buffer << 6 - _buflen);\n          _buffer = 0;\n          _buflen = 0;\n        }\n        if (_length % 3 != 0) {\n          var padlen = 3 - _length % 3;\n          for (var i2 = 0; i2 < padlen; i2 += 1) {\n            _base64 += \"=\";\n          }\n        }\n      };\n      _this.toString = function() {\n        return _base64;\n      };\n      return _this;\n    };\n    var base64DecodeInputStream = function(str) {\n      var _str = str;\n      var _pos = 0;\n      var _buffer = 0;\n      var _buflen = 0;\n      var _this = {};\n      _this.read = function() {\n        while (_buflen < 8) {\n          if (_pos >= _str.length) {\n            if (_buflen == 0) {\n              return -1;\n            }\n            throw \"unexpected end of file./\" + _buflen;\n          }\n          var c2 = _str.charAt(_pos);\n          _pos += 1;\n          if (c2 == \"=\") {\n            _buflen = 0;\n            return -1;\n          } else if (c2.match(/^\\s$/)) {\n            continue;\n          }\n          _buffer = _buffer << 6 | decode(c2.charCodeAt(0));\n          _buflen += 6;\n        }\n        var n2 = _buffer >>> _buflen - 8 & 255;\n        _buflen -= 8;\n        return n2;\n      };\n      var decode = function(c2) {\n        if (65 <= c2 && c2 <= 90) {\n          return c2 - 65;\n        } else if (97 <= c2 && c2 <= 122) {\n          return c2 - 97 + 26;\n        } else if (48 <= c2 && c2 <= 57) {\n          return c2 - 48 + 52;\n        } else if (c2 == 43) {\n          return 62;\n        } else if (c2 == 47) {\n          return 63;\n        } else {\n          throw \"c:\" + c2;\n        }\n      };\n      return _this;\n    };\n    var gifImage = function(width, height) {\n      var _width = width;\n      var _height = height;\n      var _data = new Array(width * height);\n      var _this = {};\n      _this.setPixel = function(x, y, pixel) {\n        _data[y * _width + x] = pixel;\n      };\n      _this.write = function(out) {\n        out.writeString(\"GIF87a\");\n        out.writeShort(_width);\n        out.writeShort(_height);\n        out.writeByte(128);\n        out.writeByte(0);\n        out.writeByte(0);\n        out.writeByte(0);\n        out.writeByte(0);\n        out.writeByte(0);\n        out.writeByte(255);\n        out.writeByte(255);\n        out.writeByte(255);\n        out.writeString(\",\");\n        out.writeShort(0);\n        out.writeShort(0);\n        out.writeShort(_width);\n        out.writeShort(_height);\n        out.writeByte(0);\n        var lzwMinCodeSize = 2;\n        var raster = getLZWRaster(lzwMinCodeSize);\n        out.writeByte(lzwMinCodeSize);\n        var offset = 0;\n        while (raster.length - offset > 255) {\n          out.writeByte(255);\n          out.writeBytes(raster, offset, 255);\n          offset += 255;\n        }\n        out.writeByte(raster.length - offset);\n        out.writeBytes(raster, offset, raster.length - offset);\n        out.writeByte(0);\n        out.writeString(\";\");\n      };\n      var bitOutputStream = function(out) {\n        var _out = out;\n        var _bitLength = 0;\n        var _bitBuffer = 0;\n        var _this2 = {};\n        _this2.write = function(data, length) {\n          if (data >>> length != 0) {\n            throw \"length over\";\n          }\n          while (_bitLength + length >= 8) {\n            _out.writeByte(255 & (data << _bitLength | _bitBuffer));\n            length -= 8 - _bitLength;\n            data >>>= 8 - _bitLength;\n            _bitBuffer = 0;\n            _bitLength = 0;\n          }\n          _bitBuffer = data << _bitLength | _bitBuffer;\n          _bitLength = _bitLength + length;\n        };\n        _this2.flush = function() {\n          if (_bitLength > 0) {\n            _out.writeByte(_bitBuffer);\n          }\n        };\n        return _this2;\n      };\n      var getLZWRaster = function(lzwMinCodeSize) {\n        var clearCode = 1 << lzwMinCodeSize;\n        var endCode = (1 << lzwMinCodeSize) + 1;\n        var bitLength = lzwMinCodeSize + 1;\n        var table = lzwTable();\n        for (var i2 = 0; i2 < clearCode; i2 += 1) {\n          table.add(String.fromCharCode(i2));\n        }\n        table.add(String.fromCharCode(clearCode));\n        table.add(String.fromCharCode(endCode));\n        var byteOut = byteArrayOutputStream();\n        var bitOut = bitOutputStream(byteOut);\n        bitOut.write(clearCode, bitLength);\n        var dataIndex = 0;\n        var s2 = String.fromCharCode(_data[dataIndex]);\n        dataIndex += 1;\n        while (dataIndex < _data.length) {\n          var c2 = String.fromCharCode(_data[dataIndex]);\n          dataIndex += 1;\n          if (table.contains(s2 + c2)) {\n            s2 = s2 + c2;\n          } else {\n            bitOut.write(table.indexOf(s2), bitLength);\n            if (table.size() < 4095) {\n              if (table.size() == 1 << bitLength) {\n                bitLength += 1;\n              }\n              table.add(s2 + c2);\n            }\n            s2 = c2;\n          }\n        }\n        bitOut.write(table.indexOf(s2), bitLength);\n        bitOut.write(endCode, bitLength);\n        bitOut.flush();\n        return byteOut.toByteArray();\n      };\n      var lzwTable = function() {\n        var _map = {};\n        var _size = 0;\n        var _this2 = {};\n        _this2.add = function(key) {\n          if (_this2.contains(key)) {\n            throw \"dup key:\" + key;\n          }\n          _map[key] = _size;\n          _size += 1;\n        };\n        _this2.size = function() {\n          return _size;\n        };\n        _this2.indexOf = function(key) {\n          return _map[key];\n        };\n        _this2.contains = function(key) {\n          return typeof _map[key] != \"undefined\";\n        };\n        return _this2;\n      };\n      return _this;\n    };\n    var createDataURL = function(width, height, getPixel) {\n      var gif = gifImage(width, height);\n      for (var y = 0; y < height; y += 1) {\n        for (var x = 0; x < width; x += 1) {\n          gif.setPixel(x, y, getPixel(x, y));\n        }\n      }\n      var b = byteArrayOutputStream();\n      gif.write(b);\n      var base64 = base64EncodeOutputStream();\n      var bytes = b.toByteArray();\n      for (var i2 = 0; i2 < bytes.length; i2 += 1) {\n        base64.writeByte(bytes[i2]);\n      }\n      base64.flush();\n      return \"data:image/gif;base64,\" + base64;\n    };\n    return qrcode3;\n  }();\n  !function() {\n    qrcode2.stringToBytesFuncs[\"UTF-8\"] = function(s2) {\n      function toUTF8Array(str) {\n        var utf8 = [];\n        for (var i2 = 0; i2 < str.length; i2++) {\n          var charcode = str.charCodeAt(i2);\n          if (charcode < 128)\n            utf8.push(charcode);\n          else if (charcode < 2048) {\n            utf8.push(\n              192 | charcode >> 6,\n              128 | charcode & 63\n            );\n          } else if (charcode < 55296 || charcode >= 57344) {\n            utf8.push(\n              224 | charcode >> 12,\n              128 | charcode >> 6 & 63,\n              128 | charcode & 63\n            );\n          } else {\n            i2++;\n            charcode = 65536 + ((charcode & 1023) << 10 | str.charCodeAt(i2) & 1023);\n            utf8.push(\n              240 | charcode >> 18,\n              128 | charcode >> 12 & 63,\n              128 | charcode >> 6 & 63,\n              128 | charcode & 63\n            );\n          }\n        }\n        return utf8;\n      }\n      return toUTF8Array(s2);\n    };\n  }();\n  (function(factory) {\n    {\n      module.exports = factory();\n    }\n  })(function() {\n    return qrcode2;\n  });\n})(qrcode$1);\nconst qrcode = qrcode$1.exports;\nfunction copyToClipboard(text) {\n  return __async(this, null, function* () {\n    try {\n      if (!(navigator == null ? void 0 : navigator.clipboard)) {\n        throw new TonConnectUIError(\"Clipboard API not available\");\n      }\n      return yield navigator.clipboard.writeText(text);\n    } catch (e2) {\n    }\n    fallbackCopyTextToClipboard(text);\n  });\n}\nfunction fallbackCopyTextToClipboard(text) {\n  const textArea = document.createElement(\"textarea\");\n  textArea.value = text;\n  textArea.style.top = \"0\";\n  textArea.style.left = \"0\";\n  textArea.style.position = \"fixed\";\n  document.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n  try {\n    document.execCommand(\"copy\");\n  } finally {\n    document.body.removeChild(textArea);\n  }\n}\nconst _tmpl$$s = /* @__PURE__ */ template$1(`<div></div>`);\nconst QRCode = (props) => {\n  let qrCodeCanvasRef;\n  let qrCodeWrapperRef;\n  let imageRef;\n  const [copyButtonOpened, setCopyButtonOpened] = createSignal(false);\n  const [picSize, setPicSize] = createSignal(picSizeDefault);\n  createEffect(() => {\n    const errorCorrectionLevel = \"L\";\n    const cellSize = 4;\n    const qr = qrcode(0, errorCorrectionLevel);\n    qr.addData(props.sourceUrl);\n    qr.make();\n    qrCodeCanvasRef.innerHTML = qr.createSvgTag(cellSize, 0);\n    const qrSize = qrCodeCanvasRef.firstElementChild.clientWidth;\n    const scale = Math.round(qrNormalSize / qrSize * 1e5) / 1e5;\n    if (imageRef) {\n      const imgSize = Math.ceil(imgSizeDefault / (scale * cellSize)) * cellSize;\n      const imgOffset = toPx(Math.ceil((qrSize - imgSize) / (2 * cellSize)) * cellSize);\n      imageRef.style.top = imgOffset;\n      imageRef.style.left = imgOffset;\n      imageRef.style.height = toPx(imgSize);\n      imageRef.style.width = toPx(imgSize);\n      setPicSize(Math.round(picSizeDefault / scale));\n    }\n    qrCodeWrapperRef.style.transform = `scale(${scale})`;\n  });\n  let timeoutId = null;\n  const onCopyClick = () => {\n    setCopyButtonOpened(true);\n    copyToClipboard(props.sourceUrl);\n    if (timeoutId != null) {\n      clearTimeout(timeoutId);\n    }\n    timeoutId = setTimeout(() => setCopyButtonOpened(false), 1500);\n  };\n  return createComponent(QrCodeBackground, {\n    get [\"class\"]() {\n      return props.class;\n    },\n    onClick: onCopyClick,\n    get children() {\n      return [createComponent(QrCodeWrapper$2, {\n        ref(r$) {\n          const _ref$ = qrCodeWrapperRef;\n          typeof _ref$ === \"function\" ? _ref$(r$) : qrCodeWrapperRef = r$;\n        },\n        get children() {\n          return [(() => {\n            const _el$ = _tmpl$$s.cloneNode(true);\n            const _ref$2 = qrCodeCanvasRef;\n            typeof _ref$2 === \"function\" ? use(_ref$2, _el$) : qrCodeCanvasRef = _el$;\n            return _el$;\n          })(), createComponent(Show, {\n            get when() {\n              return props.imageUrl;\n            },\n            get children() {\n              return createComponent(ImageBackground, {\n                ref(r$) {\n                  const _ref$3 = imageRef;\n                  typeof _ref$3 === \"function\" ? _ref$3(r$) : imageRef = r$;\n                },\n                get children() {\n                  return createComponent(ImageStyled$3, {\n                    get src() {\n                      return props.imageUrl;\n                    },\n                    alt: \"\",\n                    get size() {\n                      return picSize();\n                    }\n                  });\n                }\n              });\n            }\n          })];\n        }\n      }), createComponent(Transition, {\n        onBeforeEnter: (el) => {\n          animate(el, [{\n            opacity: 0,\n            transform: \"translate(-50%, 44px)\"\n          }, {\n            opacity: 1,\n            transform: \"translate(-50%, 0)\"\n          }], {\n            duration: 150,\n            easing: \"ease-out\"\n          });\n        },\n        onExit: (el, done) => {\n          animate(el, [{\n            opacity: 1,\n            transform: \"translate(-50%, 0)\"\n          }, {\n            opacity: 0,\n            transform: \"translate(-50%, 44px)\"\n          }], {\n            duration: 150,\n            easing: \"ease-out\"\n          }).finished.then(() => {\n            done();\n          });\n        },\n        get children() {\n          return createComponent(Show, {\n            get when() {\n              return copyButtonOpened() && !props.disableCopy;\n            },\n            get children() {\n              return createComponent(CopiedBoxStyled, {\n                get children() {\n                  return [createComponent(SuccessIcon, {\n                    size: \"xs\"\n                  }), createComponent(Text, {\n                    translationKey: \"common.linkCopied\",\n                    children: \"Link Copied\"\n                  })];\n                }\n              });\n            }\n          });\n        }\n      }), createComponent(Show, {\n        get when() {\n          return !props.disableCopy;\n        },\n        get children() {\n          return createComponent(CopyIconButton, {\n            get children() {\n              return createComponent(CopyLightIcon, {});\n            }\n          });\n        }\n      })];\n    }\n  });\n};\nvar deepReadObject = (obj, path, defaultValue) => {\n  const value = path.trim().split(\".\").reduce((a2, b) => a2 ? a2[b] : void 0, obj);\n  return value !== void 0 ? value : defaultValue;\n};\nvar template = (str, params, reg = /{{(.*?)}}/g) => str.replace(reg, (_, key) => deepReadObject(params, key, \"\"));\nvar createI18nContext = (init = {}, lang = navigator.language in init ? navigator.language : Object.keys(init)[0]) => {\n  const [locale, setLocale] = createSignal(lang);\n  const [dict, setDict] = createStore(init);\n  const translate = (key, params, defaultValue) => {\n    const val = deepReadObject(dict[locale()], key, defaultValue || \"\");\n    if (typeof val === \"function\")\n      return val(params);\n    if (typeof val === \"string\")\n      return template(val, params || {});\n    return val;\n  };\n  const actions = {\n    add(lang2, table) {\n      setDict(lang2, (t2) => Object.assign(t2 || {}, table));\n    },\n    locale: (lang2) => lang2 ? setLocale(lang2) : locale(),\n    dict: (lang2) => deepReadObject(dict, lang2)\n  };\n  return [translate, actions];\n};\nvar I18nContext = createContext({});\nvar useI18n = () => useContext(I18nContext);\nconst TextStyled$4 = styled.div`\n    font-style: normal;\n    font-weight: ${(props) => props.fontWeight};\n    font-size: ${(props) => props.fontSize};\n    line-height: ${(props) => props.lineHeight};\n\n    color: ${(props) => props.color};\n`;\nconst Text = (inputs) => {\n  const theme = useTheme();\n  const [t2] = useI18n();\n  let textRef;\n  const color = () => inputs.color || theme.colors.text.primary;\n  const props = mergeProps({\n    fontSize: \"14px\",\n    fontWeight: \"510\",\n    lineHeight: \"130%\"\n  }, inputs);\n  createEffect(() => {\n    if (!textRef) {\n      return;\n    }\n    if (props.cursor === \"unset\") {\n      return;\n    }\n    if (getComputedStyle(textRef).cursor !== \"pointer\") {\n      textRef.style.cursor = \"default\";\n    }\n  });\n  return createComponent(TextStyled$4, {\n    get fontSize() {\n      return props.fontSize;\n    },\n    get fontWeight() {\n      return props.fontWeight;\n    },\n    get lineHeight() {\n      return props.lineHeight;\n    },\n    get color() {\n      return color();\n    },\n    get [\"class\"]() {\n      return props.class;\n    },\n    ref(r$) {\n      const _ref$ = textRef;\n      typeof _ref$ === \"function\" ? _ref$(r$) : textRef = r$;\n    },\n    \"data-tc-text\": \"true\",\n    get children() {\n      var _a2;\n      return createMemo(() => !!props.translationKey)() ? t2(props.translationKey, props.translationValues, (_a2 = props.children) == null ? void 0 : _a2.toString()) : props.children;\n    }\n  });\n};\nconst ImageContainer = styled.div`\n    position: relative;\n\n    &::after {\n        content: '';\n        display: block;\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        border: 0.5px solid rgba(0, 0, 0, 0.08);\n        border-radius: inherit;\n    }\n`;\nconst ImageStyled$2 = styled(Image)`\n    width: 100%;\n    height: 100%;\n    border-radius: inherit;\n`;\nconst WalletImage = (props) => {\n  return createComponent(ImageContainer, {\n    get [\"class\"]() {\n      return props.class;\n    },\n    get children() {\n      return [createComponent(ImageStyled$2, {\n        get src() {\n          return props.src;\n        }\n      }), createMemo(() => props.badge)];\n    }\n  });\n};\nconst borders$4 = {\n  m: \"16px\",\n  s: \"12px\",\n  none: \"0\"\n};\nconst badgeBorders = {\n  m: \"6px\",\n  s: \"6px\",\n  none: \"0\"\n};\nconst WalletUlContainer = styled.ul`\n    display: flex;\n    gap: 0;\n    width: 100%;\n    overflow-x: auto;\n    padding: 8px 12px 16px 12px;\n    margin: 0;\n    list-style: none;\n    flex-wrap: nowrap;\n\n    &&::-webkit-scrollbar {\n        display: none;\n    }\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n\n    > li {\n        display: flex;\n        flex: 1;\n        min-width: 78px;\n        height: fit-content;\n    }\n\n    > li > button {\n        width: 100%;\n    }\n`;\nconst WalletItemStyled = styled.button`\n    position: relative;\n    cursor: pointer;\n    border: none;\n    background-color: unset;\n    padding: 8px 4px;\n    width: 100%;\n    min-width: 78px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    transition: transform 0.125s ease-in-out;\n\n    ${mediaNotTouch} {\n        &:hover {\n            transform: scale(1.04);\n        }\n    }\n\n    &:active {\n        transform: scale(0.96);\n    }\n\n    ${mediaTouch} {\n        &:active {\n            transform: scale(0.92);\n        }\n    }\n`;\nconst ImageStyled$1 = styled(WalletImage)`\n    width: 60px;\n    height: 60px;\n    border-radius: ${(props) => borders$4[props.theme.borderRadius]};\n    margin-bottom: 8px;\n    position: relative;\n`;\nconst BadgeStyled = styled(Image)`\n    position: absolute;\n    right: -6px;\n    bottom: -6px;\n    width: 24px;\n    height: 24px;\n    border-radius: ${(props) => badgeBorders[props.theme.borderRadius]};\n    box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.08);\n`;\nconst StyledText = styled(Text)`\n    max-width: 90px;\n    font-weight: 510;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n\n    ${media(\"mobile\")} {\n        max-width: 80px;\n    }\n`;\nconst StyledSecondLine = styled(Text)`\n    font-weight: ${(props) => props.colorPrimary ? \"510\" : \"400\"};\n    max-width: 90px;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    color: ${(props) => props.colorPrimary ? props.theme.colors.text.primary : props.theme.colors.text.secondary};\n\n    ${media(\"mobile\")} {\n        max-width: 80px;\n    }\n`;\nconst _tmpl$$r = /* @__PURE__ */ template$1(`<div></div>`);\nconst WalletItem = (props) => {\n  let ctxRef = null;\n  const adjustLetterSpacing = () => {\n    const name = ctxRef == null ? void 0 : ctxRef.querySelector(\"div\");\n    if (name && name.scrollWidth > name.clientWidth) {\n      let spacing = 0;\n      const minSpacing = -0.4;\n      const step = 0.05;\n      while (name.scrollWidth > name.clientWidth && spacing >= minSpacing) {\n        spacing -= step;\n        name.style.letterSpacing = `${spacing}px`;\n      }\n      if (spacing !== 0) {\n        spacing -= step;\n        name.style.letterSpacing = `${spacing}px`;\n      }\n    }\n  };\n  onMount(() => adjustLetterSpacing());\n  createEffect(() => {\n    adjustLetterSpacing();\n  });\n  return createComponent(WalletItemStyled, {\n    get [\"class\"]() {\n      return props.class;\n    },\n    onClick: () => props.onClick(),\n    \"data-tc-wallet-item\": \"true\",\n    get children() {\n      return [createMemo(() => createMemo(() => typeof props.icon === \"string\")() ? createComponent(ImageStyled$1, {\n        get src() {\n          return props.icon;\n        },\n        get badge() {\n          return createMemo(() => !!props.badgeUrl)() && createComponent(BadgeStyled, {\n            get src() {\n              return props.badgeUrl;\n            }\n          });\n        }\n      }) : props.icon), (() => {\n        const _el$ = _tmpl$$r.cloneNode(true);\n        use((el) => ctxRef = el, _el$);\n        insert(_el$, createComponent(StyledText, {\n          get children() {\n            return props.name;\n          }\n        }));\n        return _el$;\n      })(), createMemo(() => createMemo(() => !!props.secondLine)() && createComponent(StyledSecondLine, {\n        get colorPrimary() {\n          var _a2;\n          return (_a2 = props.secondLineColorPrimary) != null ? _a2 : true;\n        },\n        get children() {\n          return props.secondLine;\n        }\n      }))];\n    }\n  });\n};\nconst H1Styled$b = styled.h1`\n    font-style: normal;\n    font-weight: 590;\n    font-size: 20px;\n    line-height: 28px;\n\n    text-align: center;\n\n    color: ${(props) => props.theme.colors.text.primary};\n\n    margin-top: 0;\n    margin-bottom: 0;\n\n    cursor: default;\n`;\nconst H1 = (props) => {\n  const [t2] = useI18n();\n  return createComponent(H1Styled$b, {\n    get [\"class\"]() {\n      return props.class;\n    },\n    \"data-tc-h1\": \"true\",\n    get children() {\n      var _a2;\n      return createMemo(() => !!props.translationKey)() ? t2(props.translationKey, props.translationValues, (_a2 = props.children) == null ? void 0 : _a2.toString()) : props.children;\n    }\n  });\n};\nconst H2Styled$5 = styled.h2`\n    font-style: normal;\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 22px;\n\n    text-align: center;\n\n    color: ${(props) => props.theme.colors.text.secondary};\n\n    margin-top: 0;\n    margin-bottom: 32px;\n\n    cursor: default;\n`;\nconst H2 = (props) => {\n  const [t2] = useI18n();\n  return createComponent(H2Styled$5, {\n    get [\"class\"]() {\n      return props.class;\n    },\n    \"data-tc-h2\": \"true\",\n    get children() {\n      var _a2;\n      return createMemo(() => !!props.translationKey)() ? t2(props.translationKey, props.translationValues, (_a2 = props.children) == null ? void 0 : _a2.toString()) : props.children;\n    }\n  });\n};\nconst H3Styled$2 = styled.h3`\n    font-style: normal;\n    font-weight: 510;\n    font-size: 16px;\n    line-height: 20px;\n\n    color: ${(props) => props.theme.colors.text.primary};\n\n    margin-top: 0;\n    margin-bottom: 0;\n\n    cursor: default;\n`;\nconst H3 = (props) => {\n  const [t2] = useI18n();\n  return createComponent(H3Styled$2, {\n    \"data-tc-h3\": \"true\",\n    get [\"class\"]() {\n      return props.class;\n    },\n    get children() {\n      var _a2;\n      return createMemo(() => !!props.translationKey)() ? t2(props.translationKey, props.translationValues, (_a2 = props.children) == null ? void 0 : _a2.toString()) : props.children;\n    }\n  });\n};\nconst _tmpl$$q = /* @__PURE__ */ template$1(`<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M14.1839 17.7069C13.6405 18.6507 13.3688 19.1226 13.0591 19.348C12.4278 19.8074 11.5723 19.8074 10.941 19.348C10.6312 19.1226 10.3595 18.6507 9.81613 17.7069L5.52066 10.2464C4.76864 8.94024 4.39263 8.28717 4.33762 7.75894C4.2255 6.68236 4.81894 5.65591 5.80788 5.21589C6.29309 5 7.04667 5 8.55383 5H15.4462C16.9534 5 17.7069 5 18.1922 5.21589C19.1811 5.65591 19.7745 6.68236 19.6624 7.75894C19.6074 8.28717 19.2314 8.94024 18.4794 10.2464L14.1839 17.7069ZM11.1 16.3412L6.56139 8.48002C6.31995 8.06185 6.19924 7.85276 6.18146 7.68365C6.14523 7.33896 6.33507 7.01015 6.65169 6.86919C6.80703 6.80002 7.04847 6.80002 7.53133 6.80002H7.53134L11.1 6.80002V16.3412ZM12.9 16.3412L17.4387 8.48002C17.6801 8.06185 17.8008 7.85276 17.8186 7.68365C17.8548 7.33896 17.665 7.01015 17.3484 6.86919C17.193 6.80002 16.9516 6.80002 16.4687 6.80002L12.9 6.80002V16.3412Z\"></path></svg>`);\nconst TonIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.primary;\n  return (() => {\n    const _el$ = _tmpl$$q.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect(() => setAttribute(_el$2, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst _tmpl$$p = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><g clip-path=\"url(#clip0_3783_2045)\"><circle cx=\"8\" cy=\"8.00098\" r=\"8\"></circle><path d=\"M4.75 8.50098L7 10.751L11.75 6.00098\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g><defs><clipPath id=\"clip0_3783_2045\"><rect width=\"16\" height=\"16\" fill=\"white\" transform=\"translate(0 0.000976562)\"></rect></clipPath></defs></svg>`), _tmpl$2$4 = /* @__PURE__ */ template$1(`<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"12\" cy=\"12\" r=\"11\"></circle><path d=\"M17.1364 9.6364C17.4879 9.28493 17.4879 8.71508 17.1364 8.36361C16.7849 8.01214 16.2151 8.01214 15.8636 8.36361L10 14.2272L8.1364 12.3636C7.78493 12.0121 7.21508 12.0121 6.86361 12.3636C6.51214 12.7151 6.51214 13.2849 6.86361 13.6364L9.36361 16.1364C9.71508 16.4879 10.2849 16.4879 10.6364 16.1364L17.1364 9.6364Z\"></path></svg>`), _tmpl$3$2 = /* @__PURE__ */ template$1(`<svg width=\"72\" height=\"72\" viewBox=\"0 0 72 72\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"36\" cy=\"36\" r=\"33\"></circle><path d=\"M50.9142 28.4142C51.6953 27.6332 51.6953 26.3668 50.9142 25.5858C50.1332 24.8047 48.8668 24.8047 48.0858 25.5858L30 43.6716L23.9142 37.5858C23.1332 36.8047 21.8668 36.8047 21.0858 37.5858C20.3047 38.3668 20.3047 39.6332 21.0858 40.4142L28.5858 47.9142C29.3668 48.6953 30.6332 48.6953 31.4142 47.9142L50.9142 28.4142Z\"></path></svg>`);\nconst SuccessIcon = (props) => {\n  const theme = useTheme();\n  const size = () => props.size || \"s\";\n  const fill = () => props.fill || theme.colors.icon.success;\n  return createMemo((() => {\n    const _c$ = createMemo(() => size() === \"xs\");\n    return () => _c$() ? (() => {\n      const _el$ = _tmpl$$p.cloneNode(true), _el$2 = _el$.firstChild, _el$3 = _el$2.firstChild, _el$4 = _el$3.nextSibling;\n      createRenderEffect((_p$) => {\n        const _v$ = props.class, _v$2 = fill(), _v$3 = theme.colors.constant.white;\n        _v$ !== _p$._v$ && setAttribute(_el$, \"class\", _p$._v$ = _v$);\n        _v$2 !== _p$._v$2 && setAttribute(_el$3, \"fill\", _p$._v$2 = _v$2);\n        _v$3 !== _p$._v$3 && setAttribute(_el$4, \"stroke\", _p$._v$3 = _v$3);\n        return _p$;\n      }, {\n        _v$: void 0,\n        _v$2: void 0,\n        _v$3: void 0\n      });\n      return _el$;\n    })() : (() => {\n      const _c$2 = createMemo(() => size() === \"s\");\n      return () => _c$2() ? (() => {\n        const _el$5 = _tmpl$2$4.cloneNode(true), _el$6 = _el$5.firstChild, _el$7 = _el$6.nextSibling;\n        createRenderEffect((_p$) => {\n          const _v$4 = props.class, _v$5 = fill(), _v$6 = theme.colors.constant.white;\n          _v$4 !== _p$._v$4 && setAttribute(_el$5, \"class\", _p$._v$4 = _v$4);\n          _v$5 !== _p$._v$5 && setAttribute(_el$6, \"fill\", _p$._v$5 = _v$5);\n          _v$6 !== _p$._v$6 && setAttribute(_el$7, \"fill\", _p$._v$6 = _v$6);\n          return _p$;\n        }, {\n          _v$4: void 0,\n          _v$5: void 0,\n          _v$6: void 0\n        });\n        return _el$5;\n      })() : (() => {\n        const _el$8 = _tmpl$3$2.cloneNode(true), _el$9 = _el$8.firstChild, _el$10 = _el$9.nextSibling;\n        createRenderEffect((_p$) => {\n          const _v$7 = props.class, _v$8 = fill(), _v$9 = theme.colors.constant.white;\n          _v$7 !== _p$._v$7 && setAttribute(_el$8, \"class\", _p$._v$7 = _v$7);\n          _v$8 !== _p$._v$8 && setAttribute(_el$9, \"fill\", _p$._v$8 = _v$8);\n          _v$9 !== _p$._v$9 && setAttribute(_el$10, \"fill\", _p$._v$9 = _v$9);\n          return _p$;\n        }, {\n          _v$7: void 0,\n          _v$8: void 0,\n          _v$9: void 0\n        });\n        return _el$8;\n      })();\n    })();\n  })());\n};\nconst _tmpl$$o = /* @__PURE__ */ template$1(`<svg width=\"72\" height=\"72\" viewBox=\"0 0 72 72\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"36\" cy=\"36\" r=\"33\"></circle><path d=\"M24.0858 26.9142C23.3047 26.1332 23.3047 24.8668 24.0858 24.0858C24.8668 23.3047 26.1332 23.3047 26.9142 24.0858L36 33.1716L45.0858 24.0858C45.8668 23.3047 47.1332 23.3047 47.9142 24.0858C48.6953 24.8668 48.6953 26.1332 47.9142 26.9142L38.8284 36L47.9142 45.0858C48.6953 45.8668 48.6953 47.1332 47.9142 47.9142C47.1332 48.6953 45.8668 48.6953 45.0858 47.9142L36 38.8284L26.9142 47.9142C26.1332 48.6953 24.8668 48.6953 24.0858 47.9142C23.3047 47.1332 23.3047 45.8668 24.0858 45.0858L33.1716 36L24.0858 26.9142Z\"></path></svg>`), _tmpl$2$3 = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\"><circle cx=\"24\" cy=\"24.001\" r=\"22\"></circle><path d=\"M24 24.001L31.5 16.501M24 24.001L16.5 16.501M24 24.001L16.5 31.501M24 24.001L31.5 31.501\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg>`), _tmpl$3$1 = /* @__PURE__ */ template$1(`<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"12\" cy=\"12\" r=\"11\"></circle><path d=\"M7.86361 9.1364C7.51214 8.78493 7.51214 8.21508 7.86361 7.86361C8.21508 7.51214 8.78493 7.51214 9.1364 7.86361L12 10.7272L14.8636 7.86361C15.2151 7.51214 15.7849 7.51214 16.1364 7.86361C16.4879 8.21508 16.4879 8.78493 16.1364 9.1364L13.2728 12L16.1364 14.8636C16.4879 15.2151 16.4879 15.7849 16.1364 16.1364C15.7849 16.4879 15.2151 16.4879 14.8636 16.1364L12 13.2728L9.1364 16.1364C8.78493 16.4879 8.21508 16.4879 7.86361 16.1364C7.51214 15.7849 7.51214 15.2151 7.86361 14.8636L10.7272 12L7.86361 9.1364Z\"></path></svg>`);\nconst ErrorIcon = (props) => {\n  const theme = useTheme();\n  const size = () => props.size || \"m\";\n  const fill = () => props.fill || theme.colors.icon.error;\n  return createMemo((() => {\n    const _c$ = createMemo(() => size() === \"m\");\n    return () => _c$() ? (() => {\n      const _el$ = _tmpl$$o.cloneNode(true), _el$2 = _el$.firstChild, _el$3 = _el$2.nextSibling;\n      createRenderEffect((_p$) => {\n        const _v$ = props.class, _v$2 = fill(), _v$3 = theme.colors.constant.white;\n        _v$ !== _p$._v$ && setAttribute(_el$, \"class\", _p$._v$ = _v$);\n        _v$2 !== _p$._v$2 && setAttribute(_el$2, \"fill\", _p$._v$2 = _v$2);\n        _v$3 !== _p$._v$3 && setAttribute(_el$3, \"fill\", _p$._v$3 = _v$3);\n        return _p$;\n      }, {\n        _v$: void 0,\n        _v$2: void 0,\n        _v$3: void 0\n      });\n      return _el$;\n    })() : (() => {\n      const _c$2 = createMemo(() => size() === \"s\");\n      return () => _c$2() ? (() => {\n        const _el$4 = _tmpl$2$3.cloneNode(true), _el$5 = _el$4.firstChild, _el$6 = _el$5.nextSibling;\n        createRenderEffect((_p$) => {\n          const _v$4 = props.class, _v$5 = fill(), _v$6 = theme.colors.constant.white;\n          _v$4 !== _p$._v$4 && setAttribute(_el$4, \"class\", _p$._v$4 = _v$4);\n          _v$5 !== _p$._v$5 && setAttribute(_el$5, \"fill\", _p$._v$5 = _v$5);\n          _v$6 !== _p$._v$6 && setAttribute(_el$6, \"stroke\", _p$._v$6 = _v$6);\n          return _p$;\n        }, {\n          _v$4: void 0,\n          _v$5: void 0,\n          _v$6: void 0\n        });\n        return _el$4;\n      })() : (() => {\n        const _el$7 = _tmpl$3$1.cloneNode(true), _el$8 = _el$7.firstChild, _el$9 = _el$8.nextSibling;\n        createRenderEffect((_p$) => {\n          const _v$7 = props.class, _v$8 = fill(), _v$9 = theme.colors.constant.white;\n          _v$7 !== _p$._v$7 && setAttribute(_el$7, \"class\", _p$._v$7 = _v$7);\n          _v$8 !== _p$._v$8 && setAttribute(_el$8, \"fill\", _p$._v$8 = _v$8);\n          _v$9 !== _p$._v$9 && setAttribute(_el$9, \"fill\", _p$._v$9 = _v$9);\n          return _p$;\n        }, {\n          _v$7: void 0,\n          _v$8: void 0,\n          _v$9: void 0\n        });\n        return _el$7;\n      })();\n    })();\n  })());\n};\nconst _tmpl$$n = /* @__PURE__ */ template$1(`<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.55 5.85123C18.9459 7.81184 20.1094 12.1541 18.1488 15.55C16.1882 18.9459 11.8459 20.1094 8.44998 18.1488C8.01952 17.9003 7.46909 18.0478 7.22056 18.4782C6.97203 18.9087 7.11952 19.4591 7.54998 19.7076C11.8068 22.1653 17.2499 20.7068 19.7076 16.45C22.1653 12.1932 20.7068 6.75005 16.45 4.29239C12.1932 1.83472 6.75003 3.29321 4.29236 7.55001C4.04383 7.98047 4.19132 8.53091 4.62178 8.77943C5.05224 9.02796 5.60268 8.88048 5.8512 8.45001C7.81181 5.05413 12.1541 3.89062 15.55 5.85123Z\"></path></svg>`), _tmpl$2$2 = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"44\" height=\"44\" viewBox=\"0 0 44 44\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M22 2.99951C11.5066 2.99951 3 11.5061 3 21.9995C3 32.4929 11.5066 40.9995 22 40.9995C22.8284 40.9995 23.5 41.6711 23.5 42.4995C23.5 43.3279 22.8284 43.9995 22 43.9995C9.84974 43.9995 0 34.1498 0 21.9995C0 9.84925 9.84974 -0.000488281 22 -0.000488281C34.1503 -0.000488281 44 9.84925 44 21.9995C44 22.8279 43.3284 23.4995 42.5 23.4995C41.6716 23.4995 41 22.8279 41 21.9995C41 11.5061 32.4934 2.99951 22 2.99951Z\"></path></svg>`), _tmpl$3 = /* @__PURE__ */ template$1(`<svg width=\"72\" height=\"72\" viewBox=\"0 0 72 72\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M24 56.7846C35.479 63.412 50.1572 59.479 56.7846 47.9999C63.412 36.5209 59.479 21.8427 48 15.2153C36.521 8.58791 21.8428 12.5209 15.2154 23.9999\" stroke-width=\"4\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg>`);\nconst LoaderIcon = (props) => {\n  const theme = useTheme();\n  const size = () => props.size || \"xs\";\n  const fill = () => props.fill || theme.colors.icon.tertiary;\n  const rotateAnimation = h`\n        0% {\n          transform: rotate(0deg);\n        }\n        100% {\n          transform: rotate(360deg);\n        }\n    `;\n  const svgClass = u`\n        animation: ${rotateAnimation} 1s linear infinite;\n    `;\n  return createMemo((() => {\n    const _c$ = createMemo(() => size() === \"xs\");\n    return () => _c$() ? (() => {\n      const _el$ = _tmpl$$n.cloneNode(true), _el$2 = _el$.firstChild;\n      createRenderEffect((_p$) => {\n        const _v$ = classnames__WEBPACK_IMPORTED_MODULE_3__(svgClass, props.class), _v$2 = fill();\n        _v$ !== _p$._v$ && setAttribute(_el$, \"class\", _p$._v$ = _v$);\n        _v$2 !== _p$._v$2 && setAttribute(_el$2, \"fill\", _p$._v$2 = _v$2);\n        return _p$;\n      }, {\n        _v$: void 0,\n        _v$2: void 0\n      });\n      return _el$;\n    })() : (() => {\n      const _c$2 = createMemo(() => size() === \"s\");\n      return () => _c$2() ? (() => {\n        const _el$3 = _tmpl$2$2.cloneNode(true), _el$4 = _el$3.firstChild;\n        createRenderEffect((_p$) => {\n          const _v$3 = classnames__WEBPACK_IMPORTED_MODULE_3__(svgClass, props.class), _v$4 = fill();\n          _v$3 !== _p$._v$3 && setAttribute(_el$3, \"class\", _p$._v$3 = _v$3);\n          _v$4 !== _p$._v$4 && setAttribute(_el$4, \"fill\", _p$._v$4 = _v$4);\n          return _p$;\n        }, {\n          _v$3: void 0,\n          _v$4: void 0\n        });\n        return _el$3;\n      })() : (() => {\n        const _el$5 = _tmpl$3.cloneNode(true), _el$6 = _el$5.firstChild;\n        createRenderEffect((_p$) => {\n          const _v$5 = classnames__WEBPACK_IMPORTED_MODULE_3__(svgClass, props.class), _v$6 = fill();\n          _v$5 !== _p$._v$5 && setAttribute(_el$5, \"class\", _p$._v$5 = _v$5);\n          _v$6 !== _p$._v$6 && setAttribute(_el$6, \"stroke\", _p$._v$6 = _v$6);\n          return _p$;\n        }, {\n          _v$5: void 0,\n          _v$6: void 0\n        });\n        return _el$5;\n      })();\n    })();\n  })());\n};\nconst _tmpl$$m = /* @__PURE__ */ template$1(`<svg width=\"158\" height=\"28\" viewBox=\"0 0 158 28\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M28 14.001C28 21.733 21.732 28.001 14 28.001C6.26801 28.001 0 21.733 0 14.001C0 6.26899 6.26801 0.000976562 14 0.000976562C21.732 0.000976562 28 6.26899 28 14.001ZM9.21931 8.00098H18.7801H18.7813C20.538 8.00098 21.6522 9.89966 20.7691 11.4302L14.8672 21.6576C14.4822 22.3254 13.5172 22.3254 13.1322 21.6576L7.23158 11.4302C6.34721 9.89726 7.4614 8.00098 9.21931 8.00098ZM13.1262 18.5882V9.74806H9.21811C8.78976 9.74806 8.53708 10.2029 8.74163 10.5578L11.8423 16.1035L13.1262 18.5882ZM16.1559 16.1047L19.2554 10.5566C19.4599 10.2017 19.2073 9.74685 18.7789 9.74685H14.8709V18.5906L16.1559 16.1047Z\" fill=\"#0098EA\"></path><path d=\"M18.7802 8.00098H9.21936C7.46145 8.00098 6.34727 9.89726 7.23164 11.4302L13.1322 21.6576C13.5173 22.3254 14.4823 22.3254 14.8673 21.6576L20.7691 11.4302C21.6523 9.89966 20.5381 8.00098 18.7814 8.00098H18.7802ZM13.1274 18.5906L11.8424 16.1035L8.74168 10.5578C8.53714 10.2029 8.78981 9.74806 9.21816 9.74806H13.1262V18.5918L13.1274 18.5906ZM19.2555 10.5566L16.156 16.1047L14.8709 18.5906V9.74685H18.779C19.2073 9.74685 19.46 10.2017 19.2555 10.5566Z\" fill=\"white\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M51.7483 22.1967C55.7182 22.1967 58.9609 18.954 58.9609 14.9841C58.9609 11.0142 55.7182 7.77148 51.7483 7.77148C47.7588 7.77148 44.5357 11.0142 44.5357 14.9841C44.5357 18.954 47.7588 22.1967 51.7483 22.1967ZM51.7483 19.1702C49.4686 19.1702 47.6802 17.2442 47.6802 14.9841C47.6802 12.724 49.4686 10.798 51.7483 10.798C54.0084 10.798 55.7968 12.724 55.7968 14.9841C55.7968 17.2442 54.0084 19.1702 51.7483 19.1702ZM37.0698 21.9609H40.2142V10.9946H44.2843V8.00732H33V10.9946H37.0698V21.9609ZM69.9379 8.00732H73.0823V21.9609H70.3899L63.59 13.3333V21.9609H60.4652V8.00732H63.1576L69.9379 16.6153V8.00732ZM79.2259 14.9887C79.2259 10.9202 82.351 7.77539 86.4982 7.77539C89.8592 7.77539 92.5519 9.95709 93.2202 12.6891H90.7437C90.154 11.0971 88.4637 9.9964 86.4982 9.9964C83.5893 9.9964 81.5452 12.1781 81.5452 14.9887C81.5452 17.7994 83.5893 19.9811 86.4982 19.9811C88.4637 19.9811 90.154 18.8804 90.7437 17.2884H93.2202C92.5519 20.0204 89.8592 22.2021 86.4982 22.2021C82.351 22.2021 79.2259 19.0573 79.2259 14.9887ZM104.584 17.0525C104.584 19.9025 102.343 22.1628 99.4342 22.1628C96.5253 22.1628 94.2846 19.9025 94.2846 17.0525C94.2846 14.2025 96.5253 11.9422 99.4342 11.9422C102.343 11.9422 104.584 14.2025 104.584 17.0525ZM96.4663 17.0525C96.4663 18.8018 97.6849 20.158 99.4342 20.158C101.164 20.158 102.382 18.8018 102.382 17.0525C102.382 15.3032 101.164 13.947 99.4342 13.947C97.6849 13.947 96.4663 15.3032 96.4663 17.0525ZM108.626 12.1388H106.463V21.9662H108.626V17.1311C108.626 15.0281 109.726 13.9077 111.161 13.9077C112.419 13.9077 113.205 14.8512 113.205 16.4039V21.9662H115.367V16.0501C115.367 13.5539 113.893 11.9422 111.613 11.9422C110.335 11.9422 109.215 12.4926 108.626 13.4753V12.1388ZM117.839 12.1388H120.001V13.4753C120.59 12.4926 121.711 11.9422 122.988 11.9422C125.268 11.9422 126.742 13.5539 126.742 16.0501V21.9662H124.58V16.4039C124.58 14.8512 123.794 13.9077 122.536 13.9077C121.101 13.9077 120.001 15.0281 120.001 17.1311V21.9662H117.839V12.1388ZM133.558 22.1628C136.054 22.1628 137.823 20.728 138.373 18.8804H136.113C135.661 19.8238 134.717 20.2563 133.636 20.2563C131.887 20.2563 130.747 19.077 130.668 17.5832H138.491C138.688 14.2419 136.585 11.9422 133.577 11.9422C130.551 11.9422 128.526 14.1436 128.526 17.0525C128.526 20.0007 130.629 22.1628 133.558 22.1628ZM130.747 16.0501C131.042 14.5367 132.162 13.7505 133.518 13.7505C134.717 13.7505 135.838 14.4581 136.172 16.0501H130.747ZM149.851 18.3694C149.32 20.5511 147.453 22.1628 144.859 22.1628C141.871 22.1628 139.709 19.8828 139.709 17.0525C139.709 14.2222 141.871 11.9422 144.859 11.9422C147.453 11.9422 149.32 13.5539 149.851 15.7356H147.571C147.178 14.6743 146.215 13.9077 144.859 13.9077C143.109 13.9077 141.91 15.2246 141.91 17.0525C141.91 18.8804 143.109 20.1973 144.859 20.1973C146.215 20.1973 147.178 19.4307 147.571 18.3694H149.851ZM155.75 22.0645C156.418 22.0645 156.929 21.9859 157.362 21.8483V19.9221C157.047 20.0401 156.615 20.1187 156.202 20.1187C155.082 20.1187 154.551 19.6666 154.551 18.448V14.065H157.362V12.1388H154.551V9.40675H152.389V12.1388H150.345V14.065H152.389V18.8018C152.389 21.0228 153.863 22.0645 155.75 22.0645Z\"></path></svg>`);\nconst TonConnectBrand = () => {\n  const theme = useTheme();\n  const fill = () => theme.theme === THEME.DARK ? theme.colors.constant.white : theme.colors.constant.black;\n  return (() => {\n    const _el$ = _tmpl$$m.cloneNode(true), _el$2 = _el$.firstChild, _el$3 = _el$2.nextSibling, _el$4 = _el$3.nextSibling;\n    createRenderEffect(() => setAttribute(_el$4, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst _tmpl$$l = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5.56608 4.42584C5.82527 3.32158 6.8176 2.5 8.00001 2.5C9.38072 2.5 10.5 3.61929 10.5 5C10.5 5.63026 10.3391 6.0386 10.1264 6.34455C9.90018 6.66993 9.58561 6.92478 9.18864 7.20877C9.12579 7.25372 9.05873 7.30025 8.9887 7.34883C8.27392 7.84472 7.25001 8.55507 7.25001 10V10.25C7.25001 10.6642 7.5858 11 8.00001 11C8.41422 11 8.75001 10.6642 8.75001 10.25V10C8.75001 9.36502 9.10777 9.1096 9.94554 8.51149L10.0614 8.42873C10.4769 8.13147 10.9748 7.75194 11.358 7.20076C11.7547 6.63015 12 5.91973 12 5C12 2.79086 10.2091 1 8.00001 1C6.10564 1 4.5205 2.31615 4.10577 4.08308C4.01112 4.48634 4.26129 4.88997 4.66454 4.98462C5.0678 5.07927 5.47143 4.8291 5.56608 4.42584ZM8.00001 15C8.60752 15 9.10001 14.5075 9.10001 13.9C9.10001 13.2925 8.60752 12.8 8.00001 12.8C7.39249 12.8 6.90001 13.2925 6.90001 13.9C6.90001 14.5075 7.39249 15 8.00001 15Z\"></path></svg>`);\nconst QuestionIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.secondary;\n  return (() => {\n    const _el$ = _tmpl$$l.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect(() => setAttribute(_el$2, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst _tmpl$$k = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.98156 8.75C9.84854 11.4328 9.01206 13.5 8 13.5C6.98794 13.5 6.15146 11.4328 6.01844 8.75H9.98156ZM11.4832 8.75C11.4217 10.1155 11.1929 11.3869 10.8239 12.4017C10.7734 12.5405 10.7188 12.6789 10.6595 12.8154C12.1454 11.993 13.2103 10.5029 13.4493 8.75H11.4832ZM13.4493 7.25H11.4832C11.4217 5.88453 11.1929 4.61314 10.8239 3.5983C10.7734 3.4595 10.7188 3.32111 10.6595 3.18459C12.1454 4.00697 13.2103 5.49709 13.4493 7.25ZM9.98156 7.25H6.01844C6.15144 4.56764 6.98769 2.50062 7.99955 2.5H8C9.01206 2.5 9.84854 4.56724 9.98156 7.25ZM4.51678 7.25C4.57826 5.88453 4.80706 4.61314 5.1761 3.5983C5.22657 3.4595 5.28124 3.32111 5.3405 3.18459C3.85463 4.00697 2.78972 5.49709 2.55071 7.25H4.51678ZM2.55071 8.75C2.78972 10.5029 3.85463 11.993 5.3405 12.8154C5.28124 12.6789 5.22657 12.5405 5.1761 12.4017C4.80706 11.3869 4.57826 10.1155 4.51678 8.75H2.55071ZM15 8C15 11.866 11.866 15 8 15C4.13401 15 1 11.866 1 8C1 4.13401 4.13401 1 8 1C11.866 1 15 4.13401 15 8Z\"></path></svg>`);\nconst BrowserIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.primary;\n  return (() => {\n    const _el$ = _tmpl$$k.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect(() => setAttribute(_el$2, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst _tmpl$$j = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.5 4.8C2.5 3.11984 2.5 2.27976 2.82698 1.63803C3.1146 1.07354 3.57354 0.614601 4.13803 0.32698C4.77976 0 5.61984 0 7.3 0H8.7C10.3802 0 11.2202 0 11.862 0.32698C12.4265 0.614601 12.8854 1.07354 13.173 1.63803C13.5 2.27976 13.5 3.11984 13.5 4.8V11.2C13.5 12.8802 13.5 13.7202 13.173 14.362C12.8854 14.9265 12.4265 15.3854 11.862 15.673C11.2202 16 10.3802 16 8.7 16H7.3C5.61984 16 4.77976 16 4.13803 15.673C3.57354 15.3854 3.1146 14.9265 2.82698 14.362C2.5 13.7202 2.5 12.8802 2.5 11.2V4.8ZM4 3.9C4 3.05992 4 2.63988 4.16349 2.31901C4.3073 2.03677 4.53677 1.8073 4.81901 1.66349C5.13988 1.5 5.55992 1.5 6.4 1.5H9.6C10.4401 1.5 10.8601 1.5 11.181 1.66349C11.4632 1.8073 11.6927 2.03677 11.8365 2.31901C12 2.63988 12 3.05992 12 3.9V12.1C12 12.9401 12 13.3601 11.8365 13.681C11.6927 13.9632 11.4632 14.1927 11.181 14.3365C10.8601 14.5 10.4401 14.5 9.6 14.5H6.4C5.55992 14.5 5.13988 14.5 4.81901 14.3365C4.53677 14.1927 4.3073 13.9632 4.16349 13.681C4 13.3601 4 12.9401 4 12.1V3.9ZM7 2.5C6.58579 2.5 6.25 2.83579 6.25 3.25C6.25 3.66421 6.58579 4 7 4H9C9.41421 4 9.75 3.66421 9.75 3.25C9.75 2.83579 9.41421 2.5 9 2.5H7Z\"></path></svg>`);\nconst MobileIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.primary;\n  return (() => {\n    const _el$ = _tmpl$$j.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect(() => setAttribute(_el$2, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst _tmpl$$i = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1.5 6.8C1.5 5.11984 1.5 4.27976 1.82698 3.63803C2.1146 3.07354 2.57354 2.6146 3.13803 2.32698C3.77976 2 4.61984 2 6.3 2H9.7C11.3802 2 12.2202 2 12.862 2.32698C13.4265 2.6146 13.8854 3.07354 14.173 3.63803C14.5 4.27976 14.5 5.11984 14.5 6.8V11.5H15.25C15.6642 11.5 16 11.8358 16 12.25C16 12.6642 15.6642 13 15.25 13H0.75C0.335786 13 0 12.6642 0 12.25C0 11.8358 0.335786 11.5 0.75 11.5H1.5V6.8ZM3 11.5H13V5.9C13 5.05992 13 4.63988 12.8365 4.31901C12.6927 4.03677 12.4632 3.8073 12.181 3.66349C11.8601 3.5 11.4401 3.5 10.6 3.5H5.4C4.55992 3.5 4.13988 3.5 3.81901 3.66349C3.53677 3.8073 3.3073 4.03677 3.16349 4.31901C3 4.63988 3 5.05992 3 5.9V11.5Z\"></path></svg>`);\nconst DesktopIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.primary;\n  return (() => {\n    const _el$ = _tmpl$$i.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect(() => setAttribute(_el$2, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst _tmpl$$h = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"17\" height=\"16\" viewBox=\"0 0 17 16\" fill=\"none\"><g clip-path=\"url(#clip0_3676_1603)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.5 1.25049C15.5 0.836275 15.1642 0.500488 14.75 0.500488C14.3358 0.500488 14 0.836275 14 1.25049V3.67012C12.7187 2.04487 10.7318 1.00049 8.5 1.00049C4.63401 1.00049 1.5 4.1345 1.5 8.00049C1.5 11.8665 4.63401 15.0005 8.5 15.0005C11.6844 15.0005 14.3703 12.8748 15.2199 9.96661C15.3361 9.56902 15.1079 9.15254 14.7103 9.03638C14.3127 8.92023 13.8962 9.14838 13.7801 9.54597C13.1123 11.8319 11 13.5005 8.5 13.5005C5.46243 13.5005 3 11.0381 3 8.00049C3 4.96292 5.46243 2.50049 8.5 2.50049C10.321 2.50049 11.9363 3.3855 12.9377 4.75049H10.5C10.0858 4.75049 9.75 5.08627 9.75 5.50049C9.75 5.9147 10.0858 6.25049 10.5 6.25049H14.75C15.1642 6.25049 15.5 5.9147 15.5 5.50049V1.25049Z\"></path></g><defs><clipPath id=\"clip0_3676_1603\"><rect width=\"16\" height=\"16\" fill=\"white\" transform=\"translate(0.5 0.000488281)\"></rect></clipPath></defs></svg>`);\nconst RetryIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.accent;\n  return (() => {\n    const _el$ = _tmpl$$h.cloneNode(true), _el$2 = _el$.firstChild, _el$3 = _el$2.firstChild;\n    createRenderEffect(() => setAttribute(_el$3, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst _tmpl$$g = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M13 4.06119V6.75053C13 7.16474 13.3358 7.50053 13.75 7.50053C14.1642 7.50053 14.5 7.16474 14.5 6.75053V2.75053L14.5 2.72807C14.5001 2.63191 14.5003 2.49627 14.4842 2.37627C14.4638 2.22503 14.4063 1.99261 14.2071 1.79342C14.0079 1.59423 13.7755 1.5367 13.6243 1.51637C13.5043 1.50023 13.3686 1.50039 13.2725 1.50051L13.25 1.50053H9.25C8.83579 1.50053 8.5 1.83631 8.5 2.25053C8.5 2.66474 8.83579 3.00053 9.25 3.00053H11.9393L7.21967 7.7202C6.92678 8.01309 6.92678 8.48796 7.21967 8.78086C7.51256 9.07375 7.98744 9.07375 8.28033 8.78086L13 4.06119ZM5.85 1.50053H5.81903H5.81899C5.21528 1.50052 4.71702 1.50051 4.31113 1.53367C3.88956 1.56812 3.50203 1.64204 3.13803 1.82751C2.57354 2.11513 2.1146 2.57407 1.82698 3.13856C1.64151 3.50256 1.56759 3.89009 1.53315 4.31166C1.49998 4.71755 1.49999 5.21581 1.5 5.81953V5.81955V5.85053V10.1505V10.1815V10.1815C1.49999 10.7852 1.49998 11.2835 1.53315 11.6894C1.56759 12.111 1.64151 12.4985 1.82698 12.8625C2.1146 13.427 2.57354 13.8859 3.13803 14.1735C3.50203 14.359 3.88956 14.4329 4.31113 14.4674C4.71702 14.5005 5.21527 14.5005 5.81897 14.5005H5.81901H5.85H10.15H10.181H10.181C10.7847 14.5005 11.283 14.5005 11.6889 14.4674C12.1104 14.4329 12.498 14.359 12.862 14.1735C13.4265 13.8859 13.8854 13.427 14.173 12.8625C14.3585 12.4985 14.4324 12.111 14.4669 11.6894C14.5 11.2835 14.5 10.7853 14.5 10.1816V10.1815V10.1505V9.75053C14.5 9.33631 14.1642 9.00053 13.75 9.00053C13.3358 9.00053 13 9.33631 13 9.75053V10.1505C13 10.793 12.9994 11.2297 12.9718 11.5672C12.945 11.8961 12.8963 12.0642 12.8365 12.1815C12.6927 12.4638 12.4632 12.6932 12.181 12.837C12.0637 12.8968 11.8955 12.9455 11.5667 12.9724C11.2292 12.9999 10.7924 13.0005 10.15 13.0005H5.85C5.20757 13.0005 4.77085 12.9999 4.43328 12.9724C4.10447 12.9455 3.93632 12.8968 3.81902 12.837C3.53677 12.6932 3.3073 12.4638 3.16349 12.1815C3.10372 12.0642 3.05503 11.8961 3.02816 11.5672C3.00058 11.2297 3 10.793 3 10.1505V5.85053C3 5.20809 3.00058 4.77137 3.02816 4.43381C3.05503 4.10499 3.10372 3.93684 3.16349 3.81954C3.3073 3.5373 3.53677 3.30783 3.81902 3.16402C3.93632 3.10425 4.10447 3.05556 4.43328 3.02869C4.77085 3.00111 5.20757 3.00053 5.85 3.00053H6.25C6.66422 3.00053 7 2.66474 7 2.25053C7 1.83631 6.66422 1.50053 6.25 1.50053H5.85Z\"></path></svg>`);\nconst LinkIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.accent;\n  return (() => {\n    const _el$ = _tmpl$$g.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect(() => setAttribute(_el$2, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst _tmpl$$f = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"17\" height=\"16\" viewBox=\"0 0 17 16\" fill=\"none\"><g clip-path=\"url(#clip0_3676_1274)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1.82698 2.63901C1.5 3.28074 1.5 4.12082 1.5 5.80098V8.80098V9.00098V10.201C1.5 11.8811 1.5 12.7212 1.82698 13.3629C2.1146 13.9274 2.57354 14.3864 3.13803 14.674C3.77976 15.001 4.61984 15.001 6.3 15.001H11.7C13.3802 15.001 14.2202 15.001 14.862 14.674C15.4265 14.3864 15.8854 13.9274 16.173 13.3629C16.5 12.7212 16.5 11.8811 16.5 10.201V8.80098C16.5 7.12082 16.5 6.28074 16.173 5.63901C15.8854 5.07452 15.4265 4.61558 14.862 4.32796C14.743 4.26733 14.6172 4.21795 14.4805 4.17772C14.4501 3.49449 14.3722 3.02994 14.173 2.63901C13.8854 2.07452 13.4265 1.61558 12.862 1.32796C12.2202 1.00098 11.3802 1.00098 9.7 1.00098H6.3C4.61984 1.00098 3.77976 1.00098 3.13803 1.32796C2.57354 1.61558 2.1146 2.07452 1.82698 2.63901ZM12.9861 4.00942C12.9684 3.7108 12.9281 3.49982 12.8365 3.31999C12.6927 3.03775 12.4632 2.80828 12.181 2.66447C11.8601 2.50098 11.4401 2.50098 10.6 2.50098H5.4C4.55992 2.50098 4.13988 2.50098 3.81901 2.66447C3.53677 2.80828 3.3073 3.03775 3.16349 3.31999C3.03615 3.56991 3.00799 3.88 3.00177 4.40188C3.04646 4.37612 3.09189 4.35146 3.13803 4.32796C3.77976 4.00098 4.61984 4.00098 6.3 4.00098H11.7C12.1966 4.00098 12.6197 4.00098 12.9861 4.00942ZM3 7.90098V8.10098C3 8.47468 3 8.76527 3.01439 9.00098H3V11.101C3 11.9411 3 12.3611 3.16349 12.682C3.3073 12.9642 3.53677 13.1937 3.81901 13.3375C4.13988 13.501 4.55992 13.501 5.4 13.501H12.6C13.4401 13.501 13.8601 13.501 14.181 13.3375C14.4632 13.1937 14.6927 12.9642 14.8365 12.682C15 12.3611 15 11.9411 15 11.101V7.90098C15 7.0609 15 6.64086 14.8365 6.31999C14.6927 6.03775 14.4632 5.80828 14.181 5.66447C13.8601 5.50098 13.4401 5.50098 12.6 5.50098H5.4C4.55992 5.50098 4.13988 5.50098 3.81901 5.66447C3.53677 5.80828 3.3073 6.03775 3.16349 6.31999C3 6.64086 3 7.0609 3 7.90098ZM10.5 9.75098C10.5 9.33676 10.8358 9.00098 11.25 9.00098H12.75C13.1642 9.00098 13.5 9.33676 13.5 9.75098C13.5 10.1652 13.1642 10.501 12.75 10.501H11.25C10.8358 10.501 10.5 10.1652 10.5 9.75098Z\"></path></g><defs><clipPath id=\"clip0_3676_1274\"><rect width=\"16\" height=\"16\" fill=\"white\" transform=\"translate(0.5 0.000976562)\"></rect></clipPath></defs></svg>`);\nconst WalletIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.accent;\n  return (() => {\n    const _el$ = _tmpl$$f.cloneNode(true), _el$2 = _el$.firstChild, _el$3 = _el$2.firstChild;\n    createRenderEffect(() => setAttribute(_el$3, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst _tmpl$$e = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M39.6319 16.8719C38.3212 16.2041 36.7002 16.0478 34 16.0112V11C34 5.47715 29.5228 1 24 1C18.4772 1 14 5.47715 14 11V16.0112C11.2998 16.0478 9.6788 16.2041 8.36808 16.8719C6.86278 17.6389 5.63893 18.8628 4.87195 20.3681C4 22.0794 4 24.3196 4 28.8V32.2C4 36.6804 4 38.9206 4.87195 40.6319C5.63893 42.1372 6.86278 43.3611 8.36808 44.1281C10.0794 45 12.3196 45 16.8 45H31.2C35.6804 45 37.9206 45 39.6319 44.1281C41.1372 43.3611 42.3611 42.1372 43.1281 40.6319C44 38.9206 44 36.6804 44 32.2V28.8C44 24.3196 44 22.0794 43.1281 20.3681C42.3611 18.8628 41.1372 17.6389 39.6319 16.8719ZM31 11V16H17V11C17 7.13401 20.134 4 24 4C27.866 4 31 7.13401 31 11ZM7.54497 21.73C7 22.7996 7 24.1997 7 27V34C7 36.8003 7 38.2004 7.54497 39.27C8.02433 40.2108 8.78924 40.9757 9.73005 41.455C10.7996 42 12.1997 42 15 42H33C35.8003 42 37.2004 42 38.27 41.455C39.2108 40.9757 39.9757 40.2108 40.455 39.27C41 38.2004 41 36.8003 41 34V27C41 24.1997 41 22.7996 40.455 21.73C39.9757 20.7892 39.2108 20.0243 38.27 19.545C37.2004 19 35.8003 19 33 19H15C12.1997 19 10.7996 19 9.73005 19.545C8.78924 20.0243 8.02433 20.7892 7.54497 21.73ZM24 24C23.1716 24 22.5 24.6716 22.5 25.5V29.5C22.5 30.3284 23.1716 31 24 31C24.8284 31 25.5 30.3284 25.5 29.5V25.5C25.5 24.6716 24.8284 24 24 24Z\"></path></svg>`);\nconst SecurityIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.secondary;\n  return (() => {\n    const _el$ = _tmpl$$e.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect((_p$) => {\n      const _v$ = props.class, _v$2 = fill();\n      _v$ !== _p$._v$ && setAttribute(_el$, \"class\", _p$._v$ = _v$);\n      _v$2 !== _p$._v$2 && setAttribute(_el$2, \"fill\", _p$._v$2 = _v$2);\n      return _p$;\n    }, {\n      _v$: void 0,\n      _v$2: void 0\n    });\n    return _el$;\n  })();\n};\nconst _tmpl$$d = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M37.485 37.3849C40.894 33.9506 43 29.2212 43 24C43 13.5066 34.4934 5 24 5C13.5066 5 5 13.5066 5 24C5 29.2213 7.1061 33.9507 10.5151 37.385C13.3583 32.9438 18.3354 30 24.0001 30C29.6647 30 34.6418 32.9437 37.485 37.3849ZM35.1809 39.3635C32.9143 35.5532 28.7554 33 24.0001 33C19.2448 33 15.0858 35.5533 12.8193 39.3636C15.9564 41.6506 19.8206 43 24 43C28.1795 43 32.0437 41.6505 35.1809 39.3635ZM24 46C36.1503 46 46 36.1503 46 24C46 11.8497 36.1503 2 24 2C11.8497 2 2 11.8497 2 24C2 36.1503 11.8497 46 24 46ZM24 24C26.7614 24 29 21.7614 29 19C29 16.2386 26.7614 14 24 14C21.2386 14 19 16.2386 19 19C19 21.7614 21.2386 24 24 24ZM24 27C28.4183 27 32 23.4183 32 19C32 14.5817 28.4183 11 24 11C19.5817 11 16 14.5817 16 19C16 23.4183 19.5817 27 24 27Z\"></path></svg>`);\nconst PersonalityIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.secondary;\n  return (() => {\n    const _el$ = _tmpl$$d.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect((_p$) => {\n      const _v$ = props.class, _v$2 = fill();\n      _v$ !== _p$._v$ && setAttribute(_el$, \"class\", _p$._v$ = _v$);\n      _v$2 !== _p$._v$2 && setAttribute(_el$2, \"fill\", _p$._v$2 = _v$2);\n      return _p$;\n    }, {\n      _v$: void 0,\n      _v$2: void 0\n    });\n    return _el$;\n  })();\n};\nconst _tmpl$$c = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M34.5607 4.43934C33.9749 3.85355 33.0251 3.85355 32.4393 4.43934C31.8536 5.02513 31.8536 5.97487 32.4393 6.56066L37.8787 12H10.5C9.67157 12 9 12.6716 9 13.5C9 14.3284 9.67157 15 10.5 15H37.8787L32.4393 20.4393C31.8536 21.0251 31.8536 21.9749 32.4393 22.5607C33.0251 23.1464 33.9749 23.1464 34.5607 22.5607L42.5607 14.5607C43.1464 13.9749 43.1464 13.0251 42.5607 12.4393L34.5607 4.43934ZM13.4393 25.4393C14.0251 24.8536 14.9749 24.8536 15.5607 25.4393C16.1464 26.0251 16.1464 26.9749 15.5607 27.5607L10.1213 33H37.5C38.3284 33 39 33.6716 39 34.5C39 35.3284 38.3284 36 37.5 36H10.1213L15.5607 41.4393C16.1464 42.0251 16.1464 42.9749 15.5607 43.5607C14.9749 44.1464 14.0251 44.1464 13.4393 43.5607L5.43934 35.5607C4.85355 34.9749 4.85355 34.0251 5.43934 33.4393L13.4393 25.4393Z\"></path></svg>`);\nconst SwapIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.secondary;\n  return (() => {\n    const _el$ = _tmpl$$c.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect((_p$) => {\n      const _v$ = props.class, _v$2 = fill();\n      _v$ !== _p$._v$ && setAttribute(_el$, \"class\", _p$._v$ = _v$);\n      _v$2 !== _p$._v$2 && setAttribute(_el$2, \"fill\", _p$._v$2 = _v$2);\n      return _p$;\n    }, {\n      _v$: void 0,\n      _v$2: void 0\n    });\n    return _el$;\n  })();\n};\nconst _tmpl$$b = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1.75 12.002C1.75 9.20169 1.75 7.80156 2.29497 6.732C2.77433 5.79119 3.53924 5.02629 4.48005 4.54692C5.54961 4.00195 6.94974 4.00195 9.75 4.00195H17.25C20.0503 4.00195 21.4504 4.00195 22.52 4.54692C23.4608 5.02629 24.2257 5.79119 24.705 6.732C24.8256 6.96861 24.9195 7.2214 24.9926 7.50195H21.5C19.6377 7.50195 18.7065 7.50195 17.9609 7.77334C16.711 8.22828 15.7263 9.21291 15.2714 10.4629C15 11.2085 15 12.1396 15 14.002C15 15.8643 15 16.7954 15.2714 17.541C15.7263 18.791 16.711 19.7756 17.9609 20.2306C18.7065 20.502 19.6377 20.502 21.5 20.502H24.9926C24.9195 20.7825 24.8256 21.0353 24.705 21.2719C24.2257 22.2127 23.4608 22.9776 22.52 23.457C21.4504 24.002 20.0503 24.002 17.25 24.002H9.75C6.94974 24.002 5.54961 24.002 4.48005 23.457C3.53924 22.9776 2.77433 22.2127 2.29497 21.2719C1.75 20.2023 1.75 18.8022 1.75 16.002V12.002ZM16.4999 13.802C16.4999 12.1218 16.4999 11.2817 16.8269 10.64C17.1145 10.0755 17.5735 9.61656 18.138 9.32894C18.7797 9.00196 19.6198 9.00196 21.2999 9.00196H23.1999C24.8801 9.00196 25.7202 9.00196 26.3619 9.32894C26.9264 9.61656 27.3853 10.0755 27.673 10.64C27.9999 11.2817 27.9999 12.1218 27.9999 13.802V14.202C27.9999 15.8821 27.9999 16.7222 27.673 17.3639C27.3853 17.9284 26.9264 18.3874 26.3619 18.675C25.7202 19.002 24.8801 19.002 23.1999 19.002H21.2999C19.6198 19.002 18.7797 19.002 18.138 18.675C17.5735 18.3874 17.1145 17.9284 16.8269 17.3639C16.4999 16.7222 16.4999 15.8821 16.4999 14.202V13.802ZM22.4999 14.002C22.4999 14.9685 21.7164 15.752 20.7499 15.752C19.7834 15.752 18.9999 14.9685 18.9999 14.002C18.9999 13.0355 19.7834 12.252 20.7499 12.252C21.7164 12.252 22.4999 13.0355 22.4999 14.002Z\"></path></svg>`);\nconst AtWalletIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.constant.white;\n  return (() => {\n    const _el$ = _tmpl$$b.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect((_p$) => {\n      const _v$ = props.class, _v$2 = fill();\n      _v$ !== _p$._v$ && setAttribute(_el$, \"class\", _p$._v$ = _v$);\n      _v$2 !== _p$._v$2 && setAttribute(_el$2, \"fill\", _p$._v$2 = _v$2);\n      return _p$;\n    }, {\n      _v$: void 0,\n      _v$2: void 0\n    });\n    return _el$;\n  })();\n};\nconst _tmpl$$a = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.0001 10.0001C10.0016 8.02333 10.0267 6.98719 10.436 6.18404C10.8195 5.43139 11.4314 4.81947 12.184 4.43597C13.0397 4 14.1598 4 16.4 4H17.6C19.8402 4 20.9603 4 21.816 4.43597C22.5686 4.81947 23.1805 5.43139 23.564 6.18404C24 7.03969 24 8.15979 24 10.4V11.6C24 13.8402 24 14.9603 23.564 15.816C23.1805 16.5686 22.5686 17.1805 21.816 17.564C21.0128 17.9733 19.9767 17.9984 17.9999 17.9999C17.9984 19.9767 17.9733 21.0128 17.564 21.816C17.1805 22.5686 16.5686 23.1805 15.816 23.564C14.9603 24 13.8402 24 11.6 24H10.4C8.15979 24 7.03969 24 6.18404 23.564C5.43139 23.1805 4.81947 22.5686 4.43597 21.816C4 20.9603 4 19.8402 4 17.6V16.4C4 14.1598 4 13.0397 4.43597 12.184C4.81947 11.4314 5.43139 10.8195 6.18404 10.436C6.98719 10.0267 8.02333 10.0016 10.0001 10.0001ZM10 11.5H9.5C8.09987 11.5 7.3998 11.5 6.86502 11.7725C6.39462 12.0122 6.01217 12.3946 5.77248 12.865C5.5 13.3998 5.5 14.0999 5.5 15.5V18.5C5.5 19.9001 5.5 20.6002 5.77248 21.135C6.01217 21.6054 6.39462 21.9878 6.86502 22.2275C7.3998 22.5 8.09987 22.5 9.5 22.5H12.5C13.9001 22.5 14.6002 22.5 15.135 22.2275C15.6054 21.9878 15.9878 21.6054 16.2275 21.135C16.5 20.6002 16.5 19.9001 16.5 18.5V18H16.4C14.1598 18 13.0397 18 12.184 17.564C11.4314 17.1805 10.8195 16.5686 10.436 15.816C10 14.9603 10 13.8402 10 11.6V11.5ZM11.5 9.5C11.5 8.09987 11.5 7.3998 11.7725 6.86502C12.0122 6.39462 12.3946 6.01217 12.865 5.77248C13.3998 5.5 14.0999 5.5 15.5 5.5H18.5C19.9001 5.5 20.6002 5.5 21.135 5.77248C21.6054 6.01217 21.9878 6.39462 22.2275 6.86502C22.5 7.3998 22.5 8.09987 22.5 9.5V12.5C22.5 13.9001 22.5 14.6002 22.2275 15.135C21.9878 15.6054 21.6054 15.9878 21.135 16.2275C20.6002 16.5 19.9001 16.5 18.5 16.5H15.5C14.0999 16.5 13.3998 16.5 12.865 16.2275C12.3946 15.9878 12.0122 15.6054 11.7725 15.135C11.5 14.6002 11.5 13.9001 11.5 12.5V9.5Z\"></path></svg>`);\nconst CopyLightIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.secondary;\n  return (() => {\n    const _el$ = _tmpl$$a.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect((_p$) => {\n      const _v$ = fill(), _v$2 = fill();\n      _v$ !== _p$._v$ && setAttribute(_el$, \"fill\", _p$._v$ = _v$);\n      _v$2 !== _p$._v$2 && setAttribute(_el$2, \"fill\", _p$._v$2 = _v$2);\n      return _p$;\n    }, {\n      _v$: void 0,\n      _v$2: void 0\n    });\n    return _el$;\n  })();\n};\nconst _tmpl$$9 = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"17\" viewBox=\"0 0 16 17\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1 4.12695C1 3.07754 1 2.55284 1.19202 2.14684C1.38986 1.72856 1.7266 1.39181 2.14489 1.19397C2.55088 1.00195 3.07559 1.00195 4.125 1.00195C5.17441 1.00195 5.69912 1.00195 6.10511 1.19397C6.5234 1.39181 6.86014 1.72856 7.05798 2.14684C7.25 2.55284 7.25 3.07754 7.25 4.12695C7.25 5.17636 7.25 5.70107 7.05798 6.10706C6.86014 6.52535 6.5234 6.8621 6.10511 7.05993C5.69912 7.25195 5.17441 7.25195 4.125 7.25195C3.07559 7.25195 2.55088 7.25195 2.14489 7.05993C1.7266 6.8621 1.38986 6.52535 1.19202 6.10706C1 5.70107 1 5.17636 1 4.12695ZM2.5 3.30195C2.5 3.02193 2.5 2.88191 2.5545 2.77496C2.60243 2.68088 2.67892 2.60439 2.773 2.55645C2.87996 2.50195 3.01997 2.50195 3.3 2.50195H4.95C5.23003 2.50195 5.37004 2.50195 5.477 2.55645C5.57108 2.60439 5.64757 2.68088 5.6955 2.77496C5.75 2.88191 5.75 3.02193 5.75 3.30195V4.95195C5.75 5.23198 5.75 5.37199 5.6955 5.47895C5.64757 5.57303 5.57108 5.64952 5.477 5.69746C5.37004 5.75195 5.23003 5.75195 4.95 5.75195H3.3C3.01997 5.75195 2.87996 5.75195 2.773 5.69746C2.67892 5.64952 2.60243 5.57303 2.5545 5.47895C2.5 5.37199 2.5 5.23198 2.5 4.95195V3.30195ZM1 11.877C1 10.8275 1 10.3028 1.19202 9.89684C1.38986 9.47856 1.7266 9.14181 2.14489 8.94397C2.55088 8.75195 3.07559 8.75195 4.125 8.75195C5.17441 8.75195 5.69912 8.75195 6.10511 8.94397C6.5234 9.14181 6.86014 9.47856 7.05798 9.89684C7.25 10.3028 7.25 10.8275 7.25 11.877C7.25 12.9264 7.25 13.4511 7.05798 13.8571C6.86014 14.2753 6.5234 14.6121 6.10511 14.8099C5.69912 15.002 5.17441 15.002 4.125 15.002C3.07559 15.002 2.55088 15.002 2.14489 14.8099C1.7266 14.6121 1.38986 14.2753 1.19202 13.8571C1 13.4511 1 12.9264 1 11.877ZM2.5 11.052C2.5 10.7719 2.5 10.6319 2.5545 10.525C2.60243 10.4309 2.67892 10.3544 2.773 10.3064C2.87996 10.252 3.01997 10.252 3.3 10.252H4.95C5.23003 10.252 5.37004 10.252 5.477 10.3064C5.57108 10.3544 5.64757 10.4309 5.6955 10.525C5.75 10.6319 5.75 10.7719 5.75 11.052V12.702C5.75 12.982 5.75 13.122 5.6955 13.2289C5.64757 13.323 5.57108 13.3995 5.477 13.4475C5.37004 13.502 5.23003 13.502 4.95 13.502H3.3C3.01997 13.502 2.87996 13.502 2.773 13.4475C2.67892 13.3995 2.60243 13.323 2.5545 13.2289C2.5 13.122 2.5 12.982 2.5 12.702V11.052ZM8.94202 2.14684C8.75 2.55284 8.75 3.07754 8.75 4.12695C8.75 5.17636 8.75 5.70107 8.94202 6.10706C9.13986 6.52535 9.4766 6.8621 9.89489 7.05993C10.3009 7.25195 10.8256 7.25195 11.875 7.25195C12.9244 7.25195 13.4491 7.25195 13.8551 7.05993C14.2734 6.8621 14.6101 6.52535 14.808 6.10706C15 5.70107 15 5.17636 15 4.12695C15 3.07754 15 2.55284 14.808 2.14684C14.6101 1.72856 14.2734 1.39181 13.8551 1.19397C13.4491 1.00195 12.9244 1.00195 11.875 1.00195C10.8256 1.00195 10.3009 1.00195 9.89489 1.19397C9.4766 1.39181 9.13986 1.72856 8.94202 2.14684ZM10.3045 2.77496C10.25 2.88191 10.25 3.02193 10.25 3.30195V4.95195C10.25 5.23198 10.25 5.37199 10.3045 5.47895C10.3524 5.57303 10.4289 5.64952 10.523 5.69746C10.63 5.75195 10.77 5.75195 11.05 5.75195H12.7C12.98 5.75195 13.12 5.75195 13.227 5.69746C13.3211 5.64952 13.3976 5.57303 13.4455 5.47895C13.5 5.37199 13.5 5.23198 13.5 4.95195V3.30195C13.5 3.02193 13.5 2.88191 13.4455 2.77496C13.3976 2.68088 13.3211 2.60439 13.227 2.55645C13.12 2.50195 12.98 2.50195 12.7 2.50195H11.05C10.77 2.50195 10.63 2.50195 10.523 2.55645C10.4289 2.60439 10.3524 2.68088 10.3045 2.77496ZM8.80727 9.13518C8.75 9.26242 8.75 9.4256 8.75 9.75195C8.75 10.0783 8.75 10.2415 8.80727 10.3687C8.87245 10.5136 8.9884 10.6295 9.13323 10.6947C9.26047 10.752 9.42365 10.752 9.75 10.752C10.0764 10.752 10.2395 10.752 10.3668 10.6947C10.5116 10.6295 10.6276 10.5136 10.6927 10.3687C10.75 10.2415 10.75 10.0783 10.75 9.75195C10.75 9.4256 10.75 9.26242 10.6927 9.13518C10.6276 8.99035 10.5116 8.8744 10.3668 8.80922C10.2395 8.75195 10.0764 8.75195 9.75 8.75195C9.42365 8.75195 9.26047 8.75195 9.13323 8.80922C8.9884 8.8744 8.87245 8.99035 8.80727 9.13518ZM10.87 11.8771C10.87 11.546 10.87 11.3805 10.9289 11.2517C10.9938 11.1098 11.1077 10.9959 11.2497 10.931C11.3784 10.8721 11.5439 10.8721 11.875 10.8721C12.2061 10.8721 12.3716 10.8721 12.5003 10.931C12.6423 10.9959 12.7562 11.1098 12.8211 11.2517C12.88 11.3805 12.88 11.546 12.88 11.8771C12.88 12.2081 12.88 12.3737 12.8211 12.5024C12.7562 12.6444 12.6423 12.7583 12.5003 12.8232C12.3716 12.8821 12.2061 12.8821 11.875 12.8821C11.5439 12.8821 11.3784 12.8821 11.2497 12.8232C11.1077 12.7583 10.9938 12.6444 10.9289 12.5024C10.87 12.3737 10.87 12.2081 10.87 11.8771ZM8.80727 13.3852C8.75 13.5124 8.75 13.6756 8.75 14.002C8.75 14.3283 8.75 14.4915 8.80727 14.6187C8.87245 14.7636 8.9884 14.8795 9.13323 14.9447C9.26047 15.002 9.42365 15.002 9.75 15.002C10.0764 15.002 10.2395 15.002 10.3668 14.9447C10.5116 14.8795 10.6276 14.7636 10.6927 14.6187C10.75 14.4915 10.75 14.3283 10.75 14.002C10.75 13.6756 10.75 13.5124 10.6927 13.3852C10.6276 13.2404 10.5116 13.1244 10.3668 13.0592C10.2395 13.002 10.0764 13.002 9.75 13.002C9.42365 13.002 9.26047 13.002 9.13323 13.0592C8.9884 13.1244 8.87245 13.2404 8.80727 13.3852ZM13 9.75195C13 9.4256 13 9.26242 13.0573 9.13518C13.1224 8.99035 13.2384 8.8744 13.3832 8.80922C13.5105 8.75195 13.6736 8.75195 14 8.75195C14.3264 8.75195 14.4895 8.75195 14.6168 8.80922C14.7616 8.8744 14.8776 8.99035 14.9427 9.13518C15 9.26242 15 9.4256 15 9.75195C15 10.0783 15 10.2415 14.9427 10.3687C14.8776 10.5136 14.7616 10.6295 14.6168 10.6947C14.4895 10.752 14.3264 10.752 14 10.752C13.6736 10.752 13.5105 10.752 13.3832 10.6947C13.2384 10.6295 13.1224 10.5136 13.0573 10.3687C13 10.2415 13 10.0783 13 9.75195ZM13.0573 13.3852C13 13.5124 13 13.6756 13 14.002C13 14.3283 13 14.4915 13.0573 14.6187C13.1224 14.7636 13.2384 14.8795 13.3832 14.9447C13.5105 15.002 13.6736 15.002 14 15.002C14.3264 15.002 14.4895 15.002 14.6168 14.9447C14.7616 14.8795 14.8776 14.7636 14.9427 14.6187C15 14.4915 15 14.3283 15 14.002C15 13.6756 15 13.5124 14.9427 13.3852C14.8776 13.2404 14.7616 13.1244 14.6168 13.0592C14.4895 13.002 14.3264 13.002 14 13.002C13.6736 13.002 13.5105 13.002 13.3832 13.0592C13.2384 13.1244 13.1224 13.2404 13.0573 13.3852Z\"></path></svg>`);\nconst QRIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.secondary;\n  return (() => {\n    const _el$ = _tmpl$$9.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect(() => setAttribute(_el$2, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst containerBorders = {\n  m: \"16px\",\n  s: \"12px\",\n  none: \"0\"\n};\nconst walletBorders = {\n  m: \"6px\",\n  s: \"6px\",\n  none: \"0\"\n};\nconst FourWalletsCard = styled.div`\n    width: 60px;\n    height: 60px;\n    padding: 8px;\n    margin-bottom: 8px;\n    border-radius: ${(props) => containerBorders[props.theme.borderRadius]};\n    background-color: ${(props) => props.theme.colors.background.tint};\n    display: grid;\n    grid-template: 1fr 1fr / 1fr 1fr;\n    gap: 4px;\n`;\nconst FourWalletsImage = styled(WalletImage)`\n    width: 20px;\n    height: 20px;\n    border-radius: ${(props) => walletBorders[props.theme.borderRadius]};\n`;\nconst FourWalletsItem = (props) => {\n  return createComponent(WalletItem, {\n    get name() {\n      return props.labelLine1;\n    },\n    get secondLine() {\n      return props.labelLine2;\n    },\n    get icon() {\n      return createComponent(FourWalletsCard, {\n        get children() {\n          return createComponent(For, {\n            each: [0, 1, 2, 3],\n            children: (index) => createComponent(FourWalletsImage, {\n              get src() {\n                return props.images[index];\n              }\n            })\n          });\n        }\n      });\n    },\n    onClick: () => props.onClick()\n  });\n};\nconst AT_WALLET_APP_NAME = \"telegram-wallet\";\nconst IMG = {\n  TON: \"https://raw.githubusercontent.com/ton-connect/sdk/main/assets/ton-icon-48.png\",\n  TG: \"https://raw.githubusercontent.com/ton-connect/sdk/main/assets/tg.png\"\n};\nconst WalletLabeledItem = (props) => {\n  const [t2] = useI18n();\n  const walletsSecondLine = () => {\n    if (props.wallet.appName === AT_WALLET_APP_NAME) {\n      return void 0;\n    }\n    if (\"isPreferred\" in props.wallet && props.wallet.isPreferred) {\n      return t2(\"walletItem.recent\", {}, \"Recent\");\n    }\n    if ((0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyInjected)(props.wallet)) {\n      return t2(\"walletItem.installed\", {}, \"Installed\");\n    }\n    if (props.wallet.name === \"Tonkeeper\") {\n      return t2(\"walletItem.popular\", {}, \"Popular\");\n    }\n    return void 0;\n  };\n  return createMemo((() => {\n    const _c$ = createMemo(() => props.wallet.appName === AT_WALLET_APP_NAME);\n    return () => _c$() ? createComponent(WalletItem, {\n      get icon() {\n        return props.wallet.imageUrl;\n      },\n      get name() {\n        return t2(\"walletItem.walletOn\", {}, \"Wallet in\");\n      },\n      secondLine: \"Telegram\",\n      get badgeUrl() {\n        return IMG.TG;\n      },\n      onClick: () => props.onClick(),\n      get [\"class\"]() {\n        return props.class;\n      }\n    }) : createComponent(WalletItem, {\n      get icon() {\n        return props.wallet.imageUrl;\n      },\n      get name() {\n        return props.wallet.name;\n      },\n      get secondLine() {\n        return walletsSecondLine();\n      },\n      secondLineColorPrimary: false,\n      onClick: () => props.onClick(),\n      get [\"class\"]() {\n        return props.class;\n      }\n    });\n  })());\n};\nconst ScrollContainerStyled = styled.div`\n    width: 100%;\n    overflow-y: auto;\n    max-height: ${(props) => props.maxHeight};\n\n    scrollbar-width: none;\n    &&::-webkit-scrollbar {\n        display: none;\n    }\n\n    &&::-webkit-scrollbar-track {\n        background: transparent;\n    }\n\n    &&::-webkit-scrollbar-thumb {\n        display: none;\n    }\n`;\nconst ScrollDivider = styled.div`\n    height: 1px;\n    margin: 0 -24px;\n    width: calc(100% + 48px);\n    opacity: 0.08;\n    background: ${(props) => props.isShown ? props.theme.colors.icon.secondary : \"transparent\"};\n    transition: background 0.15s ease-in-out;\n\n    ${media(\"mobile\")} {\n        width: 100%;\n        margin: 0;\n    }\n`;\nconst [windowHeight, setWindowHeight] = createSignal(((_h = getWindow$1()) == null ? void 0 : _h.innerHeight) || 0);\nif (getWindow$1()) {\n  window.addEventListener(\"resize\", () => setWindowHeight(window.innerHeight));\n}\nconst [isMobile, setIsMobile] = createSignal(isDevice(\"mobile\"));\nconst updateIsMobile = () => setIsMobile(isDevice(\"mobile\"));\nif (getWindow$1()) {\n  window.addEventListener(\"resize\", () => updateIsMobile());\n  window.addEventListener(\"load\", () => updateIsMobile(), { once: true });\n}\nconst ScrollContainer = (props) => {\n  const [scrolled, setScrolled] = createSignal(false);\n  const onScroll = (e2) => {\n    setScrolled(e2.target.scrollTop > 0);\n  };\n  const offset = () => isMobile() ? 150 : 200;\n  const maxHeight = () => props.maxHeight !== void 0 ? `${props.maxHeight}px` : `${windowHeight() - offset()}px`;\n  return [createComponent(ScrollDivider, {\n    get isShown() {\n      return scrolled();\n    }\n  }), createComponent(ScrollContainerStyled, {\n    get maxHeight() {\n      return maxHeight();\n    },\n    onScroll,\n    get [\"class\"]() {\n      return props.class;\n    },\n    get children() {\n      return props.children;\n    }\n  })];\n};\nconst AStyled = styled.a`\n    display: block;\n    text-decoration: unset;\n`;\nconst Link = (props) => {\n  const attributes = () => props.blank ? {\n    rel: \"noreferrer noopener\"\n  } : {};\n  return createComponent(AStyled, mergeProps({\n    get href() {\n      return props.href;\n    },\n    get target() {\n      return props.blank ? \"_blank\" : \"_self\";\n    },\n    get [\"class\"]() {\n      return props.class;\n    }\n  }, attributes, {\n    get children() {\n      return props.children;\n    }\n  }));\n};\nconst TonConnectUiContext = createContext();\nconst _tmpl$$8 = /* @__PURE__ */ template$1(`<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.76228 2.09998H10.2378C11.0458 2.09997 11.7067 2.09996 12.2438 2.14384C12.7997 2.18926 13.3017 2.28614 13.7706 2.52505C14.5045 2.89896 15.1011 3.49558 15.475 4.22941C15.7139 4.6983 15.8108 5.20038 15.8562 5.75629C15.9001 6.29337 15.9001 6.95422 15.9001 7.76227V8.1H16.2377C17.0457 8.09999 17.7066 8.09998 18.2437 8.14386C18.7996 8.18928 19.3017 8.28616 19.7705 8.52507C20.5044 8.89898 21.101 9.4956 21.4749 10.2294C21.7138 10.6983 21.8107 11.2004 21.8561 11.7563C21.9 12.2934 21.9 12.9542 21.9 13.7623V16.2377C21.9 17.0458 21.9 17.7066 21.8561 18.2437C21.8107 18.7996 21.7138 19.3017 21.4749 19.7706C21.101 20.5044 20.5044 21.101 19.7705 21.4749C19.3017 21.7138 18.7996 21.8107 18.2437 21.8561C17.7066 21.9 17.0458 21.9 16.2378 21.9H13.7623C12.9543 21.9 12.2934 21.9 11.7563 21.8561C11.2004 21.8107 10.6983 21.7138 10.2294 21.4749C9.49561 21.101 8.89898 20.5044 8.52508 19.7706C8.28616 19.3017 8.18928 18.7996 8.14386 18.2437C8.09998 17.7066 8.09999 17.0458 8.1 16.2377V15.9H7.76227C6.95426 15.9 6.29335 15.9 5.75629 15.8561C5.20038 15.8107 4.6983 15.7138 4.22941 15.4749C3.49558 15.101 2.89896 14.5044 2.52505 13.7705C2.28614 13.3017 2.18926 12.7996 2.14384 12.2437C2.09996 11.7066 2.09997 11.0458 2.09998 10.2377V7.76228C2.09997 6.95424 2.09996 6.29336 2.14384 5.75629C2.18926 5.20038 2.28614 4.6983 2.52505 4.22941C2.89896 3.49558 3.49558 2.89896 4.22941 2.52505C4.6983 2.28614 5.20038 2.18926 5.75629 2.14384C6.29336 2.09996 6.95425 2.09997 7.76228 2.09998ZM8.1 14.1V13.7623C8.09999 12.9542 8.09998 12.2934 8.14386 11.7563C8.18928 11.2004 8.28616 10.6983 8.52508 10.2294C8.89898 9.4956 9.49561 8.89898 10.2294 8.52507C10.6983 8.28616 11.2004 8.18928 11.7563 8.14386C12.2934 8.09998 12.9542 8.09999 13.7623 8.1H14.1001V7.79998C14.1001 6.94505 14.0994 6.35798 14.0622 5.90287C14.0259 5.45827 13.9593 5.21944 13.8712 5.0466C13.6699 4.65146 13.3486 4.3302 12.9535 4.12886C12.7806 4.04079 12.5418 3.97419 12.0972 3.93786C11.6421 3.90068 11.055 3.89998 10.2001 3.89998H7.79998C6.94505 3.89998 6.35798 3.90068 5.90287 3.93786C5.45827 3.97419 5.21944 4.04079 5.0466 4.12886C4.65146 4.3302 4.3302 4.65146 4.12886 5.0466C4.04079 5.21944 3.97419 5.45827 3.93786 5.90287C3.90068 6.35798 3.89998 6.94505 3.89998 7.79998V10.2C3.89998 11.0549 3.90068 11.642 3.93786 12.0971C3.97419 12.5417 4.04079 12.7805 4.12886 12.9534C4.3302 13.3485 4.65146 13.6698 5.0466 13.8711C5.21944 13.9592 5.45827 14.0258 5.90287 14.0621C6.35798 14.0993 6.94505 14.1 7.79998 14.1H8.1ZM11.0466 10.1289C11.2195 10.0408 11.4583 9.97421 11.9029 9.93788C12.358 9.9007 12.9451 9.9 13.8 9.9H16.2C17.0549 9.9 17.642 9.9007 18.0971 9.93788C18.5417 9.97421 18.7805 10.0408 18.9534 10.1289C19.3485 10.3302 19.6698 10.6515 19.8711 11.0466C19.9592 11.2195 20.0258 11.4583 20.0621 11.9029C20.0993 12.358 20.1 12.9451 20.1 13.8V16.2C20.1 17.0549 20.0993 17.642 20.0621 18.0971C20.0258 18.5417 19.9592 18.7805 19.8711 18.9534C19.6698 19.3485 19.3485 19.6698 18.9534 19.8711C18.7805 19.9592 18.5417 20.0258 18.0971 20.0621C17.642 20.0993 17.0549 20.1 16.2 20.1H13.8C12.9451 20.1 12.358 20.0993 11.9029 20.0621C11.4583 20.0258 11.2195 19.9592 11.0466 19.8711C10.6515 19.6698 10.3302 19.3485 10.1289 18.9534C10.0408 18.7805 9.97421 18.5417 9.93788 18.0971C9.9007 17.642 9.9 17.0549 9.9 16.2V13.8C9.9 12.9451 9.9007 12.358 9.93788 11.9029C9.97421 11.4583 10.0408 11.2195 10.1289 11.0466C10.3302 10.6515 10.6515 10.3302 11.0466 10.1289Z\"></path></svg>`);\nconst CopyIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.primary;\n  return (() => {\n    const _el$ = _tmpl$$8.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect((_p$) => {\n      const _v$ = props.class, _v$2 = fill();\n      _v$ !== _p$._v$ && setAttribute(_el$, \"class\", _p$._v$ = _v$);\n      _v$2 !== _p$._v$2 && setAttribute(_el$2, \"fill\", _p$._v$2 = _v$2);\n      return _p$;\n    }, {\n      _v$: void 0,\n      _v$2: void 0\n    });\n    return _el$;\n  })();\n};\nconst _tmpl$$7 = /* @__PURE__ */ template$1(`<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M8.7624 3.10001C7.95435 3.1 7.29349 3.09999 6.75642 3.14387C6.2005 3.18929 5.69842 3.28617 5.22954 3.52508C4.4957 3.89899 3.89908 4.49561 3.52517 5.22944C3.28626 5.69833 3.18938 6.20041 3.14396 6.75632C3.10008 7.2934 3.10009 7.95424 3.1001 8.76229V15.2377C3.10009 16.0458 3.10008 16.7066 3.14396 17.2437C3.18938 17.7996 3.28626 18.3017 3.52517 18.7706C3.89908 19.5044 4.4957 20.101 5.22954 20.4749C5.69842 20.7138 6.2005 20.8107 6.75642 20.8561C7.29349 20.9 7.95434 20.9 8.76239 20.9H12.0001C12.4972 20.9 12.9001 20.4971 12.9001 20C12.9001 19.503 12.4972 19.1 12.0001 19.1H8.8001C7.94517 19.1 7.3581 19.0993 6.90299 19.0621C6.45839 19.0258 6.21956 18.9592 6.04672 18.8711C5.65158 18.6698 5.33032 18.3485 5.12898 17.9534C5.04092 17.7805 4.97431 17.5417 4.93798 17.0971C4.9008 16.642 4.9001 16.0549 4.9001 15.2V8.80001C4.9001 7.94508 4.9008 7.35801 4.93798 6.9029C4.97431 6.4583 5.04092 6.21947 5.12898 6.04663C5.33032 5.65149 5.65158 5.33023 6.04672 5.12889C6.21956 5.04082 6.45839 4.97422 6.90299 4.93789C7.3581 4.90071 7.94517 4.90001 8.8001 4.90001H12.0001C12.4972 4.90001 12.9001 4.49706 12.9001 4.00001C12.9001 3.50295 12.4972 3.10001 12.0001 3.10001H8.7624Z\"></path><path d=\"M17.6364 7.3636C17.2849 7.01212 16.7151 7.01212 16.3636 7.3636C16.0121 7.71507 16.0121 8.28492 16.3636 8.63639L18.8272 11.1H9.00001C8.50295 11.1 8.10001 11.5029 8.10001 12C8.10001 12.497 8.50295 12.9 9.00001 12.9H18.8272L16.3636 15.3636C16.0121 15.7151 16.0121 16.2849 16.3636 16.6364C16.7151 16.9879 17.2849 16.9879 17.6364 16.6364L21.6364 12.6364C21.9879 12.2849 21.9879 11.7151 21.6364 11.3636L17.6364 7.3636Z\"></path></svg>`);\nconst DisconnectIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.primary;\n  return (() => {\n    const _el$ = _tmpl$$7.cloneNode(true), _el$2 = _el$.firstChild, _el$3 = _el$2.nextSibling;\n    createRenderEffect((_p$) => {\n      const _v$ = fill(), _v$2 = fill();\n      _v$ !== _p$._v$ && setAttribute(_el$2, \"fill\", _p$._v$ = _v$);\n      _v$2 !== _p$._v$2 && setAttribute(_el$3, \"fill\", _p$._v$2 = _v$2);\n      return _p$;\n    }, {\n      _v$: void 0,\n      _v$2: void 0\n    });\n    return _el$;\n  })();\n};\nconst hoverBorders$1 = {\n  m: \"8px\",\n  s: \"4px\",\n  none: \"0\"\n};\nconst dropdownBorders = {\n  m: \"16px\",\n  s: \"8px\",\n  none: \"0\"\n};\nconst AccountButtonDropdownStyled = styled.div`\n    width: 256px;\n    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.16);\n    border-radius: ${(props) => dropdownBorders[props.theme.borderRadius]};\n\n    background-color: ${(props) => props.theme.colors.background.primary}\n           \n    color: ${(props) => props.theme.colors.text.primary}\n`;\nconst UlStyled = styled.ul`\n    background-color: ${(props) => props.theme.colors.background.primary};\n    padding: 8px;\n`;\nconst MenuButtonStyled = styled.button`\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    height: 40px;\n    padding-left: 8px;\n    width: 100%;\n\n    background-color: ${(props) => props.theme.colors.background.primary};\n    border: none;\n    border-radius: ${(props) => hoverBorders$1[props.theme.borderRadius]};\n    cursor: pointer;\n\n    transition: background-color, transform 0.1s ease-in-out;\n\n    &:hover {\n        background-color: ${(props) => props.theme.colors.background.secondary};\n    }\n\n    &:active {\n        transform: scale(0.96);\n    }\n`;\nconst _tmpl$$6 = /* @__PURE__ */ template$1(`<li></li>`);\nconst MenuItemText = (props) => createComponent(Text, {\n  get translationKey() {\n    return props.translationKey;\n  },\n  fontSize: \"15px\",\n  fontWeight: \"590\",\n  get children() {\n    return props.children;\n  }\n});\nconst AccountButtonDropdown = (props) => {\n  const tonConnectUi = useContext(TonConnectUiContext);\n  const [isCopiedShown, setIsCopiedShown] = createSignal(false);\n  const onCopy = () => __async(void 0, null, function* () {\n    const userFriendlyAddress = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.toUserFriendlyAddress)(tonConnectUi.account.address, tonConnectUi.account.chain === _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.CHAIN.TESTNET);\n    yield copyToClipboard(userFriendlyAddress);\n    setIsCopiedShown(true);\n    setTimeout(() => setIsCopiedShown(false), 1e3);\n  });\n  const onDisconnect = () => {\n    tonConnectUi.disconnect();\n    props.onClose();\n  };\n  return createComponent(AccountButtonDropdownStyled, {\n    ref(r$) {\n      const _ref$ = props.ref;\n      typeof _ref$ === \"function\" ? _ref$(r$) : props.ref = r$;\n    },\n    get [\"class\"]() {\n      return props.class;\n    },\n    \"data-tc-dropdown\": \"true\",\n    get children() {\n      return createComponent(UlStyled, {\n        get children() {\n          return [(() => {\n            const _el$ = _tmpl$$6.cloneNode(true);\n            insert(_el$, createComponent(MenuButtonStyled, {\n              onClick: () => onCopy(),\n              get children() {\n                return [createComponent(CopyIcon, {}), createComponent(Show, {\n                  get when() {\n                    return !isCopiedShown();\n                  },\n                  get children() {\n                    return createComponent(MenuItemText, {\n                      translationKey: \"button.dropdown.copy\",\n                      children: \"Copy address\"\n                    });\n                  }\n                }), createComponent(Show, {\n                  get when() {\n                    return isCopiedShown();\n                  },\n                  get children() {\n                    return createComponent(MenuItemText, {\n                      translationKey: \"button.dropdown.copied\",\n                      children: \"Address copied!\"\n                    });\n                  }\n                })];\n              }\n            }));\n            return _el$;\n          })(), (() => {\n            const _el$2 = _tmpl$$6.cloneNode(true);\n            insert(_el$2, createComponent(MenuButtonStyled, {\n              onClick: () => onDisconnect(),\n              get children() {\n                return [createComponent(DisconnectIcon, {}), createComponent(MenuItemText, {\n                  translationKey: \"button.dropdown.disconnect\",\n                  children: \"Disconnect\"\n                })];\n              }\n            }));\n            return _el$2;\n          })()];\n        }\n      });\n    }\n  });\n};\nconst borders$3 = {\n  m: \"16px\",\n  s: \"8px\",\n  none: \"0\"\n};\nconst NotificationStyled = styled.div`\n    width: 256px;\n    padding: 12px 16px;\n    display: flex;\n    gap: 9px;\n\n    background-color: ${(props) => props.theme.colors.background.primary};\n    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.16);\n    border-radius: ${(props) => borders$3[props.theme.borderRadius]};\n`;\nconst NotificationContentStyled = styled.div`\n    width: 192px;\n\n    > h3 {\n        font-size: 15px;\n    }\n`;\nconst TextStyled$3 = styled(Text)`\n    margin-top: 4px;\n    color: ${(props) => props.theme.colors.text.secondary};\n`;\nconst Notification = (props) => {\n  const dataAttrs = useDataAttributes(props);\n  return createComponent(NotificationStyled, mergeProps({\n    get [\"class\"]() {\n      return props.class;\n    },\n    \"data-tc-notification\": \"true\"\n  }, dataAttrs, {\n    get children() {\n      return [createComponent(NotificationContentStyled, {\n        get children() {\n          return [createComponent(H3, {\n            get translationKey() {\n              return props.header.translationKey;\n            },\n            get translationValues() {\n              return props.header.translationValues;\n            },\n            get children() {\n              return props.children;\n            }\n          }), createComponent(Show, {\n            get when() {\n              return props.text;\n            },\n            get children() {\n              return createComponent(TextStyled$3, {\n                get translationKey() {\n                  return props.text.translationKey;\n                },\n                get translationValues() {\n                  return props.text.translationValues;\n                }\n              });\n            }\n          })];\n        }\n      }), createMemo(() => props.icon)];\n    }\n  }));\n};\nconst LoaderIconStyled$2 = styled(LoaderIcon)`\n    align-self: center;\n`;\nconst ConfirmOperationNotification = (props) => {\n  const tonConnectUI = useContext(TonConnectUiContext);\n  const [t2] = useI18n();\n  const name = () => tonConnectUI.wallet && \"name\" in tonConnectUI.wallet ? tonConnectUI.wallet.name : t2(\"common.yourWallet\", {}, \"Your wallet\");\n  return createComponent(Notification, {\n    get header() {\n      return {\n        translationKey: \"notifications.confirm.header\",\n        translationValues: {\n          name: name()\n        }\n      };\n    },\n    get [\"class\"]() {\n      return props.class;\n    },\n    get icon() {\n      return createComponent(LoaderIconStyled$2, {});\n    },\n    \"data-tc-notification-confirm\": \"true\",\n    children: \"Confirm operation in your wallet\"\n  });\n};\nconst ErrorIconStyled$4 = styled(ErrorIcon)`\n    margin-top: 2px;\n`;\nconst ErrorTransactionNotification = (props) => {\n  return createComponent(Notification, {\n    header: {\n      translationKey: \"notifications.transactionCanceled.header\"\n    },\n    text: {\n      translationKey: \"notifications.transactionCanceled.text\"\n    },\n    get icon() {\n      return createComponent(ErrorIconStyled$4, {\n        size: \"xs\"\n      });\n    },\n    get [\"class\"]() {\n      return props.class;\n    },\n    \"data-tc-notification-tx-cancelled\": \"true\",\n    children: \"Transaction cancelled\"\n  });\n};\nconst SuccessIconStyled = styled(SuccessIcon)`\n    margin-top: 2px;\n`;\nconst SuccessTransactionNotification = (props) => {\n  return createComponent(Notification, {\n    header: {\n      translationKey: \"notifications.transactionSent.header\"\n    },\n    text: {\n      translationKey: \"notifications.transactionSent.text\"\n    },\n    get icon() {\n      return createComponent(SuccessIconStyled, {});\n    },\n    get [\"class\"]() {\n      return props.class;\n    },\n    \"data-tc-notification-tx-sent\": \"true\",\n    children: \"Transaction sent\"\n  });\n};\nconst NotificationClass = u`\n    transform: translateY(-8px);\n    margin-bottom: 12px;\n`;\nconst defaultConfig = {\n  timeout: 4500\n};\nconst [latestAction, setLatestAction] = createSignal(null);\nfunction useOpenedNotifications(config) {\n  const { timeout } = __spreadValues(__spreadValues({}, defaultConfig), config);\n  const [openedNotifications, setOpenedNotifications] = createSignal([]);\n  const [timeoutIds, setTimeoutIds] = createSignal([]);\n  createEffect(\n    on(action, (action2) => {\n      var _a2, _b2;\n      if (!action2 || !action2.showNotification) {\n        setOpenedNotifications(\n          (openedNotifications2) => openedNotifications2.filter((n2) => n2.action !== \"confirm-transaction\")\n        );\n        return;\n      }\n      if (latestAction() === action2) {\n        return;\n      }\n      const isConfirmTransactionAction = ((_a2 = latestAction()) == null ? void 0 : _a2.name) === \"confirm-transaction\" && action2.name === \"confirm-transaction\";\n      const isConfirmSignDataAction = ((_b2 = latestAction()) == null ? void 0 : _b2.name) === \"confirm-sign-data\" && action2.name === \"confirm-sign-data\";\n      if (isConfirmTransactionAction || isConfirmSignDataAction) {\n        return;\n      }\n      setLatestAction(action2);\n      setOpenedNotifications(\n        (openedNotifications2) => openedNotifications2.filter(\n          (n2) => n2.action !== \"confirm-transaction\" && n2.action !== \"confirm-sign-data\"\n        )\n      );\n      const notification = { action: action2.name };\n      setOpenedNotifications((openedNotifications2) => [...openedNotifications2, notification]);\n      const timeoutId = setTimeout(() => {\n        setOpenedNotifications(\n          (openedNotifications2) => openedNotifications2.filter((n2) => n2 !== notification)\n        );\n        setTimeoutIds((timeoutIds2) => timeoutIds2.filter((id) => id !== timeoutId));\n      }, timeout);\n      setTimeoutIds((timeoutIds2) => [...timeoutIds2, timeoutId]);\n    })\n  );\n  onCleanup(() => {\n    timeoutIds().forEach((id) => clearTimeout(id));\n  });\n  return openedNotifications;\n}\nconst ErrorIconStyled$3 = styled(ErrorIcon)`\n    margin-top: 2px;\n`;\nconst ErrorSignDataNotification = (props) => {\n  return createComponent(Notification, {\n    header: {\n      translationKey: \"notifications.signDataCanceled.header\"\n    },\n    get icon() {\n      return createComponent(ErrorIconStyled$3, {\n        size: \"xs\"\n      });\n    },\n    get [\"class\"]() {\n      return props.class;\n    },\n    \"data-tc-notification-sign-data-cancelled\": \"true\",\n    children: \"Sign data canceled\"\n  });\n};\nconst SuccessSignDataNotification = (props) => {\n  return createComponent(Notification, {\n    header: {\n      translationKey: \"notifications.dataSigned.header\"\n    },\n    get icon() {\n      return createComponent(SuccessIconStyled, {});\n    },\n    get [\"class\"]() {\n      return props.class;\n    },\n    \"data-tc-notification-data-signed\": \"true\",\n    children: \"Data signed\"\n  });\n};\nconst _tmpl$$5 = /* @__PURE__ */ template$1(`<div data-tc-list-notifications=\"true\"></div>`);\nconst Notifications = (props) => {\n  const openedNotifications = useOpenedNotifications();\n  return (() => {\n    const _el$ = _tmpl$$5.cloneNode(true);\n    insert(_el$, createComponent(TransitionGroup, {\n      onBeforeEnter: (el) => {\n        animate(el, [{\n          opacity: 0,\n          transform: \"translateY(0)\"\n        }, {\n          opacity: 1,\n          transform: \"translateY(-8px)\"\n        }], {\n          duration: 200\n        });\n      },\n      onExit: (el, done) => {\n        const a2 = animate(el, [{\n          opacity: 1,\n          transform: \"translateY(-8px)\"\n        }, {\n          opacity: 0,\n          transform: \"translateY(-30px)\"\n        }], {\n          duration: 200\n        });\n        a2.finished.then(done);\n      },\n      get children() {\n        return createComponent(For, {\n          get each() {\n            return openedNotifications();\n          },\n          children: (openedNotification) => createComponent(Switch, {\n            get children() {\n              return [createComponent(Match, {\n                get when() {\n                  return openedNotification.action === \"transaction-sent\";\n                },\n                get children() {\n                  return createComponent(SuccessTransactionNotification, {\n                    \"class\": NotificationClass\n                  });\n                }\n              }), createComponent(Match, {\n                get when() {\n                  return openedNotification.action === \"transaction-canceled\";\n                },\n                get children() {\n                  return createComponent(ErrorTransactionNotification, {\n                    \"class\": NotificationClass\n                  });\n                }\n              }), createComponent(Match, {\n                get when() {\n                  return openedNotification.action === \"data-signed\";\n                },\n                get children() {\n                  return createComponent(SuccessSignDataNotification, {\n                    \"class\": NotificationClass\n                  });\n                }\n              }), createComponent(Match, {\n                get when() {\n                  return openedNotification.action === \"sign-data-canceled\";\n                },\n                get children() {\n                  return createComponent(ErrorSignDataNotification, {\n                    \"class\": NotificationClass\n                  });\n                }\n              }), createComponent(Match, {\n                get when() {\n                  return openedNotification.action === \"confirm-transaction\" || openedNotification.action === \"confirm-sign-data\";\n                },\n                get children() {\n                  return createComponent(ConfirmOperationNotification, {\n                    \"class\": NotificationClass\n                  });\n                }\n              })];\n            }\n          })\n        });\n      }\n    }));\n    createRenderEffect(() => className(_el$, props.class));\n    return _el$;\n  })();\n};\nconst AccountButtonStyled = styled(Button)`\n    background-color: ${(props) => props.theme.colors.connectButton.background};\n    color: ${(props) => props.theme.colors.connectButton.foreground};\n    box-shadow: ${(props) => `0 4px 24px ${rgba(props.theme.colors.constant.black, 0.16)}`};\n    padding: 8px 16px 8px 12px;\n\n    display: flex;\n    align-items: center;\n    gap: 4px;\n    height: 40px;\n`;\nconst DropdownButtonStyled = styled(AccountButtonStyled)`\n    padding: 12px 16px;\n    min-width: 148px;\n    justify-content: center;\n    background-color: ${(props) => props.theme.colors.background.primary};\n`;\nconst LoaderButtonStyled$1 = styled(Button)`\n    min-width: 148px;\n    height: 40px;\n\n    background-color: ${(props) => props.theme.colors.background.primary};\n    color: ${(props) => props.theme.colors.connectButton.foreground};\n    box-shadow: ${(props) => `0 4px 24px ${rgba(props.theme.colors.constant.black, 0.16)}`};\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\nconst LoaderIconStyled$1 = styled(LoaderIcon)`\n    height: 18px;\n    width: 18px;\n`;\nconst DropdownContainerStyled = styled.div`\n    width: fit-content;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n`;\nconst DropdownStyled = styled(AccountButtonDropdown)`\n    box-sizing: border-box;\n    overflow: hidden;\n    margin-top: 12px;\n`;\nconst NotificationsStyled = styled(Notifications)`\n    > div:first-child {\n        margin-top: 20px;\n    }\n`;\nfunction getSide(placement) {\n  return placement.split(\"-\")[0];\n}\nfunction getAlignment(placement) {\n  return placement.split(\"-\")[1];\n}\nfunction getMainAxisFromPlacement(placement) {\n  return [\"top\", \"bottom\"].includes(getSide(placement)) ? \"x\" : \"y\";\n}\nfunction getLengthFromAxis(axis) {\n  return axis === \"y\" ? \"height\" : \"width\";\n}\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  const commonAlign = reference[length] / 2 - floating[length] / 2;\n  const side = getSide(placement);\n  const isVertical = mainAxis === \"x\";\n  let coords;\n  switch (side) {\n    case \"top\":\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case \"bottom\":\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case \"right\":\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case \"left\":\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case \"start\":\n      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case \"end\":\n      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\nconst computePosition$1 = (reference, floating, config) => __async(void 0, null, function* () {\n  const {\n    placement = \"bottom\",\n    strategy = \"absolute\",\n    middleware = [],\n    platform: platform2\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = yield platform2.isRTL == null ? void 0 : platform2.isRTL(floating);\n  if ({}.NODE_ENV !== \"production\") {\n    if (platform2 == null) {\n      console.error([\"Floating UI: `platform` property was not passed to config. If you\", \"want to use Floating UI on the web, install @floating-ui/dom\", \"instead of the /core package. Otherwise, you can create your own\", \"`platform`: https://floating-ui.com/docs/platform\"].join(\" \"));\n    }\n    if (validMiddleware.filter((_ref) => {\n      let {\n        name\n      } = _ref;\n      return name === \"autoPlacement\" || name === \"flip\";\n    }).length > 1) {\n      throw new Error([\"Floating UI: duplicate `flip` and/or `autoPlacement` middleware\", \"detected. This will lead to an infinite loop. Ensure only one of\", \"either has been passed to the `middleware` array.\"].join(\" \"));\n    }\n    if (!reference || !floating) {\n      console.error([\"Floating UI: The reference and/or floating element was not defined\", \"when `computePosition()` was called. Ensure that both elements have\", \"been created and can be measured.\"].join(\" \"));\n    }\n  }\n  let rects = yield platform2.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i2 = 0; i2 < validMiddleware.length; i2++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i2];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = yield fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform: platform2,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = __spreadProps(__spreadValues({}, middlewareData), {\n      [name]: __spreadValues(__spreadValues({}, middlewareData[name]), data)\n    });\n    if ({}.NODE_ENV !== \"production\") {\n      if (resetCount > 50) {\n        console.warn([\"Floating UI: The middleware lifecycle appears to be running in an\", \"infinite loop. This is usually caused by a `reset` continually\", \"being returned without a break condition.\"].join(\" \"));\n      }\n    }\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === \"object\") {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? yield platform2.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i2 = -1;\n      continue;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n});\nfunction rectToClientRect(rect) {\n  return __spreadProps(__spreadValues({}, rect), {\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  });\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getComputedStyle$1(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeName(node) {\n  return isNode(node) ? (node.nodeName || \"\").toLowerCase() : \"\";\n}\nlet uaString;\nfunction getUAString() {\n  if (uaString) {\n    return uaString;\n  }\n  const uaData = navigator.userAgentData;\n  if (uaData && Array.isArray(uaData.brands)) {\n    uaString = uaData.brands.map((item) => item.brand + \"/\" + item.version).join(\" \");\n    return uaString;\n  }\n  return navigator.userAgent;\n}\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction isShadowRoot(node) {\n  if (typeof ShadowRoot === \"undefined\") {\n    return false;\n  }\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle$1(element);\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX) && ![\"inline\", \"contents\"].includes(display);\n}\nfunction isTableElement(element) {\n  return [\"table\", \"td\", \"th\"].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const isFirefox = /firefox/i.test(getUAString());\n  const css = getComputedStyle$1(element);\n  const backdropFilter = css.backdropFilter || css.WebkitBackdropFilter;\n  return css.transform !== \"none\" || css.perspective !== \"none\" || (backdropFilter ? backdropFilter !== \"none\" : false) || isFirefox && css.willChange === \"filter\" || isFirefox && (css.filter ? css.filter !== \"none\" : false) || [\"transform\", \"perspective\"].some((value) => css.willChange.includes(value)) || [\"paint\", \"layout\", \"strict\", \"content\"].some(\n    (value) => {\n      const contain = css.contain;\n      return contain != null ? contain.includes(value) : false;\n    }\n  );\n}\nfunction isLayoutViewport() {\n  return !/^((?!chrome|android).)*safari/i.test(getUAString());\n}\nfunction isLastTraversableNode(node) {\n  return [\"html\", \"body\", \"#document\"].includes(getNodeName(node));\n}\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst FALLBACK_SCALE = {\n  x: 1,\n  y: 1\n};\nfunction getScale(element) {\n  const domElement = !isElement(element) && element.contextElement ? element.contextElement : isElement(element) ? element : null;\n  if (!domElement) {\n    return FALLBACK_SCALE;\n  }\n  const rect = domElement.getBoundingClientRect();\n  const css = getComputedStyle$1(domElement);\n  if (css.boxSizing !== \"border-box\") {\n    if (!isHTMLElement(domElement)) {\n      return FALLBACK_SCALE;\n    }\n    return {\n      x: domElement.offsetWidth > 0 ? round(rect.width) / domElement.offsetWidth || 1 : 1,\n      y: domElement.offsetHeight > 0 ? round(rect.height) / domElement.offsetHeight || 1 : 1\n    };\n  }\n  let x = rect.width / parseFloat(css.width);\n  let y = rect.height / parseFloat(css.height);\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  var _win$visualViewport$o, _win$visualViewport, _win$visualViewport$o2, _win$visualViewport2;\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  let scale = FALLBACK_SCALE;\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const win = isElement(element) ? getWindow(element) : window;\n  const addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n  const x = (clientRect.left + (addVisualOffsets ? (_win$visualViewport$o = (_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) != null ? _win$visualViewport$o : 0 : 0)) / scale.x;\n  const y = (clientRect.top + (addVisualOffsets ? (_win$visualViewport$o2 = (_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) != null ? _win$visualViewport$o2 : 0 : 0)) / scale.y;\n  const width = clientRect.width / scale.x;\n  const height = clientRect.height / scale.y;\n  return {\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x,\n    y\n  };\n}\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getWindowScrollBarX(element) {\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element, true, strategy === \"fixed\", offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== \"fixed\") {\n    if (getNodeName(offsetParent) !== \"body\" || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === \"html\") {\n    return node;\n  }\n  const result = node.assignedSlot || node.parentNode || (isShadowRoot(node) ? node.host : null) || getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || getComputedStyle$1(element).position === \"fixed\") {\n    return null;\n  }\n  return element.offsetParent;\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\nfunction getOffsetParent(element) {\n  const window2 = getWindow(element);\n  let offsetParent = getTrueOffsetParent(element);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === \"static\") {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === \"html\" || getNodeName(offsetParent) === \"body\" && getComputedStyle$1(offsetParent).position === \"static\" && !isContainingBlock(offsetParent))) {\n    return window2;\n  }\n  return offsetParent || getContainingBlock(element) || window2;\n}\nfunction getDimensions(element) {\n  if (isHTMLElement(element)) {\n    return {\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    };\n  }\n  const rect = getBoundingClientRect(element);\n  return {\n    width: rect.width,\n    height: rect.height\n  };\n}\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = {\n    x: 1,\n    y: 1\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== \"fixed\") {\n    if (getNodeName(offsetParent) !== \"body\" || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const layoutViewport = isLayoutViewport();\n    if (layoutViewport || !layoutViewport && strategy === \"fixed\") {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getDocumentRect(element) {\n  var _element$ownerDocumen;\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  const width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  const height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle$1(body || html).direction === \"rtl\") {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n  if (list === void 0) {\n    list = [];\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === \"fixed\");\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : {\n    x: 1,\n    y: 1\n  };\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y,\n    width,\n    height\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  if (clippingAncestor === \"viewport\") {\n    return rectToClientRect(getViewportRect(element, strategy));\n  }\n  if (isElement(clippingAncestor)) {\n    return getInnerBoundingClientRect(clippingAncestor, strategy);\n  }\n  return rectToClientRect(getDocumentRect(getDocumentElement(element)));\n}\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element).filter((el) => isElement(el) && getNodeName(el) !== \"body\");\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle$1(element).position === \"fixed\";\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle$1(currentNode);\n    const containingBlock = isContainingBlock(currentNode);\n    const shouldDropCurrentNode = elementIsFixed ? !containingBlock && !currentContainingBlockComputedStyle : !containingBlock && computedStyle.position === \"static\" && !!currentContainingBlockComputedStyle && [\"absolute\", \"fixed\"].includes(currentContainingBlockComputedStyle.position);\n    if (shouldDropCurrentNode) {\n      result = result.filter((ancestor) => ancestor !== currentNode);\n    } else {\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === \"clippingAncestors\" ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getScale,\n  getElementRects(_ref) {\n    return __async(this, null, function* () {\n      let {\n        reference,\n        floating,\n        strategy\n      } = _ref;\n      const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n      const getDimensionsFn = this.getDimensions;\n      return {\n        reference: getRectRelativeToOffsetParent(reference, yield getOffsetParentFn(floating), strategy),\n        floating: __spreadValues({\n          x: 0,\n          y: 0\n        }, yield getDimensionsFn(floating))\n      };\n    });\n  },\n  getClientRects: (element) => Array.from(element.getClientRects()),\n  isRTL: (element) => getComputedStyle$1(element).direction === \"rtl\"\n};\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll: _ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestorScroll = _ancestorScroll && !animationFrame;\n  const ancestors = ancestorScroll || ancestorResize ? [...isElement(reference) ? getOverflowAncestors(reference) : reference.contextElement ? getOverflowAncestors(reference.contextElement) : [], ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach((ancestor) => {\n    ancestorScroll && ancestor.addEventListener(\"scroll\", update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener(\"resize\", update);\n  });\n  let observer = null;\n  if (elementResize) {\n    let initialUpdate = true;\n    observer = new ResizeObserver(() => {\n      if (!initialUpdate) {\n        update();\n      }\n      initialUpdate = false;\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n    if (!isElement(reference) && reference.contextElement && !animationFrame) {\n      observer.observe(reference.contextElement);\n    }\n    observer.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _observer;\n    ancestors.forEach((ancestor) => {\n      ancestorScroll && ancestor.removeEventListener(\"scroll\", update);\n      ancestorResize && ancestor.removeEventListener(\"resize\", update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\nconst computePosition = (reference, floating, options) => {\n  const cache = /* @__PURE__ */ new Map();\n  const mergedOptions = __spreadValues({\n    platform\n  }, options);\n  const platformWithCache = __spreadProps(__spreadValues({}, mergedOptions.platform), {\n    _c: cache\n  });\n  return computePosition$1(reference, floating, __spreadProps(__spreadValues({}, mergedOptions), {\n    platform: platformWithCache\n  }));\n};\nfunction P(l2, u2, e2) {\n  let c2 = () => {\n    var t2;\n    return (t2 = e2 == null ? void 0 : e2.placement) != null ? t2 : \"bottom\";\n  }, d = () => {\n    var t2;\n    return (t2 = e2 == null ? void 0 : e2.strategy) != null ? t2 : \"absolute\";\n  }, [n2, o2] = createSignal({ x: null, y: null, placement: c2(), strategy: d(), middlewareData: {} }), [x, F] = createSignal();\n  createEffect(() => {\n    let t2 = x();\n    if (t2)\n      throw t2.value;\n  });\n  let s2 = createMemo(() => (l2(), u2(), {}));\n  function i2() {\n    let t2 = l2(), r = u2();\n    if (t2 && r) {\n      let a2 = s2();\n      computePosition(t2, r, { middleware: e2 == null ? void 0 : e2.middleware, placement: c2(), strategy: d() }).then((m) => {\n        a2 === s2() && o2(m);\n      }, (m) => {\n        F(m);\n      });\n    }\n  }\n  return createEffect(() => {\n    let t2 = l2(), r = u2();\n    if (e2 == null || e2.middleware, c2(), d(), t2 && r)\n      if (e2 != null && e2.whileElementsMounted) {\n        let a2 = e2.whileElementsMounted(t2, r, i2);\n        a2 && onCleanup(a2);\n      } else\n        i2();\n  }), { get x() {\n    return n2().x;\n  }, get y() {\n    return n2().y;\n  }, get placement() {\n    return n2().placement;\n  }, get strategy() {\n    return n2().strategy;\n  }, get middlewareData() {\n    return n2().middlewareData;\n  }, update: i2 };\n}\nconst _tmpl$$4 = /* @__PURE__ */ template$1(`<tc-root data-tc-dropdown-container=\"true\"></tc-root>`);\nconst AccountButton = () => {\n  const theme = useTheme();\n  const connector = useContext(ConnectorContext);\n  const tonConnectUI = useContext(TonConnectUiContext);\n  const [isOpened, setIsOpened] = createSignal(false);\n  const [account, setAccount] = createSignal(connector.account);\n  const [restoringProcess, setRestoringProcess] = createSignal(!connector.account);\n  let dropDownRef;\n  const [floating, setFloating] = createSignal();\n  const [anchor, setAnchor] = createSignal();\n  const position = P(anchor, floating, {\n    whileElementsMounted: autoUpdate,\n    placement: \"bottom-end\"\n  });\n  const normalizedAddress = () => {\n    const acc = account();\n    if (acc) {\n      const userFriendlyAddress = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.toUserFriendlyAddress)(acc.address, acc.chain === _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.CHAIN.TESTNET);\n      return userFriendlyAddress.slice(0, 4) + \"\\u2026\" + userFriendlyAddress.slice(-4);\n    }\n    return \"\";\n  };\n  tonConnectUI.connectionRestored.then(() => setRestoringProcess(false));\n  const unsubscribe = connector.onStatusChange((wallet) => {\n    if (!wallet) {\n      setIsOpened(false);\n      setAccount(null);\n      setRestoringProcess(false);\n      return;\n    }\n    setAccount(wallet.account);\n    setRestoringProcess(false);\n  });\n  const onClick = (e2) => {\n    if (!account() || !isOpened()) {\n      return;\n    }\n    const clickToButton = anchor().contains(e2.target);\n    const clickToDropdown = dropDownRef.contains(e2.target);\n    if (!clickToButton && !clickToDropdown) {\n      setIsOpened(false);\n    }\n  };\n  onMount(() => {\n    document.body.addEventListener(\"click\", onClick);\n  });\n  onCleanup(() => {\n    document.body.removeEventListener(\"click\", onClick);\n    unsubscribe();\n  });\n  return createComponent(Dynamic, {\n    component: globalStylesTag,\n    get children() {\n      return [createComponent(Show, {\n        get when() {\n          return restoringProcess();\n        },\n        get children() {\n          return createComponent(LoaderButtonStyled$1, {\n            disabled: true,\n            \"data-tc-connect-button-loading\": \"true\",\n            get children() {\n              return createComponent(LoaderIconStyled$1, {});\n            }\n          });\n        }\n      }), createComponent(Show, {\n        get when() {\n          return !restoringProcess();\n        },\n        get children() {\n          return [createComponent(Show, {\n            get when() {\n              return !account();\n            },\n            get children() {\n              return createComponent(AccountButtonStyled, {\n                onClick: () => tonConnectUI.openModal(),\n                \"data-tc-connect-button\": \"true\",\n                scale: \"s\",\n                get children() {\n                  return [createComponent(TonIcon, {\n                    get fill() {\n                      return theme.colors.connectButton.foreground;\n                    }\n                  }), createComponent(Text, {\n                    translationKey: \"button.connectWallet\",\n                    fontSize: \"15px\",\n                    lineHeight: \"18px\",\n                    fontWeight: \"590\",\n                    get color() {\n                      return theme.colors.connectButton.foreground;\n                    },\n                    children: \"Connect wallet\"\n                  })];\n                }\n              });\n            }\n          }), createComponent(Show, {\n            get when() {\n              return account();\n            },\n            get children() {\n              return createComponent(DropdownContainerStyled, {\n                get children() {\n                  return [createComponent(DropdownButtonStyled, {\n                    onClick: () => setIsOpened((v) => !v),\n                    ref: setAnchor,\n                    \"data-tc-dropdown-button\": \"true\",\n                    scale: \"s\",\n                    get children() {\n                      return [createComponent(Text, {\n                        fontSize: \"15px\",\n                        fontWeight: \"590\",\n                        lineHeight: \"18px\",\n                        get children() {\n                          return normalizedAddress();\n                        }\n                      }), createComponent(ArrowIcon, {\n                        direction: \"bottom\"\n                      })];\n                    }\n                  }), createComponent(Portal, {\n                    get children() {\n                      const _el$ = untrack(() => document.importNode(_tmpl$$4, true));\n                      use(setFloating, _el$);\n                      _el$.style.setProperty(\"z-index\", \"999\");\n                      _el$._$owner = getOwner();\n                      insert(_el$, createComponent(Transition, {\n                        onBeforeEnter: (el) => {\n                          animate(el, [{\n                            opacity: 0,\n                            transform: \"translateY(-8px)\"\n                          }, {\n                            opacity: 1,\n                            transform: \"translateY(0)\"\n                          }], {\n                            duration: 150\n                          });\n                        },\n                        onExit: (el, done) => {\n                          const a2 = animate(el, [{\n                            opacity: 1,\n                            transform: \"translateY(0)\"\n                          }, {\n                            opacity: 0,\n                            transform: \"translateY(-8px)\"\n                          }], {\n                            duration: 150\n                          });\n                          a2.finished.then(done);\n                        },\n                        get children() {\n                          return createComponent(Show, {\n                            get when() {\n                              return isOpened();\n                            },\n                            get children() {\n                              return createComponent(DropdownStyled, {\n                                get hidden() {\n                                  return !isOpened();\n                                },\n                                onClose: () => setIsOpened(false),\n                                ref(r$) {\n                                  const _ref$ = dropDownRef;\n                                  typeof _ref$ === \"function\" ? _ref$(r$) : dropDownRef = r$;\n                                }\n                              });\n                            }\n                          });\n                        }\n                      }), null);\n                      insert(_el$, createComponent(NotificationsStyled, {}), null);\n                      createRenderEffect((_p$) => {\n                        var _a2, _b2;\n                        const _v$ = position.strategy, _v$2 = `${(_a2 = position.y) != null ? _a2 : 0}px`, _v$3 = `${(_b2 = position.x) != null ? _b2 : 0}px`;\n                        _v$ !== _p$._v$ && _el$.style.setProperty(\"position\", _p$._v$ = _v$);\n                        _v$2 !== _p$._v$2 && _el$.style.setProperty(\"top\", _p$._v$2 = _v$2);\n                        _v$3 !== _p$._v$3 && _el$.style.setProperty(\"left\", _p$._v$3 = _v$3);\n                        return _p$;\n                      }, {\n                        _v$: void 0,\n                        _v$2: void 0,\n                        _v$3: void 0\n                      });\n                      return _el$;\n                    }\n                  })];\n                }\n              });\n            }\n          })];\n        }\n      })];\n    }\n  });\n};\nconst StyledModal = styled(Modal)`\n    padding-left: 24px;\n    padding-right: 24px;\n    padding-top: 18px;\n    padding-bottom: 0;\n\n    ${media(\"mobile\")} {\n        padding-left: 0;\n        padding-right: 0;\n    }\n`;\nconst H1Styled$a = styled(H1)`\n    margin-top: 12px;\n\n    ${media(\"mobile\")} {\n        padding: 0 10px;\n    }\n`;\nconst LoaderContainerStyled = styled.div`\n    margin: 30px 0;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n\n    ${media(\"mobile\")} {\n        height: 160px;\n        align-items: center;\n    }\n`;\nstyled(Text)`\n    min-width: 84px;\n    text-align: center;\n    font-weight: 590;\n`;\nstyled(TabBar)`\n    margin: 0 auto 22px;\n`;\nconst [appState, setAppState] = createStore({\n  buttonRootId: null,\n  language: \"en\",\n  returnStrategy: \"back\",\n  twaReturnUrl: void 0,\n  walletsListConfiguration: {},\n  enableAndroidBackHandler: true\n});\nfunction uniq(array) {\n  return [...new Set(array)];\n}\nfunction mergeConcat(idKey, array1, array2) {\n  return array1.map((item1) => {\n    const item2 = array2.find((elem) => elem[idKey] === item1[idKey]);\n    array2 = array2.filter((elem) => elem[idKey] !== item1[idKey]);\n    return item2 === void 0 ? item1 : item2;\n  }).concat(array2);\n}\nfunction uiWalletToWalletInfo(uiWallet) {\n  if (\"jsBridgeKey\" in uiWallet) {\n    return __spreadProps(__spreadValues({}, uiWallet), {\n      injected: _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.TonConnect.isWalletInjected(uiWallet.jsBridgeKey),\n      embedded: _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.TonConnect.isInsideWalletBrowser(uiWallet.jsBridgeKey)\n    });\n  }\n  return uiWallet;\n}\nfunction applyWalletsListConfiguration(walletsList, configuration) {\n  var _a2;\n  if (!configuration) {\n    return walletsList;\n  }\n  if ((_a2 = configuration.includeWallets) == null ? void 0 : _a2.length) {\n    walletsList = mergeConcat(\n      \"name\",\n      walletsList,\n      configuration.includeWallets.map(uiWalletToWalletInfo)\n    );\n  }\n  return walletsList;\n}\nfunction supportsDesktop(walletInfo) {\n  return walletInfo.platforms.some((w) => [\"macos\", \"linux\", \"windows\"].includes(w));\n}\nfunction supportsMobile(walletInfo) {\n  return walletInfo.platforms.some((w) => [\"ios\", \"android\"].includes(w));\n}\nfunction supportsExtension(walletInfo) {\n  return walletInfo.platforms.some((w) => [\"chrome\", \"firefox\", \"safari\"].includes(w));\n}\nfunction eqWalletName(wallet1, name) {\n  if (!name) {\n    return false;\n  }\n  return wallet1.name.toLowerCase() === name.toLowerCase() || wallet1.appName.toLowerCase() === name.toLowerCase();\n}\nconst DesktopSelectWalletModalStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\nconst H1Styled$9 = styled(H1)`\n    margin-bottom: 18px;\n`;\nstyled.div`\n    height: 1px;\n    margin: 0 -24px;\n    width: calc(100% + 48px);\n    opacity: 0.12;\n    background: ${(props) => props.isShown ? props.theme.colors.icon.secondary : \"transparent\"};\n    transition: background 0.15s ease-in-out;\n\n    ${media(\"mobile\")} {\n        width: 100%;\n    }\n`;\nconst WalletsUl = styled.ul`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, 92px);\n    grid-template-rows: auto;\n    align-content: flex-start;\n    row-gap: 8px;\n    width: 100%;\n    padding: 0 0 16px;\n    align-self: flex-start;\n    max-width: 400px;\n    margin: 0 auto;\n    list-style: none;\n\n    > li {\n        display: block;\n        height: fit-content;\n    }\n\n    ${media(\"mobile\")} {\n        display: grid;\n        grid-template-columns: repeat(4, 1fr);\n        gap: 0;\n        padding: 8px 12px 16px;\n        max-width: none;\n\n        > li {\n            min-width: 78px;\n            display: flex;\n        }\n\n        > li > * {\n            width: 100%;\n        }\n    }\n`;\nstyled(Button)`\n    display: block;\n    margin: 0 auto 1px;\n    font-size: 15px;\n`;\nconst StyledIconButton$5 = styled(IconButton)`\n    position: absolute;\n    top: 16px;\n    left: 16px;\n`;\nconst WalletLabeledItemStyled = styled(WalletLabeledItem)`\n    opacity: ${(props) => props.withOpacity ? \"0.4\" : \"1\"};\n`;\nconst WalletsNotSupportedNotifier = styled.div`\n    display: grid;\n    grid-template-columns: auto 28px;\n    gap: 16px;\n    padding: 16px;\n    margin-bottom: 16px;\n    border-radius: 16px;\n    color: ${(props) => props.theme.colors.text.secondary};\n    background: ${(props) => props.theme.colors.background.tint};\n\n    ${media(\"mobile\")} {\n        margin-left: 16px;\n        margin-right: 16px;\n    }\n`;\nconst WalletsNotSupportedNotifierText = styled(H2)`\n    color: ${(props) => props.theme.colors.text.secondary};\n    text-align: left;\n    margin: 0;\n`;\nconst ErrorBoxStyled = styled.div`\n    position: absolute;\n    bottom: 14px;\n    left: 50%;\n    transform: translate(-50%, 0);\n\n    text-wrap: nowrap;\n    display: flex;\n    gap: 6px;\n    align-items: center;\n    border-radius: 18px;\n    min-width: 126px;\n    padding: 9px 16px 9px 10px;\n\n    filter: drop-shadow(0px 2px 8px rgba(0, 0, 0, 0.08));\n    background-color: ${(props) => props.theme.colors.background.segment};\n`;\nconst _tmpl$$3 = /* @__PURE__ */ template$1(`<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g clip-path=\"url(#clip0_5122_10355)\"><circle cx=\"8\" cy=\"8\" r=\"8\"></circle><circle cx=\"8\" cy=\"11\" r=\"1\"></circle><path d=\"M7.04994 4.99875C7.02277 4.45542 7.45598 4 8 4C8.54402 4 8.97723 4.45541 8.95006 4.99875L8.78745 8.25094C8.76647 8.67055 8.42014 9 8 9C7.57986 9 7.23353 8.67055 7.21255 8.25094L7.04994 4.99875Z\"></path></g><defs><clipPath id=\"clip0_5122_10355\"><rect width=\"16\" height=\"16\"></rect></clipPath></defs></svg>`), _tmpl$2$1 = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\"><circle cx=\"14\" cy=\"14\" r=\"12\"></circle><circle cx=\"14\" cy=\"18.9\" r=\"1.4\"></circle><path d=\"M12.6658 8.89845C12.63 8.13698 13.2377 7.5 14 7.5C14.7623 7.5 15.37 8.13698 15.3342 8.89845L15.047 15.0013C15.0207 15.5604 14.5597 16.0002 14 16.0002C13.4403 16.0002 12.9793 15.5604 12.953 15.0013L12.6658 8.89845Z\"></path></svg>`);\nconst ExclamationIcon = (props) => {\n  const theme = useTheme();\n  const size = () => props.size;\n  const fill = () => props.fill || theme.colors.icon.error;\n  return createMemo((() => {\n    const _c$ = createMemo(() => size() === \"16\");\n    return () => _c$() ? (() => {\n      const _el$ = _tmpl$$3.cloneNode(true), _el$2 = _el$.firstChild, _el$3 = _el$2.firstChild, _el$4 = _el$3.nextSibling, _el$5 = _el$4.nextSibling, _el$6 = _el$2.nextSibling, _el$7 = _el$6.firstChild, _el$8 = _el$7.firstChild;\n      createRenderEffect((_p$) => {\n        const _v$ = fill(), _v$2 = theme.colors.constant.white, _v$3 = theme.colors.constant.white, _v$4 = theme.colors.constant.white;\n        _v$ !== _p$._v$ && setAttribute(_el$3, \"fill\", _p$._v$ = _v$);\n        _v$2 !== _p$._v$2 && setAttribute(_el$4, \"fill\", _p$._v$2 = _v$2);\n        _v$3 !== _p$._v$3 && setAttribute(_el$5, \"fill\", _p$._v$3 = _v$3);\n        _v$4 !== _p$._v$4 && setAttribute(_el$8, \"fill\", _p$._v$4 = _v$4);\n        return _p$;\n      }, {\n        _v$: void 0,\n        _v$2: void 0,\n        _v$3: void 0,\n        _v$4: void 0\n      });\n      return _el$;\n    })() : (() => {\n      const _c$2 = createMemo(() => size() === \"28\");\n      return () => _c$2() ? (() => {\n        const _el$9 = _tmpl$2$1.cloneNode(true), _el$10 = _el$9.firstChild, _el$11 = _el$10.nextSibling, _el$12 = _el$11.nextSibling;\n        createRenderEffect((_p$) => {\n          const _v$5 = props.class, _v$6 = fill(), _v$7 = theme.colors.constant.white, _v$8 = theme.colors.constant.white;\n          _v$5 !== _p$._v$5 && setAttribute(_el$9, \"class\", _p$._v$5 = _v$5);\n          _v$6 !== _p$._v$6 && setAttribute(_el$10, \"fill\", _p$._v$6 = _v$6);\n          _v$7 !== _p$._v$7 && setAttribute(_el$11, \"fill\", _p$._v$7 = _v$7);\n          _v$8 !== _p$._v$8 && setAttribute(_el$12, \"fill\", _p$._v$8 = _v$8);\n          return _p$;\n        }, {\n          _v$5: void 0,\n          _v$6: void 0,\n          _v$7: void 0,\n          _v$8: void 0\n        });\n        return _el$9;\n      })() : null;\n    })();\n  })());\n};\nconst _tmpl$$2 = /* @__PURE__ */ template$1(`<li></li>`);\nconst AllWalletsListModal = (props) => {\n  const maxHeight = () => isMobile() ? void 0 : 510;\n  const [errorSupportOpened, setErrorSupportOpened] = createSignal(null);\n  let timeoutId = null;\n  const onErrorClick = (wallet) => {\n    setErrorSupportOpened(wallet);\n    if (timeoutId != null) {\n      clearTimeout(timeoutId);\n    }\n    timeoutId = setTimeout(() => setErrorSupportOpened(null), 1500);\n  };\n  const handleSelectWallet = (wallet) => {\n    if (!wallet.isSupportRequiredFeatures && props.featureCheckMode === \"strict\") {\n      onErrorClick(wallet);\n      return;\n    }\n    props.onSelect(wallet);\n  };\n  const walletsList = () => isMobile() ? props.walletsList.filter(supportsMobile) : props.walletsList;\n  const supportedWallets = () => walletsList().filter((wallet) => wallet.isSupportRequiredFeatures);\n  const unsupportedWallets = () => walletsList().filter((wallet) => !wallet.isSupportRequiredFeatures);\n  return createComponent(DesktopSelectWalletModalStyled, {\n    \"data-tc-wallets-modal-list\": \"true\",\n    get children() {\n      return [createComponent(StyledIconButton$5, {\n        icon: \"arrow\",\n        onClick: () => props.onBack()\n      }), createComponent(H1Styled$9, {\n        translationKey: \"walletModal.wallets\",\n        children: \"Wallets\"\n      }), createComponent(ScrollContainer, {\n        get maxHeight() {\n          return maxHeight();\n        },\n        get children() {\n          return [createComponent(WalletsUl, {\n            get children() {\n              return createComponent(For, {\n                get each() {\n                  return supportedWallets();\n                },\n                children: (wallet) => (() => {\n                  const _el$ = _tmpl$$2.cloneNode(true);\n                  insert(_el$, createComponent(WalletLabeledItemStyled, {\n                    wallet,\n                    onClick: () => props.onSelect(wallet)\n                  }));\n                  return _el$;\n                })()\n              });\n            }\n          }), createComponent(Show, {\n            get when() {\n              return unsupportedWallets().length > 0 && props.featureCheckMode !== \"hide\";\n            },\n            get children() {\n              return [createComponent(WalletsNotSupportedNotifier, {\n                get children() {\n                  return [createComponent(WalletsNotSupportedNotifierText, {\n                    translationKey: \"walletModal.allWallets.walletsBelowNotSupported\",\n                    children: \"The wallets below don\\u2019t support all features of the connected service. You can use your recovery phrase in one of the supported wallets above.\"\n                  }), createComponent(ExclamationIcon, {\n                    size: \"28\"\n                  })];\n                }\n              }), createComponent(WalletsUl, {\n                get children() {\n                  return createComponent(For, {\n                    get each() {\n                      return unsupportedWallets();\n                    },\n                    children: (wallet) => (() => {\n                      const _el$2 = _tmpl$$2.cloneNode(true);\n                      insert(_el$2, createComponent(WalletLabeledItemStyled, {\n                        wallet,\n                        onClick: () => handleSelectWallet(wallet),\n                        get withOpacity() {\n                          return props.featureCheckMode === \"strict\";\n                        }\n                      }));\n                      return _el$2;\n                    })()\n                  });\n                }\n              }), createComponent(Transition, {\n                onBeforeEnter: (el) => {\n                  animate(el, [{\n                    opacity: 0,\n                    transform: \"translate(-50%, 44px)\"\n                  }, {\n                    opacity: 1,\n                    transform: \"translate(-50%, 0)\"\n                  }], {\n                    duration: 150,\n                    easing: \"ease-out\"\n                  });\n                },\n                onExit: (el, done) => {\n                  animate(el, [{\n                    opacity: 1,\n                    transform: \"translate(-50%, 0)\"\n                  }, {\n                    opacity: 0,\n                    transform: \"translate(-50%, 44px)\"\n                  }], {\n                    duration: 150,\n                    easing: \"ease-out\"\n                  }).finished.then(() => {\n                    done();\n                  });\n                },\n                get children() {\n                  return createComponent(Show, {\n                    get when() {\n                      return errorSupportOpened();\n                    },\n                    get children() {\n                      return createComponent(ErrorBoxStyled, {\n                        get children() {\n                          return [createComponent(ErrorIcon, {\n                            size: \"xs\"\n                          }), createComponent(Text, {\n                            translationKey: \"walletModal.allWallets.walletNotSupportService\",\n                            get translationValues() {\n                              return {\n                                name: errorSupportOpened().name\n                              };\n                            },\n                            get children() {\n                              return [createMemo(() => errorSupportOpened().name), \" doesn\\u2019t support connected service\"];\n                            }\n                          })];\n                        }\n                      });\n                    }\n                  });\n                }\n              })];\n            }\n          })];\n        }\n      })];\n    }\n  });\n};\nconst tgButtonBorders = {\n  m: \"16px\",\n  s: \"12px\",\n  none: \"0\"\n};\nconst tgIconBorders = {\n  m: \"6px\",\n  s: \"6px\",\n  none: \"0\"\n};\nconst DesktopConnectionModalStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\nconst BodyStyled$1 = styled.div`\n    flex: 1;\n    margin-top: ${(props) => props.qr ? \"0\" : \"18px\"};\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    min-height: 232px;\n`;\nconst QRCodeStyled$1 = styled(QRCode)`\n    margin-bottom: 24px;\n`;\nconst H1Styled$8 = styled(H1)`\n    max-width: 288px;\n    margin: 0 auto 2px;\n`;\nconst H2Styled$4 = styled(H2)`\n    max-width: 288px;\n    text-align: center;\n    margin: 0 auto 20px;\n`;\nconst StyledIconButton$4 = styled(IconButton)`\n    position: absolute;\n    top: 16px;\n    left: 16px;\n`;\nconst ButtonsContainerStyled$2 = styled.div`\n    display: flex;\n    justify-content: center;\n    gap: 8px;\n    padding-bottom: 16px;\n`;\nconst BottomButtonsContainerStyled = styled(ButtonsContainerStyled$2)`\n    padding-bottom: 0;\n`;\nconst FooterButton$1 = styled(Button)`\n    margin-bottom: 24px;\n`;\nconst LoaderStyled$1 = styled(LoaderIcon)`\n    margin-bottom: 18px;\n    margin-top: 2px;\n`;\nconst ErrorIconStyled$2 = styled(ErrorIcon)`\n    margin-bottom: 16px;\n`;\nconst BodyTextStyled$2 = styled(H2)`\n    color: ${(props) => props.theme.colors.text.secondary};\n    text-align: center;\n    margin-bottom: 20px;\n`;\nconst TgButtonStyled = styled(Button)`\n    margin-top: -8px;\n    margin-bottom: 24px;\n    width: 100%;\n    padding: 12px 12px 12px 20px;\n    border-radius: ${(props) => tgButtonBorders[props.theme.borderRadius]};\n    font-size: 16px;\n    line-height: 20px;\n`;\nconst TgImageStyled = styled(Image)`\n    width: 32px;\n    height: 32px;\n    border-radius: ${(props) => tgIconBorders[props.theme.borderRadius]};\n`;\nconst Translation = (props) => {\n  const [t2] = useI18n();\n  return createMemo(() => {\n    var _a2;\n    return t2(props.translationKey, props.translationValues, (_a2 = props.children) == null ? void 0 : _a2.toString());\n  });\n};\nfunction addReturnStrategy(url, strategy) {\n  let returnStrategy;\n  if (typeof strategy === \"string\") {\n    returnStrategy = strategy;\n  } else {\n    returnStrategy = isInTMA() ? strategy.twaReturnUrl || strategy.returnStrategy : \"none\";\n  }\n  const newUrl = addQueryParameter(url, \"ret\", returnStrategy);\n  if (!(0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isTelegramUrl)(url)) {\n    return newUrl;\n  }\n  const lastParam = newUrl.slice(newUrl.lastIndexOf(\"&\") + 1);\n  return newUrl.slice(0, newUrl.lastIndexOf(\"&\")) + \"-\" + (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.encodeTelegramUrlParameters)(lastParam);\n}\nfunction redirectToTelegram(universalLink, options) {\n  options = __spreadValues({}, options);\n  const directLink = convertToTGDirectLink(universalLink);\n  const directLinkUrl = new URL(directLink);\n  if (!directLinkUrl.searchParams.has(\"startapp\")) {\n    directLinkUrl.searchParams.append(\"startapp\", \"tonconnect\");\n  }\n  if (isInTelegramBrowser()) {\n    options.returnStrategy = \"back\";\n    const linkWitStrategy = addReturnStrategy(directLinkUrl.toString(), options.returnStrategy);\n    openLinkBlank(linkWitStrategy);\n  } else if (isInTMA()) {\n    if (isTmaPlatform(\"ios\", \"android\", \"macos\", \"tdesktop\", \"web\")) {\n      options.returnStrategy = \"back\";\n      const linkWitStrategy = addReturnStrategy(\n        directLinkUrl.toString(),\n        options.returnStrategy\n      );\n      sendOpenTelegramLink(linkWitStrategy);\n    } else if (isTmaPlatform(\"weba\")) {\n      sendOpenTelegramLink(addReturnStrategy(directLinkUrl.toString(), options));\n    } else {\n      openLinkBlank(addReturnStrategy(directLinkUrl.toString(), options));\n    }\n  } else {\n    if (isOS(\"ios\")) {\n      if (options.returnStrategy === \"back\") {\n        if (isBrowser(\"safari\")) {\n          options.returnStrategy = \"back\";\n        } else if (isBrowser(\"chrome\")) {\n          options.returnStrategy = \"googlechrome://\";\n        } else if (isBrowser(\"firefox\")) {\n          options.returnStrategy = \"firefox://\";\n        } else if (isBrowser(\"opera\")) {\n          options.returnStrategy = \"opera-http://\";\n        } else {\n          options.returnStrategy = location.href;\n        }\n      }\n      const isChrome = isBrowser(\"chrome\");\n      const isFirefox = isBrowser(\"firefox\");\n      const useDeepLink = (isChrome || isFirefox) && !options.forceRedirect;\n      if (useDeepLink) {\n        const linkWithStrategy = addReturnStrategy(\n          directLinkUrl.toString(),\n          options.returnStrategy\n        );\n        const deepLink = convertToTGDeepLink(linkWithStrategy);\n        openDeeplinkWithFallback(deepLink, () => openLinkBlank(linkWithStrategy));\n      } else {\n        const linkWithStrategy = addReturnStrategy(\n          directLinkUrl.toString(),\n          options.returnStrategy\n        );\n        openLinkBlank(linkWithStrategy);\n      }\n    } else if (isOS(\"android\")) {\n      options.returnStrategy = \"back\";\n      const isChrome = isBrowser(\"chrome\");\n      const isFirefox = isBrowser(\"firefox\");\n      const useDeepLink = (isChrome || isFirefox) && !options.forceRedirect;\n      if (useDeepLink) {\n        const linkWithStrategy = addReturnStrategy(\n          directLinkUrl.toString(),\n          options.returnStrategy\n        );\n        const deepLink = convertToTGDeepLink(linkWithStrategy);\n        openDeeplinkWithFallback(deepLink, () => openLinkBlank(linkWithStrategy));\n      } else {\n        const linkWithStrategy = addReturnStrategy(\n          directLinkUrl.toString(),\n          options.returnStrategy\n        );\n        openLinkBlank(linkWithStrategy);\n      }\n    } else if (isOS(\"ipad\")) {\n      if (options.returnStrategy === \"back\") {\n        if (isBrowser(\"safari\")) {\n          options.returnStrategy = \"back\";\n        } else if (isBrowser(\"chrome\")) {\n          options.returnStrategy = \"googlechrome://\";\n        } else if (isBrowser(\"firefox\")) {\n          options.returnStrategy = \"firefox://\";\n        } else if (isBrowser(\"opera\")) {\n          options.returnStrategy = \"opera-http://\";\n        } else {\n          options.returnStrategy = location.href;\n        }\n      }\n      const isChrome = isBrowser(\"chrome\");\n      const isFirefox = isBrowser(\"firefox\");\n      const useDeepLink = (isChrome || isFirefox) && !options.forceRedirect;\n      const linkWithStrategy = addReturnStrategy(\n        directLinkUrl.toString(),\n        options.returnStrategy\n      );\n      if (useDeepLink) {\n        const deepLink = convertToTGDeepLink(linkWithStrategy);\n        openDeeplinkWithFallback(deepLink, () => openLinkBlank(linkWithStrategy));\n      } else {\n        openLinkBlank(linkWithStrategy);\n      }\n    } else if (isOS(\"macos\", \"windows\", \"linux\")) {\n      options.returnStrategy = \"back\";\n      options.twaReturnUrl = void 0;\n      const linkWithStrategy = addReturnStrategy(\n        directLinkUrl.toString(),\n        options.returnStrategy\n      );\n      if (options.forceRedirect) {\n        openLinkBlank(linkWithStrategy);\n      } else {\n        const deepLink = convertToTGDeepLink(linkWithStrategy);\n        openDeeplinkWithFallback(deepLink, () => openLinkBlank(linkWithStrategy));\n      }\n    } else {\n      openLinkBlank(addReturnStrategy(directLinkUrl.toString(), options));\n    }\n  }\n}\nfunction redirectToWallet(universalLink, deepLink, options, setOpenMethod) {\n  options = __spreadValues({}, options);\n  if (isInTelegramBrowser()) {\n    if (isOS(\"ios\", \"android\")) {\n      if (options.returnStrategy === \"back\") {\n        options.returnStrategy = \"tg://resolve\";\n      }\n      setOpenMethod(\"universal-link\");\n      openLink(addReturnStrategy(universalLink, options.returnStrategy), \"_self\");\n    } else {\n      setOpenMethod(\"universal-link\");\n      const linkWitStrategy = addReturnStrategy(universalLink, options.returnStrategy);\n      openLinkBlank(linkWitStrategy);\n    }\n  } else if (isInTMA()) {\n    if (isTmaPlatform(\"ios\", \"android\")) {\n      if (options.returnStrategy === \"back\") {\n        options.returnStrategy = \"tg://resolve\";\n      }\n      setOpenMethod(\"universal-link\");\n      const linkWitStrategy = addReturnStrategy(universalLink, options.returnStrategy);\n      sendOpenTelegramLink(linkWitStrategy, () => {\n        setOpenMethod(\"universal-link\");\n        openLinkBlank(linkWitStrategy);\n      });\n    } else if (isTmaPlatform(\"macos\", \"tdesktop\")) {\n      if (options.returnStrategy === \"back\") {\n        options.returnStrategy = \"tg://resolve\";\n      }\n      const linkWitStrategy = addReturnStrategy(universalLink, options.returnStrategy);\n      const useDeepLink = !!deepLink && !options.forceRedirect;\n      if (useDeepLink) {\n        setOpenMethod(\"custom-deeplink\");\n        openDeeplinkWithFallback(toDeeplink(linkWitStrategy, deepLink), () => {\n          setOpenMethod(\"universal-link\");\n          openLinkBlank(linkWitStrategy);\n        });\n      } else {\n        setOpenMethod(\"universal-link\");\n        openLinkBlank(linkWitStrategy);\n      }\n    } else if (isTmaPlatform(\"weba\")) {\n      if (options.returnStrategy === \"back\") {\n        if (isBrowser(\"safari\")) {\n          options.returnStrategy = location.href;\n        } else if (isBrowser(\"chrome\")) {\n          options.returnStrategy = \"googlechrome://\";\n        } else if (isBrowser(\"firefox\")) {\n          options.returnStrategy = \"firefox://\";\n        } else if (isBrowser(\"opera\")) {\n          options.returnStrategy = \"opera-http://\";\n        } else {\n          options.returnStrategy = location.href;\n        }\n      }\n      const linkWitStrategy = addReturnStrategy(universalLink, options.returnStrategy);\n      const useDeepLink = !!deepLink && !options.forceRedirect;\n      if (useDeepLink) {\n        setOpenMethod(\"custom-deeplink\");\n        openDeeplinkWithFallback(toDeeplink(linkWitStrategy, deepLink), () => {\n          setOpenMethod(\"universal-link\");\n          openLinkBlank(linkWitStrategy);\n        });\n      } else {\n        setOpenMethod(\"universal-link\");\n        openLinkBlank(linkWitStrategy);\n      }\n    } else if (isTmaPlatform(\"web\")) {\n      if (options.returnStrategy === \"back\") {\n        if (isBrowser(\"safari\")) {\n          options.returnStrategy = location.href;\n        } else if (isBrowser(\"chrome\")) {\n          options.returnStrategy = \"googlechrome://\";\n        } else if (isBrowser(\"firefox\")) {\n          options.returnStrategy = \"firefox://\";\n        } else if (isBrowser(\"opera\")) {\n          options.returnStrategy = \"opera-http://\";\n        } else {\n          options.returnStrategy = location.href;\n        }\n      }\n      const linkWitStrategy = addReturnStrategy(universalLink, options.returnStrategy);\n      const useDeepLink = !!deepLink && !options.forceRedirect;\n      if (useDeepLink) {\n        setOpenMethod(\"custom-deeplink\");\n        openDeeplinkWithFallback(toDeeplink(linkWitStrategy, deepLink), () => {\n          setOpenMethod(\"universal-link\");\n          openLinkBlank(linkWitStrategy);\n        });\n      } else {\n        setOpenMethod(\"universal-link\");\n        openLinkBlank(linkWitStrategy);\n      }\n    } else {\n      setOpenMethod(\"universal-link\");\n      const linkWitStrategy = addReturnStrategy(universalLink, options.returnStrategy);\n      openLinkBlank(linkWitStrategy);\n    }\n  } else {\n    if (isOS(\"ios\")) {\n      if (options.returnStrategy === \"back\") {\n        if (isBrowser(\"safari\")) {\n          options.returnStrategy = \"none\";\n        } else if (isBrowser(\"chrome\")) {\n          options.returnStrategy = \"googlechrome://\";\n        } else if (isBrowser(\"firefox\")) {\n          options.returnStrategy = \"firefox://\";\n        } else if (isBrowser(\"opera\")) {\n          options.returnStrategy = \"opera-http://\";\n        } else {\n          options.returnStrategy = location.href;\n        }\n      }\n      if (isBrowser(\"chrome\")) {\n        setOpenMethod(\"universal-link\");\n        openLink(addReturnStrategy(universalLink, options.returnStrategy), \"_self\");\n      } else {\n        setOpenMethod(\"universal-link\");\n        openLinkBlank(addReturnStrategy(universalLink, options.returnStrategy));\n      }\n    } else if (isOS(\"android\")) {\n      if (options.returnStrategy === \"back\") {\n        if (isBrowser(\"chrome\")) {\n          options.returnStrategy = \"googlechrome://\";\n        } else if (isBrowser(\"firefox\")) {\n          options.returnStrategy = \"firefox://\";\n        } else if (isBrowser(\"opera\")) {\n          options.returnStrategy = \"opera-http://\";\n        } else {\n          options.returnStrategy = location.href;\n        }\n      }\n      setOpenMethod(\"universal-link\");\n      openLinkBlank(addReturnStrategy(universalLink, options.returnStrategy));\n    } else if (isOS(\"ipad\")) {\n      if (options.returnStrategy === \"back\") {\n        if (isBrowser(\"safari\")) {\n          options.returnStrategy = \"none\";\n        } else if (isBrowser(\"chrome\")) {\n          options.returnStrategy = \"googlechrome://\";\n        } else if (isBrowser(\"firefox\")) {\n          options.returnStrategy = \"firefox://\";\n        } else if (isBrowser(\"opera\")) {\n          options.returnStrategy = \"opera-http://\";\n        } else {\n          options.returnStrategy = location.href;\n        }\n      }\n      if (isBrowser(\"chrome\")) {\n        setOpenMethod(\"universal-link\");\n        openLink(addReturnStrategy(universalLink, options.returnStrategy), \"_self\");\n      } else {\n        setOpenMethod(\"universal-link\");\n        openLinkBlank(addReturnStrategy(universalLink, options.returnStrategy));\n      }\n    } else if (isOS(\"macos\", \"windows\", \"linux\")) {\n      if (options.returnStrategy === \"back\") {\n        if (isBrowser(\"safari\")) {\n          options.returnStrategy = \"none\";\n        } else if (isBrowser(\"chrome\")) {\n          options.returnStrategy = \"googlechrome://\";\n        } else if (isBrowser(\"firefox\")) {\n          options.returnStrategy = \"firefox://\";\n        } else if (isBrowser(\"opera\")) {\n          options.returnStrategy = \"opera-http://\";\n        } else {\n          options.returnStrategy = \"none\";\n        }\n      }\n      const linkWitStrategy = addReturnStrategy(universalLink, options.returnStrategy);\n      const useDeepLink = !!deepLink && !options.forceRedirect;\n      if (useDeepLink) {\n        setOpenMethod(\"custom-deeplink\");\n        openDeeplinkWithFallback(toDeeplink(linkWitStrategy, deepLink), () => {\n          setOpenMethod(\"universal-link\");\n          openLinkBlank(linkWitStrategy);\n        });\n      } else {\n        setOpenMethod(\"universal-link\");\n        openLinkBlank(linkWitStrategy);\n      }\n    } else {\n      setOpenMethod(\"universal-link\");\n      openLinkBlank(addReturnStrategy(universalLink, options.returnStrategy));\n    }\n  }\n}\nfunction addQueryParameter(url, key, value) {\n  const parsed = new URL(url);\n  parsed.searchParams.append(key, value);\n  return parsed.toString();\n}\nfunction convertToTGDirectLink(universalLink) {\n  const url = new URL(universalLink);\n  if (url.searchParams.has(\"attach\")) {\n    url.searchParams.delete(\"attach\");\n    url.pathname += \"/start\";\n  }\n  return url.toString();\n}\nfunction convertToTGDeepLink(directLink) {\n  const parsed = new URL(directLink);\n  const [, domain, appname] = parsed.pathname.split(\"/\");\n  const startapp = parsed.searchParams.get(\"startapp\");\n  return `tg://resolve?domain=${domain}&appname=${appname}&startapp=${startapp}`;\n}\nconst DesktopConnectionModal = (props) => {\n  const [mode, setMode] = createSignal(\"mobile\");\n  const [connectionErrored, setConnectionErrored] = createSignal(null);\n  createEffect(() => {\n    var _a2;\n    setConnectionErrored((_a2 = props.defaultError) != null ? _a2 : null);\n  });\n  const [universalLink, setUniversalLink] = createSignal();\n  const [firstClick, setFirstClick] = createSignal(true);\n  const connector = useContext(ConnectorContext);\n  const unsubscribe = connector.onStatusChange(() => {\n  }, (error) => {\n    if (error instanceof _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.WalletMissingRequiredFeaturesError) {\n      setConnectionErrored(\"missing-features\");\n      return;\n    }\n    if (props.wallet.appName !== AT_WALLET_APP_NAME) {\n      setConnectionErrored(\"connection-declined\");\n    }\n  });\n  onCleanup(unsubscribe);\n  const generateUniversalLink = () => {\n    try {\n      const universalLink2 = connector.connect({\n        universalLink: props.wallet.universalLink,\n        bridgeUrl: props.wallet.bridgeUrl\n      }, props.additionalRequest);\n      setUniversalLink(universalLink2);\n    } catch (e2) {\n    }\n  };\n  createEffect(() => {\n    if (untrack(mode) !== \"extension\" && (supportsMobile(props.wallet) || supportsDesktop(props.wallet))) {\n      generateUniversalLink();\n    }\n  });\n  const onClickMobile = () => {\n    setConnectionErrored(null);\n    if (mode() === \"extension\") {\n      generateUniversalLink();\n    }\n    setMode(\"mobile\");\n    setLastSelectedWalletInfo(__spreadProps(__spreadValues({}, props.wallet), {\n      openMethod: \"qrcode\"\n    }));\n  };\n  const onClickDesktop = () => {\n    setConnectionErrored(null);\n    if (mode() === \"extension\") {\n      generateUniversalLink();\n    }\n    setMode(\"desktop\");\n    if ((0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isTelegramUrl)(universalLink())) {\n      onClickTelegram();\n    } else {\n      const forceRedirect = !firstClick();\n      setFirstClick(false);\n      redirectToWallet(universalLink(), props.wallet.deepLink, {\n        returnStrategy: appState.returnStrategy,\n        forceRedirect\n      }, (method) => {\n        setLastSelectedWalletInfo(__spreadProps(__spreadValues({}, props.wallet), {\n          openMethod: method\n        }));\n      });\n    }\n  };\n  const onClickTelegram = () => {\n    const forceRedirect = !firstClick();\n    setFirstClick(false);\n    setLastSelectedWalletInfo(__spreadProps(__spreadValues({}, props.wallet), {\n      openMethod: \"universal-link\"\n    }));\n    redirectToTelegram(universalLink(), {\n      returnStrategy: appState.returnStrategy,\n      twaReturnUrl: appState.twaReturnUrl,\n      forceRedirect\n    });\n  };\n  const onClickExtension = () => {\n    setConnectionErrored(null);\n    setMode(\"extension\");\n    if ((0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyInjected)(props.wallet)) {\n      setLastSelectedWalletInfo(props.wallet);\n      connector.connect({\n        jsBridgeKey: props.wallet.jsBridgeKey\n      }, props.additionalRequest);\n    }\n  };\n  if (supportsMobile(props.wallet)) {\n    onClickMobile();\n  } else if (supportsExtension(props.wallet)) {\n    onClickExtension();\n  } else {\n    onClickDesktop();\n  }\n  return createComponent(DesktopConnectionModalStyled, {\n    \"data-tc-wallets-modal-connection-desktop\": \"true\",\n    get children() {\n      return [createComponent(Show, {\n        get when() {\n          return !props.backDisabled;\n        },\n        get children() {\n          return createComponent(StyledIconButton$4, {\n            icon: \"arrow\",\n            onClick: () => props.onBackClick()\n          });\n        }\n      }), createComponent(H1Styled$8, {\n        get children() {\n          return props.wallet.name;\n        }\n      }), createComponent(Show, {\n        get when() {\n          return createMemo(() => mode() === \"mobile\")() && !connectionErrored();\n        },\n        get children() {\n          return createComponent(H2Styled$4, {\n            translationKey: \"walletModal.desktopConnectionModal.scanQR\",\n            get translationValues() {\n              return {\n                name: props.wallet.name\n              };\n            },\n            get children() {\n              return [\"Scan the QR code below with your phone\\u2019s or \", createMemo(() => props.wallet.name), \"\\u2019s camera\"];\n            }\n          });\n        }\n      }), createComponent(BodyStyled$1, {\n        get qr() {\n          return mode() === \"mobile\";\n        },\n        get children() {\n          return createComponent(Switch, {\n            get children() {\n              return [createComponent(Match, {\n                get when() {\n                  return connectionErrored();\n                },\n                get children() {\n                  return [createComponent(ErrorIconStyled$2, {\n                    size: \"s\"\n                  }), createComponent(Switch, {\n                    get children() {\n                      return [createComponent(Match, {\n                        get when() {\n                          return connectionErrored() === \"missing-features\";\n                        },\n                        get children() {\n                          return createComponent(BodyTextStyled$2, {\n                            translationKey: \"walletModal.desktopConnectionModal.missingFeatures\",\n                            get translationValues() {\n                              return {\n                                name: props.wallet.name\n                              };\n                            },\n                            children: \"Please update Wallet, your version does not support required features for this dApp\"\n                          });\n                        }\n                      }), createComponent(Match, {\n                        get when() {\n                          return connectionErrored() === \"connection-declined\";\n                        },\n                        get children() {\n                          return createComponent(BodyTextStyled$2, {\n                            translationKey: \"walletModal.desktopConnectionModal.connectionDeclined\",\n                            children: \"Connection declined\"\n                          });\n                        }\n                      }), createComponent(Match, {\n                        get when() {\n                          return connectionErrored() === \"not-supported\";\n                        },\n                        get children() {\n                          return createComponent(BodyTextStyled$2, {\n                            translationKey: \"walletModal.desktopConnectionModal.notSupportedWallet\",\n                            get translationValues() {\n                              return {\n                                name: props.wallet.name\n                              };\n                            },\n                            get children() {\n                              return [createMemo(() => props.wallet.name), \" doesn\\u2019t support the requested action. Please connect another wallet that supports it.\"];\n                            }\n                          });\n                        }\n                      })];\n                    }\n                  }), createComponent(ButtonsContainerStyled$2, {\n                    get children() {\n                      return [createComponent(Show, {\n                        get when() {\n                          return connectionErrored() !== \"not-supported\";\n                        },\n                        get children() {\n                          return createComponent(Button, {\n                            get leftIcon() {\n                              return createComponent(RetryIcon, {});\n                            },\n                            get onClick() {\n                              return mode() === \"extension\" ? onClickExtension : onClickDesktop;\n                            },\n                            get children() {\n                              return createComponent(Translation, {\n                                translationKey: \"common.retry\",\n                                children: \"Retry\"\n                              });\n                            }\n                          });\n                        }\n                      }), createComponent(Show, {\n                        get when() {\n                          return connectionErrored() === \"missing-features\";\n                        },\n                        get children() {\n                          return createComponent(Link, {\n                            get href() {\n                              return props.wallet.aboutUrl;\n                            },\n                            blank: true,\n                            get children() {\n                              return createComponent(Button, {\n                                get leftIcon() {\n                                  return createComponent(LinkIcon, {});\n                                },\n                                get children() {\n                                  return createComponent(Translation, {\n                                    translationKey: \"walletModal.desktopConnectionModal.updateWallet\",\n                                    get translationValues() {\n                                      return {\n                                        name: props.wallet.name\n                                      };\n                                    },\n                                    get children() {\n                                      return [\"Update \", createMemo(() => props.wallet.name)];\n                                    }\n                                  });\n                                }\n                              });\n                            }\n                          });\n                        }\n                      }), createComponent(Show, {\n                        get when() {\n                          return connectionErrored() === \"not-supported\";\n                        },\n                        get children() {\n                          return createComponent(Button, {\n                            onClick: () => props.onBackClick(),\n                            get children() {\n                              return createComponent(Translation, {\n                                translationKey: \"walletModal.desktopConnectionModal.chooseAnotherWallet\",\n                                children: \"Choose Another Wallet\"\n                              });\n                            }\n                          });\n                        }\n                      })];\n                    }\n                  })];\n                }\n              }), createComponent(Match, {\n                get when() {\n                  return mode() === \"mobile\";\n                },\n                get children() {\n                  return createComponent(QRCodeStyled$1, {\n                    disableCopy: false,\n                    get sourceUrl() {\n                      return addReturnStrategy(universalLink(), \"none\");\n                    },\n                    get imageUrl() {\n                      return props.wallet.imageUrl;\n                    }\n                  });\n                }\n              }), createComponent(Match, {\n                get when() {\n                  return mode() === \"extension\";\n                },\n                get children() {\n                  return [createComponent(Show, {\n                    get when() {\n                      return (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyInjected)(props.wallet);\n                    },\n                    get children() {\n                      return [createComponent(LoaderStyled$1, {\n                        size: \"s\"\n                      }), createComponent(BodyTextStyled$2, {\n                        translationKey: \"walletModal.desktopConnectionModal.continueInExtension\",\n                        get translationValues() {\n                          return {\n                            name: props.wallet.name\n                          };\n                        },\n                        get children() {\n                          return [\"Continue in \", createMemo(() => props.wallet.name), \" browser extension\\u2026\"];\n                        }\n                      }), createComponent(ButtonsContainerStyled$2, {\n                        get children() {\n                          return createComponent(Button, {\n                            get leftIcon() {\n                              return createComponent(RetryIcon, {});\n                            },\n                            onClick: onClickExtension,\n                            get children() {\n                              return createComponent(Translation, {\n                                translationKey: \"common.retry\",\n                                children: \"Retry\"\n                              });\n                            }\n                          });\n                        }\n                      })];\n                    }\n                  }), createComponent(Show, {\n                    get when() {\n                      return !(0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyInjected)(props.wallet);\n                    },\n                    get children() {\n                      return [createComponent(BodyTextStyled$2, {\n                        translationKey: \"walletModal.desktopConnectionModal.dontHaveExtension\",\n                        get translationValues() {\n                          return {\n                            name: props.wallet.name\n                          };\n                        },\n                        get children() {\n                          return [\"Seems you don't have installed \", createMemo(() => props.wallet.name), \" browser extension\"];\n                        }\n                      }), createComponent(ButtonsContainerStyled$2, {\n                        get children() {\n                          return createComponent(Link, {\n                            get href() {\n                              return props.wallet.aboutUrl;\n                            },\n                            blank: true,\n                            get children() {\n                              return createComponent(Button, {\n                                get rightIcon() {\n                                  return createComponent(LinkIcon, {});\n                                },\n                                onClick: onClickExtension,\n                                get children() {\n                                  return createComponent(Translation, {\n                                    translationKey: \"walletModal.desktopConnectionModal.getWallet\",\n                                    get translationValues() {\n                                      return {\n                                        name: props.wallet.name\n                                      };\n                                    },\n                                    get children() {\n                                      return [\"Get \", createMemo(() => props.wallet.name)];\n                                    }\n                                  });\n                                }\n                              });\n                            }\n                          });\n                        }\n                      })];\n                    }\n                  })];\n                }\n              }), createComponent(Match, {\n                get when() {\n                  return mode() === \"desktop\";\n                },\n                get children() {\n                  return [createComponent(LoaderIcon, {\n                    size: \"m\"\n                  }), createComponent(BodyTextStyled$2, {\n                    translationKey: \"walletModal.desktopConnectionModal.continueOnDesktop\",\n                    get translationValues() {\n                      return {\n                        name: props.wallet.name\n                      };\n                    },\n                    get children() {\n                      return [\"Continue in \", createMemo(() => props.wallet.name), \" on desktop\\u2026\"];\n                    }\n                  }), createComponent(ButtonsContainerStyled$2, {\n                    get children() {\n                      return [createComponent(Button, {\n                        get leftIcon() {\n                          return createComponent(RetryIcon, {});\n                        },\n                        onClick: onClickDesktop,\n                        get children() {\n                          return createComponent(Translation, {\n                            translationKey: \"common.retry\",\n                            children: \"Retry\"\n                          });\n                        }\n                      }), createComponent(Link, {\n                        get href() {\n                          return props.wallet.aboutUrl;\n                        },\n                        blank: true,\n                        get children() {\n                          return createComponent(Button, {\n                            get rightIcon() {\n                              return createComponent(LinkIcon, {});\n                            },\n                            get children() {\n                              return createComponent(Translation, {\n                                translationKey: \"walletModal.desktopConnectionModal.getWallet\",\n                                get translationValues() {\n                                  return {\n                                    name: props.wallet.name\n                                  };\n                                },\n                                get children() {\n                                  return [\"Get \", createMemo(() => props.wallet.name)];\n                                }\n                              });\n                            }\n                          });\n                        }\n                      })];\n                    }\n                  })];\n                }\n              })];\n            }\n          });\n        }\n      }), createComponent(Show, {\n        get when() {\n          return props.wallet.appName === AT_WALLET_APP_NAME;\n        },\n        get children() {\n          return createComponent(TgButtonStyled, {\n            get rightIcon() {\n              return createComponent(TgImageStyled, {\n                get src() {\n                  return IMG.TG;\n                }\n              });\n            },\n            scale: \"s\",\n            onClick: onClickTelegram,\n            get children() {\n              return createComponent(Translation, {\n                translationKey: \"walletModal.desktopConnectionModal.openWalletOnTelegram\",\n                children: \"Open Wallet in Telegram on desktop\"\n              });\n            }\n          });\n        }\n      }), createComponent(Show, {\n        get when() {\n          return props.wallet.appName !== AT_WALLET_APP_NAME;\n        },\n        get children() {\n          return createComponent(BottomButtonsContainerStyled, {\n            get children() {\n              return [createComponent(Show, {\n                get when() {\n                  return createMemo(() => mode() !== \"mobile\")() && supportsMobile(props.wallet);\n                },\n                get children() {\n                  return createComponent(FooterButton$1, {\n                    appearance: \"secondary\",\n                    get leftIcon() {\n                      return createComponent(MobileIcon, {});\n                    },\n                    onClick: onClickMobile,\n                    get children() {\n                      return createComponent(Translation, {\n                        translationKey: \"common.mobile\",\n                        children: \"Mobile\"\n                      });\n                    }\n                  });\n                }\n              }), createComponent(Show, {\n                get when() {\n                  return createMemo(() => mode() !== \"extension\")() && supportsExtension(props.wallet);\n                },\n                get children() {\n                  return createComponent(FooterButton$1, {\n                    appearance: \"secondary\",\n                    get leftIcon() {\n                      return createComponent(BrowserIcon, {});\n                    },\n                    onClick: onClickExtension,\n                    get children() {\n                      return createComponent(Translation, {\n                        translationKey: \"common.browserExtension\",\n                        children: \"Browser Extension\"\n                      });\n                    }\n                  });\n                }\n              }), createComponent(Show, {\n                get when() {\n                  return createMemo(() => mode() !== \"desktop\")() && supportsDesktop(props.wallet);\n                },\n                get children() {\n                  return createComponent(FooterButton$1, {\n                    appearance: \"secondary\",\n                    get leftIcon() {\n                      return createComponent(DesktopIcon, {});\n                    },\n                    onClick: onClickDesktop,\n                    get children() {\n                      return createComponent(Translation, {\n                        translationKey: \"common.desktop\",\n                        children: \"Desktop\"\n                      });\n                    }\n                  });\n                }\n              })];\n            }\n          });\n        }\n      })];\n    }\n  });\n};\nconst InfoModalStyled = styled.div``;\nconst StyledIconButton$3 = styled(IconButton)`\n    position: absolute;\n    top: 16px;\n    left: 16px;\n`;\nconst H1Styled$7 = styled(H1)`\n    margin-bottom: 18px;\n`;\nconst InfoBlock = styled.div`\n    padding: 16px 0;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\nconst InfoBlockIconClass = u`\n    margin-bottom: 12px;\n`;\nconst H3Styled$1 = styled(H3)`\n    text-align: center;\n    margin-bottom: 4px;\n`;\nconst TextStyled$2 = styled(Text)`\n    text-align: center;\n    max-width: 352px;\n    color: ${(props) => props.theme.colors.text.secondary};\n`;\nconst ButtonsBlock = styled.div`\n    padding: 16px 24px 24px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 8px;\n`;\nconst LINKS = {\n  GET_A_WALLET: \"https://ton.org/wallets?filters[wallet_features][slug][$in]=dapp-auth&pagination[limit]=-1\"\n};\nconst InfoModal = (props) => {\n  return createComponent(InfoModalStyled, {\n    \"data-tc-wallets-modal-info\": \"true\",\n    get children() {\n      return [createComponent(StyledIconButton$3, {\n        icon: \"arrow\",\n        onClick: () => props.onBackClick()\n      }), createComponent(H1Styled$7, {\n        translationKey: \"walletModal.infoModal.whatIsAWallet\",\n        children: \"What is a wallet\"\n      }), createComponent(ScrollContainer, {\n        get children() {\n          return [createComponent(InfoBlock, {\n            get children() {\n              return [createComponent(SecurityIcon, {\n                \"class\": InfoBlockIconClass\n              }), createComponent(H3Styled$1, {\n                translationKey: \"walletModal.infoModal.secureDigitalAssets\",\n                children: \"Secure digital assets storage\"\n              }), createComponent(TextStyled$2, {\n                translationKey: \"walletModal.infoModal.walletProtects\",\n                children: \"A wallet protects and manages your digital assets including TON, tokens and collectables.\"\n              })];\n            }\n          }), createComponent(InfoBlock, {\n            get children() {\n              return [createComponent(PersonalityIcon, {\n                \"class\": InfoBlockIconClass\n              }), createComponent(H3Styled$1, {\n                translationKey: \"walletModal.infoModal.controlIdentity\",\n                children: \"Control your Web3 identity\"\n              }), createComponent(TextStyled$2, {\n                translationKey: \"walletModal.infoModal.manageIdentity\",\n                children: \"Manage your digital identity and access decentralized applications with ease. Maintain control over your data and engage securely in the blockchain ecosystem.\"\n              })];\n            }\n          }), createComponent(InfoBlock, {\n            get children() {\n              return [createComponent(SwapIcon, {\n                \"class\": InfoBlockIconClass\n              }), createComponent(H3Styled$1, {\n                translationKey: \"walletModal.infoModal.effortlessCryptoTransactions\",\n                children: \"Effortless crypto transactions\"\n              }), createComponent(TextStyled$2, {\n                translationKey: \"walletModal.infoModal.easilySend\",\n                children: \"Easily send, receive, monitor your cryptocurrencies. Streamline your operations with decentralized applications.\"\n              })];\n            }\n          }), createComponent(ButtonsBlock, {\n            get children() {\n              return createComponent(Link, {\n                get href() {\n                  return LINKS.GET_A_WALLET;\n                },\n                blank: true,\n                get children() {\n                  return createComponent(Button, {\n                    get rightIcon() {\n                      return createComponent(WalletIcon, {});\n                    },\n                    get children() {\n                      return createComponent(Translation, {\n                        translationKey: \"walletModal.infoModal.getAWallet\",\n                        children: \"Get a Wallet\"\n                      });\n                    }\n                  });\n                }\n              });\n            }\n          })];\n        }\n      })];\n    }\n  });\n};\nconst MobileConnectionModalStyled = styled.div``;\nconst BodyStyled = styled.div`\n    flex: 1;\n    margin-top: 18px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    min-height: 232px;\n`;\nconst H1Styled$6 = styled(H1)`\n    max-width: 262px;\n    margin: 0 auto 8px;\n`;\nconst StyledIconButton$2 = styled(IconButton)`\n    position: absolute;\n    top: 16px;\n    left: 16px;\n`;\nconst FooterStyled = styled.div`\n    padding: 16px;\n    display: flex;\n    align-items: center;\n    gap: 12px;\n    border-top: 0.5px solid ${(props) => rgba(props.theme.colors.icon.secondary, 0.2)};\n`;\nconst ImageStyled = styled(Image)`\n    width: 36px;\n    height: 36px;\n    border-radius: 10px;\n`;\nconst FooterButton = styled(Link)`\n    margin-left: auto;\n`;\nconst LoaderStyled = styled(LoaderIcon)`\n    margin-bottom: 18px;\n    margin-top: 2px;\n`;\nconst ErrorIconStyled$1 = styled(ErrorIcon)`\n    margin-bottom: 16px;\n`;\nconst BodyTextStyled$1 = styled(H2)`\n    color: ${(props) => props.theme.colors.text.secondary};\n    text-align: center;\n    margin-bottom: 20px;\n`;\nconst ButtonsContainerStyled$1 = styled.div`\n    display: flex;\n    justify-content: center;\n    gap: 8px;\n    padding-bottom: 16px;\n`;\nconst actionButtonBorderRadius$1 = {\n  m: \"16px\",\n  s: \"8px\",\n  none: \"0\"\n};\nconst H1Styled$5 = styled(H1)`\n    margin-bottom: 2px;\n    padding: 0 52px;\n`;\nconst H2Styled$3 = styled(H2)`\n    margin-bottom: 20px;\n    padding: 0 64px;\n`;\nconst QrCodeWrapper$1 = styled.div`\n    padding: 0 24px 16px;\n`;\nconst ButtonsWrapper$1 = styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: 16px;\n    padding: 0 24px 24px;\n    margin-top: 0;\n`;\nconst ActionButton$1 = styled(Button)`\n    width: 100%;\n    height: 56px;\n    border-radius: ${(props) => actionButtonBorderRadius$1[props.theme.borderRadius]};\n    background-color: ${(props) => rgba(props.theme.colors.accent, 0.12)};\n    color: ${(props) => props.theme.colors.accent};\n    font-size: 16px;\n    line-height: 20px;\n    font-weight: 500;\n    padding: 17px 20px 19px 20px;\n`;\nconst MobileConnectionQR = (props) => {\n  return [createComponent(H1Styled$5, {\n    get children() {\n      return props.walletInfo.name;\n    }\n  }), createComponent(H2Styled$3, {\n    translationKey: \"walletModal.mobileConnectionModal.scanQR\",\n    get translationValues() {\n      return {\n        name: props.walletInfo.name\n      };\n    },\n    get children() {\n      return [\"Scan the QR code below with your phone\\u2019s or \", createMemo(() => props.walletInfo.name), \"\\u2019s camera\"];\n    }\n  }), createComponent(QrCodeWrapper$1, {\n    get children() {\n      return createComponent(QRCode, {\n        get imageUrl() {\n          return props.walletInfo.imageUrl;\n        },\n        get sourceUrl() {\n          return addReturnStrategy(props.universalLink, \"none\");\n        },\n        disableCopy: true\n      });\n    }\n  }), createComponent(ButtonsWrapper$1, {\n    get children() {\n      return [createComponent(ActionButton$1, {\n        appearance: \"secondary\",\n        onClick: () => {\n          var _a2;\n          return (_a2 = props.onOpenLink) == null ? void 0 : _a2.call(props);\n        },\n        get children() {\n          return createComponent(Translation, {\n            translationKey: \"walletModal.mobileUniversalModal.openLink\",\n            children: \"Open Link\"\n          });\n        }\n      }), createComponent(ActionButton$1, {\n        appearance: \"secondary\",\n        onClick: () => {\n          var _a2;\n          return (_a2 = props.onCopy) == null ? void 0 : _a2.call(props);\n        },\n        get children() {\n          return createComponent(Translation, {\n            get translationKey() {\n              return props.isCopiedShown !== void 0 ? \"common.copied\" : \"common.copyLink\";\n            },\n            get children() {\n              return props.isCopiedShown !== void 0 ? \"Copied\" : \"Copy Link\";\n            }\n          });\n        }\n      })];\n    }\n  })];\n};\nconst MobileConnectionModal = (props) => {\n  const theme = useTheme();\n  const [firstClick, setFirstClick] = createSignal(true);\n  const [showQR, setShowQR] = createSignal(false);\n  const [connectionErrored, setConnectionErrored] = createSignal(null);\n  createEffect(() => {\n    var _a2;\n    setConnectionErrored((_a2 = props.defaultError) != null ? _a2 : null);\n  });\n  const connector = useContext(ConnectorContext);\n  const unsubscribe = connector.onStatusChange(() => {\n  }, () => {\n    setConnectionErrored(null);\n  });\n  const universalLink = createMemo(() => connector.connect({\n    universalLink: props.wallet.universalLink,\n    bridgeUrl: props.wallet.bridgeUrl\n  }, props.additionalRequest));\n  const onClickTelegram = () => {\n    const alwaysForceRedirect = true;\n    setLastSelectedWalletInfo(__spreadProps(__spreadValues({}, props.wallet), {\n      openMethod: \"universal-link\"\n    }));\n    redirectToTelegram(universalLink(), {\n      returnStrategy: appState.returnStrategy,\n      twaReturnUrl: appState.twaReturnUrl,\n      forceRedirect: alwaysForceRedirect\n    });\n  };\n  const onRetry = () => {\n    const currentUniversalLink = universalLink();\n    if ((0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isTelegramUrl)(currentUniversalLink)) {\n      return onClickTelegram();\n    }\n    setConnectionErrored(null);\n    const forceRedirect = !firstClick();\n    setFirstClick(false);\n    redirectToWallet(universalLink(), props.wallet.deepLink, {\n      returnStrategy: appState.returnStrategy,\n      forceRedirect\n    }, (method) => {\n      setLastSelectedWalletInfo(__spreadProps(__spreadValues({}, props.wallet), {\n        openMethod: method\n      }));\n    });\n  };\n  const [isCopiedShown, setIsCopiedShown] = createSignal(void 0);\n  const onCopy = () => __async(void 0, null, function* () {\n    if (isCopiedShown() !== void 0) {\n      clearTimeout(isCopiedShown());\n    }\n    yield copyToClipboard(universalLink());\n    const timeoutId = setTimeout(() => setIsCopiedShown(void 0), 1500);\n    setIsCopiedShown(timeoutId);\n  });\n  const onOpenQR = () => {\n    setConnectionErrored(null);\n    setShowQR(true);\n    setLastSelectedWalletInfo(__spreadProps(__spreadValues({}, props.wallet), {\n      openMethod: \"qrcode\"\n    }));\n  };\n  const onCloseQR = () => {\n    setShowQR(false);\n    setLastSelectedWalletInfo(__spreadProps(__spreadValues({}, props.wallet), {\n      openMethod: \"universal-link\"\n    }));\n  };\n  const onBack = () => {\n    if (showQR()) {\n      onCloseQR();\n    } else {\n      props.onBackClick();\n    }\n  };\n  onCleanup(unsubscribe);\n  onRetry();\n  return createComponent(MobileConnectionModalStyled, {\n    \"data-tc-wallets-modal-connection-mobile\": \"true\",\n    get children() {\n      return [createComponent(Show, {\n        get when() {\n          return !props.backDisabled || showQR();\n        },\n        get children() {\n          return createComponent(StyledIconButton$2, {\n            icon: \"arrow\",\n            onClick: onBack\n          });\n        }\n      }), createComponent(Show, {\n        get when() {\n          return showQR();\n        },\n        get children() {\n          return createComponent(MobileConnectionQR, {\n            get universalLink() {\n              return universalLink();\n            },\n            get walletInfo() {\n              return props.wallet;\n            },\n            onOpenLink: onRetry,\n            onCopy,\n            get isCopiedShown() {\n              return isCopiedShown();\n            }\n          });\n        }\n      }), createComponent(Show, {\n        get when() {\n          return !showQR();\n        },\n        get children() {\n          return [createComponent(H1Styled$6, {\n            get children() {\n              return props.wallet.name;\n            }\n          }), createComponent(BodyStyled, {\n            get children() {\n              return [createComponent(Show, {\n                get when() {\n                  return connectionErrored();\n                },\n                get children() {\n                  return [createComponent(ErrorIconStyled$1, {\n                    size: \"s\"\n                  }), createComponent(Switch, {\n                    get children() {\n                      return [createComponent(Match, {\n                        get when() {\n                          return connectionErrored() === \"missing-features\";\n                        },\n                        get children() {\n                          return createComponent(BodyTextStyled$1, {\n                            translationKey: \"walletModal.mobileConnectionModal.missingFeatures\",\n                            get translationValues() {\n                              return {\n                                name: props.wallet.name\n                              };\n                            },\n                            children: \"Please update Wallet, your version does not support required features for this dApp\"\n                          });\n                        }\n                      }), createComponent(Match, {\n                        get when() {\n                          return connectionErrored() === \"connection-declined\";\n                        },\n                        get children() {\n                          return createComponent(BodyTextStyled$1, {\n                            translationKey: \"walletModal.mobileConnectionModal.connectionDeclined\",\n                            children: \"Connection declined\"\n                          });\n                        }\n                      }), createComponent(Match, {\n                        get when() {\n                          return connectionErrored() === \"not-supported\";\n                        },\n                        get children() {\n                          return createComponent(BodyTextStyled$1, {\n                            translationKey: \"walletModal.mobileConnectionModal.notSupportedWallet\",\n                            get translationValues() {\n                              return {\n                                name: props.wallet.name\n                              };\n                            },\n                            get children() {\n                              return [createMemo(() => props.wallet.name), \" doesn\\u2019t support the requested action. Please connect another wallet that supports it.\"];\n                            }\n                          });\n                        }\n                      })];\n                    }\n                  }), createComponent(ButtonsContainerStyled$1, {\n                    get children() {\n                      return createComponent(Switch, {\n                        get children() {\n                          return [createComponent(Match, {\n                            get when() {\n                              return connectionErrored() === \"missing-features\";\n                            },\n                            get children() {\n                              return [createComponent(Button, {\n                                get leftIcon() {\n                                  return createComponent(RetryIcon, {});\n                                },\n                                onClick: onRetry,\n                                get children() {\n                                  return createComponent(Translation, {\n                                    translationKey: \"common.retry\",\n                                    children: \"Retry\"\n                                  });\n                                }\n                              }), createComponent(Link, {\n                                get href() {\n                                  return props.wallet.aboutUrl;\n                                },\n                                blank: true,\n                                get children() {\n                                  return createComponent(Button, {\n                                    get leftIcon() {\n                                      return createComponent(LinkIcon, {});\n                                    },\n                                    get children() {\n                                      return createComponent(Translation, {\n                                        translationKey: \"walletModal.mobileConnectionModal.updateWallet\",\n                                        get translationValues() {\n                                          return {\n                                            name: props.wallet.name\n                                          };\n                                        },\n                                        get children() {\n                                          return [\"Update \", createMemo(() => props.wallet.name)];\n                                        }\n                                      });\n                                    }\n                                  });\n                                }\n                              })];\n                            }\n                          }), createComponent(Match, {\n                            get when() {\n                              return connectionErrored() === \"not-supported\";\n                            },\n                            get children() {\n                              return createComponent(Button, {\n                                onClick: () => props.onBackClick(),\n                                get children() {\n                                  return createComponent(Translation, {\n                                    translationKey: \"walletModal.mobileConnectionModal.chooseAnotherWallet\",\n                                    children: \"Choose Another Wallet\"\n                                  });\n                                }\n                              });\n                            }\n                          }), createComponent(Match, {\n                            get when() {\n                              return connectionErrored() === \"connection-declined\";\n                            },\n                            get children() {\n                              return [createComponent(Button, {\n                                get leftIcon() {\n                                  return createComponent(RetryIcon, {});\n                                },\n                                onClick: onRetry,\n                                get children() {\n                                  return createComponent(Translation, {\n                                    translationKey: \"common.retry\",\n                                    children: \"Retry\"\n                                  });\n                                }\n                              }), createComponent(Button, {\n                                get leftIcon() {\n                                  return createComponent(QRIcon, {\n                                    get fill() {\n                                      return theme.colors.accent;\n                                    }\n                                  });\n                                },\n                                onClick: onOpenQR,\n                                get children() {\n                                  return createComponent(Translation, {\n                                    translationKey: \"walletModal.mobileConnectionModal.showQR\",\n                                    children: \"Show QR Code\"\n                                  });\n                                }\n                              })];\n                            }\n                          })];\n                        }\n                      });\n                    }\n                  })];\n                }\n              }), createComponent(Show, {\n                get when() {\n                  return !connectionErrored();\n                },\n                get children() {\n                  return [createComponent(LoaderStyled, {\n                    size: \"s\"\n                  }), createComponent(BodyTextStyled$1, {\n                    translationKey: \"walletModal.mobileConnectionModal.continueIn\",\n                    get translationValues() {\n                      return {\n                        name: props.wallet.name\n                      };\n                    },\n                    get children() {\n                      return [\"Continue in \", createMemo(() => props.wallet.name), \"\\u2026\"];\n                    }\n                  }), createComponent(ButtonsContainerStyled$1, {\n                    get children() {\n                      return [createComponent(Button, {\n                        get leftIcon() {\n                          return createComponent(RetryIcon, {});\n                        },\n                        onClick: onRetry,\n                        get children() {\n                          return createComponent(Translation, {\n                            translationKey: \"common.retry\",\n                            children: \"Retry\"\n                          });\n                        }\n                      }), createComponent(Button, {\n                        get leftIcon() {\n                          return createComponent(QRIcon, {\n                            get fill() {\n                              return theme.colors.accent;\n                            }\n                          });\n                        },\n                        onClick: onOpenQR,\n                        get children() {\n                          return createComponent(Translation, {\n                            translationKey: \"walletModal.mobileConnectionModal.showQR\",\n                            children: \"Show QR Code\"\n                          });\n                        }\n                      })];\n                    }\n                  })];\n                }\n              })];\n            }\n          }), createComponent(FooterStyled, {\n            get children() {\n              return [createComponent(ImageStyled, {\n                get src() {\n                  return props.wallet.imageUrl;\n                }\n              }), createComponent(H3, {\n                get children() {\n                  return props.wallet.name;\n                }\n              }), createComponent(FooterButton, {\n                get href() {\n                  return props.wallet.aboutUrl;\n                },\n                blank: true,\n                get children() {\n                  return createComponent(Button, {\n                    get children() {\n                      return createComponent(Translation, {\n                        translationKey: \"common.get\",\n                        children: \"GET\"\n                      });\n                    }\n                  });\n                }\n              })];\n            }\n          })];\n        }\n      })];\n    }\n  });\n};\nconst borders$2 = {\n  m: \"16px\",\n  s: \"12px\",\n  none: \"0\"\n};\nconst tgBorders = {\n  m: \"6px\",\n  s: \"6px\",\n  none: \"0\"\n};\nstyled.li`\n    width: 82px;\n    min-width: 82px;\n    height: 124px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 8px 4px;\n\n    text-align: center;\n    cursor: pointer;\n\n    transition: transform 0.1s ease-in-out;\n\n    ${mediaNotTouch} {\n        &:hover {\n            transform: scale(1.04);\n        }\n    }\n\n    &:active {\n        transform: scale(0.96);\n    }\n\n    ${mediaTouch} {\n        &:active {\n            transform: scale(0.92);\n        }\n    }\n`;\nconst H1Styled$4 = styled(H1)`\n    margin-top: 38px;\n    margin-bottom: 4px;\n    padding: 0 24px;\n`;\nconst H2Styled$2 = styled(H2)`\n    margin: ${(props) => {\n  var _a2;\n  return (_a2 = props.margin) != null ? _a2 : \"0 0 28px 0\";\n}};\n    padding: ${(props) => {\n  var _a2;\n  return (_a2 = props.padding) != null ? _a2 : \"0 24px\";\n}};\n    min-height: ${(props) => {\n  var _a2;\n  return (_a2 = props.padding) != null ? _a2 : \"44px\";\n}};\n    max-width: ${(props) => props.maxWidth}px;\n    margin-left: ${(props) => props.maxWidth ? \"auto\" : \"0px\"};\n    margin-right: ${(props) => props.maxWidth ? \"auto\" : \"0px\"};\n`;\nstyled(Button)`\n    display: block;\n    margin: 0 auto;\n`;\nconst TelegramButtonStyled = styled(Button)`\n    margin: 0 28px 24px;\n    width: calc(100% - 56px);\n    border-radius: ${(props) => borders$2[props.theme.borderRadius]};\n    padding: 14px 16px 14px 14px;\n    background-color: ${(props) => props.theme.colors.telegramButton};\n\n    color: ${(props) => props.theme.colors.constant.white};\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 20px;\n\n    @media (max-width: 375px) {\n        margin: 0 16px 24px;\n        width: calc(100% - 32px);\n    }\n`;\nconst TGImageStyled = styled(Image)`\n    background-color: transparent;\n    border-radius: ${(props) => tgBorders[props.theme.borderRadius]};\n    width: 24px;\n    height: 24px;\n`;\nconst StyledLeftActionButton = styled(IconButton)`\n    position: absolute;\n    top: 16px;\n    left: 16px;\n`;\nconst actionButtonBorderRadius = {\n  m: \"16px\",\n  s: \"8px\",\n  none: \"0\"\n};\nconst H1Styled$3 = styled(H1)`\n    margin-bottom: 2px;\n    padding: 0 52px;\n`;\nconst H2Styled$1 = styled(H2)`\n    margin-bottom: 20px;\n    padding: 0 64px;\n`;\nconst QrCodeWrapper = styled.div`\n    padding: 0 24px 16px;\n`;\nconst ButtonsWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: 16px;\n    padding: 0 24px 24px;\n    margin-top: 0;\n`;\nconst ActionButton = styled(Button)`\n    width: 100%;\n    height: 56px;\n    border-radius: ${(props) => actionButtonBorderRadius[props.theme.borderRadius]};\n    background-color: ${(props) => rgba(props.theme.colors.accent, 0.12)};\n    color: ${(props) => props.theme.colors.accent};\n    font-size: 16px;\n    line-height: 20px;\n    font-weight: 500;\n    padding: 17px 20px 19px 20px;\n`;\nconst MobileUniversalQR = (props) => {\n  return [createComponent(H1Styled$3, {\n    translationKey: \"walletModal.mobileUniversalModal.connectYourWallet\",\n    children: \"Connect your TON wallet\"\n  }), createComponent(H2Styled$1, {\n    translationKey: \"walletModal.mobileUniversalModal.scan\",\n    children: \"Scan with your mobile wallet\"\n  }), createComponent(QrCodeWrapper, {\n    get children() {\n      return createComponent(QRCode, {\n        get imageUrl() {\n          return IMG.TON;\n        },\n        get sourceUrl() {\n          return addReturnStrategy(props.universalLink, \"none\");\n        },\n        disableCopy: true\n      });\n    }\n  }), createComponent(ButtonsWrapper, {\n    get children() {\n      return [createComponent(ActionButton, {\n        appearance: \"secondary\",\n        onClick: () => props.onOpenLink(),\n        get children() {\n          return createComponent(Translation, {\n            translationKey: \"walletModal.mobileUniversalModal.openLink\",\n            children: \"Open Link\"\n          });\n        }\n      }), createComponent(ActionButton, {\n        appearance: \"secondary\",\n        onClick: () => props.onCopy(),\n        get children() {\n          return createComponent(Translation, {\n            get translationKey() {\n              return props.isCopiedShown !== void 0 ? \"common.copied\" : \"common.copyLink\";\n            },\n            get children() {\n              return props.isCopiedShown !== void 0 ? \"Copied\" : \"Copy Link\";\n            }\n          });\n        }\n      })];\n    }\n  })];\n};\nfunction getUniqueBridges(walletsList) {\n  const uniqueBridges = new Set(\n    walletsList.filter(_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoRemote).map((item) => item.bridgeUrl)\n  );\n  return Array.from(uniqueBridges).map((bridgeUrl) => ({ bridgeUrl }));\n}\nfunction bridgesIsEqual(left, right) {\n  const leftSet = new Set(left == null ? void 0 : left.map((i2) => i2.bridgeUrl));\n  const rightSet = new Set(right == null ? void 0 : right.map((i2) => i2.bridgeUrl));\n  return leftSet.size === rightSet.size && [...leftSet].every((value) => rightSet.has(value));\n}\nconst _tmpl$$1 = /* @__PURE__ */ template$1(`<li></li>`), _tmpl$2 = /* @__PURE__ */ template$1(`<div data-tc-wallets-modal-universal-mobile=\"true\"></div>`);\nconst MobileUniversalModal = (props) => {\n  const [showQR, setShowQR] = createSignal(false);\n  const [firstClick, setFirstClick] = createSignal(true);\n  const [universalLink, setUniversalLink] = createSignal(null);\n  const connector = appState.connector;\n  const walletsList = () => props.walletsList.filter((w) => supportsMobile(w) && w.appName !== AT_WALLET_APP_NAME);\n  const shouldShowMoreButton = () => walletsList().length > 7;\n  const walletsBridges = createMemo(() => getUniqueBridges(props.walletsList), null, {\n    equals: bridgesIsEqual\n  });\n  const atWalletSupportFeatures = createMemo(() => {\n    var _a2, _b2;\n    return (_b2 = (_a2 = props.walletsList.find((wallet) => wallet.appName === AT_WALLET_APP_NAME)) == null ? void 0 : _a2.isSupportRequiredFeatures) != null ? _b2 : false;\n  }, null);\n  const getUniversalLink = () => {\n    if (!universalLink()) {\n      setUniversalLink(connector.connect(walletsBridges(), props.additionalRequest));\n    }\n    return universalLink();\n  };\n  setLastSelectedWalletInfo({\n    openMethod: \"universal-link\"\n  });\n  const [isCopiedShown, setIsCopiedShown] = createSignal(void 0);\n  const onCopy = () => __async(void 0, null, function* () {\n    if (isCopiedShown() !== void 0) {\n      clearTimeout(isCopiedShown());\n    }\n    yield copyToClipboard(getUniversalLink());\n    const timeoutId = setTimeout(() => setIsCopiedShown(void 0), 1500);\n    setIsCopiedShown(timeoutId);\n  });\n  const onSelectUniversal = () => {\n    const forceRedirect = !firstClick();\n    setFirstClick(false);\n    redirectToWallet(getUniversalLink(), void 0, {\n      returnStrategy: appState.returnStrategy,\n      forceRedirect\n    }, (method) => {\n      setLastSelectedWalletInfo({\n        openMethod: method\n      });\n    });\n  };\n  const onSelectTelegram = () => {\n    setUniversalLink(null);\n    const atWallet = props.walletsList.find((wallet) => wallet.appName === AT_WALLET_APP_NAME);\n    if (!atWallet || !(0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoRemote)(atWallet)) {\n      throw new TonConnectUIError(\"@wallet bot not found in the wallets list\");\n    }\n    const walletLink = connector.connect({\n      bridgeUrl: atWallet.bridgeUrl,\n      universalLink: atWallet.universalLink\n    }, props.additionalRequest);\n    const forceRedirect = !firstClick();\n    setFirstClick(false);\n    redirectToTelegram(walletLink, {\n      returnStrategy: appState.returnStrategy,\n      twaReturnUrl: appState.twaReturnUrl,\n      forceRedirect\n    });\n  };\n  const onOpenQR = () => {\n    setShowQR(true);\n    setLastSelectedWalletInfo({\n      openMethod: \"qrcode\"\n    });\n  };\n  const onCloseQR = () => {\n    setShowQR(false);\n    setLastSelectedWalletInfo({\n      openMethod: \"universal-link\"\n    });\n  };\n  const supportedWallets = createMemo(() => walletsList().filter((wallet) => wallet.isSupportRequiredFeatures), null);\n  const visibleWallets = createMemo(() => supportedWallets().slice(0, 3), null);\n  const fourWalletsItem = createMemo(() => walletsList().filter((wallet) => !visibleWallets().find((w) => w.appName === wallet.appName)).slice(0, 4), null);\n  return (() => {\n    const _el$ = _tmpl$2.cloneNode(true);\n    insert(_el$, createComponent(Show, {\n      get when() {\n        return showQR();\n      },\n      get children() {\n        return [createComponent(StyledLeftActionButton, {\n          icon: \"arrow\",\n          onClick: onCloseQR\n        }), createComponent(MobileUniversalQR, {\n          get universalLink() {\n            return getUniversalLink();\n          },\n          get isCopiedShown() {\n            return isCopiedShown();\n          },\n          onOpenLink: onSelectUniversal,\n          onCopy\n        })];\n      }\n    }), null);\n    insert(_el$, createComponent(Show, {\n      get when() {\n        return !showQR();\n      },\n      get children() {\n        return [createComponent(StyledLeftActionButton, {\n          get icon() {\n            return createComponent(QRIcon, {});\n          },\n          onClick: onOpenQR\n        }), createComponent(H1Styled$4, {\n          translationKey: \"walletModal.mobileUniversalModal.connectYourWallet\",\n          children: \"Connect your TON wallet\"\n        }), createComponent(Show, {\n          get when() {\n            return atWalletSupportFeatures();\n          },\n          get children() {\n            return [createComponent(H2Styled$2, {\n              translationKey: \"walletModal.mobileUniversalModal.openWalletOnTelegramOrSelect\",\n              maxWidth: 320,\n              children: \"Use Wallet in Telegram or choose other application\"\n            }), createComponent(TelegramButtonStyled, {\n              get leftIcon() {\n                return createComponent(AtWalletIcon, {});\n              },\n              get rightIcon() {\n                return createComponent(TGImageStyled, {\n                  get src() {\n                    return IMG.TG;\n                  }\n                });\n              },\n              onClick: onSelectTelegram,\n              scale: \"s\",\n              get children() {\n                return createComponent(Translation, {\n                  translationKey: \"walletModal.mobileUniversalModal.openWalletOnTelegram\",\n                  children: \"Connect Wallet in Telegram\"\n                });\n              }\n            })];\n          }\n        }), createComponent(H2Styled$2, {\n          translationKey: \"walletModal.mobileUniversalModal.chooseOtherApplication\",\n          maxWidth: 342,\n          padding: \"0 24px 8px 24px\",\n          margin: \"0\",\n          children: \"Choose other application\"\n        }), createComponent(WalletUlContainer, {\n          get children() {\n            return [createComponent(For, {\n              get each() {\n                return createMemo(() => !!shouldShowMoreButton())() ? visibleWallets() : supportedWallets();\n              },\n              children: (wallet) => (() => {\n                const _el$3 = _tmpl$$1.cloneNode(true);\n                insert(_el$3, createComponent(WalletItem, {\n                  get icon() {\n                    return wallet.imageUrl;\n                  },\n                  get name() {\n                    return wallet.name;\n                  },\n                  onClick: () => props.onSelect(wallet)\n                }));\n                return _el$3;\n              })()\n            }), createComponent(Show, {\n              get when() {\n                return shouldShowMoreButton();\n              },\n              get children() {\n                const _el$2 = _tmpl$$1.cloneNode(true);\n                insert(_el$2, createComponent(FourWalletsItem, {\n                  labelLine1: \"View all\",\n                  labelLine2: \"wallets\",\n                  get images() {\n                    return fourWalletsItem().map((i2) => i2.imageUrl);\n                  },\n                  onClick: () => props.onSelectAllWallets()\n                }));\n                return _el$2;\n              }\n            })];\n          }\n        })];\n      }\n    }), null);\n    return _el$;\n  })();\n};\nconst borders$1 = {\n  m: \"16px\",\n  s: \"8px\",\n  none: \"0\"\n};\nconst hoverBorders = {\n  m: \"8px\",\n  s: \"4px\",\n  none: \"0\"\n};\nconst DesktopUniversalModalStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding-bottom: 16px;\n`;\nconst H2Styled = styled(H2)`\n    max-width: 320px;\n    margin-top: 2px;\n    margin-bottom: 20px;\n`;\nconst H2AvailableWalletsStyled = styled(H2)`\n    margin-bottom: 16px;\n`;\nconst QRCodeStyled = styled(QRCode)`\n    margin-bottom: 24px;\n`;\nconst WalletsContainerStyled = styled.ul`\n    display: flex;\n`;\nstyled.div`\n    display: flex;\n    gap: 16px;\n    width: 100%;\n`;\nstyled(Button)`\n    position: relative;\n    font-size: 16px;\n    line-height: 20px;\n    width: 100%;\n    padding: 0 16px;\n    height: 56px;\n    border-radius: ${(props) => borders$1[props.theme.borderRadius]};\n\n    &:hover {\n        ${(props) => props.disableEventsAnimation ? \"transform: unset;\" : \"\"}\n    }\n\n    &:active {\n        ${(props) => props.disableEventsAnimation ? \"transform: unset;\" : \"\"}\n    }\n`;\nstyled.ul`\n    position: absolute;\n    bottom: 100%;\n    left: 0;\n    margin: 0;\n    padding: 8px;\n    width: 188px;\n    transform: translateY(-16px);\n\n    background-color: ${(props) => props.theme.colors.background.primary};\n    border-radius: ${(props) => borders$1[props.theme.borderRadius]};\n    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.16);\n`;\nstyled.li`\n    padding: 8px;\n\n    display: flex;\n    align-items: center;\n    gap: 8px;\n\n    cursor: pointer;\n    border-radius: ${(props) => hoverBorders[props.theme.borderRadius]};\n\n    transition: background-color, transform 0.1s ease-in-out;\n\n    &:hover {\n        background-color: ${(props) => props.theme.colors.background.secondary};\n    }\n\n    &:active {\n        transform: scale(0.96);\n    }\n`;\nstyled(Image)`\n    width: 24px;\n    height: 24px;\n\n    border-radius: 6px;\n`;\nstyled.div`\n    margin-top: 23px;\n    margin-bottom: 1px;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\nstyled(Text)`\n    color: ${(props) => props.theme.colors.text.secondary};\n    font-size: 16px;\n`;\nconst _tmpl$ = /* @__PURE__ */ template$1(`<li></li>`);\nconst DesktopUniversalModal = (props) => {\n  const [popupOpened, setPopupOpened] = createSignal(false);\n  const connector = appState.connector;\n  const walletsBridges = createMemo(() => getUniqueBridges(props.walletsList), null, {\n    equals: bridgesIsEqual\n  });\n  setLastSelectedWalletInfo({\n    openMethod: \"qrcode\"\n  });\n  const request = createMemo(() => connector.connect(walletsBridges(), props.additionalRequest));\n  const supportedWallets = createMemo(() => props.walletsList.filter((wallet) => wallet.isSupportRequiredFeatures), null);\n  const visibleWallets = createMemo(() => supportedWallets().slice(0, 3), null);\n  const fourWalletsItem = createMemo(() => props.walletsList.filter((wallet) => !visibleWallets().find((w) => w.appName === wallet.appName)).slice(0, 4), null);\n  return createComponent(DesktopUniversalModalStyled, {\n    onClick: () => setPopupOpened(false),\n    \"data-tc-wallets-modal-universal-desktop\": \"true\",\n    get children() {\n      return [createComponent(H1, {\n        translationKey: \"walletModal.desktopUniversalModal.connectYourWallet\",\n        children: \"Connect your wallet\"\n      }), createComponent(H2Styled, {\n        translationKey: \"walletModal.desktopUniversalModal.scan\",\n        children: \"Scan with your mobile wallet\"\n      }), createComponent(QRCodeStyled, {\n        get sourceUrl() {\n          return addReturnStrategy(request(), \"none\");\n        },\n        get disableCopy() {\n          return popupOpened();\n        },\n        get imageUrl() {\n          return IMG.TON;\n        }\n      }), createComponent(H2AvailableWalletsStyled, {\n        translationKey: \"walletModal.desktopUniversalModal.availableWallets\",\n        children: \"Available wallets\"\n      }), createComponent(WalletsContainerStyled, {\n        get children() {\n          return [createComponent(For, {\n            get each() {\n              return visibleWallets();\n            },\n            children: (wallet) => (() => {\n              const _el$ = _tmpl$.cloneNode(true);\n              insert(_el$, createComponent(WalletLabeledItem, {\n                wallet,\n                onClick: () => props.onSelect(wallet)\n              }));\n              return _el$;\n            })()\n          }), createComponent(FourWalletsItem, {\n            labelLine1: \"View all\",\n            labelLine2: \"wallets\",\n            get images() {\n              return fourWalletsItem().map((i2) => i2.imageUrl);\n            },\n            onClick: () => props.onSelectAllWallets()\n          })];\n        }\n      })];\n    }\n  });\n};\nconst borders = {\n  m: \"16px\",\n  s: \"8px\",\n  none: \"0\"\n};\nconst H1Styled$2 = styled(H1)`\n    max-width: 288px;\n    margin: 0 auto 38px;\n`;\nconst DesktopFeatureNotSupportModalStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\nconst StyledIconButton$1 = styled(IconButton)`\n    position: absolute;\n    top: 16px;\n    left: 16px;\n`;\nconst TitleStyled = styled(H1)`\n    text-align: center;\n    font-size: 20px;\n    line-height: 28px;\n`;\nconst DescriptionStyled = styled(Text)`\n    margin-top: 12px;\n    margin-bottom: 24px;\n    text-align: center;\n    max-width: 360px;\n    font-weight: 400;\n    color: ${(props) => props.theme.colors.text.secondary};\n`;\nstyled.button`\n    background: transparent;\n    border: none;\n    padding: 0;\n    margin: 0;\n    color: ${(props) => props.theme.colors.accent};\n    text-decoration: underline;\n    cursor: pointer;\n    font: inherit;\n`;\nconst Spacer = styled.div`\n    margin-bottom: 46px;\n`;\nconst ErrorIconStyled = styled(ErrorIcon)`\n    margin-bottom: 16px;\n`;\nstyled.ul`\n    display: flex;\n    gap: 8px;\n    margin-bottom: 24px;\n    list-style: none;\n    padding: 0;\n`;\nconst DisconnectButtonStyled = styled(Button)`\n    max-width: 320px;\n    width: 100%;\n    height: 48px;\n    font-size: 16px;\n    line-height: 20px;\n    border-radius: ${(props) => borders[props.theme.borderRadius]};\n    margin-bottom: 28px;\n`;\nconst BodyTextStyled = styled(H2)`\n    color: ${(props) => props.theme.colors.text.secondary};\n    text-align: center;\n    margin-bottom: 20px;\n`;\nconst ButtonsContainerStyled = styled.div`\n    display: flex;\n    justify-content: center;\n    gap: 8px;\n    padding-bottom: 31px;\n`;\nconst RestoreInfoModalStyled = styled.div`\n    margin: 0 8px 16px 8px;\n`;\nconst StyledIconButton = styled(IconButton)`\n    position: absolute;\n    top: 16px;\n    left: 16px;\n`;\nconst H1Styled$1 = styled(H1)`\n    margin-bottom: 18px;\n    text-align: center;\n`;\nconst StepBlock = styled.div`\n    padding: 16px 0;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\nstyled.div`\n    margin-bottom: 12px;\n`;\nconst H3Styled = styled(H3)`\n    text-align: center;\n    margin-bottom: 4px;\n`;\nconst TextStyled$1 = styled(Text)`\n    text-align: center;\n    max-width: 352px;\n    color: ${(props) => props.theme.colors.text.secondary};\n`;\nconst CircleNumber = styled.div`\n    width: 44px;\n    height: 44px;\n    border-radius: 20px;\n    background-color: ${(props) => {\n  var _a2;\n  return (_a2 = props.theme) == null ? void 0 : _a2.colors.icon.secondary;\n}};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-bottom: 12px;\n    font-weight: 700;\n    font-size: 22px;\n    color: ${(props) => {\n  var _a2;\n  return (_a2 = props.theme) == null ? void 0 : _a2.colors.text.primary;\n}};\n`;\nconst RestoreInfoModal = (props) => {\n  return createComponent(RestoreInfoModalStyled, {\n    \"data-tc-wallets-modal-restore\": \"true\",\n    get children() {\n      return [createComponent(StyledIconButton, {\n        icon: \"arrow\",\n        get onClick() {\n          return props.onBackClick;\n        }\n      }), createComponent(H1Styled$1, {\n        translationKey: \"walletModal.restoreInfoModal.title\",\n        children: \"Restore\"\n      }), createComponent(ScrollContainer, {\n        get children() {\n          return [createComponent(StepBlock, {\n            get children() {\n              return [createComponent(CircleNumber, {\n                children: \"1\"\n              }), createComponent(H3Styled, {\n                translationKey: \"walletModal.restoreModal.step1.title\",\n                children: \"Find your current recovery phrase\"\n              }), createComponent(TextStyled$1, {\n                translationKey: \"walletModal.restoreModal.step1.text\",\n                children: \"Open your wallet settings and locate the\\xA0recovery\\xA0phrase\"\n              })];\n            }\n          }), createComponent(StepBlock, {\n            get children() {\n              return [createComponent(CircleNumber, {\n                children: \"2\"\n              }), createComponent(H3Styled, {\n                translationKey: \"walletModal.restoreModal.step2.title\",\n                children: \"Copy your recovery phrase\"\n              }), createComponent(TextStyled$1, {\n                translationKey: \"walletModal.restoreModal.step2.text\",\n                children: \"Write it down or copy it to a safe place\"\n              })];\n            }\n          }), createComponent(StepBlock, {\n            get children() {\n              return [createComponent(CircleNumber, {\n                children: \"3\"\n              }), createComponent(H3Styled, {\n                translationKey: \"walletModal.restoreModal.step3.title\",\n                children: \"Restore in a supported wallet from\\xA0the\\xA0list\\xA0below\"\n              }), createComponent(TextStyled$1, {\n                translationKey: \"walletModal.restoreModal.step3.text\",\n                children: \"Enter the recovery phrase to access your wallet\"\n              })];\n            }\n          })];\n        }\n      })];\n    }\n  });\n};\nconst DesktopFeatureNotSupportModal = (props) => {\n  const [selectedWallet, setSelectedWallet] = createSignal(null);\n  const [infoModalOpen, setInfoModalOpen] = createSignal(false);\n  const currentWalletUI = createMemo(() => props.walletsList.find((wallet) => wallet.appName === props.currentWallet.device.appName || wallet.name === props.currentWallet.device.appName));\n  const currentWalletName = createMemo(() => {\n    var _a2, _b2, _c2, _d2;\n    const appName = (_b2 = (_a2 = currentWalletUI()) == null ? void 0 : _a2.appName) != null ? _b2 : props.currentWallet.device.appName;\n    if (appName === AT_WALLET_APP_NAME) {\n      return \"Wallet in Telegram\";\n    }\n    return (_d2 = (_c2 = currentWalletUI()) == null ? void 0 : _c2.name) != null ? _d2 : props.currentWallet.device.appName;\n  });\n  const currentWalletVersionNotSupported = createMemo(() => {\n    const currentWalletUIVar = currentWalletUI();\n    if (!(currentWalletUIVar == null ? void 0 : currentWalletUIVar.features)) {\n      return false;\n    }\n    const requiredFeature = props.walletsModalState.requiredFeature;\n    const requiredFeatures = requiredFeature ? {\n      [requiredFeature.featureName]: requiredFeature.value\n    } : {};\n    const validInList = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.checkRequiredWalletFeatures)(currentWalletUIVar.features, requiredFeatures);\n    const validCurrentWallet = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.checkRequiredWalletFeatures)(props.currentWallet.device.features, requiredFeatures);\n    return validInList && !validCurrentWallet;\n  });\n  const handleDisconnect = () => __async(void 0, null, function* () {\n    yield props.onDisconnect();\n    props.onSelect(selectedWallet());\n  });\n  return createComponent(DesktopFeatureNotSupportModalStyled, {\n    get children() {\n      return createComponent(Switch, {\n        get children() {\n          return [createComponent(Match, {\n            get when() {\n              return infoModalOpen();\n            },\n            get children() {\n              return createComponent(RestoreInfoModal, {\n                onBackClick: () => setInfoModalOpen(false)\n              });\n            }\n          }), createComponent(Match, {\n            get when() {\n              return selectedWallet();\n            },\n            get children() {\n              return [createComponent(Spacer, {}), createComponent(DesktopFeatureNotSupportModalStyled, {\n                get children() {\n                  return [createComponent(StyledIconButton$1, {\n                    icon: \"arrow\",\n                    onClick: () => setSelectedWallet(null)\n                  }), createComponent(TitleStyled, {\n                    translationKey: \"walletModal.featureNotSupported.disconnect.title\",\n                    children: \"Confirm Disconnect\"\n                  }), createComponent(DescriptionStyled, {\n                    translationKey: \"walletModal.featureNotSupported.disconnect.description\",\n                    get translationValues() {\n                      return {\n                        name: selectedWallet().name\n                      };\n                    },\n                    get children() {\n                      return [\"You will be disconnected from your current wallet and redirected to connect \", createMemo(() => {\n                        var _a2;\n                        return (_a2 = selectedWallet()) == null ? void 0 : _a2.name;\n                      }), \".\"];\n                    }\n                  }), createComponent(DisconnectButtonStyled, {\n                    onClick: () => handleDisconnect(),\n                    get children() {\n                      return createComponent(Translation, {\n                        translationKey: \"walletModal.featureNotSupported.disconnect.button\",\n                        children: \"Disconnect\"\n                      });\n                    }\n                  })];\n                }\n              })];\n            }\n          }), createComponent(Match, {\n            get when() {\n              return currentWalletVersionNotSupported();\n            },\n            get children() {\n              return [createComponent(H1Styled$2, {\n                get children() {\n                  return currentWalletName();\n                }\n              }), createComponent(ErrorIconStyled, {\n                size: \"s\"\n              }), createComponent(BodyTextStyled, {\n                translationKey: \"walletModal.featureNotSupported.version.description\",\n                get translationValues() {\n                  return {\n                    name: currentWalletName()\n                  };\n                },\n                get children() {\n                  return [\"Your current version of \", createMemo(() => currentWalletName()), \" or wallet contract type doesn't support the required features. Please update it to continue.\"];\n                }\n              }), createComponent(ButtonsContainerStyled, {\n                get children() {\n                  return [createComponent(Link, {\n                    get href() {\n                      return currentWalletUI().aboutUrl;\n                    },\n                    blank: true,\n                    get children() {\n                      return createComponent(Button, {\n                        get leftIcon() {\n                          return createComponent(LinkIcon, {});\n                        },\n                        get children() {\n                          return createComponent(Translation, {\n                            translationKey: \"walletModal.featureNotSupported.version.updateButton\",\n                            get translationValues() {\n                              return {\n                                name: currentWalletName()\n                              };\n                            },\n                            get children() {\n                              return [\"Update \", createMemo(() => currentWalletName())];\n                            }\n                          });\n                        }\n                      });\n                    }\n                  }), createComponent(Link, {\n                    href: \"https://tonkeeper.helpscoutdocs.com/article/102-w5\",\n                    blank: true,\n                    get children() {\n                      return createComponent(Button, {\n                        get leftIcon() {\n                          return createComponent(LinkIcon, {});\n                        },\n                        get children() {\n                          return createComponent(Translation, {\n                            translationKey: \"walletModal.featureNotSupported.version.aboutW5\",\n                            children: \"About W5\"\n                          });\n                        }\n                      });\n                    }\n                  })];\n                }\n              })];\n            }\n          }), createComponent(Match, {\n            when: true,\n            get children() {\n              return [createComponent(Spacer, {}), createComponent(ErrorIconStyled, {\n                size: \"s\"\n              }), createComponent(TitleStyled, {\n                translationKey: \"walletModal.featureNotSupported.wallet.title\",\n                get translationValues() {\n                  return {\n                    name: currentWalletName()\n                  };\n                },\n                get children() {\n                  return [createMemo(() => currentWalletName()), \" doesn\\u2019t support the requested\\xA0action\"];\n                }\n              }), createComponent(Spacer, {})];\n            }\n          })];\n        }\n      });\n    }\n  });\n};\nconst WalletsModal = () => {\n  const {\n    locale\n  } = useI18n()[1];\n  createEffect(() => locale(appState.language));\n  createEffect(() => {\n    if (getWalletsModalIsOpened()) {\n      updateIsMobile();\n    } else {\n      setSelectedWalletInfo(null);\n      setSelectedTab(\"universal\");\n      setInfoTab(false);\n    }\n  });\n  const connector = useContext(ConnectorContext);\n  const tonConnectUI = useContext(TonConnectUiContext);\n  const [fetchedWalletsList] = createResource(() => tonConnectUI.getWallets());\n  const [selectedWalletInfo, setSelectedWalletInfo] = createSignal(null);\n  const [selectedWalletError, setSelectedWalletError] = createSignal(null);\n  const [selectedTab, setSelectedTab] = createSignal(\"universal\");\n  const [infoTab, setInfoTab] = createSignal(false);\n  const walletsModalIsWalletNotSupportFeature = createMemo(() => {\n    const state = walletsModalState();\n    return \"type\" in state && state.type === \"wallet-not-support-feature\";\n  });\n  const walletsList = createMemo(() => {\n    var _a2;\n    if (fetchedWalletsList.state !== \"ready\") {\n      return null;\n    }\n    let walletsList2 = applyWalletsListConfiguration(fetchedWalletsList(), appState.walletsListConfiguration);\n    const injectedWallets = walletsList2.filter(_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyInjected);\n    const notInjectedWallets = walletsList2.filter((w) => !(0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyInjected)(w));\n    walletsList2 = (injectedWallets || []).concat(notInjectedWallets);\n    const preferredWalletAppName = appState.preferredWalletAppName;\n    const preferredWallet = walletsList2.find((item) => eqWalletName(item, preferredWalletAppName));\n    const someWalletsWithSameName = walletsList2.filter((item) => eqWalletName(item, preferredWalletAppName)).length >= 2;\n    if (preferredWalletAppName && preferredWallet && !someWalletsWithSameName) {\n      walletsList2 = [__spreadProps(__spreadValues({}, preferredWallet), {\n        isPreferred: true\n      })].concat(walletsList2.filter((item) => !eqWalletName(item, preferredWalletAppName)));\n    }\n    const atWallet = walletsList2.find((item) => eqWalletName(item, AT_WALLET_APP_NAME));\n    if (atWallet) {\n      walletsList2 = [atWallet].concat(walletsList2.filter((item) => !eqWalletName(item, AT_WALLET_APP_NAME)));\n    }\n    const walletsFeaturesRequested = (_a2 = tonConnectUI == null ? void 0 : tonConnectUI.walletsRequiredFeatures) != null ? _a2 : tonConnectUI == null ? void 0 : tonConnectUI.walletsPreferredFeatures;\n    const uiWallets = walletsList2.map((wallet) => {\n      var _a3;\n      return __spreadProps(__spreadValues({}, wallet), {\n        isSupportRequiredFeatures: walletsFeaturesRequested ? (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.checkRequiredWalletFeatures)((_a3 = wallet.features) != null ? _a3 : [], walletsFeaturesRequested) : true\n      });\n    });\n    return uiWallets;\n  });\n  const additionalRequestLoading = () => {\n    var _a2;\n    return ((_a2 = appState.connectRequestParameters) == null ? void 0 : _a2.state) === \"loading\";\n  };\n  const additionalRequest = createMemo(() => {\n    var _a2;\n    if (additionalRequestLoading()) {\n      return void 0;\n    }\n    return (_a2 = appState.connectRequestParameters) == null ? void 0 : _a2.value;\n  });\n  const onClose = (closeReason) => {\n    tonConnectUI.closeModal(closeReason);\n  };\n  const unsubscribe = connector.onStatusChange((wallet) => {\n    if (wallet) {\n      onClose(\"wallet-selected\");\n    }\n  }, (err) => {\n    var _a2;\n    if (err instanceof _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.WalletMissingRequiredFeaturesError) {\n      const errorAppName = err.cause.connectEvent.device.appName.toLowerCase();\n      const wallet = (_a2 = walletsList()) == null ? void 0 : _a2.find((w) => w.appName.toLowerCase() === errorAppName);\n      if (!wallet) {\n        throw new _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.TonConnectError(\"Wallet not found\");\n      }\n      const walletErrorType = wallet.isSupportRequiredFeatures ? \"missing-features\" : \"not-supported\";\n      setSelectedWalletError(walletErrorType);\n      setSelectedWalletInfo(wallet);\n    }\n  });\n  const onSelectAllWallets = () => {\n    setSelectedTab(\"all-wallets\");\n  };\n  const onSelectUniversal = () => {\n    setSelectedTab(\"universal\");\n  };\n  const onSelectWallet = (wallet) => {\n    setSelectedWalletInfo(wallet);\n    widgetController.openWalletsModal();\n  };\n  const clearSelectedWalletInfo = () => {\n    setSelectedWalletInfo(null);\n    setSelectedWalletError(null);\n  };\n  onCleanup(() => {\n    setSelectedWalletInfo(null);\n    setSelectedWalletError(null);\n    setInfoTab(false);\n  });\n  onCleanup(unsubscribe);\n  return createComponent(StyledModal, {\n    get opened() {\n      return getWalletsModalIsOpened();\n    },\n    get enableAndroidBackHandler() {\n      return appState.enableAndroidBackHandler;\n    },\n    onClose: () => onClose(\"action-cancelled\"),\n    onClickQuestion: () => setInfoTab((v) => !v),\n    get showFooter() {\n      return !walletsModalIsWalletNotSupportFeature();\n    },\n    \"data-tc-wallets-modal-container\": \"true\",\n    get children() {\n      return [createComponent(Show, {\n        get when() {\n          return infoTab();\n        },\n        get children() {\n          return createComponent(InfoModal, {\n            onBackClick: () => setInfoTab(false)\n          });\n        }\n      }), createComponent(Show, {\n        get when() {\n          return !infoTab();\n        },\n        get children() {\n          return [createComponent(Show, {\n            get when() {\n              return additionalRequestLoading() || !walletsList();\n            },\n            get children() {\n              return [createComponent(H1Styled$a, {\n                translationKey: \"walletModal.loading\",\n                children: \"Wallets list is loading\"\n              }), createComponent(LoaderContainerStyled, {\n                get children() {\n                  return createComponent(LoaderIcon, {\n                    size: \"m\"\n                  });\n                }\n              })];\n            }\n          }), createComponent(Show, {\n            get when() {\n              return createMemo(() => !!!additionalRequestLoading())() && walletsList();\n            },\n            get children() {\n              return createComponent(Switch, {\n                get children() {\n                  return [createComponent(Match, {\n                    get when() {\n                      return walletsModalIsWalletNotSupportFeature();\n                    },\n                    get children() {\n                      return createComponent(DesktopFeatureNotSupportModal, {\n                        get walletsList() {\n                          return walletsList();\n                        },\n                        get currentWallet() {\n                          return tonConnectUI == null ? void 0 : tonConnectUI.wallet;\n                        },\n                        onSelect: onSelectWallet,\n                        onSelectAllWallets,\n                        onDisconnect: () => connector.disconnect(),\n                        get walletsModalState() {\n                          return walletsModalState();\n                        },\n                        onClose: () => onClose(\"action-cancelled\")\n                      });\n                    }\n                  }), createComponent(Match, {\n                    get when() {\n                      return selectedWalletInfo();\n                    },\n                    get children() {\n                      return createComponent(Dynamic, {\n                        get component() {\n                          return isMobile() ? MobileConnectionModal : DesktopConnectionModal;\n                        },\n                        get wallet() {\n                          return selectedWalletInfo();\n                        },\n                        get additionalRequest() {\n                          return additionalRequest();\n                        },\n                        onBackClick: clearSelectedWalletInfo,\n                        get defaultError() {\n                          return selectedWalletError();\n                        }\n                      });\n                    }\n                  }), createComponent(Match, {\n                    get when() {\n                      return selectedTab() === \"universal\";\n                    },\n                    get children() {\n                      return createComponent(Dynamic, {\n                        get component() {\n                          return isMobile() ? MobileUniversalModal : DesktopUniversalModal;\n                        },\n                        onSelect: setSelectedWalletInfo,\n                        get walletsList() {\n                          return walletsList();\n                        },\n                        get additionalRequest() {\n                          return additionalRequest();\n                        },\n                        onSelectAllWallets\n                      });\n                    }\n                  }), createComponent(Match, {\n                    get when() {\n                      return selectedTab() === \"all-wallets\";\n                    },\n                    get children() {\n                      return createComponent(AllWalletsListModal, {\n                        get walletsList() {\n                          return walletsList();\n                        },\n                        get featureCheckMode() {\n                          return (tonConnectUI == null ? void 0 : tonConnectUI.walletsRequiredFeatures) ? \"strict\" : \"soft\";\n                        },\n                        onBack: onSelectUniversal,\n                        onSelect: setSelectedWalletInfo\n                      });\n                    }\n                  })];\n                }\n              });\n            }\n          })];\n        }\n      })];\n    }\n  });\n};\nconst ActionModalStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding-bottom: 8px;\n`;\nconst H1Styled = styled(H1)`\n    margin-top: 16px;\n`;\nconst TextStyled = styled(Text)`\n    font-weight: 510;\n    font-size: 16px;\n    line-height: 20px;\n    text-align: center;\n    max-width: 250px;\n\n    color: ${(props) => props.theme.colors.text.secondary};\n`;\nconst LoaderButtonStyled = styled(Button)`\n    min-width: 112px;\n    margin-top: 32px;\n`;\nconst LoaderIconStyled = styled(LoaderIcon)`\n    height: 16px;\n    width: 16px;\n`;\nconst ButtonStyled = styled(Button)`\n    margin-top: 32px;\n`;\nconst ActionModal = (props) => {\n  const dataAttrs = useDataAttributes(props);\n  const tonConnectUI = useContext(TonConnectUiContext);\n  const [firstClick, setFirstClick] = createSignal(true);\n  const [sent, setSent] = createSignal(false);\n  const [signed, setSigned] = createSignal(false);\n  const [canceled, setCanceled] = createSignal(false);\n  createEffect(() => {\n    const currentAction = action();\n    setSent(!!currentAction && (\"sent\" in currentAction && currentAction.sent || currentAction.name === \"transaction-sent\"));\n    setSigned(!!currentAction && (\"signed\" in currentAction && currentAction.signed || currentAction.name === \"data-signed\"));\n    setCanceled(!!currentAction && (currentAction.name === \"transaction-canceled\" || currentAction.name === \"sign-data-canceled\"));\n  });\n  let universalLink;\n  if ((tonConnectUI == null ? void 0 : tonConnectUI.wallet) && \"universalLink\" in tonConnectUI.wallet && (tonConnectUI.wallet.openMethod === \"universal-link\" || (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isTelegramUrl)(tonConnectUI.wallet.universalLink) && isInTMA())) {\n    universalLink = tonConnectUI.wallet.universalLink;\n  }\n  let deepLink;\n  if ((tonConnectUI == null ? void 0 : tonConnectUI.wallet) && \"deepLink\" in tonConnectUI.wallet && (tonConnectUI.wallet.openMethod === \"custom-deeplink\" || (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isTelegramUrl)(tonConnectUI.wallet.deepLink) && isInTMA())) {\n    deepLink = tonConnectUI.wallet.deepLink;\n  }\n  const onOpenWallet = () => {\n    const currentAction = action();\n    const returnStrategy = \"returnStrategy\" in currentAction ? currentAction.returnStrategy : appState.returnStrategy;\n    const forceRedirect = !firstClick();\n    setFirstClick(false);\n    if ((0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isTelegramUrl)(universalLink)) {\n      redirectToTelegram(universalLink, {\n        returnStrategy,\n        twaReturnUrl: \"twaReturnUrl\" in currentAction ? currentAction.twaReturnUrl : appState.twaReturnUrl,\n        forceRedirect\n      });\n    } else {\n      redirectToWallet(universalLink, deepLink, {\n        returnStrategy,\n        forceRedirect\n      }, () => {\n      });\n    }\n  };\n  return createComponent(ActionModalStyled, mergeProps(dataAttrs, {\n    get children() {\n      return [createMemo(() => props.icon), createComponent(H1Styled, {\n        get translationKey() {\n          return props.headerTranslationKey;\n        },\n        get translationValues() {\n          return props.headerTranslationValues;\n        }\n      }), createComponent(TextStyled, {\n        get translationKey() {\n          return props.textTranslationKey;\n        },\n        get translationValues() {\n          return props.textTranslationValues;\n        }\n      }), createComponent(Show, {\n        get when() {\n          return !sent() && !signed() && !canceled() && (props.showButton === \"open-wallet\" && universalLink || props.showButton !== \"open-wallet\");\n        },\n        get children() {\n          return createComponent(LoaderButtonStyled, {\n            disabled: true,\n            \"data-tc-connect-button-loading\": \"true\",\n            get children() {\n              return createComponent(LoaderIconStyled, {});\n            }\n          });\n        }\n      }), createComponent(Show, {\n        get when() {\n          return sent() || signed();\n        },\n        get children() {\n          return [createComponent(Show, {\n            get when() {\n              return props.showButton !== \"open-wallet\";\n            },\n            get children() {\n              return createComponent(ButtonStyled, {\n                onClick: () => props.onClose(),\n                get children() {\n                  return createComponent(Translation, {\n                    translationKey: \"common.close\",\n                    children: \"Close\"\n                  });\n                }\n              });\n            }\n          }), createComponent(Show, {\n            get when() {\n              return props.showButton === \"open-wallet\" && universalLink;\n            },\n            get children() {\n              return createComponent(ButtonStyled, {\n                onClick: onOpenWallet,\n                get children() {\n                  return createComponent(Translation, {\n                    translationKey: \"common.openWallet\",\n                    children: \"Open wallet\"\n                  });\n                }\n              });\n            }\n          })];\n        }\n      })];\n    }\n  }));\n};\nconst ConfirmTransactionModal = (props) => {\n  const tonConnectUI = useContext(TonConnectUiContext);\n  const [t2] = useI18n();\n  const name = () => tonConnectUI.wallet && \"name\" in tonConnectUI.wallet ? tonConnectUI.wallet.name : t2(\"common.yourWallet\", {}, \"Your wallet\");\n  return createComponent(ActionModal, {\n    headerTranslationKey: \"actionModal.confirmTransaction.header\",\n    get headerTranslationValues() {\n      return {\n        name: name()\n      };\n    },\n    textTranslationKey: \"actionModal.confirmTransaction.text\",\n    get icon() {\n      return createComponent(LoaderIcon, {\n        size: \"m\"\n      });\n    },\n    onClose: () => props.onClose(),\n    showButton: \"open-wallet\",\n    \"data-tc-confirm-modal\": \"true\"\n  });\n};\nconst TransactionCanceledModal = (props) => {\n  return createComponent(ActionModal, {\n    headerTranslationKey: \"actionModal.transactionCanceled.header\",\n    textTranslationKey: \"actionModal.transactionCanceled.text\",\n    get icon() {\n      return createComponent(ErrorIcon, {\n        size: \"m\"\n      });\n    },\n    onClose: () => props.onClose(),\n    \"data-tc-transaction-canceled-modal\": \"true\"\n  });\n};\nconst TransactionSentModal = (props) => {\n  return createComponent(ActionModal, {\n    headerTranslationKey: \"actionModal.transactionSent.header\",\n    textTranslationKey: \"actionModal.transactionSent.text\",\n    get icon() {\n      return createComponent(SuccessIcon, {\n        size: \"m\"\n      });\n    },\n    showButton: \"open-wallet\",\n    onClose: () => props.onClose(),\n    \"data-tc-transaction-sent-modal\": \"true\"\n  });\n};\nconst ConfirmSignDataModal = (props) => {\n  const tonConnectUI = useContext(TonConnectUiContext);\n  const [t2] = useI18n();\n  const name = () => tonConnectUI.wallet && \"name\" in tonConnectUI.wallet ? tonConnectUI.wallet.name : t2(\"common.yourWallet\", {}, \"Your wallet\");\n  return createComponent(ActionModal, {\n    headerTranslationKey: \"actionModal.signData.header\",\n    get headerTranslationValues() {\n      return {\n        name: name()\n      };\n    },\n    textTranslationKey: \"actionModal.signData.text\",\n    get icon() {\n      return createComponent(LoaderIcon, {\n        size: \"m\"\n      });\n    },\n    onClose: () => props.onClose(),\n    showButton: \"open-wallet\",\n    \"data-tc-sign-data-confirm-modal\": \"true\"\n  });\n};\nconst SignDataCanceledModal = (props) => {\n  return createComponent(ActionModal, {\n    headerTranslationKey: \"actionModal.signDataCanceled.header\",\n    get icon() {\n      return createComponent(ErrorIcon, {\n        size: \"m\"\n      });\n    },\n    onClose: () => props.onClose(),\n    \"data-tc-sign-data-canceled-modal\": \"true\"\n  });\n};\nconst DataSignedModal = (props) => {\n  return createComponent(ActionModal, {\n    headerTranslationKey: \"actionModal.dataSigned.header\",\n    get icon() {\n      return createComponent(SuccessIcon, {\n        size: \"m\"\n      });\n    },\n    onClose: () => props.onClose(),\n    \"data-tc-data-signed-modal\": \"true\"\n  });\n};\nconst ActionsModal = () => {\n  return createComponent(Modal, {\n    get opened() {\n      var _a2;\n      return createMemo(() => action() !== null)() && ((_a2 = action()) == null ? void 0 : _a2.openModal) === true;\n    },\n    get enableAndroidBackHandler() {\n      return appState.enableAndroidBackHandler;\n    },\n    onClose: () => setAction(null),\n    showFooter: false,\n    \"data-tc-actions-modal-container\": \"true\",\n    get children() {\n      return createComponent(Switch, {\n        get children() {\n          return [createComponent(Match, {\n            get when() {\n              return action().name === \"transaction-sent\";\n            },\n            get children() {\n              return createComponent(TransactionSentModal, {\n                onClose: () => setAction(null)\n              });\n            }\n          }), createComponent(Match, {\n            get when() {\n              return action().name === \"transaction-canceled\";\n            },\n            get children() {\n              return createComponent(TransactionCanceledModal, {\n                onClose: () => setAction(null)\n              });\n            }\n          }), createComponent(Match, {\n            get when() {\n              return action().name === \"confirm-transaction\";\n            },\n            get children() {\n              return createComponent(ConfirmTransactionModal, {\n                onClose: () => setAction(null)\n              });\n            }\n          }), createComponent(Match, {\n            get when() {\n              return action().name === \"data-signed\";\n            },\n            get children() {\n              return createComponent(DataSignedModal, {\n                onClose: () => setAction(null)\n              });\n            }\n          }), createComponent(Match, {\n            get when() {\n              return action().name === \"sign-data-canceled\";\n            },\n            get children() {\n              return createComponent(SignDataCanceledModal, {\n                onClose: () => setAction(null)\n              });\n            }\n          }), createComponent(Match, {\n            get when() {\n              return action().name === \"confirm-sign-data\";\n            },\n            get children() {\n              return createComponent(ConfirmSignDataModal, {\n                onClose: () => setAction(null)\n              });\n            }\n          })];\n        }\n      });\n    }\n  });\n};\nconst SingleWalletModal = () => {\n  const {\n    locale\n  } = useI18n()[1];\n  createEffect(() => locale(appState.language));\n  createEffect(() => {\n    if (getSingleWalletModalIsOpened()) {\n      updateIsMobile();\n    }\n  });\n  const connector = useContext(ConnectorContext);\n  const tonConnectUI = useContext(TonConnectUiContext);\n  const [infoTab, setInfoTab] = createSignal(false);\n  const additionalRequestLoading = () => {\n    var _a2;\n    return ((_a2 = appState.connectRequestParameters) == null ? void 0 : _a2.state) === \"loading\";\n  };\n  const additionalRequest = createMemo(() => {\n    var _a2;\n    if (additionalRequestLoading()) {\n      return void 0;\n    }\n    return (_a2 = appState.connectRequestParameters) == null ? void 0 : _a2.value;\n  });\n  const onClose = (closeReason) => {\n    tonConnectUI.closeSingleWalletModal(closeReason);\n  };\n  const unsubscribe = connector.onStatusChange((wallet) => {\n    if (wallet) {\n      onClose(\"wallet-selected\");\n    }\n  });\n  onCleanup(unsubscribe);\n  onCleanup(() => {\n    setInfoTab(false);\n  });\n  return createComponent(StyledModal, {\n    get opened() {\n      return getSingleWalletModalIsOpened();\n    },\n    get enableAndroidBackHandler() {\n      return appState.enableAndroidBackHandler;\n    },\n    onClose: () => onClose(\"action-cancelled\"),\n    onClickQuestion: () => setInfoTab((v) => !v),\n    showFooter: true,\n    \"data-tc-wallets-modal-container\": \"true\",\n    get children() {\n      return [createComponent(Show, {\n        get when() {\n          return infoTab();\n        },\n        get children() {\n          return createComponent(InfoModal, {\n            onBackClick: () => setInfoTab(false)\n          });\n        }\n      }), createComponent(Show, {\n        get when() {\n          return !infoTab();\n        },\n        get children() {\n          return [createComponent(Show, {\n            get when() {\n              return additionalRequestLoading();\n            },\n            get children() {\n              return [createComponent(H1Styled$a, {\n                translationKey: \"walletModal.loading\",\n                children: \"Wallets list is loading\"\n              }), createComponent(LoaderContainerStyled, {\n                get children() {\n                  return createComponent(LoaderIcon, {\n                    size: \"m\"\n                  });\n                }\n              })];\n            }\n          }), createComponent(Show, {\n            get when() {\n              return !additionalRequestLoading();\n            },\n            get children() {\n              return createComponent(Dynamic, {\n                get component() {\n                  return isMobile() ? MobileConnectionModal : DesktopConnectionModal;\n                },\n                get wallet() {\n                  return getSingleWalletModalWalletInfo();\n                },\n                get additionalRequest() {\n                  return additionalRequest();\n                },\n                onBackClick: () => {\n                },\n                backDisabled: true\n              });\n            }\n          })];\n        }\n      })];\n    }\n  });\n};\nconst App = (props) => {\n  const translations = createI18nContext(i18nDictionary, appState.language);\n  defineStylesRoot();\n  fixMobileSafariActiveTransition();\n  return createComponent(I18nContext.Provider, {\n    value: translations,\n    get children() {\n      return createComponent(TonConnectUiContext.Provider, {\n        get value() {\n          return props.tonConnectUI;\n        },\n        get children() {\n          return createComponent(ConnectorContext.Provider, {\n            get value() {\n              return appState.connector;\n            },\n            get children() {\n              return [createComponent(GlobalStyles, {}), createComponent(ThemeProvider, {\n                theme: themeState,\n                get children() {\n                  return [createComponent(Show, {\n                    get when() {\n                      return appState.buttonRootId;\n                    },\n                    get children() {\n                      return createComponent(Portal, {\n                        get mount() {\n                          return document.getElementById(appState.buttonRootId);\n                        },\n                        get children() {\n                          return createComponent(AccountButton, {});\n                        }\n                      });\n                    }\n                  }), createComponent(Dynamic, {\n                    component: globalStylesTag,\n                    get children() {\n                      return [createComponent(WalletsModal, {}), createComponent(SingleWalletModal, {}), createComponent(ActionsModal, {})];\n                    }\n                  })];\n                }\n              })];\n            }\n          });\n        }\n      });\n    }\n  });\n};\nconst widgetController = {\n  openWalletsModal: () => void setTimeout(() => setWalletsModalState({\n    status: \"opened\",\n    closeReason: null\n  })),\n  closeWalletsModal: (reason) => void setTimeout(() => setWalletsModalState({\n    status: \"closed\",\n    closeReason: reason\n  })),\n  openSingleWalletModal: (walletInfo) => {\n    void setTimeout(() => setSingleWalletModalState({\n      status: \"opened\",\n      closeReason: null,\n      walletInfo\n    }));\n  },\n  closeSingleWalletModal: (reason) => void setTimeout(() => setSingleWalletModalState({\n    status: \"closed\",\n    closeReason: reason\n  })),\n  openWalletNotSupportFeatureModal: (cause) => void setTimeout(() => setWalletsModalState({\n    status: \"opened\",\n    closeReason: null,\n    type: \"wallet-not-support-feature\",\n    requiredFeature: cause.requiredFeature\n  })),\n  setAction: (action2) => void setTimeout(() => setAction(action2)),\n  clearAction: () => void setTimeout(() => setAction(null)),\n  getSelectedWalletInfo: () => lastSelectedWalletInfo(),\n  removeSelectedWalletInfo: () => setLastSelectedWalletInfo(null),\n  renderApp: (root, tonConnectUI) => render(() => createComponent(App, {\n    tonConnectUI\n  }), document.getElementById(root))\n};\nclass WalletsModalManager {\n  constructor(options) {\n    __publicField(this, \"connector\");\n    __publicField(this, \"setConnectRequestParametersCallback\");\n    __publicField(this, \"consumers\", []);\n    __publicField(this, \"tracker\");\n    __publicField(this, \"state\", walletsModalState());\n    this.connector = options.connector;\n    this.tracker = options.tracker;\n    this.setConnectRequestParametersCallback = options.setConnectRequestParametersCallback;\n    createEffect(() => {\n      const state = walletsModalState();\n      this.state = state;\n      this.consumers.forEach((consumer) => consumer(state));\n    });\n  }\n  open() {\n    return __async(this, null, function* () {\n      this.tracker.trackConnectionStarted();\n      const walletsList = yield this.connector.getWallets();\n      const embeddedWallet = walletsList.find(_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyEmbedded);\n      if (embeddedWallet) {\n        return this.connectEmbeddedWallet(embeddedWallet);\n      } else {\n        return this.openWalletsModal();\n      }\n    });\n  }\n  close(reason = \"action-cancelled\") {\n    if (reason === \"action-cancelled\") {\n      this.tracker.trackConnectionError(\"Connection was cancelled\");\n    }\n    widgetController.closeWalletsModal(reason);\n  }\n  onStateChange(onChange) {\n    this.consumers.push(onChange);\n    return () => {\n      this.consumers = this.consumers.filter((consumer) => consumer !== onChange);\n    };\n  }\n  connectEmbeddedWallet(embeddedWallet) {\n    const connect = (parameters) => {\n      setLastSelectedWalletInfo(embeddedWallet);\n      this.connector.connect({ jsBridgeKey: embeddedWallet.jsBridgeKey }, parameters);\n    };\n    const additionalRequest = appState.connectRequestParameters;\n    if ((additionalRequest == null ? void 0 : additionalRequest.state) === \"loading\") {\n      this.setConnectRequestParametersCallback(connect);\n    } else {\n      connect(additionalRequest == null ? void 0 : additionalRequest.value);\n    }\n  }\n  openWalletsModal() {\n    return __async(this, null, function* () {\n      if (isInTMA()) {\n        sendExpand();\n      }\n      widgetController.openWalletsModal();\n      return new Promise((resolve) => {\n        const unsubscribe = this.onStateChange((state) => {\n          const { status } = state;\n          if (status === \"opened\") {\n            unsubscribe();\n            resolve();\n          }\n        });\n      });\n    });\n  }\n}\nclass TransactionModalManager {\n  constructor(options) {\n    __publicField(this, \"connector\");\n    __publicField(this, \"consumers\", []);\n    this.connector = options.connector;\n    createEffect(() => {\n      const currentAction = action();\n      this.consumers.forEach((consumer) => consumer(currentAction));\n    });\n  }\n  onStateChange(consumer) {\n    this.consumers.push(consumer);\n    return () => {\n      this.consumers = this.consumers.filter((c2) => c2 !== consumer);\n    };\n  }\n}\nclass SingleWalletModalManager {\n  constructor(options) {\n    __publicField(this, \"connector\");\n    __publicField(this, \"setConnectRequestParametersCallback\");\n    __publicField(this, \"consumers\", []);\n    __publicField(this, \"tracker\");\n    __publicField(this, \"state\", singleWalletModalState());\n    this.connector = options.connector;\n    this.tracker = options.tracker;\n    this.setConnectRequestParametersCallback = options.setConnectRequestParametersCallback;\n    createEffect(() => {\n      const state = singleWalletModalState();\n      this.state = state;\n      this.consumers.forEach((consumer) => consumer(state));\n    });\n  }\n  open(wallet) {\n    return __async(this, null, function* () {\n      this.tracker.trackConnectionStarted();\n      const fetchedWalletsList = yield this.connector.getWallets();\n      const walletsList = applyWalletsListConfiguration(\n        fetchedWalletsList,\n        appState.walletsListConfiguration\n      );\n      const embeddedWallet = walletsList.find(_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyEmbedded);\n      const isEmbeddedWalletExist = !!embeddedWallet;\n      if (isEmbeddedWalletExist) {\n        return this.connectEmbeddedWallet(embeddedWallet);\n      }\n      const externalWallets = walletsList.filter(_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoRemote);\n      const externalWallet = externalWallets.find((walletInfo) => eqWalletName(walletInfo, wallet));\n      const isExternalWalletExist = !!externalWallet;\n      if (isExternalWalletExist) {\n        return this.openSingleWalletModal(externalWallet);\n      }\n      const error = `Trying to open modal window with unknown wallet \"${wallet}\".`;\n      this.tracker.trackConnectionError(error);\n      throw new TonConnectUIError(error);\n    });\n  }\n  close(reason = \"action-cancelled\") {\n    if (reason === \"action-cancelled\") {\n      this.tracker.trackConnectionError(\"Connection was cancelled\");\n    }\n    widgetController.closeSingleWalletModal(\"action-cancelled\");\n  }\n  onStateChange(onChange) {\n    this.consumers.push(onChange);\n    return () => {\n      this.consumers = this.consumers.filter((consumer) => consumer !== onChange);\n    };\n  }\n  connectEmbeddedWallet(embeddedWallet) {\n    const connect = (parameters) => {\n      setLastSelectedWalletInfo(embeddedWallet);\n      this.connector.connect({ jsBridgeKey: embeddedWallet.jsBridgeKey }, parameters);\n    };\n    const additionalRequest = appState.connectRequestParameters;\n    if ((additionalRequest == null ? void 0 : additionalRequest.state) === \"loading\") {\n      this.setConnectRequestParametersCallback(connect);\n    } else {\n      connect(additionalRequest == null ? void 0 : additionalRequest.value);\n    }\n  }\n  openSingleWalletModal(wallet) {\n    return __async(this, null, function* () {\n      if (isInTMA()) {\n        sendExpand();\n      }\n      widgetController.openSingleWalletModal(wallet);\n      return new Promise((resolve) => {\n        const unsubscribe = this.onStateChange((state) => {\n          const { status } = state;\n          if (status === \"opened\") {\n            unsubscribe();\n            resolve();\n          }\n        });\n      });\n    });\n  }\n}\nclass TonConnectUITracker {\n  constructor(options) {\n    __publicField(this, \"eventPrefix\", \"ton-connect-ui-\");\n    __publicField(this, \"tonConnectUiVersion\");\n    __publicField(this, \"tonConnectSdkVersion\", null);\n    __publicField(this, \"eventDispatcher\");\n    var _a2;\n    this.eventDispatcher = (_a2 = options == null ? void 0 : options.eventDispatcher) != null ? _a2 : new _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.BrowserEventDispatcher();\n    this.tonConnectUiVersion = options.tonConnectUiVersion;\n    this.init().catch();\n  }\n  get version() {\n    return (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createVersionInfo)({\n      ton_connect_sdk_lib: this.tonConnectSdkVersion,\n      ton_connect_ui_lib: this.tonConnectUiVersion\n    });\n  }\n  init() {\n    return __async(this, null, function* () {\n      try {\n        yield this.setRequestVersionHandler();\n        this.tonConnectSdkVersion = yield this.requestTonConnectSdkVersion();\n      } catch (e2) {\n      }\n    });\n  }\n  setRequestVersionHandler() {\n    return __async(this, null, function* () {\n      yield this.eventDispatcher.addEventListener(\"ton-connect-ui-request-version\", () => __async(this, null, function* () {\n        yield this.eventDispatcher.dispatchEvent(\n          \"ton-connect-ui-response-version\",\n          (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createResponseVersionEvent)(this.tonConnectUiVersion)\n        );\n      }));\n    });\n  }\n  requestTonConnectSdkVersion() {\n    return __async(this, null, function* () {\n      return new Promise((resolve, reject) => __async(this, null, function* () {\n        try {\n          yield this.eventDispatcher.addEventListener(\n            \"ton-connect-response-version\",\n            (event) => {\n              resolve(event.detail.version);\n            },\n            { once: true }\n          );\n          yield this.eventDispatcher.dispatchEvent(\n            \"ton-connect-request-version\",\n            (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createRequestVersionEvent)()\n          );\n        } catch (e2) {\n          reject(e2);\n        }\n      }));\n    });\n  }\n  dispatchUserActionEvent(eventDetails) {\n    var _a2;\n    try {\n      (_a2 = this.eventDispatcher) == null ? void 0 : _a2.dispatchEvent(`${this.eventPrefix}${eventDetails.type}`, eventDetails).catch();\n    } catch (e2) {\n    }\n  }\n  trackConnectionStarted(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionStartedEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackConnectionCompleted(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionCompletedEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackConnectionError(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionErrorEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackConnectionRestoringStarted(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionRestoringStartedEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackConnectionRestoringCompleted(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionRestoringCompletedEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackConnectionRestoringError(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionRestoringErrorEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackDisconnection(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createDisconnectionEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackTransactionSentForSignature(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createTransactionSentForSignatureEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackTransactionSigned(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createTransactionSignedEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackTransactionSigningFailed(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createTransactionSigningFailedEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackDataSentForSignature(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createDataSentForSignatureEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackDataSigned(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createDataSignedEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackDataSigningFailed(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createDataSigningFailedEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n}\nconst tonConnectUiVersion = \"2.2.0\";\nclass TonConnectUI {\n  constructor(options) {\n    __publicField(this, \"walletInfoStorage\", new WalletInfoStorage());\n    __publicField(this, \"preferredWalletStorage\", new PreferredWalletStorage());\n    __publicField(this, \"tracker\");\n    __publicField(this, \"walletInfo\", null);\n    __publicField(this, \"systemThemeChangeUnsubscribe\", null);\n    __publicField(this, \"actionsConfiguration\");\n    __publicField(this, \"walletsList\");\n    __publicField(this, \"_walletsRequiredFeatures\");\n    __publicField(this, \"_walletsPreferredFeatures\");\n    __publicField(this, \"connectRequestParametersCallback\");\n    __publicField(this, \"connector\");\n    __publicField(this, \"modal\");\n    __publicField(this, \"singleWalletModal\");\n    __publicField(this, \"transactionModal\");\n    __publicField(this, \"connectionRestored\", Promise.resolve(false));\n    if (options && \"connector\" in options && options.connector) {\n      this.connector = options.connector;\n    } else if (options && \"manifestUrl\" in options && options.manifestUrl) {\n      this.connector = new _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.TonConnect({\n        manifestUrl: options.manifestUrl,\n        eventDispatcher: options.eventDispatcher,\n        walletsRequiredFeatures: options.walletsRequiredFeatures\n      });\n    } else {\n      throw new TonConnectUIError(\n        \"You have to specify a `manifestUrl` or a `connector` in the options.\"\n      );\n    }\n    this.tracker = new TonConnectUITracker({\n      eventDispatcher: options == null ? void 0 : options.eventDispatcher,\n      tonConnectUiVersion\n    });\n    this.modal = new WalletsModalManager({\n      connector: this.connector,\n      tracker: this.tracker,\n      setConnectRequestParametersCallback: (callback) => {\n        this.connectRequestParametersCallback = callback;\n      }\n    });\n    this.singleWalletModal = new SingleWalletModalManager({\n      connector: this.connector,\n      tracker: this.tracker,\n      setConnectRequestParametersCallback: (callback) => {\n        this.connectRequestParametersCallback = callback;\n      }\n    });\n    this.transactionModal = new TransactionModalManager({\n      connector: this.connector\n    });\n    this._walletsRequiredFeatures = options.walletsRequiredFeatures;\n    this._walletsPreferredFeatures = options.walletsPreferredFeatures;\n    this.walletsList = this.getWallets();\n    this.walletsList.then((list) => preloadImages(uniq(list.map((item) => item.imageUrl))));\n    const rootId = this.normalizeWidgetRoot(options == null ? void 0 : options.widgetRootId);\n    this.subscribeToWalletChange();\n    if ((options == null ? void 0 : options.restoreConnection) !== false) {\n      this.connectionRestored = createMacrotaskAsync(() => __async(this, null, function* () {\n        this.tracker.trackConnectionRestoringStarted();\n        yield this.connector.restoreConnection();\n        if (!this.connector.connected) {\n          this.tracker.trackConnectionRestoringError(\"Connection was not restored\");\n          this.walletInfoStorage.removeWalletInfo();\n        } else {\n          this.tracker.trackConnectionRestoringCompleted(this.wallet);\n        }\n        return this.connector.connected;\n      }));\n    }\n    this.uiOptions = mergeOptions(options, { uiPreferences: { theme: \"SYSTEM\" } });\n    const preferredWalletName = this.preferredWalletStorage.getPreferredWalletAppName();\n    setAppState({\n      connector: this.connector,\n      preferredWalletAppName: preferredWalletName\n    });\n    widgetController.renderApp(rootId, this);\n  }\n  static getWallets() {\n    return _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.TonConnect.getWallets();\n  }\n  get walletsRequiredFeatures() {\n    return this._walletsRequiredFeatures;\n  }\n  get walletsPreferredFeatures() {\n    return this._walletsPreferredFeatures;\n  }\n  get connected() {\n    return this.connector.connected;\n  }\n  get account() {\n    return this.connector.account;\n  }\n  get wallet() {\n    if (!this.connector.wallet) {\n      return null;\n    }\n    return __spreadValues(__spreadValues({}, this.connector.wallet), this.walletInfo);\n  }\n  set uiOptions(options) {\n    var _a2, _b2, _c2, _d2, _e2;\n    this.checkButtonRootExist(options.buttonRootId);\n    this.actionsConfiguration = options.actionsConfiguration;\n    if (\"walletsRequiredFeatures\" in options) {\n      this._walletsRequiredFeatures = options.walletsRequiredFeatures;\n    }\n    if (\"walletsPreferredFeatures\" in options) {\n      this._walletsPreferredFeatures = options.walletsPreferredFeatures;\n    }\n    if ((_a2 = options.uiPreferences) == null ? void 0 : _a2.theme) {\n      if (((_b2 = options.uiPreferences) == null ? void 0 : _b2.theme) !== \"SYSTEM\") {\n        (_c2 = this.systemThemeChangeUnsubscribe) == null ? void 0 : _c2.call(this);\n        setTheme(options.uiPreferences.theme, options.uiPreferences.colorsSet);\n      } else {\n        setTheme(getSystemTheme(), options.uiPreferences.colorsSet);\n        if (!this.systemThemeChangeUnsubscribe) {\n          this.systemThemeChangeUnsubscribe = subscribeToThemeChange(setTheme);\n        }\n      }\n    } else {\n      if ((_d2 = options.uiPreferences) == null ? void 0 : _d2.colorsSet) {\n        setColors(options.uiPreferences.colorsSet);\n      }\n    }\n    if ((_e2 = options.uiPreferences) == null ? void 0 : _e2.borderRadius) {\n      setBorderRadius(options.uiPreferences.borderRadius);\n    }\n    setAppState((state) => {\n      var _a3, _b3;\n      const merged = mergeOptions(\n        __spreadValues(__spreadValues(__spreadValues(__spreadValues({}, options.language && { language: options.language }), !!((_a3 = options.actionsConfiguration) == null ? void 0 : _a3.returnStrategy) && {\n          returnStrategy: options.actionsConfiguration.returnStrategy\n        }), !!((_b3 = options.actionsConfiguration) == null ? void 0 : _b3.twaReturnUrl) && {\n          twaReturnUrl: options.actionsConfiguration.twaReturnUrl\n        }), !!options.walletsListConfiguration && {\n          walletsListConfiguration: options.walletsListConfiguration\n        }),\n        unwrap(state)\n      );\n      if (options.buttonRootId !== void 0) {\n        merged.buttonRootId = options.buttonRootId;\n      }\n      if (options.enableAndroidBackHandler !== void 0) {\n        merged.enableAndroidBackHandler = options.enableAndroidBackHandler;\n      }\n      return merged;\n    });\n  }\n  setConnectRequestParameters(connectRequestParameters) {\n    var _a2;\n    setAppState({ connectRequestParameters });\n    if ((connectRequestParameters == null ? void 0 : connectRequestParameters.state) === \"ready\" || !connectRequestParameters) {\n      (_a2 = this.connectRequestParametersCallback) == null ? void 0 : _a2.call(this, connectRequestParameters == null ? void 0 : connectRequestParameters.value);\n    }\n  }\n  getWallets() {\n    return __async(this, null, function* () {\n      return this.connector.getWallets();\n    });\n  }\n  onStatusChange(callback, errorsHandler) {\n    return this.connector.onStatusChange((wallet) => __async(this, null, function* () {\n      if (wallet) {\n        const lastSelectedWalletInfo2 = yield this.getSelectedWalletInfo(wallet);\n        callback(__spreadValues(__spreadValues({}, wallet), lastSelectedWalletInfo2 || this.walletInfoStorage.getWalletInfo()));\n      } else {\n        callback(wallet);\n      }\n    }), errorsHandler);\n  }\n  openModal() {\n    return __async(this, null, function* () {\n      return this.modal.open();\n    });\n  }\n  closeModal(reason) {\n    this.modal.close(reason);\n  }\n  onModalStateChange(onChange) {\n    return this.modal.onStateChange(onChange);\n  }\n  get modalState() {\n    return this.modal.state;\n  }\n  openSingleWalletModal(wallet) {\n    return __async(this, null, function* () {\n      return this.singleWalletModal.open(wallet);\n    });\n  }\n  closeSingleWalletModal(closeReason) {\n    this.singleWalletModal.close(closeReason);\n  }\n  onSingleWalletModalStateChange(onChange) {\n    return this.singleWalletModal.onStateChange(onChange);\n  }\n  get singleWalletModalState() {\n    return this.singleWalletModal.state;\n  }\n  connectWallet() {\n    return __async(this, null, function* () {\n      const walletsList = yield this.getWallets();\n      const embeddedWallet = walletsList.find(_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyEmbedded);\n      if (embeddedWallet) {\n        return yield this.connectEmbeddedWallet(embeddedWallet);\n      } else {\n        return yield this.connectExternalWallet();\n      }\n    });\n  }\n  disconnect() {\n    this.tracker.trackDisconnection(this.wallet, \"dapp\");\n    widgetController.clearAction();\n    widgetController.removeSelectedWalletInfo();\n    this.walletInfoStorage.removeWalletInfo();\n    return this.connector.disconnect();\n  }\n  sendTransaction(tx, options) {\n    return __async(this, null, function* () {\n      this.tracker.trackTransactionSentForSignature(this.wallet, tx);\n      if (!this.connected) {\n        this.tracker.trackTransactionSigningFailed(this.wallet, tx, \"Wallet was not connected\");\n        throw new TonConnectUIError(\"Connect wallet to send a transaction.\");\n      }\n      if (isInTMA()) {\n        sendExpand();\n      }\n      const { notifications: notifications2, modals, returnStrategy, twaReturnUrl } = this.getModalsAndNotificationsConfiguration(options);\n      widgetController.setAction({\n        name: \"confirm-transaction\",\n        showNotification: notifications2.includes(\"before\"),\n        openModal: modals.includes(\"before\"),\n        sent: false\n      });\n      const abortController = new AbortController();\n      const onRequestSent = () => {\n        if (abortController.signal.aborted) {\n          return;\n        }\n        widgetController.setAction({\n          name: \"confirm-transaction\",\n          showNotification: notifications2.includes(\"before\"),\n          openModal: modals.includes(\"before\"),\n          sent: true\n        });\n        this.redirectAfterRequestSent({\n          returnStrategy,\n          twaReturnUrl\n        });\n      };\n      const unsubscribe = this.onTransactionModalStateChange((action2) => {\n        if (action2 == null ? void 0 : action2.openModal) {\n          return;\n        }\n        unsubscribe();\n        if (!action2) {\n          abortController.abort();\n        }\n      });\n      try {\n        const result = yield this.waitForSendTransaction(\n          {\n            transaction: tx,\n            signal: abortController.signal\n          },\n          onRequestSent\n        );\n        this.tracker.trackTransactionSigned(this.wallet, tx, result);\n        widgetController.setAction({\n          name: \"transaction-sent\",\n          showNotification: notifications2.includes(\"success\"),\n          openModal: modals.includes(\"success\")\n        });\n        return result;\n      } catch (e2) {\n        if (e2 instanceof _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.WalletNotSupportFeatureError) {\n          widgetController.clearAction();\n          widgetController.openWalletNotSupportFeatureModal(e2.cause);\n          throw e2;\n        }\n        widgetController.setAction({\n          name: \"transaction-canceled\",\n          showNotification: notifications2.includes(\"error\"),\n          openModal: modals.includes(\"error\")\n        });\n        if (e2 instanceof _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.TonConnectError) {\n          throw e2;\n        } else {\n          console.error(e2);\n          throw new TonConnectUIError(\"Unhandled error:\" + e2);\n        }\n      } finally {\n        unsubscribe();\n      }\n    });\n  }\n  signData(data) {\n    return __async(this, null, function* () {\n      this.tracker.trackDataSentForSignature(this.wallet, data);\n      if (!this.connected) {\n        this.tracker.trackDataSigningFailed(this.wallet, data, \"Wallet was not connected\");\n        throw new TonConnectUIError(\"Connect wallet to send a transaction.\");\n      }\n      if (isInTMA()) {\n        sendExpand();\n      }\n      const { notifications: notifications2, modals, returnStrategy, twaReturnUrl } = this.getModalsAndNotificationsConfiguration();\n      widgetController.setAction({\n        name: \"confirm-sign-data\",\n        showNotification: notifications2.includes(\"before\"),\n        openModal: modals.includes(\"before\"),\n        signed: false\n      });\n      const abortController = new AbortController();\n      const onRequestSent = () => {\n        if (abortController.signal.aborted) {\n          return;\n        }\n        widgetController.setAction({\n          name: \"confirm-sign-data\",\n          showNotification: notifications2.includes(\"before\"),\n          openModal: modals.includes(\"before\"),\n          signed: true\n        });\n        this.redirectAfterRequestSent({\n          returnStrategy,\n          twaReturnUrl\n        });\n      };\n      const unsubscribe = this.onTransactionModalStateChange((action2) => {\n        if (action2 == null ? void 0 : action2.openModal) {\n          return;\n        }\n        unsubscribe();\n        if (!action2) {\n          abortController.abort();\n        }\n      });\n      try {\n        const result = yield this.waitForSignData(\n          {\n            data,\n            signal: new AbortController().signal\n          },\n          onRequestSent\n        );\n        this.tracker.trackDataSigned(this.wallet, data, result);\n        widgetController.setAction({\n          name: \"data-signed\",\n          showNotification: notifications2.includes(\"success\"),\n          openModal: modals.includes(\"success\")\n        });\n        return result;\n      } catch (e2) {\n        if (e2 instanceof _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.WalletNotSupportFeatureError) {\n          widgetController.clearAction();\n          widgetController.openWalletNotSupportFeatureModal(e2.cause);\n          throw e2;\n        }\n        widgetController.setAction({\n          name: \"sign-data-canceled\",\n          showNotification: notifications2.includes(\"error\"),\n          openModal: modals.includes(\"error\")\n        });\n        if (e2 instanceof _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.TonConnectError) {\n          throw e2;\n        } else {\n          console.error(e2);\n          throw new TonConnectUIError(\"Unhandled error:\" + e2);\n        }\n      } finally {\n        unsubscribe();\n      }\n    });\n  }\n  redirectAfterRequestSent({\n    returnStrategy,\n    twaReturnUrl\n  }) {\n    if (this.walletInfo && \"universalLink\" in this.walletInfo && (this.walletInfo.openMethod === \"universal-link\" || this.walletInfo.openMethod === \"custom-deeplink\")) {\n      if ((0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isTelegramUrl)(this.walletInfo.universalLink)) {\n        redirectToTelegram(this.walletInfo.universalLink, {\n          returnStrategy,\n          twaReturnUrl: twaReturnUrl || appState.twaReturnUrl,\n          forceRedirect: false\n        });\n      } else {\n        redirectToWallet(\n          this.walletInfo.universalLink,\n          this.walletInfo.deepLink,\n          {\n            returnStrategy,\n            forceRedirect: false\n          },\n          () => {\n          }\n        );\n      }\n    }\n  }\n  connectEmbeddedWallet(embeddedWallet) {\n    return __async(this, null, function* () {\n      const connect = (parameters) => {\n        setLastSelectedWalletInfo(embeddedWallet);\n        this.connector.connect({ jsBridgeKey: embeddedWallet.jsBridgeKey }, parameters);\n      };\n      const additionalRequest = appState.connectRequestParameters;\n      if ((additionalRequest == null ? void 0 : additionalRequest.state) === \"loading\") {\n        this.connectRequestParametersCallback = connect;\n      } else {\n        connect(additionalRequest == null ? void 0 : additionalRequest.value);\n      }\n      return yield this.waitForWalletConnection({\n        ignoreErrors: false\n      });\n    });\n  }\n  connectExternalWallet() {\n    return __async(this, null, function* () {\n      const abortController = new AbortController();\n      widgetController.openWalletsModal();\n      const unsubscribe = this.onModalStateChange((state) => {\n        const { status, closeReason } = state;\n        if (status === \"opened\") {\n          return;\n        }\n        unsubscribe();\n        if (closeReason === \"action-cancelled\") {\n          abortController.abort();\n        }\n      });\n      return yield this.waitForWalletConnection({\n        ignoreErrors: true,\n        signal: abortController.signal\n      });\n    });\n  }\n  waitForWalletConnection(options) {\n    return __async(this, null, function* () {\n      return new Promise((resolve, reject) => {\n        this.tracker.trackConnectionStarted();\n        const { ignoreErrors = false, signal = null } = options;\n        if (signal && signal.aborted) {\n          this.tracker.trackConnectionError(\"Connection was cancelled\");\n          return reject(new TonConnectUIError(\"Wallet was not connected\"));\n        }\n        const onStatusChangeHandler = (wallet) => __async(this, null, function* () {\n          if (!wallet) {\n            this.tracker.trackConnectionError(\"Connection was cancelled\");\n            if (ignoreErrors) {\n              return;\n            }\n            unsubscribe();\n            reject(new TonConnectUIError(\"Wallet was not connected\"));\n          } else {\n            this.tracker.trackConnectionCompleted(wallet);\n            unsubscribe();\n            resolve(wallet);\n          }\n        });\n        const onErrorsHandler = (reason) => {\n          this.tracker.trackConnectionError(reason.message);\n          if (ignoreErrors) {\n            return;\n          }\n          unsubscribe();\n          reject(reason);\n        };\n        const unsubscribe = this.onStatusChange(\n          (wallet) => onStatusChangeHandler(wallet),\n          (reason) => onErrorsHandler(reason)\n        );\n        if (signal) {\n          signal.addEventListener(\n            \"abort\",\n            () => {\n              unsubscribe();\n              reject(new TonConnectUIError(\"Wallet was not connected\"));\n            },\n            { once: true }\n          );\n        }\n      });\n    });\n  }\n  waitForSendTransaction(options, onRequestSent) {\n    return __async(this, null, function* () {\n      return new Promise((resolve, reject) => {\n        const { transaction, signal } = options;\n        if (signal.aborted) {\n          this.tracker.trackTransactionSigningFailed(\n            this.wallet,\n            transaction,\n            \"Transaction was cancelled\"\n          );\n          return reject(new TonConnectUIError(\"Transaction was not sent\"));\n        }\n        const onTransactionHandler = (transaction2) => __async(this, null, function* () {\n          resolve(transaction2);\n        });\n        const onErrorsHandler = (reason) => {\n          reject(reason);\n        };\n        const onCanceledHandler = () => {\n          this.tracker.trackTransactionSigningFailed(\n            this.wallet,\n            transaction,\n            \"Transaction was cancelled\"\n          );\n          reject(new TonConnectUIError(\"Transaction was not sent\"));\n        };\n        signal.addEventListener(\"abort\", onCanceledHandler, { once: true });\n        this.connector.sendTransaction(transaction, { onRequestSent, signal }).then((result) => {\n          signal.removeEventListener(\"abort\", onCanceledHandler);\n          return onTransactionHandler(result);\n        }).catch((reason) => {\n          signal.removeEventListener(\"abort\", onCanceledHandler);\n          return onErrorsHandler(reason);\n        });\n      });\n    });\n  }\n  waitForSignData(options, onRequestSent) {\n    return __async(this, null, function* () {\n      return new Promise((resolve, reject) => {\n        const { data, signal } = options;\n        if (signal.aborted) {\n          this.tracker.trackDataSigningFailed(this.wallet, data, \"SignData was cancelled\");\n          return reject(new TonConnectUIError(\"SignData was not sent\"));\n        }\n        const onSignHandler = (data2) => __async(this, null, function* () {\n          resolve(data2);\n        });\n        const onErrorsHandler = (reason) => {\n          reject(reason);\n        };\n        const onCanceledHandler = () => {\n          this.tracker.trackDataSigningFailed(this.wallet, data, \"SignData was cancelled\");\n          reject(new TonConnectUIError(\"SignData was not sent\"));\n        };\n        signal.addEventListener(\"abort\", onCanceledHandler, { once: true });\n        this.connector.signData(data, { onRequestSent, signal }).then((result) => {\n          return onSignHandler(result);\n        }).catch((reason) => {\n          return onErrorsHandler(reason);\n        });\n      });\n    });\n  }\n  onTransactionModalStateChange(onChange) {\n    return this.transactionModal.onStateChange(onChange);\n  }\n  subscribeToWalletChange() {\n    this.connector.onStatusChange((wallet) => __async(this, null, function* () {\n      var _a2;\n      if (wallet) {\n        yield this.updateWalletInfo(wallet);\n        this.setPreferredWalletAppName(((_a2 = this.walletInfo) == null ? void 0 : _a2.appName) || wallet.device.appName);\n      } else {\n        this.walletInfoStorage.removeWalletInfo();\n      }\n    }));\n  }\n  setPreferredWalletAppName(value) {\n    this.preferredWalletStorage.setPreferredWalletAppName(value);\n    setAppState({ preferredWalletAppName: value });\n  }\n  getSelectedWalletInfo(wallet) {\n    return __async(this, null, function* () {\n      let lastSelectedWalletInfo2 = widgetController.getSelectedWalletInfo();\n      if (!lastSelectedWalletInfo2) {\n        return null;\n      }\n      let fullLastSelectedWalletInfo;\n      if (!(\"name\" in lastSelectedWalletInfo2)) {\n        const walletsList = applyWalletsListConfiguration(\n          yield this.walletsList,\n          appState.walletsListConfiguration\n        );\n        const walletInfo = walletsList.find((item) => eqWalletName(item, wallet.device.appName));\n        if (!walletInfo) {\n          throw new TonConnectUIError(\n            `Cannot find WalletInfo for the '${wallet.device.appName}' wallet`\n          );\n        }\n        fullLastSelectedWalletInfo = __spreadValues(__spreadValues({}, walletInfo), lastSelectedWalletInfo2);\n      } else {\n        fullLastSelectedWalletInfo = lastSelectedWalletInfo2;\n      }\n      return fullLastSelectedWalletInfo;\n    });\n  }\n  updateWalletInfo(wallet) {\n    return __async(this, null, function* () {\n      const selectedWalletInfo = yield this.getSelectedWalletInfo(wallet);\n      if (selectedWalletInfo) {\n        this.walletInfo = selectedWalletInfo;\n        this.walletInfoStorage.setWalletInfo(selectedWalletInfo);\n        return;\n      }\n      const storedWalletInfo = this.walletInfoStorage.getWalletInfo();\n      if (storedWalletInfo) {\n        this.walletInfo = storedWalletInfo;\n        return;\n      }\n      this.walletInfo = (yield this.walletsList).find(\n        (walletInfo) => eqWalletName(walletInfo, wallet.device.appName)\n      ) || null;\n    });\n  }\n  normalizeWidgetRoot(rootId) {\n    if (!rootId || !document.getElementById(rootId)) {\n      rootId = \"tc-widget-root\";\n      const rootElement = document.createElement(\"div\");\n      rootElement.id = rootId;\n      document.body.appendChild(rootElement);\n    }\n    return rootId;\n  }\n  checkButtonRootExist(buttonRootId) {\n    if (buttonRootId == null) {\n      return;\n    }\n    if (!document.getElementById(buttonRootId)) {\n      throw new TonConnectUIError(`${buttonRootId} element not found in the document.`);\n    }\n  }\n  getModalsAndNotificationsConfiguration(options) {\n    var _a2, _b2, _c2, _d2, _e2, _f2;\n    const allActions = [\n      \"before\",\n      \"success\",\n      \"error\"\n    ];\n    let notifications2 = allActions;\n    if (((_a2 = this.actionsConfiguration) == null ? void 0 : _a2.notifications) && ((_b2 = this.actionsConfiguration) == null ? void 0 : _b2.notifications) !== \"all\") {\n      notifications2 = this.actionsConfiguration.notifications;\n    }\n    if (options == null ? void 0 : options.notifications) {\n      if (options.notifications === \"all\") {\n        notifications2 = allActions;\n      } else {\n        notifications2 = options.notifications;\n      }\n    }\n    let modals = [\"before\"];\n    if ((_c2 = this.actionsConfiguration) == null ? void 0 : _c2.modals) {\n      if (this.actionsConfiguration.modals === \"all\") {\n        modals = allActions;\n      } else {\n        modals = this.actionsConfiguration.modals;\n      }\n    }\n    if (options == null ? void 0 : options.modals) {\n      if (options.modals === \"all\") {\n        modals = allActions;\n      } else {\n        modals = options.modals;\n      }\n    }\n    const returnStrategy = (options == null ? void 0 : options.returnStrategy) || ((_d2 = this.actionsConfiguration) == null ? void 0 : _d2.returnStrategy) || \"back\";\n    const twaReturnUrl = (options == null ? void 0 : options.twaReturnUrl) || ((_e2 = this.actionsConfiguration) == null ? void 0 : _e2.twaReturnUrl);\n    let skipRedirectToWallet = (options == null ? void 0 : options.skipRedirectToWallet) || ((_f2 = this.actionsConfiguration) == null ? void 0 : _f2.skipRedirectToWallet) || \"ios\";\n    if (isInTMA()) {\n      skipRedirectToWallet = \"never\";\n    }\n    return {\n      notifications: notifications2,\n      modals,\n      returnStrategy,\n      twaReturnUrl,\n      skipRedirectToWallet\n    };\n  }\n}\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9AdG9uY29ubmVjdCt1aUAyLjIuMC9ub2RlX21vZHVsZXMvQHRvbmNvbm5lY3QvdWkvbGliL2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEVBQThFLDZEQUE2RDtBQUMzSTtBQUNBLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ3EwQjtBQUNyeUI7QUFDSTtBQUNGO0FBQ047QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0M7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsWUFBWSx3QkFBd0IsRUFBRSw2QkFBNkI7QUFDbkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLGtCQUFrQjtBQUN6QztBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLDRCQUE0QjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsS0FBSztBQUNuQixZQUFZLEVBQUM7QUFDYjtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsU0FBUztBQUMvQztBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsbUJBQW1CO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBbUI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsaUJBQWlCO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsMEJBQTBCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLDRCQUE0QjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsd0JBQXdCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLDJCQUEyQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHVCQUF1QjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixlQUFlO0FBQ2xDO0FBQ0E7QUFDQSwyQ0FBMkM7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQSxvQkFBb0IsWUFBWTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSxxREFBcUQsaURBQWlEO0FBQ3RHO0FBQ0EsaURBQWlELG9FQUFvRTtBQUNySDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsWUFBWTtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLFdBQVc7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0Esd0JBQXdCLFlBQVk7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QztBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRDtBQUMzRDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIscUJBQXFCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLFNBQVM7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSwwQ0FBMEMsU0FBUztBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EseUJBQXlCLHFCQUFxQjtBQUM5QztBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLG9DQUFvQyxTQUFTO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsU0FBUztBQUN2RCwwQ0FBMEM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLGVBQWU7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixtQkFBbUI7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBLFVBQVU7QUFDVjtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlEO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsU0FBUztBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixLQUFLO0FBQ3JCLGdCQUFnQixLQUFLO0FBQ3JCLE1BQU07QUFDTixnQkFBZ0IsS0FBSztBQUNyQixJQUFJO0FBQ0o7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EseUNBQXlDO0FBQ3pDLDJDQUEyQztBQUMzQztBQUNBLHNDQUFzQyxVQUFVO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxVQUFVO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQixzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnRUFBZ0U7QUFDaEUsc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0QsY0FBYztBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsUUFBUTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsSUFBSTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtB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QTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLFFBQVE7QUFDN0IsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSwwRUFBMEUsT0FBTztBQUNqRix1Q0FBdUMs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Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxzQ0FBUztBQUNsQjtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLGtCQUFrQixjQUFjO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRztBQUNI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O0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsZ0JBQWdCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxxQkFBcUIsZ0JBQWdCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxHQUFHLEtBQUssR0FBRztBQUMvQztBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtB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QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLGNBQWM7QUFDeEMsNEJBQTRCLGNBQWM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsZ0JBQWdCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixnQkFBZ0I7QUFDekM7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtB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QUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsYUFBYTtBQUN0QztBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsV0FBVztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLGFBQWE7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsZ0JBQWdCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixvQkFBb0I7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLFVBQVU7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsZ0JBQWdCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixvQkFBb0I7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixhQUFhO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtB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QTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLGFBQWE7O0FBRWI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxhQUFhOztBQUViO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsYUFBYTs7QUFFYjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixpQkFBaUI7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHVDQUFFO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHVDQUFFO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSx1QkFBdUIsdUNBQUU7QUFDekI7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFx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Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSx3Q0FBd0M7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNB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QUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQSxPQUFPLDhEQUFhO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBLDBEQUEwRCw0RUFBMkI7QUFDckY7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxPQUFPLFdBQVcsUUFBUSxZQUFZLFNBQVM7QUFDL0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gseUJBQXlCLCtFQUFrQztBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2REFBNkQ7QUFDN0Q7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLDhEQUFhO0FBQ3JCO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsaUVBQWlFO0FBQ2pFO0FBQ0EsU0FBUztBQUNULE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkRBQTZEO0FBQzdEO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSw4RUFBNkI7QUFDckM7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBLGtFQUFrRTtBQUNsRSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQjtBQUMvQjtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUVBQXFFO0FBQ3JFLGlDQUFpQztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQztBQUNyQztBQUNBO0FBQ0E7QUFDQSxtQ0FBbUM7QUFDbkM7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQjtBQUMvQjtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLDhFQUE2QjtBQUMxRCxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLGtFQUFrRTtBQUNsRSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQjtBQUMvQjtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBLDhCQUE4Qiw4RUFBNkI7QUFDM0QscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFFQUFxRTtBQUNyRSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQztBQUNyQztBQUNBO0FBQ0E7QUFDQSxtQ0FBbUM7QUFDbkM7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0EsOERBQThEO0FBQzlELHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBaUU7QUFDakUsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLCtCQUErQjtBQUMvQjtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBLGVBQWU7QUFDZjtBQUNBLFdBQVc7QUFDWDtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQSxXQUFXO0FBQ1g7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyREFBMkQ7QUFDM0QscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDREQUE0RDtBQUM1RCxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNERBQTREO0FBQzVELHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0EsZUFBZTtBQUNmO0FBQ0EsV0FBVztBQUNYO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJEO0FBQzNELHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBLGVBQWU7QUFDZjtBQUNBLFdBQVc7QUFDWDtBQUNBLE9BQU87QUFDUDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsd0JBQXdCO0FBQ3hCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQSxPQUFPO0FBQ1A7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSw2REFBNkQ7QUFDN0Q7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsUUFBUSw4REFBYTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLCtEQUErRDtBQUMvRDtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLDZEQUE2RDtBQUM3RDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSw2REFBNkQ7QUFDN0Q7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLHNFQUFzRTtBQUN0RSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQztBQUNuQztBQUNBLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUVBQXlFO0FBQ3pFLHFDQUFxQztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QztBQUN6QztBQUNBO0FBQ0E7QUFDQSx1Q0FBdUM7QUFDdkM7QUFDQSxtQ0FBbUM7QUFDbkM7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQztBQUNuQztBQUNBLCtCQUErQjtBQUMvQjtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLHNFQUFzRTtBQUN0RSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQztBQUNuQztBQUNBLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DO0FBQ25DLGlDQUFpQztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DO0FBQ25DO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLDhEQUE4RDtBQUM5RCx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0EsZUFBZTtBQUNmO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQSxlQUFlO0FBQ2Y7QUFDQSxXQUFXO0FBQ1g7QUFDQSxPQUFPO0FBQ1A7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLDBCQUEwQjtBQUMzQyxtQkFBbUI7QUFDbkIsb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQSx3QkFBd0I7O0FBRXhCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsd0JBQXdCO0FBQ3hCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBLE9BQU87QUFDUDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsK0RBQWtCO0FBQ3pDO0FBQ0EseURBQXlELFdBQVc7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsbUVBQWtCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QyxXQUFXO0FBQ1g7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSx1REFBdUQ7QUFDdkQsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGFBQWE7QUFDYjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGVBQWU7QUFDZixhQUFhO0FBQ2I7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCOztBQUVyQjtBQUNBLFVBQVUsNERBQTREO0FBQ3RFOztBQUVBO0FBQ0EsVUFBVSw0REFBNEQ7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsd0JBQXdCO0FBQ3hCLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxxQkFBcUI7O0FBRXJCOztBQUVBO0FBQ0EsNEJBQTRCO0FBQzVCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBLGFBQWE7QUFDYixXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxXQUFXO0FBQ1g7QUFDQSxPQUFPO0FBQ1A7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0EsV0FBVztBQUNYO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOLHdCQUF3Qiw0RUFBMkI7QUFDbkQsK0JBQStCLDRFQUEyQjtBQUMxRDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxnREFBZ0Q7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQSxlQUFlO0FBQ2Y7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkRBQTZEO0FBQzdELHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZEQUE2RDtBQUM3RCx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQSxlQUFlO0FBQ2Y7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBLGdEQUFnRDtBQUNoRDtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLGVBQWUsNkJBQTZCO0FBQzVDO0FBQ0EsV0FBVztBQUNYO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRCwwRUFBNkI7QUFDN0UsMkRBQTJELDhFQUE2QjtBQUN4RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFEO0FBQ3JEO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEM7QUFDNUMsOERBQThELDRFQUEyQjtBQUN6RixPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsdUJBQXVCLCtFQUFrQztBQUN6RDtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsNERBQWU7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBLGVBQWU7QUFDZjtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBLGVBQWU7QUFDZjtBQUNBLFdBQVc7QUFDWDtBQUNBLE9BQU87QUFDUDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsaUtBQWlLLDhEQUFhO0FBQzlLO0FBQ0E7QUFDQTtBQUNBLDZKQUE2Siw4REFBYTtBQUMxSztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsOERBQWE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RDtBQUN6RDtBQUNBLFdBQVc7QUFDWDtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0EsZUFBZTtBQUNmO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQSxlQUFlO0FBQ2Y7QUFDQSxXQUFXO0FBQ1g7QUFDQSxPQUFPO0FBQ1A7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpSUFBaUk7QUFDakk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpSUFBaUk7QUFDakk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBLFdBQVc7QUFDWDtBQUNBLE9BQU87QUFDUDtBQUNBLEdBQUc7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QTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyxjQUFjO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFLRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy8ucG5wbS9AdG9uY29ubmVjdCt1aUAyLjIuMC9ub2RlX21vZHVsZXMvQHRvbmNvbm5lY3QvdWkvbGliL2luZGV4Lm1qcz8wNjE1Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2RlZlByb3AgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgX19kZWZQcm9wcyA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzO1xudmFyIF9fZ2V0T3duUHJvcERlc2NzID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnM7XG52YXIgX19nZXRPd25Qcm9wU3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgX19oYXNPd25Qcm9wID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBfX3Byb3BJc0VudW0gPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xudmFyIF9fZGVmTm9ybWFsUHJvcCA9IChvYmosIGtleSwgdmFsdWUpID0+IGtleSBpbiBvYmogPyBfX2RlZlByb3Aob2JqLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSwgdmFsdWUgfSkgOiBvYmpba2V5XSA9IHZhbHVlO1xudmFyIF9fc3ByZWFkVmFsdWVzID0gKGEyLCBiKSA9PiB7XG4gIGZvciAodmFyIHByb3AgaW4gYiB8fCAoYiA9IHt9KSlcbiAgICBpZiAoX19oYXNPd25Qcm9wLmNhbGwoYiwgcHJvcCkpXG4gICAgICBfX2RlZk5vcm1hbFByb3AoYTIsIHByb3AsIGJbcHJvcF0pO1xuICBpZiAoX19nZXRPd25Qcm9wU3ltYm9scylcbiAgICBmb3IgKHZhciBwcm9wIG9mIF9fZ2V0T3duUHJvcFN5bWJvbHMoYikpIHtcbiAgICAgIGlmIChfX3Byb3BJc0VudW0uY2FsbChiLCBwcm9wKSlcbiAgICAgICAgX19kZWZOb3JtYWxQcm9wKGEyLCBwcm9wLCBiW3Byb3BdKTtcbiAgICB9XG4gIHJldHVybiBhMjtcbn07XG52YXIgX19zcHJlYWRQcm9wcyA9IChhMiwgYikgPT4gX19kZWZQcm9wcyhhMiwgX19nZXRPd25Qcm9wRGVzY3MoYikpO1xudmFyIF9fcHVibGljRmllbGQgPSAob2JqLCBrZXksIHZhbHVlKSA9PiB7XG4gIF9fZGVmTm9ybWFsUHJvcChvYmosIHR5cGVvZiBrZXkgIT09IFwic3ltYm9sXCIgPyBrZXkgKyBcIlwiIDoga2V5LCB2YWx1ZSk7XG4gIHJldHVybiB2YWx1ZTtcbn07XG52YXIgX19hc3luYyA9IChfX3RoaXMsIF9fYXJndW1lbnRzLCBnZW5lcmF0b3IpID0+IHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICB2YXIgZnVsZmlsbGVkID0gKHZhbHVlKSA9PiB7XG4gICAgICB0cnkge1xuICAgICAgICBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7XG4gICAgICB9IGNhdGNoIChlMikge1xuICAgICAgICByZWplY3QoZTIpO1xuICAgICAgfVxuICAgIH07XG4gICAgdmFyIHJlamVjdGVkID0gKHZhbHVlKSA9PiB7XG4gICAgICB0cnkge1xuICAgICAgICBzdGVwKGdlbmVyYXRvci50aHJvdyh2YWx1ZSkpO1xuICAgICAgfSBjYXRjaCAoZTIpIHtcbiAgICAgICAgcmVqZWN0KGUyKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHZhciBzdGVwID0gKHgpID0+IHguZG9uZSA/IHJlc29sdmUoeC52YWx1ZSkgOiBQcm9taXNlLnJlc29sdmUoeC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTtcbiAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkoX190aGlzLCBfX2FyZ3VtZW50cykpLm5leHQoKSk7XG4gIH0pO1xufTtcbnZhciBfYSwgX2IsIF9jLCBfZCwgX2UsIF9mLCBfZywgX2g7XG5pbXBvcnQgeyBUb25Db25uZWN0RXJyb3IsIGlzV2FsbGV0SW5mb0N1cnJlbnRseUluamVjdGVkLCB0b1VzZXJGcmllbmRseUFkZHJlc3MsIENIQUlOLCBUb25Db25uZWN0LCBpc1RlbGVncmFtVXJsLCBlbmNvZGVUZWxlZ3JhbVVybFBhcmFtZXRlcnMsIFdhbGxldE1pc3NpbmdSZXF1aXJlZEZlYXR1cmVzRXJyb3IsIGlzV2FsbGV0SW5mb1JlbW90ZSwgY2hlY2tSZXF1aXJlZFdhbGxldEZlYXR1cmVzLCBpc1dhbGxldEluZm9DdXJyZW50bHlFbWJlZGRlZCwgY3JlYXRlVmVyc2lvbkluZm8sIEJyb3dzZXJFdmVudERpc3BhdGNoZXIsIGNyZWF0ZVJlc3BvbnNlVmVyc2lvbkV2ZW50LCBjcmVhdGVSZXF1ZXN0VmVyc2lvbkV2ZW50LCBjcmVhdGVDb25uZWN0aW9uU3RhcnRlZEV2ZW50LCBjcmVhdGVDb25uZWN0aW9uQ29tcGxldGVkRXZlbnQsIGNyZWF0ZUNvbm5lY3Rpb25FcnJvckV2ZW50LCBjcmVhdGVDb25uZWN0aW9uUmVzdG9yaW5nU3RhcnRlZEV2ZW50LCBjcmVhdGVDb25uZWN0aW9uUmVzdG9yaW5nQ29tcGxldGVkRXZlbnQsIGNyZWF0ZUNvbm5lY3Rpb25SZXN0b3JpbmdFcnJvckV2ZW50LCBjcmVhdGVEaXNjb25uZWN0aW9uRXZlbnQsIGNyZWF0ZVRyYW5zYWN0aW9uU2VudEZvclNpZ25hdHVyZUV2ZW50LCBjcmVhdGVUcmFuc2FjdGlvblNpZ25lZEV2ZW50LCBjcmVhdGVUcmFuc2FjdGlvblNpZ25pbmdGYWlsZWRFdmVudCwgY3JlYXRlRGF0YVNlbnRGb3JTaWduYXR1cmVFdmVudCwgY3JlYXRlRGF0YVNpZ25lZEV2ZW50LCBjcmVhdGVEYXRhU2lnbmluZ0ZhaWxlZEV2ZW50LCBXYWxsZXROb3RTdXBwb3J0RmVhdHVyZUVycm9yIH0gZnJvbSBcIkB0b25jb25uZWN0L3Nka1wiO1xuZXhwb3J0ICogZnJvbSBcIkB0b25jb25uZWN0L3Nka1wiO1xuaW1wb3J0IFVBUGFyc2VyIGZyb20gXCJ1YS1wYXJzZXItanNcIjtcbmltcG9ydCBkZWVwbWVyZ2UgZnJvbSBcImRlZXBtZXJnZVwiO1xuaW1wb3J0IGNuIGZyb20gXCJjbGFzc25hbWVzXCI7XG5jb25zdCBzaGFyZWRDb25maWcgPSB7fTtcbmZ1bmN0aW9uIHNldEh5ZHJhdGVDb250ZXh0KGNvbnRleHQpIHtcbiAgc2hhcmVkQ29uZmlnLmNvbnRleHQgPSBjb250ZXh0O1xufVxuY29uc3QgZXF1YWxGbiA9IChhMiwgYikgPT4gYTIgPT09IGI7XG5jb25zdCAkUFJPWFkgPSBTeW1ib2woXCJzb2xpZC1wcm94eVwiKTtcbmNvbnN0ICRUUkFDSyA9IFN5bWJvbChcInNvbGlkLXRyYWNrXCIpO1xuY29uc3Qgc2lnbmFsT3B0aW9ucyA9IHtcbiAgZXF1YWxzOiBlcXVhbEZuXG59O1xubGV0IHJ1bkVmZmVjdHMgPSBydW5RdWV1ZTtcbmNvbnN0IFNUQUxFID0gMTtcbmNvbnN0IFBFTkRJTkcgPSAyO1xuY29uc3QgVU5PV05FRCA9IHtcbiAgb3duZWQ6IG51bGwsXG4gIGNsZWFudXBzOiBudWxsLFxuICBjb250ZXh0OiBudWxsLFxuICBvd25lcjogbnVsbFxufTtcbmNvbnN0IE5PX0lOSVQgPSB7fTtcbnZhciBPd25lciA9IG51bGw7XG5sZXQgVHJhbnNpdGlvbiQxID0gbnVsbDtcbmxldCBMaXN0ZW5lciA9IG51bGw7XG5sZXQgVXBkYXRlcyA9IG51bGw7XG5sZXQgRWZmZWN0cyA9IG51bGw7XG5sZXQgRXhlY0NvdW50ID0gMDtcbmZ1bmN0aW9uIGNyZWF0ZVJvb3QoZm4sIGRldGFjaGVkT3duZXIpIHtcbiAgY29uc3QgbGlzdGVuZXIgPSBMaXN0ZW5lciwgb3duZXIgPSBPd25lciwgdW5vd25lZCA9IGZuLmxlbmd0aCA9PT0gMCwgcm9vdCA9IHVub3duZWQgPyBVTk9XTkVEIDoge1xuICAgIG93bmVkOiBudWxsLFxuICAgIGNsZWFudXBzOiBudWxsLFxuICAgIGNvbnRleHQ6IG51bGwsXG4gICAgb3duZXI6IGRldGFjaGVkT3duZXIgPT09IHZvaWQgMCA/IG93bmVyIDogZGV0YWNoZWRPd25lclxuICB9LCB1cGRhdGVGbiA9IHVub3duZWQgPyBmbiA6ICgpID0+IGZuKCgpID0+IHVudHJhY2soKCkgPT4gY2xlYW5Ob2RlKHJvb3QpKSk7XG4gIE93bmVyID0gcm9vdDtcbiAgTGlzdGVuZXIgPSBudWxsO1xuICB0cnkge1xuICAgIHJldHVybiBydW5VcGRhdGVzKHVwZGF0ZUZuLCB0cnVlKTtcbiAgfSBmaW5hbGx5IHtcbiAgICBMaXN0ZW5lciA9IGxpc3RlbmVyO1xuICAgIE93bmVyID0gb3duZXI7XG4gIH1cbn1cbmZ1bmN0aW9uIGNyZWF0ZVNpZ25hbCh2YWx1ZSwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyA/IE9iamVjdC5hc3NpZ24oe30sIHNpZ25hbE9wdGlvbnMsIG9wdGlvbnMpIDogc2lnbmFsT3B0aW9ucztcbiAgY29uc3QgczIgPSB7XG4gICAgdmFsdWUsXG4gICAgb2JzZXJ2ZXJzOiBudWxsLFxuICAgIG9ic2VydmVyU2xvdHM6IG51bGwsXG4gICAgY29tcGFyYXRvcjogb3B0aW9ucy5lcXVhbHMgfHwgdm9pZCAwXG4gIH07XG4gIGNvbnN0IHNldHRlciA9ICh2YWx1ZTIpID0+IHtcbiAgICBpZiAodHlwZW9mIHZhbHVlMiA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICB2YWx1ZTIgPSB2YWx1ZTIoczIudmFsdWUpO1xuICAgIH1cbiAgICByZXR1cm4gd3JpdGVTaWduYWwoczIsIHZhbHVlMik7XG4gIH07XG4gIHJldHVybiBbcmVhZFNpZ25hbC5iaW5kKHMyKSwgc2V0dGVyXTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZUNvbXB1dGVkKGZuLCB2YWx1ZSwgb3B0aW9ucykge1xuICBjb25zdCBjMiA9IGNyZWF0ZUNvbXB1dGF0aW9uKGZuLCB2YWx1ZSwgdHJ1ZSwgU1RBTEUpO1xuICB1cGRhdGVDb21wdXRhdGlvbihjMik7XG59XG5mdW5jdGlvbiBjcmVhdGVSZW5kZXJFZmZlY3QoZm4sIHZhbHVlLCBvcHRpb25zKSB7XG4gIGNvbnN0IGMyID0gY3JlYXRlQ29tcHV0YXRpb24oZm4sIHZhbHVlLCBmYWxzZSwgU1RBTEUpO1xuICB1cGRhdGVDb21wdXRhdGlvbihjMik7XG59XG5mdW5jdGlvbiBjcmVhdGVFZmZlY3QoZm4sIHZhbHVlLCBvcHRpb25zKSB7XG4gIHJ1bkVmZmVjdHMgPSBydW5Vc2VyRWZmZWN0cztcbiAgY29uc3QgYzIgPSBjcmVhdGVDb21wdXRhdGlvbihmbiwgdmFsdWUsIGZhbHNlLCBTVEFMRSk7XG4gIGMyLnVzZXIgPSB0cnVlO1xuICBFZmZlY3RzID8gRWZmZWN0cy5wdXNoKGMyKSA6IHVwZGF0ZUNvbXB1dGF0aW9uKGMyKTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZU1lbW8oZm4sIHZhbHVlLCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zID8gT2JqZWN0LmFzc2lnbih7fSwgc2lnbmFsT3B0aW9ucywgb3B0aW9ucykgOiBzaWduYWxPcHRpb25zO1xuICBjb25zdCBjMiA9IGNyZWF0ZUNvbXB1dGF0aW9uKGZuLCB2YWx1ZSwgdHJ1ZSwgMCk7XG4gIGMyLm9ic2VydmVycyA9IG51bGw7XG4gIGMyLm9ic2VydmVyU2xvdHMgPSBudWxsO1xuICBjMi5jb21wYXJhdG9yID0gb3B0aW9ucy5lcXVhbHMgfHwgdm9pZCAwO1xuICB1cGRhdGVDb21wdXRhdGlvbihjMik7XG4gIHJldHVybiByZWFkU2lnbmFsLmJpbmQoYzIpO1xufVxuZnVuY3Rpb24gY3JlYXRlUmVzb3VyY2UocFNvdXJjZSwgcEZldGNoZXIsIHBPcHRpb25zKSB7XG4gIGxldCBzb3VyY2U7XG4gIGxldCBmZXRjaGVyO1xuICBsZXQgb3B0aW9ucztcbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDIgJiYgdHlwZW9mIHBGZXRjaGVyID09PSBcIm9iamVjdFwiIHx8IGFyZ3VtZW50cy5sZW5ndGggPT09IDEpIHtcbiAgICBzb3VyY2UgPSB0cnVlO1xuICAgIGZldGNoZXIgPSBwU291cmNlO1xuICAgIG9wdGlvbnMgPSBwRmV0Y2hlciB8fCB7fTtcbiAgfSBlbHNlIHtcbiAgICBzb3VyY2UgPSBwU291cmNlO1xuICAgIGZldGNoZXIgPSBwRmV0Y2hlcjtcbiAgICBvcHRpb25zID0gcE9wdGlvbnMgfHwge307XG4gIH1cbiAgbGV0IHByID0gbnVsbCwgaW5pdFAgPSBOT19JTklULCBpZCA9IG51bGwsIHNjaGVkdWxlZCA9IGZhbHNlLCByZXNvbHZlZCA9IFwiaW5pdGlhbFZhbHVlXCIgaW4gb3B0aW9ucywgZHluYW1pYyA9IHR5cGVvZiBzb3VyY2UgPT09IFwiZnVuY3Rpb25cIiAmJiBjcmVhdGVNZW1vKHNvdXJjZSk7XG4gIGNvbnN0IGNvbnRleHRzID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKSwgW3ZhbHVlLCBzZXRWYWx1ZV0gPSAob3B0aW9ucy5zdG9yYWdlIHx8IGNyZWF0ZVNpZ25hbCkob3B0aW9ucy5pbml0aWFsVmFsdWUpLCBbZXJyb3IsIHNldEVycm9yXSA9IGNyZWF0ZVNpZ25hbCh2b2lkIDApLCBbdHJhY2ssIHRyaWdnZXJdID0gY3JlYXRlU2lnbmFsKHZvaWQgMCwge1xuICAgIGVxdWFsczogZmFsc2VcbiAgfSksIFtzdGF0ZSwgc2V0U3RhdGVdID0gY3JlYXRlU2lnbmFsKHJlc29sdmVkID8gXCJyZWFkeVwiIDogXCJ1bnJlc29sdmVkXCIpO1xuICBpZiAoc2hhcmVkQ29uZmlnLmNvbnRleHQpIHtcbiAgICBpZCA9IGAke3NoYXJlZENvbmZpZy5jb250ZXh0LmlkfSR7c2hhcmVkQ29uZmlnLmNvbnRleHQuY291bnQrK31gO1xuICAgIGxldCB2O1xuICAgIGlmIChvcHRpb25zLnNzckxvYWRGcm9tID09PSBcImluaXRpYWxcIilcbiAgICAgIGluaXRQID0gb3B0aW9ucy5pbml0aWFsVmFsdWU7XG4gICAgZWxzZSBpZiAoc2hhcmVkQ29uZmlnLmxvYWQgJiYgKHYgPSBzaGFyZWRDb25maWcubG9hZChpZCkpKVxuICAgICAgaW5pdFAgPSB2WzBdO1xuICB9XG4gIGZ1bmN0aW9uIGxvYWRFbmQocDIsIHYsIGVycm9yMiwga2V5KSB7XG4gICAgaWYgKHByID09PSBwMikge1xuICAgICAgcHIgPSBudWxsO1xuICAgICAgcmVzb2x2ZWQgPSB0cnVlO1xuICAgICAgaWYgKChwMiA9PT0gaW5pdFAgfHwgdiA9PT0gaW5pdFApICYmIG9wdGlvbnMub25IeWRyYXRlZClcbiAgICAgICAgcXVldWVNaWNyb3Rhc2soKCkgPT4gb3B0aW9ucy5vbkh5ZHJhdGVkKGtleSwge1xuICAgICAgICAgIHZhbHVlOiB2XG4gICAgICAgIH0pKTtcbiAgICAgIGluaXRQID0gTk9fSU5JVDtcbiAgICAgIGNvbXBsZXRlTG9hZCh2LCBlcnJvcjIpO1xuICAgIH1cbiAgICByZXR1cm4gdjtcbiAgfVxuICBmdW5jdGlvbiBjb21wbGV0ZUxvYWQodiwgZXJyKSB7XG4gICAgcnVuVXBkYXRlcygoKSA9PiB7XG4gICAgICBpZiAoZXJyID09PSB2b2lkIDApXG4gICAgICAgIHNldFZhbHVlKCgpID0+IHYpO1xuICAgICAgc2V0U3RhdGUoZXJyICE9PSB2b2lkIDAgPyBcImVycm9yZWRcIiA6IFwicmVhZHlcIik7XG4gICAgICBzZXRFcnJvcihlcnIpO1xuICAgICAgZm9yIChjb25zdCBjMiBvZiBjb250ZXh0cy5rZXlzKCkpXG4gICAgICAgIGMyLmRlY3JlbWVudCgpO1xuICAgICAgY29udGV4dHMuY2xlYXIoKTtcbiAgICB9LCBmYWxzZSk7XG4gIH1cbiAgZnVuY3Rpb24gcmVhZCgpIHtcbiAgICBjb25zdCBjMiA9IFN1c3BlbnNlQ29udGV4dCwgdiA9IHZhbHVlKCksIGVyciA9IGVycm9yKCk7XG4gICAgaWYgKGVyciAhPT0gdm9pZCAwICYmICFwcilcbiAgICAgIHRocm93IGVycjtcbiAgICBpZiAoTGlzdGVuZXIgJiYgIUxpc3RlbmVyLnVzZXIgJiYgYzIpIHtcbiAgICAgIGNyZWF0ZUNvbXB1dGVkKCgpID0+IHtcbiAgICAgICAgdHJhY2soKTtcbiAgICAgICAgaWYgKHByKSB7XG4gICAgICAgICAgaWYgKGMyLnJlc29sdmVkKVxuICAgICAgICAgICAgO1xuICAgICAgICAgIGVsc2UgaWYgKCFjb250ZXh0cy5oYXMoYzIpKSB7XG4gICAgICAgICAgICBjMi5pbmNyZW1lbnQoKTtcbiAgICAgICAgICAgIGNvbnRleHRzLmFkZChjMik7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHY7XG4gIH1cbiAgZnVuY3Rpb24gbG9hZChyZWZldGNoaW5nID0gdHJ1ZSkge1xuICAgIGlmIChyZWZldGNoaW5nICE9PSBmYWxzZSAmJiBzY2hlZHVsZWQpXG4gICAgICByZXR1cm47XG4gICAgc2NoZWR1bGVkID0gZmFsc2U7XG4gICAgY29uc3QgbG9va3VwMiA9IGR5bmFtaWMgPyBkeW5hbWljKCkgOiBzb3VyY2U7XG4gICAgaWYgKGxvb2t1cDIgPT0gbnVsbCB8fCBsb29rdXAyID09PSBmYWxzZSkge1xuICAgICAgbG9hZEVuZChwciwgdW50cmFjayh2YWx1ZSkpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBwMiA9IGluaXRQICE9PSBOT19JTklUID8gaW5pdFAgOiB1bnRyYWNrKCgpID0+IGZldGNoZXIobG9va3VwMiwge1xuICAgICAgdmFsdWU6IHZhbHVlKCksXG4gICAgICByZWZldGNoaW5nXG4gICAgfSkpO1xuICAgIGlmICh0eXBlb2YgcDIgIT09IFwib2JqZWN0XCIgfHwgIShwMiAmJiBcInRoZW5cIiBpbiBwMikpIHtcbiAgICAgIGxvYWRFbmQocHIsIHAyLCB2b2lkIDAsIGxvb2t1cDIpO1xuICAgICAgcmV0dXJuIHAyO1xuICAgIH1cbiAgICBwciA9IHAyO1xuICAgIHNjaGVkdWxlZCA9IHRydWU7XG4gICAgcXVldWVNaWNyb3Rhc2soKCkgPT4gc2NoZWR1bGVkID0gZmFsc2UpO1xuICAgIHJ1blVwZGF0ZXMoKCkgPT4ge1xuICAgICAgc2V0U3RhdGUocmVzb2x2ZWQgPyBcInJlZnJlc2hpbmdcIiA6IFwicGVuZGluZ1wiKTtcbiAgICAgIHRyaWdnZXIoKTtcbiAgICB9LCBmYWxzZSk7XG4gICAgcmV0dXJuIHAyLnRoZW4oKHYpID0+IGxvYWRFbmQocDIsIHYsIHZvaWQgMCwgbG9va3VwMiksIChlMikgPT4gbG9hZEVuZChwMiwgdm9pZCAwLCBjYXN0RXJyb3IoZTIpLCBsb29rdXAyKSk7XG4gIH1cbiAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMocmVhZCwge1xuICAgIHN0YXRlOiB7XG4gICAgICBnZXQ6ICgpID0+IHN0YXRlKClcbiAgICB9LFxuICAgIGVycm9yOiB7XG4gICAgICBnZXQ6ICgpID0+IGVycm9yKClcbiAgICB9LFxuICAgIGxvYWRpbmc6IHtcbiAgICAgIGdldCgpIHtcbiAgICAgICAgY29uc3QgczIgPSBzdGF0ZSgpO1xuICAgICAgICByZXR1cm4gczIgPT09IFwicGVuZGluZ1wiIHx8IHMyID09PSBcInJlZnJlc2hpbmdcIjtcbiAgICAgIH1cbiAgICB9LFxuICAgIGxhdGVzdDoge1xuICAgICAgZ2V0KCkge1xuICAgICAgICBpZiAoIXJlc29sdmVkKVxuICAgICAgICAgIHJldHVybiByZWFkKCk7XG4gICAgICAgIGNvbnN0IGVyciA9IGVycm9yKCk7XG4gICAgICAgIGlmIChlcnIgJiYgIXByKVxuICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgcmV0dXJuIHZhbHVlKCk7XG4gICAgICB9XG4gICAgfVxuICB9KTtcbiAgaWYgKGR5bmFtaWMpXG4gICAgY3JlYXRlQ29tcHV0ZWQoKCkgPT4gbG9hZChmYWxzZSkpO1xuICBlbHNlXG4gICAgbG9hZChmYWxzZSk7XG4gIHJldHVybiBbcmVhZCwge1xuICAgIHJlZmV0Y2g6IGxvYWQsXG4gICAgbXV0YXRlOiBzZXRWYWx1ZVxuICB9XTtcbn1cbmZ1bmN0aW9uIGJhdGNoKGZuKSB7XG4gIHJldHVybiBydW5VcGRhdGVzKGZuLCBmYWxzZSk7XG59XG5mdW5jdGlvbiB1bnRyYWNrKGZuKSB7XG4gIGlmIChMaXN0ZW5lciA9PT0gbnVsbClcbiAgICByZXR1cm4gZm4oKTtcbiAgY29uc3QgbGlzdGVuZXIgPSBMaXN0ZW5lcjtcbiAgTGlzdGVuZXIgPSBudWxsO1xuICB0cnkge1xuICAgIHJldHVybiBmbigpO1xuICB9IGZpbmFsbHkge1xuICAgIExpc3RlbmVyID0gbGlzdGVuZXI7XG4gIH1cbn1cbmZ1bmN0aW9uIG9uKGRlcHMsIGZuLCBvcHRpb25zKSB7XG4gIGNvbnN0IGlzQXJyYXkgPSBBcnJheS5pc0FycmF5KGRlcHMpO1xuICBsZXQgcHJldklucHV0O1xuICBsZXQgZGVmZXIgPSBvcHRpb25zICYmIG9wdGlvbnMuZGVmZXI7XG4gIHJldHVybiAocHJldlZhbHVlKSA9PiB7XG4gICAgbGV0IGlucHV0O1xuICAgIGlmIChpc0FycmF5KSB7XG4gICAgICBpbnB1dCA9IEFycmF5KGRlcHMubGVuZ3RoKTtcbiAgICAgIGZvciAobGV0IGkyID0gMDsgaTIgPCBkZXBzLmxlbmd0aDsgaTIrKylcbiAgICAgICAgaW5wdXRbaTJdID0gZGVwc1tpMl0oKTtcbiAgICB9IGVsc2VcbiAgICAgIGlucHV0ID0gZGVwcygpO1xuICAgIGlmIChkZWZlcikge1xuICAgICAgZGVmZXIgPSBmYWxzZTtcbiAgICAgIHJldHVybiB2b2lkIDA7XG4gICAgfVxuICAgIGNvbnN0IHJlc3VsdCA9IHVudHJhY2soKCkgPT4gZm4oaW5wdXQsIHByZXZJbnB1dCwgcHJldlZhbHVlKSk7XG4gICAgcHJldklucHV0ID0gaW5wdXQ7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcbn1cbmZ1bmN0aW9uIG9uTW91bnQoZm4pIHtcbiAgY3JlYXRlRWZmZWN0KCgpID0+IHVudHJhY2soZm4pKTtcbn1cbmZ1bmN0aW9uIG9uQ2xlYW51cChmbikge1xuICBpZiAoT3duZXIgPT09IG51bGwpXG4gICAgO1xuICBlbHNlIGlmIChPd25lci5jbGVhbnVwcyA9PT0gbnVsbClcbiAgICBPd25lci5jbGVhbnVwcyA9IFtmbl07XG4gIGVsc2VcbiAgICBPd25lci5jbGVhbnVwcy5wdXNoKGZuKTtcbiAgcmV0dXJuIGZuO1xufVxuZnVuY3Rpb24gZ2V0TGlzdGVuZXIoKSB7XG4gIHJldHVybiBMaXN0ZW5lcjtcbn1cbmZ1bmN0aW9uIGdldE93bmVyKCkge1xuICByZXR1cm4gT3duZXI7XG59XG5mdW5jdGlvbiBjcmVhdGVDb250ZXh0KGRlZmF1bHRWYWx1ZSwgb3B0aW9ucykge1xuICBjb25zdCBpZCA9IFN5bWJvbChcImNvbnRleHRcIik7XG4gIHJldHVybiB7XG4gICAgaWQsXG4gICAgUHJvdmlkZXI6IGNyZWF0ZVByb3ZpZGVyKGlkKSxcbiAgICBkZWZhdWx0VmFsdWVcbiAgfTtcbn1cbmZ1bmN0aW9uIHVzZUNvbnRleHQoY29udGV4dCkge1xuICBsZXQgY3R4O1xuICByZXR1cm4gKGN0eCA9IGxvb2t1cChPd25lciwgY29udGV4dC5pZCkpICE9PSB2b2lkIDAgPyBjdHggOiBjb250ZXh0LmRlZmF1bHRWYWx1ZTtcbn1cbmZ1bmN0aW9uIGNoaWxkcmVuKGZuKSB7XG4gIGNvbnN0IGNoaWxkcmVuMiA9IGNyZWF0ZU1lbW8oZm4pO1xuICBjb25zdCBtZW1vID0gY3JlYXRlTWVtbygoKSA9PiByZXNvbHZlQ2hpbGRyZW4oY2hpbGRyZW4yKCkpKTtcbiAgbWVtby50b0FycmF5ID0gKCkgPT4ge1xuICAgIGNvbnN0IGMyID0gbWVtbygpO1xuICAgIHJldHVybiBBcnJheS5pc0FycmF5KGMyKSA/IGMyIDogYzIgIT0gbnVsbCA/IFtjMl0gOiBbXTtcbiAgfTtcbiAgcmV0dXJuIG1lbW87XG59XG5sZXQgU3VzcGVuc2VDb250ZXh0O1xuZnVuY3Rpb24gcmVhZFNpZ25hbCgpIHtcbiAgY29uc3QgcnVubmluZ1RyYW5zaXRpb24gPSBUcmFuc2l0aW9uJDE7XG4gIGlmICh0aGlzLnNvdXJjZXMgJiYgKHRoaXMuc3RhdGUgfHwgcnVubmluZ1RyYW5zaXRpb24pKSB7XG4gICAgaWYgKHRoaXMuc3RhdGUgPT09IFNUQUxFIHx8IHJ1bm5pbmdUcmFuc2l0aW9uKVxuICAgICAgdXBkYXRlQ29tcHV0YXRpb24odGhpcyk7XG4gICAgZWxzZSB7XG4gICAgICBjb25zdCB1cGRhdGVzID0gVXBkYXRlcztcbiAgICAgIFVwZGF0ZXMgPSBudWxsO1xuICAgICAgcnVuVXBkYXRlcygoKSA9PiBsb29rVXBzdHJlYW0odGhpcyksIGZhbHNlKTtcbiAgICAgIFVwZGF0ZXMgPSB1cGRhdGVzO1xuICAgIH1cbiAgfVxuICBpZiAoTGlzdGVuZXIpIHtcbiAgICBjb25zdCBzU2xvdCA9IHRoaXMub2JzZXJ2ZXJzID8gdGhpcy5vYnNlcnZlcnMubGVuZ3RoIDogMDtcbiAgICBpZiAoIUxpc3RlbmVyLnNvdXJjZXMpIHtcbiAgICAgIExpc3RlbmVyLnNvdXJjZXMgPSBbdGhpc107XG4gICAgICBMaXN0ZW5lci5zb3VyY2VTbG90cyA9IFtzU2xvdF07XG4gICAgfSBlbHNlIHtcbiAgICAgIExpc3RlbmVyLnNvdXJjZXMucHVzaCh0aGlzKTtcbiAgICAgIExpc3RlbmVyLnNvdXJjZVNsb3RzLnB1c2goc1Nsb3QpO1xuICAgIH1cbiAgICBpZiAoIXRoaXMub2JzZXJ2ZXJzKSB7XG4gICAgICB0aGlzLm9ic2VydmVycyA9IFtMaXN0ZW5lcl07XG4gICAgICB0aGlzLm9ic2VydmVyU2xvdHMgPSBbTGlzdGVuZXIuc291cmNlcy5sZW5ndGggLSAxXTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5vYnNlcnZlcnMucHVzaChMaXN0ZW5lcik7XG4gICAgICB0aGlzLm9ic2VydmVyU2xvdHMucHVzaChMaXN0ZW5lci5zb3VyY2VzLmxlbmd0aCAtIDEpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdGhpcy52YWx1ZTtcbn1cbmZ1bmN0aW9uIHdyaXRlU2lnbmFsKG5vZGUsIHZhbHVlLCBpc0NvbXApIHtcbiAgbGV0IGN1cnJlbnQgPSBub2RlLnZhbHVlO1xuICBpZiAoIW5vZGUuY29tcGFyYXRvciB8fCAhbm9kZS5jb21wYXJhdG9yKGN1cnJlbnQsIHZhbHVlKSkge1xuICAgIG5vZGUudmFsdWUgPSB2YWx1ZTtcbiAgICBpZiAobm9kZS5vYnNlcnZlcnMgJiYgbm9kZS5vYnNlcnZlcnMubGVuZ3RoKSB7XG4gICAgICBydW5VcGRhdGVzKCgpID0+IHtcbiAgICAgICAgZm9yIChsZXQgaTIgPSAwOyBpMiA8IG5vZGUub2JzZXJ2ZXJzLmxlbmd0aDsgaTIgKz0gMSkge1xuICAgICAgICAgIGNvbnN0IG8yID0gbm9kZS5vYnNlcnZlcnNbaTJdO1xuICAgICAgICAgIGNvbnN0IFRyYW5zaXRpb25SdW5uaW5nID0gVHJhbnNpdGlvbiQxICYmIFRyYW5zaXRpb24kMS5ydW5uaW5nO1xuICAgICAgICAgIGlmIChUcmFuc2l0aW9uUnVubmluZyAmJiBUcmFuc2l0aW9uJDEuZGlzcG9zZWQuaGFzKG8yKSlcbiAgICAgICAgICAgIDtcbiAgICAgICAgICBpZiAoVHJhbnNpdGlvblJ1bm5pbmcgJiYgIW8yLnRTdGF0ZSB8fCAhVHJhbnNpdGlvblJ1bm5pbmcgJiYgIW8yLnN0YXRlKSB7XG4gICAgICAgICAgICBpZiAobzIucHVyZSlcbiAgICAgICAgICAgICAgVXBkYXRlcy5wdXNoKG8yKTtcbiAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgRWZmZWN0cy5wdXNoKG8yKTtcbiAgICAgICAgICAgIGlmIChvMi5vYnNlcnZlcnMpXG4gICAgICAgICAgICAgIG1hcmtEb3duc3RyZWFtKG8yKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKFRyYW5zaXRpb25SdW5uaW5nKVxuICAgICAgICAgICAgO1xuICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgIG8yLnN0YXRlID0gU1RBTEU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKFVwZGF0ZXMubGVuZ3RoID4gMWU2KSB7XG4gICAgICAgICAgVXBkYXRlcyA9IFtdO1xuICAgICAgICAgIGlmIChmYWxzZSlcbiAgICAgICAgICAgIDtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoKTtcbiAgICAgICAgfVxuICAgICAgfSwgZmFsc2UpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdmFsdWU7XG59XG5mdW5jdGlvbiB1cGRhdGVDb21wdXRhdGlvbihub2RlKSB7XG4gIGlmICghbm9kZS5mbilcbiAgICByZXR1cm47XG4gIGNsZWFuTm9kZShub2RlKTtcbiAgY29uc3Qgb3duZXIgPSBPd25lciwgbGlzdGVuZXIgPSBMaXN0ZW5lciwgdGltZSA9IEV4ZWNDb3VudDtcbiAgTGlzdGVuZXIgPSBPd25lciA9IG5vZGU7XG4gIHJ1bkNvbXB1dGF0aW9uKG5vZGUsIG5vZGUudmFsdWUsIHRpbWUpO1xuICBMaXN0ZW5lciA9IGxpc3RlbmVyO1xuICBPd25lciA9IG93bmVyO1xufVxuZnVuY3Rpb24gcnVuQ29tcHV0YXRpb24obm9kZSwgdmFsdWUsIHRpbWUpIHtcbiAgbGV0IG5leHRWYWx1ZTtcbiAgdHJ5IHtcbiAgICBuZXh0VmFsdWUgPSBub2RlLmZuKHZhbHVlKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgaWYgKG5vZGUucHVyZSkge1xuICAgICAge1xuICAgICAgICBub2RlLnN0YXRlID0gU1RBTEU7XG4gICAgICAgIG5vZGUub3duZWQgJiYgbm9kZS5vd25lZC5mb3JFYWNoKGNsZWFuTm9kZSk7XG4gICAgICAgIG5vZGUub3duZWQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cbiAgICBoYW5kbGVFcnJvcihlcnIpO1xuICB9XG4gIGlmICghbm9kZS51cGRhdGVkQXQgfHwgbm9kZS51cGRhdGVkQXQgPD0gdGltZSkge1xuICAgIGlmIChub2RlLnVwZGF0ZWRBdCAhPSBudWxsICYmIFwib2JzZXJ2ZXJzXCIgaW4gbm9kZSkge1xuICAgICAgd3JpdGVTaWduYWwobm9kZSwgbmV4dFZhbHVlKTtcbiAgICB9IGVsc2VcbiAgICAgIG5vZGUudmFsdWUgPSBuZXh0VmFsdWU7XG4gICAgbm9kZS51cGRhdGVkQXQgPSB0aW1lO1xuICB9XG59XG5mdW5jdGlvbiBjcmVhdGVDb21wdXRhdGlvbihmbiwgaW5pdCwgcHVyZSwgc3RhdGUgPSBTVEFMRSwgb3B0aW9ucykge1xuICBjb25zdCBjMiA9IHtcbiAgICBmbixcbiAgICBzdGF0ZSxcbiAgICB1cGRhdGVkQXQ6IG51bGwsXG4gICAgb3duZWQ6IG51bGwsXG4gICAgc291cmNlczogbnVsbCxcbiAgICBzb3VyY2VTbG90czogbnVsbCxcbiAgICBjbGVhbnVwczogbnVsbCxcbiAgICB2YWx1ZTogaW5pdCxcbiAgICBvd25lcjogT3duZXIsXG4gICAgY29udGV4dDogbnVsbCxcbiAgICBwdXJlXG4gIH07XG4gIGlmIChPd25lciA9PT0gbnVsbClcbiAgICA7XG4gIGVsc2UgaWYgKE93bmVyICE9PSBVTk9XTkVEKSB7XG4gICAge1xuICAgICAgaWYgKCFPd25lci5vd25lZClcbiAgICAgICAgT3duZXIub3duZWQgPSBbYzJdO1xuICAgICAgZWxzZVxuICAgICAgICBPd25lci5vd25lZC5wdXNoKGMyKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGMyO1xufVxuZnVuY3Rpb24gcnVuVG9wKG5vZGUpIHtcbiAgY29uc3QgcnVubmluZ1RyYW5zaXRpb24gPSBUcmFuc2l0aW9uJDE7XG4gIGlmIChub2RlLnN0YXRlID09PSAwIHx8IHJ1bm5pbmdUcmFuc2l0aW9uKVxuICAgIHJldHVybjtcbiAgaWYgKG5vZGUuc3RhdGUgPT09IFBFTkRJTkcgfHwgcnVubmluZ1RyYW5zaXRpb24pXG4gICAgcmV0dXJuIGxvb2tVcHN0cmVhbShub2RlKTtcbiAgaWYgKG5vZGUuc3VzcGVuc2UgJiYgdW50cmFjayhub2RlLnN1c3BlbnNlLmluRmFsbGJhY2spKVxuICAgIHJldHVybiBub2RlLnN1c3BlbnNlLmVmZmVjdHMucHVzaChub2RlKTtcbiAgY29uc3QgYW5jZXN0b3JzID0gW25vZGVdO1xuICB3aGlsZSAoKG5vZGUgPSBub2RlLm93bmVyKSAmJiAoIW5vZGUudXBkYXRlZEF0IHx8IG5vZGUudXBkYXRlZEF0IDwgRXhlY0NvdW50KSkge1xuICAgIGlmIChub2RlLnN0YXRlIHx8IHJ1bm5pbmdUcmFuc2l0aW9uKVxuICAgICAgYW5jZXN0b3JzLnB1c2gobm9kZSk7XG4gIH1cbiAgZm9yIChsZXQgaTIgPSBhbmNlc3RvcnMubGVuZ3RoIC0gMTsgaTIgPj0gMDsgaTItLSkge1xuICAgIG5vZGUgPSBhbmNlc3RvcnNbaTJdO1xuICAgIGlmIChub2RlLnN0YXRlID09PSBTVEFMRSB8fCBydW5uaW5nVHJhbnNpdGlvbikge1xuICAgICAgdXBkYXRlQ29tcHV0YXRpb24obm9kZSk7XG4gICAgfSBlbHNlIGlmIChub2RlLnN0YXRlID09PSBQRU5ESU5HIHx8IHJ1bm5pbmdUcmFuc2l0aW9uKSB7XG4gICAgICBjb25zdCB1cGRhdGVzID0gVXBkYXRlcztcbiAgICAgIFVwZGF0ZXMgPSBudWxsO1xuICAgICAgcnVuVXBkYXRlcygoKSA9PiBsb29rVXBzdHJlYW0obm9kZSwgYW5jZXN0b3JzWzBdKSwgZmFsc2UpO1xuICAgICAgVXBkYXRlcyA9IHVwZGF0ZXM7XG4gICAgfVxuICB9XG59XG5mdW5jdGlvbiBydW5VcGRhdGVzKGZuLCBpbml0KSB7XG4gIGlmIChVcGRhdGVzKVxuICAgIHJldHVybiBmbigpO1xuICBsZXQgd2FpdCA9IGZhbHNlO1xuICBpZiAoIWluaXQpXG4gICAgVXBkYXRlcyA9IFtdO1xuICBpZiAoRWZmZWN0cylcbiAgICB3YWl0ID0gdHJ1ZTtcbiAgZWxzZVxuICAgIEVmZmVjdHMgPSBbXTtcbiAgRXhlY0NvdW50Kys7XG4gIHRyeSB7XG4gICAgY29uc3QgcmVzID0gZm4oKTtcbiAgICBjb21wbGV0ZVVwZGF0ZXMod2FpdCk7XG4gICAgcmV0dXJuIHJlcztcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgaWYgKCF3YWl0KVxuICAgICAgRWZmZWN0cyA9IG51bGw7XG4gICAgVXBkYXRlcyA9IG51bGw7XG4gICAgaGFuZGxlRXJyb3IoZXJyKTtcbiAgfVxufVxuZnVuY3Rpb24gY29tcGxldGVVcGRhdGVzKHdhaXQpIHtcbiAgaWYgKFVwZGF0ZXMpIHtcbiAgICBydW5RdWV1ZShVcGRhdGVzKTtcbiAgICBVcGRhdGVzID0gbnVsbDtcbiAgfVxuICBpZiAod2FpdClcbiAgICByZXR1cm47XG4gIGNvbnN0IGUyID0gRWZmZWN0cztcbiAgRWZmZWN0cyA9IG51bGw7XG4gIGlmIChlMi5sZW5ndGgpXG4gICAgcnVuVXBkYXRlcygoKSA9PiBydW5FZmZlY3RzKGUyKSwgZmFsc2UpO1xufVxuZnVuY3Rpb24gcnVuUXVldWUocXVldWUpIHtcbiAgZm9yIChsZXQgaTIgPSAwOyBpMiA8IHF1ZXVlLmxlbmd0aDsgaTIrKylcbiAgICBydW5Ub3AocXVldWVbaTJdKTtcbn1cbmZ1bmN0aW9uIHJ1blVzZXJFZmZlY3RzKHF1ZXVlKSB7XG4gIGxldCBpMiwgdXNlckxlbmd0aCA9IDA7XG4gIGZvciAoaTIgPSAwOyBpMiA8IHF1ZXVlLmxlbmd0aDsgaTIrKykge1xuICAgIGNvbnN0IGUyID0gcXVldWVbaTJdO1xuICAgIGlmICghZTIudXNlcilcbiAgICAgIHJ1blRvcChlMik7XG4gICAgZWxzZVxuICAgICAgcXVldWVbdXNlckxlbmd0aCsrXSA9IGUyO1xuICB9XG4gIGlmIChzaGFyZWRDb25maWcuY29udGV4dClcbiAgICBzZXRIeWRyYXRlQ29udGV4dCgpO1xuICBmb3IgKGkyID0gMDsgaTIgPCB1c2VyTGVuZ3RoOyBpMisrKVxuICAgIHJ1blRvcChxdWV1ZVtpMl0pO1xufVxuZnVuY3Rpb24gbG9va1Vwc3RyZWFtKG5vZGUsIGlnbm9yZSkge1xuICBjb25zdCBydW5uaW5nVHJhbnNpdGlvbiA9IFRyYW5zaXRpb24kMTtcbiAgbm9kZS5zdGF0ZSA9IDA7XG4gIGZvciAobGV0IGkyID0gMDsgaTIgPCBub2RlLnNvdXJjZXMubGVuZ3RoOyBpMiArPSAxKSB7XG4gICAgY29uc3Qgc291cmNlID0gbm9kZS5zb3VyY2VzW2kyXTtcbiAgICBpZiAoc291cmNlLnNvdXJjZXMpIHtcbiAgICAgIGlmIChzb3VyY2Uuc3RhdGUgPT09IFNUQUxFIHx8IHJ1bm5pbmdUcmFuc2l0aW9uKSB7XG4gICAgICAgIGlmIChzb3VyY2UgIT09IGlnbm9yZSlcbiAgICAgICAgICBydW5Ub3Aoc291cmNlKTtcbiAgICAgIH0gZWxzZSBpZiAoc291cmNlLnN0YXRlID09PSBQRU5ESU5HIHx8IHJ1bm5pbmdUcmFuc2l0aW9uKVxuICAgICAgICBsb29rVXBzdHJlYW0oc291cmNlLCBpZ25vcmUpO1xuICAgIH1cbiAgfVxufVxuZnVuY3Rpb24gbWFya0Rvd25zdHJlYW0obm9kZSkge1xuICBjb25zdCBydW5uaW5nVHJhbnNpdGlvbiA9IFRyYW5zaXRpb24kMTtcbiAgZm9yIChsZXQgaTIgPSAwOyBpMiA8IG5vZGUub2JzZXJ2ZXJzLmxlbmd0aDsgaTIgKz0gMSkge1xuICAgIGNvbnN0IG8yID0gbm9kZS5vYnNlcnZlcnNbaTJdO1xuICAgIGlmICghbzIuc3RhdGUgfHwgcnVubmluZ1RyYW5zaXRpb24pIHtcbiAgICAgIG8yLnN0YXRlID0gUEVORElORztcbiAgICAgIGlmIChvMi5wdXJlKVxuICAgICAgICBVcGRhdGVzLnB1c2gobzIpO1xuICAgICAgZWxzZVxuICAgICAgICBFZmZlY3RzLnB1c2gobzIpO1xuICAgICAgbzIub2JzZXJ2ZXJzICYmIG1hcmtEb3duc3RyZWFtKG8yKTtcbiAgICB9XG4gIH1cbn1cbmZ1bmN0aW9uIGNsZWFuTm9kZShub2RlKSB7XG4gIGxldCBpMjtcbiAgaWYgKG5vZGUuc291cmNlcykge1xuICAgIHdoaWxlIChub2RlLnNvdXJjZXMubGVuZ3RoKSB7XG4gICAgICBjb25zdCBzb3VyY2UgPSBub2RlLnNvdXJjZXMucG9wKCksIGluZGV4ID0gbm9kZS5zb3VyY2VTbG90cy5wb3AoKSwgb2JzID0gc291cmNlLm9ic2VydmVycztcbiAgICAgIGlmIChvYnMgJiYgb2JzLmxlbmd0aCkge1xuICAgICAgICBjb25zdCBuMiA9IG9icy5wb3AoKSwgczIgPSBzb3VyY2Uub2JzZXJ2ZXJTbG90cy5wb3AoKTtcbiAgICAgICAgaWYgKGluZGV4IDwgb2JzLmxlbmd0aCkge1xuICAgICAgICAgIG4yLnNvdXJjZVNsb3RzW3MyXSA9IGluZGV4O1xuICAgICAgICAgIG9ic1tpbmRleF0gPSBuMjtcbiAgICAgICAgICBzb3VyY2Uub2JzZXJ2ZXJTbG90c1tpbmRleF0gPSBzMjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuICBpZiAobm9kZS5vd25lZCkge1xuICAgIGZvciAoaTIgPSAwOyBpMiA8IG5vZGUub3duZWQubGVuZ3RoOyBpMisrKVxuICAgICAgY2xlYW5Ob2RlKG5vZGUub3duZWRbaTJdKTtcbiAgICBub2RlLm93bmVkID0gbnVsbDtcbiAgfVxuICBpZiAobm9kZS5jbGVhbnVwcykge1xuICAgIGZvciAoaTIgPSAwOyBpMiA8IG5vZGUuY2xlYW51cHMubGVuZ3RoOyBpMisrKVxuICAgICAgbm9kZS5jbGVhbnVwc1tpMl0oKTtcbiAgICBub2RlLmNsZWFudXBzID0gbnVsbDtcbiAgfVxuICBub2RlLnN0YXRlID0gMDtcbiAgbm9kZS5jb250ZXh0ID0gbnVsbDtcbn1cbmZ1bmN0aW9uIGNhc3RFcnJvcihlcnIpIHtcbiAgaWYgKGVyciBpbnN0YW5jZW9mIEVycm9yIHx8IHR5cGVvZiBlcnIgPT09IFwic3RyaW5nXCIpXG4gICAgcmV0dXJuIGVycjtcbiAgcmV0dXJuIG5ldyBFcnJvcihcIlVua25vd24gZXJyb3JcIik7XG59XG5mdW5jdGlvbiBoYW5kbGVFcnJvcihlcnIpIHtcbiAgZXJyID0gY2FzdEVycm9yKGVycik7XG4gIHRocm93IGVycjtcbn1cbmZ1bmN0aW9uIGxvb2t1cChvd25lciwga2V5KSB7XG4gIHJldHVybiBvd25lciA/IG93bmVyLmNvbnRleHQgJiYgb3duZXIuY29udGV4dFtrZXldICE9PSB2b2lkIDAgPyBvd25lci5jb250ZXh0W2tleV0gOiBsb29rdXAob3duZXIub3duZXIsIGtleSkgOiB2b2lkIDA7XG59XG5mdW5jdGlvbiByZXNvbHZlQ2hpbGRyZW4oY2hpbGRyZW4yKSB7XG4gIGlmICh0eXBlb2YgY2hpbGRyZW4yID09PSBcImZ1bmN0aW9uXCIgJiYgIWNoaWxkcmVuMi5sZW5ndGgpXG4gICAgcmV0dXJuIHJlc29sdmVDaGlsZHJlbihjaGlsZHJlbjIoKSk7XG4gIGlmIChBcnJheS5pc0FycmF5KGNoaWxkcmVuMikpIHtcbiAgICBjb25zdCByZXN1bHRzID0gW107XG4gICAgZm9yIChsZXQgaTIgPSAwOyBpMiA8IGNoaWxkcmVuMi5sZW5ndGg7IGkyKyspIHtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IHJlc29sdmVDaGlsZHJlbihjaGlsZHJlbjJbaTJdKTtcbiAgICAgIEFycmF5LmlzQXJyYXkocmVzdWx0KSA/IHJlc3VsdHMucHVzaC5hcHBseShyZXN1bHRzLCByZXN1bHQpIDogcmVzdWx0cy5wdXNoKHJlc3VsdCk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHRzO1xuICB9XG4gIHJldHVybiBjaGlsZHJlbjI7XG59XG5mdW5jdGlvbiBjcmVhdGVQcm92aWRlcihpZCwgb3B0aW9ucykge1xuICByZXR1cm4gZnVuY3Rpb24gcHJvdmlkZXIocHJvcHMpIHtcbiAgICBsZXQgcmVzO1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoKSA9PiByZXMgPSB1bnRyYWNrKCgpID0+IHtcbiAgICAgIE93bmVyLmNvbnRleHQgPSB7XG4gICAgICAgIFtpZF06IHByb3BzLnZhbHVlXG4gICAgICB9O1xuICAgICAgcmV0dXJuIGNoaWxkcmVuKCgpID0+IHByb3BzLmNoaWxkcmVuKTtcbiAgICB9KSwgdm9pZCAwKTtcbiAgICByZXR1cm4gcmVzO1xuICB9O1xufVxuY29uc3QgRkFMTEJBQ0sgPSBTeW1ib2woXCJmYWxsYmFja1wiKTtcbmZ1bmN0aW9uIGRpc3Bvc2UoZCkge1xuICBmb3IgKGxldCBpMiA9IDA7IGkyIDwgZC5sZW5ndGg7IGkyKyspXG4gICAgZFtpMl0oKTtcbn1cbmZ1bmN0aW9uIG1hcEFycmF5KGxpc3QsIG1hcEZuLCBvcHRpb25zID0ge30pIHtcbiAgbGV0IGl0ZW1zID0gW10sIG1hcHBlZCA9IFtdLCBkaXNwb3NlcnMgPSBbXSwgbGVuID0gMCwgaW5kZXhlcyA9IG1hcEZuLmxlbmd0aCA+IDEgPyBbXSA6IG51bGw7XG4gIG9uQ2xlYW51cCgoKSA9PiBkaXNwb3NlKGRpc3Bvc2VycykpO1xuICByZXR1cm4gKCkgPT4ge1xuICAgIGxldCBuZXdJdGVtcyA9IGxpc3QoKSB8fCBbXSwgaTIsIGo7XG4gICAgbmV3SXRlbXNbJFRSQUNLXTtcbiAgICByZXR1cm4gdW50cmFjaygoKSA9PiB7XG4gICAgICBsZXQgbmV3TGVuID0gbmV3SXRlbXMubGVuZ3RoLCBuZXdJbmRpY2VzLCBuZXdJbmRpY2VzTmV4dCwgdGVtcCwgdGVtcGRpc3Bvc2VycywgdGVtcEluZGV4ZXMsIHN0YXJ0LCBlbmQsIG5ld0VuZCwgaXRlbTtcbiAgICAgIGlmIChuZXdMZW4gPT09IDApIHtcbiAgICAgICAgaWYgKGxlbiAhPT0gMCkge1xuICAgICAgICAgIGRpc3Bvc2UoZGlzcG9zZXJzKTtcbiAgICAgICAgICBkaXNwb3NlcnMgPSBbXTtcbiAgICAgICAgICBpdGVtcyA9IFtdO1xuICAgICAgICAgIG1hcHBlZCA9IFtdO1xuICAgICAgICAgIGxlbiA9IDA7XG4gICAgICAgICAgaW5kZXhlcyAmJiAoaW5kZXhlcyA9IFtdKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAob3B0aW9ucy5mYWxsYmFjaykge1xuICAgICAgICAgIGl0ZW1zID0gW0ZBTExCQUNLXTtcbiAgICAgICAgICBtYXBwZWRbMF0gPSBjcmVhdGVSb290KChkaXNwb3NlcikgPT4ge1xuICAgICAgICAgICAgZGlzcG9zZXJzWzBdID0gZGlzcG9zZXI7XG4gICAgICAgICAgICByZXR1cm4gb3B0aW9ucy5mYWxsYmFjaygpO1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIGxlbiA9IDE7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAobGVuID09PSAwKSB7XG4gICAgICAgIG1hcHBlZCA9IG5ldyBBcnJheShuZXdMZW4pO1xuICAgICAgICBmb3IgKGogPSAwOyBqIDwgbmV3TGVuOyBqKyspIHtcbiAgICAgICAgICBpdGVtc1tqXSA9IG5ld0l0ZW1zW2pdO1xuICAgICAgICAgIG1hcHBlZFtqXSA9IGNyZWF0ZVJvb3QobWFwcGVyKTtcbiAgICAgICAgfVxuICAgICAgICBsZW4gPSBuZXdMZW47XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0ZW1wID0gbmV3IEFycmF5KG5ld0xlbik7XG4gICAgICAgIHRlbXBkaXNwb3NlcnMgPSBuZXcgQXJyYXkobmV3TGVuKTtcbiAgICAgICAgaW5kZXhlcyAmJiAodGVtcEluZGV4ZXMgPSBuZXcgQXJyYXkobmV3TGVuKSk7XG4gICAgICAgIGZvciAoc3RhcnQgPSAwLCBlbmQgPSBNYXRoLm1pbihsZW4sIG5ld0xlbik7IHN0YXJ0IDwgZW5kICYmIGl0ZW1zW3N0YXJ0XSA9PT0gbmV3SXRlbXNbc3RhcnRdOyBzdGFydCsrKVxuICAgICAgICAgIDtcbiAgICAgICAgZm9yIChlbmQgPSBsZW4gLSAxLCBuZXdFbmQgPSBuZXdMZW4gLSAxOyBlbmQgPj0gc3RhcnQgJiYgbmV3RW5kID49IHN0YXJ0ICYmIGl0ZW1zW2VuZF0gPT09IG5ld0l0ZW1zW25ld0VuZF07IGVuZC0tLCBuZXdFbmQtLSkge1xuICAgICAgICAgIHRlbXBbbmV3RW5kXSA9IG1hcHBlZFtlbmRdO1xuICAgICAgICAgIHRlbXBkaXNwb3NlcnNbbmV3RW5kXSA9IGRpc3Bvc2Vyc1tlbmRdO1xuICAgICAgICAgIGluZGV4ZXMgJiYgKHRlbXBJbmRleGVzW25ld0VuZF0gPSBpbmRleGVzW2VuZF0pO1xuICAgICAgICB9XG4gICAgICAgIG5ld0luZGljZXMgPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpO1xuICAgICAgICBuZXdJbmRpY2VzTmV4dCA9IG5ldyBBcnJheShuZXdFbmQgKyAxKTtcbiAgICAgICAgZm9yIChqID0gbmV3RW5kOyBqID49IHN0YXJ0OyBqLS0pIHtcbiAgICAgICAgICBpdGVtID0gbmV3SXRlbXNbal07XG4gICAgICAgICAgaTIgPSBuZXdJbmRpY2VzLmdldChpdGVtKTtcbiAgICAgICAgICBuZXdJbmRpY2VzTmV4dFtqXSA9IGkyID09PSB2b2lkIDAgPyAtMSA6IGkyO1xuICAgICAgICAgIG5ld0luZGljZXMuc2V0KGl0ZW0sIGopO1xuICAgICAgICB9XG4gICAgICAgIGZvciAoaTIgPSBzdGFydDsgaTIgPD0gZW5kOyBpMisrKSB7XG4gICAgICAgICAgaXRlbSA9IGl0ZW1zW2kyXTtcbiAgICAgICAgICBqID0gbmV3SW5kaWNlcy5nZXQoaXRlbSk7XG4gICAgICAgICAgaWYgKGogIT09IHZvaWQgMCAmJiBqICE9PSAtMSkge1xuICAgICAgICAgICAgdGVtcFtqXSA9IG1hcHBlZFtpMl07XG4gICAgICAgICAgICB0ZW1wZGlzcG9zZXJzW2pdID0gZGlzcG9zZXJzW2kyXTtcbiAgICAgICAgICAgIGluZGV4ZXMgJiYgKHRlbXBJbmRleGVzW2pdID0gaW5kZXhlc1tpMl0pO1xuICAgICAgICAgICAgaiA9IG5ld0luZGljZXNOZXh0W2pdO1xuICAgICAgICAgICAgbmV3SW5kaWNlcy5zZXQoaXRlbSwgaik7XG4gICAgICAgICAgfSBlbHNlXG4gICAgICAgICAgICBkaXNwb3NlcnNbaTJdKCk7XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChqID0gc3RhcnQ7IGogPCBuZXdMZW47IGorKykge1xuICAgICAgICAgIGlmIChqIGluIHRlbXApIHtcbiAgICAgICAgICAgIG1hcHBlZFtqXSA9IHRlbXBbal07XG4gICAgICAgICAgICBkaXNwb3NlcnNbal0gPSB0ZW1wZGlzcG9zZXJzW2pdO1xuICAgICAgICAgICAgaWYgKGluZGV4ZXMpIHtcbiAgICAgICAgICAgICAgaW5kZXhlc1tqXSA9IHRlbXBJbmRleGVzW2pdO1xuICAgICAgICAgICAgICBpbmRleGVzW2pdKGopO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZVxuICAgICAgICAgICAgbWFwcGVkW2pdID0gY3JlYXRlUm9vdChtYXBwZXIpO1xuICAgICAgICB9XG4gICAgICAgIG1hcHBlZCA9IG1hcHBlZC5zbGljZSgwLCBsZW4gPSBuZXdMZW4pO1xuICAgICAgICBpdGVtcyA9IG5ld0l0ZW1zLnNsaWNlKDApO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG1hcHBlZDtcbiAgICB9KTtcbiAgICBmdW5jdGlvbiBtYXBwZXIoZGlzcG9zZXIpIHtcbiAgICAgIGRpc3Bvc2Vyc1tqXSA9IGRpc3Bvc2VyO1xuICAgICAgaWYgKGluZGV4ZXMpIHtcbiAgICAgICAgY29uc3QgW3MyLCBzZXRdID0gY3JlYXRlU2lnbmFsKGopO1xuICAgICAgICBpbmRleGVzW2pdID0gc2V0O1xuICAgICAgICByZXR1cm4gbWFwRm4obmV3SXRlbXNbal0sIHMyKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBtYXBGbihuZXdJdGVtc1tqXSk7XG4gICAgfVxuICB9O1xufVxuZnVuY3Rpb24gY3JlYXRlQ29tcG9uZW50KENvbXAsIHByb3BzKSB7XG4gIHJldHVybiB1bnRyYWNrKCgpID0+IENvbXAocHJvcHMgfHwge30pKTtcbn1cbmZ1bmN0aW9uIHRydWVGbigpIHtcbiAgcmV0dXJuIHRydWU7XG59XG5jb25zdCBwcm9wVHJhcHMgPSB7XG4gIGdldChfLCBwcm9wZXJ0eSwgcmVjZWl2ZXIpIHtcbiAgICBpZiAocHJvcGVydHkgPT09ICRQUk9YWSlcbiAgICAgIHJldHVybiByZWNlaXZlcjtcbiAgICByZXR1cm4gXy5nZXQocHJvcGVydHkpO1xuICB9LFxuICBoYXMoXywgcHJvcGVydHkpIHtcbiAgICBpZiAocHJvcGVydHkgPT09ICRQUk9YWSlcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIHJldHVybiBfLmhhcyhwcm9wZXJ0eSk7XG4gIH0sXG4gIHNldDogdHJ1ZUZuLFxuICBkZWxldGVQcm9wZXJ0eTogdHJ1ZUZuLFxuICBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoXywgcHJvcGVydHkpIHtcbiAgICByZXR1cm4ge1xuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgIGdldCgpIHtcbiAgICAgICAgcmV0dXJuIF8uZ2V0KHByb3BlcnR5KTtcbiAgICAgIH0sXG4gICAgICBzZXQ6IHRydWVGbixcbiAgICAgIGRlbGV0ZVByb3BlcnR5OiB0cnVlRm5cbiAgICB9O1xuICB9LFxuICBvd25LZXlzKF8pIHtcbiAgICByZXR1cm4gXy5rZXlzKCk7XG4gIH1cbn07XG5mdW5jdGlvbiByZXNvbHZlU291cmNlKHMyKSB7XG4gIHJldHVybiAhKHMyID0gdHlwZW9mIHMyID09PSBcImZ1bmN0aW9uXCIgPyBzMigpIDogczIpID8ge30gOiBzMjtcbn1cbmZ1bmN0aW9uIG1lcmdlUHJvcHMoLi4uc291cmNlcykge1xuICBsZXQgcHJveHkgPSBmYWxzZTtcbiAgZm9yIChsZXQgaTIgPSAwOyBpMiA8IHNvdXJjZXMubGVuZ3RoOyBpMisrKSB7XG4gICAgY29uc3QgczIgPSBzb3VyY2VzW2kyXTtcbiAgICBwcm94eSA9IHByb3h5IHx8ICEhczIgJiYgJFBST1hZIGluIHMyO1xuICAgIHNvdXJjZXNbaTJdID0gdHlwZW9mIHMyID09PSBcImZ1bmN0aW9uXCIgPyAocHJveHkgPSB0cnVlLCBjcmVhdGVNZW1vKHMyKSkgOiBzMjtcbiAgfVxuICBpZiAocHJveHkpIHtcbiAgICByZXR1cm4gbmV3IFByb3h5KHtcbiAgICAgIGdldChwcm9wZXJ0eSkge1xuICAgICAgICBmb3IgKGxldCBpMiA9IHNvdXJjZXMubGVuZ3RoIC0gMTsgaTIgPj0gMDsgaTItLSkge1xuICAgICAgICAgIGNvbnN0IHYgPSByZXNvbHZlU291cmNlKHNvdXJjZXNbaTJdKVtwcm9wZXJ0eV07XG4gICAgICAgICAgaWYgKHYgIT09IHZvaWQgMClcbiAgICAgICAgICAgIHJldHVybiB2O1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgaGFzKHByb3BlcnR5KSB7XG4gICAgICAgIGZvciAobGV0IGkyID0gc291cmNlcy5sZW5ndGggLSAxOyBpMiA+PSAwOyBpMi0tKSB7XG4gICAgICAgICAgaWYgKHByb3BlcnR5IGluIHJlc29sdmVTb3VyY2Uoc291cmNlc1tpMl0pKVxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfSxcbiAgICAgIGtleXMoKSB7XG4gICAgICAgIGNvbnN0IGtleXMgPSBbXTtcbiAgICAgICAgZm9yIChsZXQgaTIgPSAwOyBpMiA8IHNvdXJjZXMubGVuZ3RoOyBpMisrKVxuICAgICAgICAgIGtleXMucHVzaCguLi5PYmplY3Qua2V5cyhyZXNvbHZlU291cmNlKHNvdXJjZXNbaTJdKSkpO1xuICAgICAgICByZXR1cm4gWy4uLm5ldyBTZXQoa2V5cyldO1xuICAgICAgfVxuICAgIH0sIHByb3BUcmFwcyk7XG4gIH1cbiAgY29uc3QgdGFyZ2V0ID0ge307XG4gIGZvciAobGV0IGkyID0gc291cmNlcy5sZW5ndGggLSAxOyBpMiA+PSAwOyBpMi0tKSB7XG4gICAgaWYgKHNvdXJjZXNbaTJdKSB7XG4gICAgICBjb25zdCBkZXNjcmlwdG9ycyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZXNbaTJdKTtcbiAgICAgIGZvciAoY29uc3Qga2V5IGluIGRlc2NyaXB0b3JzKSB7XG4gICAgICAgIGlmIChrZXkgaW4gdGFyZ2V0KVxuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHtcbiAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgIGdldCgpIHtcbiAgICAgICAgICAgIGZvciAobGV0IGkzID0gc291cmNlcy5sZW5ndGggLSAxOyBpMyA+PSAwOyBpMy0tKSB7XG4gICAgICAgICAgICAgIGNvbnN0IHYgPSAoc291cmNlc1tpM10gfHwge30pW2tleV07XG4gICAgICAgICAgICAgIGlmICh2ICE9PSB2b2lkIDApXG4gICAgICAgICAgICAgICAgcmV0dXJuIHY7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRhcmdldDtcbn1cbmZ1bmN0aW9uIHNwbGl0UHJvcHMocHJvcHMsIC4uLmtleXMpIHtcbiAgY29uc3QgYmxvY2tlZCA9IG5ldyBTZXQoa2V5cy5mbGF0KCkpO1xuICBpZiAoJFBST1hZIGluIHByb3BzKSB7XG4gICAgY29uc3QgcmVzID0ga2V5cy5tYXAoKGspID0+IHtcbiAgICAgIHJldHVybiBuZXcgUHJveHkoe1xuICAgICAgICBnZXQocHJvcGVydHkpIHtcbiAgICAgICAgICByZXR1cm4gay5pbmNsdWRlcyhwcm9wZXJ0eSkgPyBwcm9wc1twcm9wZXJ0eV0gOiB2b2lkIDA7XG4gICAgICAgIH0sXG4gICAgICAgIGhhcyhwcm9wZXJ0eSkge1xuICAgICAgICAgIHJldHVybiBrLmluY2x1ZGVzKHByb3BlcnR5KSAmJiBwcm9wZXJ0eSBpbiBwcm9wcztcbiAgICAgICAgfSxcbiAgICAgICAga2V5cygpIHtcbiAgICAgICAgICByZXR1cm4gay5maWx0ZXIoKHByb3BlcnR5KSA9PiBwcm9wZXJ0eSBpbiBwcm9wcyk7XG4gICAgICAgIH1cbiAgICAgIH0sIHByb3BUcmFwcyk7XG4gICAgfSk7XG4gICAgcmVzLnB1c2gobmV3IFByb3h5KHtcbiAgICAgIGdldChwcm9wZXJ0eSkge1xuICAgICAgICByZXR1cm4gYmxvY2tlZC5oYXMocHJvcGVydHkpID8gdm9pZCAwIDogcHJvcHNbcHJvcGVydHldO1xuICAgICAgfSxcbiAgICAgIGhhcyhwcm9wZXJ0eSkge1xuICAgICAgICByZXR1cm4gYmxvY2tlZC5oYXMocHJvcGVydHkpID8gZmFsc2UgOiBwcm9wZXJ0eSBpbiBwcm9wcztcbiAgICAgIH0sXG4gICAgICBrZXlzKCkge1xuICAgICAgICByZXR1cm4gT2JqZWN0LmtleXMocHJvcHMpLmZpbHRlcigoaykgPT4gIWJsb2NrZWQuaGFzKGspKTtcbiAgICAgIH1cbiAgICB9LCBwcm9wVHJhcHMpKTtcbiAgICByZXR1cm4gcmVzO1xuICB9XG4gIGNvbnN0IGRlc2NyaXB0b3JzID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMocHJvcHMpO1xuICBrZXlzLnB1c2goT2JqZWN0LmtleXMoZGVzY3JpcHRvcnMpLmZpbHRlcigoaykgPT4gIWJsb2NrZWQuaGFzKGspKSk7XG4gIHJldHVybiBrZXlzLm1hcCgoaykgPT4ge1xuICAgIGNvbnN0IGNsb25lID0ge307XG4gICAgZm9yIChsZXQgaTIgPSAwOyBpMiA8IGsubGVuZ3RoOyBpMisrKSB7XG4gICAgICBjb25zdCBrZXkgPSBrW2kyXTtcbiAgICAgIGlmICghKGtleSBpbiBwcm9wcykpXG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGNsb25lLCBrZXksIGRlc2NyaXB0b3JzW2tleV0gPyBkZXNjcmlwdG9yc1trZXldIDoge1xuICAgICAgICBnZXQoKSB7XG4gICAgICAgICAgcmV0dXJuIHByb3BzW2tleV07XG4gICAgICAgIH0sXG4gICAgICAgIHNldCgpIHtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZVxuICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBjbG9uZTtcbiAgfSk7XG59XG5mdW5jdGlvbiBGb3IocHJvcHMpIHtcbiAgY29uc3QgZmFsbGJhY2sgPSBcImZhbGxiYWNrXCIgaW4gcHJvcHMgJiYge1xuICAgIGZhbGxiYWNrOiAoKSA9PiBwcm9wcy5mYWxsYmFja1xuICB9O1xuICByZXR1cm4gY3JlYXRlTWVtbyhtYXBBcnJheSgoKSA9PiBwcm9wcy5lYWNoLCBwcm9wcy5jaGlsZHJlbiwgZmFsbGJhY2sgfHwgdm9pZCAwKSk7XG59XG5mdW5jdGlvbiBTaG93KHByb3BzKSB7XG4gIGxldCBzdHJpY3RFcXVhbCA9IGZhbHNlO1xuICBjb25zdCBrZXllZCA9IHByb3BzLmtleWVkO1xuICBjb25zdCBjb25kaXRpb24gPSBjcmVhdGVNZW1vKCgpID0+IHByb3BzLndoZW4sIHZvaWQgMCwge1xuICAgIGVxdWFsczogKGEyLCBiKSA9PiBzdHJpY3RFcXVhbCA/IGEyID09PSBiIDogIWEyID09PSAhYlxuICB9KTtcbiAgcmV0dXJuIGNyZWF0ZU1lbW8oKCkgPT4ge1xuICAgIGNvbnN0IGMyID0gY29uZGl0aW9uKCk7XG4gICAgaWYgKGMyKSB7XG4gICAgICBjb25zdCBjaGlsZCA9IHByb3BzLmNoaWxkcmVuO1xuICAgICAgY29uc3QgZm4gPSB0eXBlb2YgY2hpbGQgPT09IFwiZnVuY3Rpb25cIiAmJiBjaGlsZC5sZW5ndGggPiAwO1xuICAgICAgc3RyaWN0RXF1YWwgPSBrZXllZCB8fCBmbjtcbiAgICAgIHJldHVybiBmbiA/IHVudHJhY2soKCkgPT4gY2hpbGQoYzIpKSA6IGNoaWxkO1xuICAgIH1cbiAgICByZXR1cm4gcHJvcHMuZmFsbGJhY2s7XG4gIH0sIHZvaWQgMCwgdm9pZCAwKTtcbn1cbmZ1bmN0aW9uIFN3aXRjaChwcm9wcykge1xuICBsZXQgc3RyaWN0RXF1YWwgPSBmYWxzZTtcbiAgbGV0IGtleWVkID0gZmFsc2U7XG4gIGNvbnN0IGVxdWFscyA9IChhMiwgYikgPT4gYTJbMF0gPT09IGJbMF0gJiYgKHN0cmljdEVxdWFsID8gYTJbMV0gPT09IGJbMV0gOiAhYTJbMV0gPT09ICFiWzFdKSAmJiBhMlsyXSA9PT0gYlsyXTtcbiAgY29uc3QgY29uZGl0aW9ucyA9IGNoaWxkcmVuKCgpID0+IHByb3BzLmNoaWxkcmVuKSwgZXZhbENvbmRpdGlvbnMgPSBjcmVhdGVNZW1vKCgpID0+IHtcbiAgICBsZXQgY29uZHMgPSBjb25kaXRpb25zKCk7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KGNvbmRzKSlcbiAgICAgIGNvbmRzID0gW2NvbmRzXTtcbiAgICBmb3IgKGxldCBpMiA9IDA7IGkyIDwgY29uZHMubGVuZ3RoOyBpMisrKSB7XG4gICAgICBjb25zdCBjMiA9IGNvbmRzW2kyXS53aGVuO1xuICAgICAgaWYgKGMyKSB7XG4gICAgICAgIGtleWVkID0gISFjb25kc1tpMl0ua2V5ZWQ7XG4gICAgICAgIHJldHVybiBbaTIsIGMyLCBjb25kc1tpMl1dO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gWy0xXTtcbiAgfSwgdm9pZCAwLCB7XG4gICAgZXF1YWxzXG4gIH0pO1xuICByZXR1cm4gY3JlYXRlTWVtbygoKSA9PiB7XG4gICAgY29uc3QgW2luZGV4LCB3aGVuLCBjb25kXSA9IGV2YWxDb25kaXRpb25zKCk7XG4gICAgaWYgKGluZGV4IDwgMClcbiAgICAgIHJldHVybiBwcm9wcy5mYWxsYmFjaztcbiAgICBjb25zdCBjMiA9IGNvbmQuY2hpbGRyZW47XG4gICAgY29uc3QgZm4gPSB0eXBlb2YgYzIgPT09IFwiZnVuY3Rpb25cIiAmJiBjMi5sZW5ndGggPiAwO1xuICAgIHN0cmljdEVxdWFsID0ga2V5ZWQgfHwgZm47XG4gICAgcmV0dXJuIGZuID8gdW50cmFjaygoKSA9PiBjMih3aGVuKSkgOiBjMjtcbiAgfSwgdm9pZCAwLCB2b2lkIDApO1xufVxuZnVuY3Rpb24gTWF0Y2gocHJvcHMpIHtcbiAgcmV0dXJuIHByb3BzO1xufVxuY29uc3QgYm9vbGVhbnMgPSBbXCJhbGxvd2Z1bGxzY3JlZW5cIiwgXCJhc3luY1wiLCBcImF1dG9mb2N1c1wiLCBcImF1dG9wbGF5XCIsIFwiY2hlY2tlZFwiLCBcImNvbnRyb2xzXCIsIFwiZGVmYXVsdFwiLCBcImRpc2FibGVkXCIsIFwiZm9ybW5vdmFsaWRhdGVcIiwgXCJoaWRkZW5cIiwgXCJpbmRldGVybWluYXRlXCIsIFwiaXNtYXBcIiwgXCJsb29wXCIsIFwibXVsdGlwbGVcIiwgXCJtdXRlZFwiLCBcIm5vbW9kdWxlXCIsIFwibm92YWxpZGF0ZVwiLCBcIm9wZW5cIiwgXCJwbGF5c2lubGluZVwiLCBcInJlYWRvbmx5XCIsIFwicmVxdWlyZWRcIiwgXCJyZXZlcnNlZFwiLCBcInNlYW1sZXNzXCIsIFwic2VsZWN0ZWRcIl07XG5jb25zdCBQcm9wZXJ0aWVzID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoW1wiY2xhc3NOYW1lXCIsIFwidmFsdWVcIiwgXCJyZWFkT25seVwiLCBcImZvcm1Ob1ZhbGlkYXRlXCIsIFwiaXNNYXBcIiwgXCJub01vZHVsZVwiLCBcInBsYXlzSW5saW5lXCIsIC4uLmJvb2xlYW5zXSk7XG5jb25zdCBDaGlsZFByb3BlcnRpZXMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldChbXCJpbm5lckhUTUxcIiwgXCJ0ZXh0Q29udGVudFwiLCBcImlubmVyVGV4dFwiLCBcImNoaWxkcmVuXCJdKTtcbmNvbnN0IEFsaWFzZXMgPSAvKiBAX19QVVJFX18gKi8gT2JqZWN0LmFzc2lnbigvKiBAX19QVVJFX18gKi8gT2JqZWN0LmNyZWF0ZShudWxsKSwge1xuICBjbGFzc05hbWU6IFwiY2xhc3NcIixcbiAgaHRtbEZvcjogXCJmb3JcIlxufSk7XG5jb25zdCBQcm9wQWxpYXNlcyA9IC8qIEBfX1BVUkVfXyAqLyBPYmplY3QuYXNzaWduKC8qIEBfX1BVUkVfXyAqLyBPYmplY3QuY3JlYXRlKG51bGwpLCB7XG4gIGNsYXNzOiBcImNsYXNzTmFtZVwiLFxuICBmb3Jtbm92YWxpZGF0ZTogXCJmb3JtTm9WYWxpZGF0ZVwiLFxuICBpc21hcDogXCJpc01hcFwiLFxuICBub21vZHVsZTogXCJub01vZHVsZVwiLFxuICBwbGF5c2lubGluZTogXCJwbGF5c0lubGluZVwiLFxuICByZWFkb25seTogXCJyZWFkT25seVwiXG59KTtcbmNvbnN0IERlbGVnYXRlZEV2ZW50cyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KFtcImJlZm9yZWlucHV0XCIsIFwiY2xpY2tcIiwgXCJkYmxjbGlja1wiLCBcImNvbnRleHRtZW51XCIsIFwiZm9jdXNpblwiLCBcImZvY3Vzb3V0XCIsIFwiaW5wdXRcIiwgXCJrZXlkb3duXCIsIFwia2V5dXBcIiwgXCJtb3VzZWRvd25cIiwgXCJtb3VzZW1vdmVcIiwgXCJtb3VzZW91dFwiLCBcIm1vdXNlb3ZlclwiLCBcIm1vdXNldXBcIiwgXCJwb2ludGVyZG93blwiLCBcInBvaW50ZXJtb3ZlXCIsIFwicG9pbnRlcm91dFwiLCBcInBvaW50ZXJvdmVyXCIsIFwicG9pbnRlcnVwXCIsIFwidG91Y2hlbmRcIiwgXCJ0b3VjaG1vdmVcIiwgXCJ0b3VjaHN0YXJ0XCJdKTtcbmNvbnN0IFNWR0VsZW1lbnRzID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoW1xuICBcImFsdEdseXBoXCIsXG4gIFwiYWx0R2x5cGhEZWZcIixcbiAgXCJhbHRHbHlwaEl0ZW1cIixcbiAgXCJhbmltYXRlXCIsXG4gIFwiYW5pbWF0ZUNvbG9yXCIsXG4gIFwiYW5pbWF0ZU1vdGlvblwiLFxuICBcImFuaW1hdGVUcmFuc2Zvcm1cIixcbiAgXCJjaXJjbGVcIixcbiAgXCJjbGlwUGF0aFwiLFxuICBcImNvbG9yLXByb2ZpbGVcIixcbiAgXCJjdXJzb3JcIixcbiAgXCJkZWZzXCIsXG4gIFwiZGVzY1wiLFxuICBcImVsbGlwc2VcIixcbiAgXCJmZUJsZW5kXCIsXG4gIFwiZmVDb2xvck1hdHJpeFwiLFxuICBcImZlQ29tcG9uZW50VHJhbnNmZXJcIixcbiAgXCJmZUNvbXBvc2l0ZVwiLFxuICBcImZlQ29udm9sdmVNYXRyaXhcIixcbiAgXCJmZURpZmZ1c2VMaWdodGluZ1wiLFxuICBcImZlRGlzcGxhY2VtZW50TWFwXCIsXG4gIFwiZmVEaXN0YW50TGlnaHRcIixcbiAgXCJmZUZsb29kXCIsXG4gIFwiZmVGdW5jQVwiLFxuICBcImZlRnVuY0JcIixcbiAgXCJmZUZ1bmNHXCIsXG4gIFwiZmVGdW5jUlwiLFxuICBcImZlR2F1c3NpYW5CbHVyXCIsXG4gIFwiZmVJbWFnZVwiLFxuICBcImZlTWVyZ2VcIixcbiAgXCJmZU1lcmdlTm9kZVwiLFxuICBcImZlTW9ycGhvbG9neVwiLFxuICBcImZlT2Zmc2V0XCIsXG4gIFwiZmVQb2ludExpZ2h0XCIsXG4gIFwiZmVTcGVjdWxhckxpZ2h0aW5nXCIsXG4gIFwiZmVTcG90TGlnaHRcIixcbiAgXCJmZVRpbGVcIixcbiAgXCJmZVR1cmJ1bGVuY2VcIixcbiAgXCJmaWx0ZXJcIixcbiAgXCJmb250XCIsXG4gIFwiZm9udC1mYWNlXCIsXG4gIFwiZm9udC1mYWNlLWZvcm1hdFwiLFxuICBcImZvbnQtZmFjZS1uYW1lXCIsXG4gIFwiZm9udC1mYWNlLXNyY1wiLFxuICBcImZvbnQtZmFjZS11cmlcIixcbiAgXCJmb3JlaWduT2JqZWN0XCIsXG4gIFwiZ1wiLFxuICBcImdseXBoXCIsXG4gIFwiZ2x5cGhSZWZcIixcbiAgXCJoa2VyblwiLFxuICBcImltYWdlXCIsXG4gIFwibGluZVwiLFxuICBcImxpbmVhckdyYWRpZW50XCIsXG4gIFwibWFya2VyXCIsXG4gIFwibWFza1wiLFxuICBcIm1ldGFkYXRhXCIsXG4gIFwibWlzc2luZy1nbHlwaFwiLFxuICBcIm1wYXRoXCIsXG4gIFwicGF0aFwiLFxuICBcInBhdHRlcm5cIixcbiAgXCJwb2x5Z29uXCIsXG4gIFwicG9seWxpbmVcIixcbiAgXCJyYWRpYWxHcmFkaWVudFwiLFxuICBcInJlY3RcIixcbiAgXCJzZXRcIixcbiAgXCJzdG9wXCIsXG4gIFwic3ZnXCIsXG4gIFwic3dpdGNoXCIsXG4gIFwic3ltYm9sXCIsXG4gIFwidGV4dFwiLFxuICBcInRleHRQYXRoXCIsXG4gIFwidHJlZlwiLFxuICBcInRzcGFuXCIsXG4gIFwidXNlXCIsXG4gIFwidmlld1wiLFxuICBcInZrZXJuXCJcbl0pO1xuY29uc3QgU1ZHTmFtZXNwYWNlID0ge1xuICB4bGluazogXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsXG4gIHhtbDogXCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIlxufTtcbmZ1bmN0aW9uIHJlY29uY2lsZUFycmF5cyhwYXJlbnROb2RlLCBhMiwgYikge1xuICBsZXQgYkxlbmd0aCA9IGIubGVuZ3RoLCBhRW5kID0gYTIubGVuZ3RoLCBiRW5kID0gYkxlbmd0aCwgYVN0YXJ0ID0gMCwgYlN0YXJ0ID0gMCwgYWZ0ZXIgPSBhMlthRW5kIC0gMV0ubmV4dFNpYmxpbmcsIG1hcCA9IG51bGw7XG4gIHdoaWxlIChhU3RhcnQgPCBhRW5kIHx8IGJTdGFydCA8IGJFbmQpIHtcbiAgICBpZiAoYTJbYVN0YXJ0XSA9PT0gYltiU3RhcnRdKSB7XG4gICAgICBhU3RhcnQrKztcbiAgICAgIGJTdGFydCsrO1xuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIHdoaWxlIChhMlthRW5kIC0gMV0gPT09IGJbYkVuZCAtIDFdKSB7XG4gICAgICBhRW5kLS07XG4gICAgICBiRW5kLS07XG4gICAgfVxuICAgIGlmIChhRW5kID09PSBhU3RhcnQpIHtcbiAgICAgIGNvbnN0IG5vZGUgPSBiRW5kIDwgYkxlbmd0aCA/IGJTdGFydCA/IGJbYlN0YXJ0IC0gMV0ubmV4dFNpYmxpbmcgOiBiW2JFbmQgLSBiU3RhcnRdIDogYWZ0ZXI7XG4gICAgICB3aGlsZSAoYlN0YXJ0IDwgYkVuZClcbiAgICAgICAgcGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYltiU3RhcnQrK10sIG5vZGUpO1xuICAgIH0gZWxzZSBpZiAoYkVuZCA9PT0gYlN0YXJ0KSB7XG4gICAgICB3aGlsZSAoYVN0YXJ0IDwgYUVuZCkge1xuICAgICAgICBpZiAoIW1hcCB8fCAhbWFwLmhhcyhhMlthU3RhcnRdKSlcbiAgICAgICAgICBhMlthU3RhcnRdLnJlbW92ZSgpO1xuICAgICAgICBhU3RhcnQrKztcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGEyW2FTdGFydF0gPT09IGJbYkVuZCAtIDFdICYmIGJbYlN0YXJ0XSA9PT0gYTJbYUVuZCAtIDFdKSB7XG4gICAgICBjb25zdCBub2RlID0gYTJbLS1hRW5kXS5uZXh0U2libGluZztcbiAgICAgIHBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGJbYlN0YXJ0KytdLCBhMlthU3RhcnQrK10ubmV4dFNpYmxpbmcpO1xuICAgICAgcGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYlstLWJFbmRdLCBub2RlKTtcbiAgICAgIGEyW2FFbmRdID0gYltiRW5kXTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKCFtYXApIHtcbiAgICAgICAgbWFwID0gLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKTtcbiAgICAgICAgbGV0IGkyID0gYlN0YXJ0O1xuICAgICAgICB3aGlsZSAoaTIgPCBiRW5kKVxuICAgICAgICAgIG1hcC5zZXQoYltpMl0sIGkyKyspO1xuICAgICAgfVxuICAgICAgY29uc3QgaW5kZXggPSBtYXAuZ2V0KGEyW2FTdGFydF0pO1xuICAgICAgaWYgKGluZGV4ICE9IG51bGwpIHtcbiAgICAgICAgaWYgKGJTdGFydCA8IGluZGV4ICYmIGluZGV4IDwgYkVuZCkge1xuICAgICAgICAgIGxldCBpMiA9IGFTdGFydCwgc2VxdWVuY2UgPSAxLCB0MjtcbiAgICAgICAgICB3aGlsZSAoKytpMiA8IGFFbmQgJiYgaTIgPCBiRW5kKSB7XG4gICAgICAgICAgICBpZiAoKHQyID0gbWFwLmdldChhMltpMl0pKSA9PSBudWxsIHx8IHQyICE9PSBpbmRleCArIHNlcXVlbmNlKVxuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIHNlcXVlbmNlKys7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChzZXF1ZW5jZSA+IGluZGV4IC0gYlN0YXJ0KSB7XG4gICAgICAgICAgICBjb25zdCBub2RlID0gYTJbYVN0YXJ0XTtcbiAgICAgICAgICAgIHdoaWxlIChiU3RhcnQgPCBpbmRleClcbiAgICAgICAgICAgICAgcGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYltiU3RhcnQrK10sIG5vZGUpO1xuICAgICAgICAgIH0gZWxzZVxuICAgICAgICAgICAgcGFyZW50Tm9kZS5yZXBsYWNlQ2hpbGQoYltiU3RhcnQrK10sIGEyW2FTdGFydCsrXSk7XG4gICAgICAgIH0gZWxzZVxuICAgICAgICAgIGFTdGFydCsrO1xuICAgICAgfSBlbHNlXG4gICAgICAgIGEyW2FTdGFydCsrXS5yZW1vdmUoKTtcbiAgICB9XG4gIH1cbn1cbmNvbnN0ICQkRVZFTlRTID0gXCJfJERYX0RFTEVHQVRFXCI7XG5mdW5jdGlvbiByZW5kZXIoY29kZSwgZWxlbWVudCwgaW5pdCwgb3B0aW9ucyA9IHt9KSB7XG4gIGxldCBkaXNwb3NlcjtcbiAgY3JlYXRlUm9vdCgoZGlzcG9zZTIpID0+IHtcbiAgICBkaXNwb3NlciA9IGRpc3Bvc2UyO1xuICAgIGVsZW1lbnQgPT09IGRvY3VtZW50ID8gY29kZSgpIDogaW5zZXJ0KGVsZW1lbnQsIGNvZGUoKSwgZWxlbWVudC5maXJzdENoaWxkID8gbnVsbCA6IHZvaWQgMCwgaW5pdCk7XG4gIH0sIG9wdGlvbnMub3duZXIpO1xuICByZXR1cm4gKCkgPT4ge1xuICAgIGRpc3Bvc2VyKCk7XG4gICAgZWxlbWVudC50ZXh0Q29udGVudCA9IFwiXCI7XG4gIH07XG59XG5mdW5jdGlvbiB0ZW1wbGF0ZSQxKGh0bWwsIGNoZWNrLCBpc1NWRykge1xuICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGNvbnN0IHQyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRlbXBsYXRlXCIpO1xuICB0Mi5pbm5lckhUTUwgPSBodG1sO1xuICBsZXQgbm9kZSA9IHQyLmNvbnRlbnQuZmlyc3RDaGlsZDtcbiAgaWYgKGlzU1ZHKVxuICAgIG5vZGUgPSBub2RlLmZpcnN0Q2hpbGQ7XG4gIHJldHVybiBub2RlO1xufVxuZnVuY3Rpb24gZGVsZWdhdGVFdmVudHMoZXZlbnROYW1lcywgZG9jdW1lbnQyID0gd2luZG93LmRvY3VtZW50KSB7XG4gIGNvbnN0IGUyID0gZG9jdW1lbnQyWyQkRVZFTlRTXSB8fCAoZG9jdW1lbnQyWyQkRVZFTlRTXSA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KCkpO1xuICBmb3IgKGxldCBpMiA9IDAsIGwyID0gZXZlbnROYW1lcy5sZW5ndGg7IGkyIDwgbDI7IGkyKyspIHtcbiAgICBjb25zdCBuYW1lID0gZXZlbnROYW1lc1tpMl07XG4gICAgaWYgKCFlMi5oYXMobmFtZSkpIHtcbiAgICAgIGUyLmFkZChuYW1lKTtcbiAgICAgIGRvY3VtZW50Mi5hZGRFdmVudExpc3RlbmVyKG5hbWUsIGV2ZW50SGFuZGxlcik7XG4gICAgfVxuICB9XG59XG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGUobm9kZSwgbmFtZSwgdmFsdWUpIHtcbiAgaWYgKHZhbHVlID09IG51bGwpXG4gICAgbm9kZS5yZW1vdmVBdHRyaWJ1dGUobmFtZSk7XG4gIGVsc2VcbiAgICBub2RlLnNldEF0dHJpYnV0ZShuYW1lLCB2YWx1ZSk7XG59XG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVOUyhub2RlLCBuYW1lc3BhY2UsIG5hbWUsIHZhbHVlKSB7XG4gIGlmICh2YWx1ZSA9PSBudWxsKVxuICAgIG5vZGUucmVtb3ZlQXR0cmlidXRlTlMobmFtZXNwYWNlLCBuYW1lKTtcbiAgZWxzZVxuICAgIG5vZGUuc2V0QXR0cmlidXRlTlMobmFtZXNwYWNlLCBuYW1lLCB2YWx1ZSk7XG59XG5mdW5jdGlvbiBjbGFzc05hbWUobm9kZSwgdmFsdWUpIHtcbiAgaWYgKHZhbHVlID09IG51bGwpXG4gICAgbm9kZS5yZW1vdmVBdHRyaWJ1dGUoXCJjbGFzc1wiKTtcbiAgZWxzZVxuICAgIG5vZGUuY2xhc3NOYW1lID0gdmFsdWU7XG59XG5mdW5jdGlvbiBhZGRFdmVudExpc3RlbmVyKG5vZGUsIG5hbWUsIGhhbmRsZXIsIGRlbGVnYXRlKSB7XG4gIGlmIChkZWxlZ2F0ZSkge1xuICAgIGlmIChBcnJheS5pc0FycmF5KGhhbmRsZXIpKSB7XG4gICAgICBub2RlW2AkJCR7bmFtZX1gXSA9IGhhbmRsZXJbMF07XG4gICAgICBub2RlW2AkJCR7bmFtZX1EYXRhYF0gPSBoYW5kbGVyWzFdO1xuICAgIH0gZWxzZVxuICAgICAgbm9kZVtgJCQke25hbWV9YF0gPSBoYW5kbGVyO1xuICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoaGFuZGxlcikpIHtcbiAgICBjb25zdCBoYW5kbGVyRm4gPSBoYW5kbGVyWzBdO1xuICAgIG5vZGUuYWRkRXZlbnRMaXN0ZW5lcihuYW1lLCBoYW5kbGVyWzBdID0gKGUyKSA9PiBoYW5kbGVyRm4uY2FsbChub2RlLCBoYW5kbGVyWzFdLCBlMikpO1xuICB9IGVsc2VcbiAgICBub2RlLmFkZEV2ZW50TGlzdGVuZXIobmFtZSwgaGFuZGxlcik7XG59XG5mdW5jdGlvbiBjbGFzc0xpc3Qobm9kZSwgdmFsdWUsIHByZXYgPSB7fSkge1xuICBjb25zdCBjbGFzc0tleXMgPSBPYmplY3Qua2V5cyh2YWx1ZSB8fCB7fSksIHByZXZLZXlzID0gT2JqZWN0LmtleXMocHJldik7XG4gIGxldCBpMiwgbGVuO1xuICBmb3IgKGkyID0gMCwgbGVuID0gcHJldktleXMubGVuZ3RoOyBpMiA8IGxlbjsgaTIrKykge1xuICAgIGNvbnN0IGtleSA9IHByZXZLZXlzW2kyXTtcbiAgICBpZiAoIWtleSB8fCBrZXkgPT09IFwidW5kZWZpbmVkXCIgfHwgdmFsdWVba2V5XSlcbiAgICAgIGNvbnRpbnVlO1xuICAgIHRvZ2dsZUNsYXNzS2V5KG5vZGUsIGtleSwgZmFsc2UpO1xuICAgIGRlbGV0ZSBwcmV2W2tleV07XG4gIH1cbiAgZm9yIChpMiA9IDAsIGxlbiA9IGNsYXNzS2V5cy5sZW5ndGg7IGkyIDwgbGVuOyBpMisrKSB7XG4gICAgY29uc3Qga2V5ID0gY2xhc3NLZXlzW2kyXSwgY2xhc3NWYWx1ZSA9ICEhdmFsdWVba2V5XTtcbiAgICBpZiAoIWtleSB8fCBrZXkgPT09IFwidW5kZWZpbmVkXCIgfHwgcHJldltrZXldID09PSBjbGFzc1ZhbHVlIHx8ICFjbGFzc1ZhbHVlKVxuICAgICAgY29udGludWU7XG4gICAgdG9nZ2xlQ2xhc3NLZXkobm9kZSwga2V5LCB0cnVlKTtcbiAgICBwcmV2W2tleV0gPSBjbGFzc1ZhbHVlO1xuICB9XG4gIHJldHVybiBwcmV2O1xufVxuZnVuY3Rpb24gc3R5bGUobm9kZSwgdmFsdWUsIHByZXYpIHtcbiAgaWYgKCF2YWx1ZSlcbiAgICByZXR1cm4gcHJldiA/IHNldEF0dHJpYnV0ZShub2RlLCBcInN0eWxlXCIpIDogdmFsdWU7XG4gIGNvbnN0IG5vZGVTdHlsZSA9IG5vZGUuc3R5bGU7XG4gIGlmICh0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIpXG4gICAgcmV0dXJuIG5vZGVTdHlsZS5jc3NUZXh0ID0gdmFsdWU7XG4gIHR5cGVvZiBwcmV2ID09PSBcInN0cmluZ1wiICYmIChub2RlU3R5bGUuY3NzVGV4dCA9IHByZXYgPSB2b2lkIDApO1xuICBwcmV2IHx8IChwcmV2ID0ge30pO1xuICB2YWx1ZSB8fCAodmFsdWUgPSB7fSk7XG4gIGxldCB2LCBzMjtcbiAgZm9yIChzMiBpbiBwcmV2KSB7XG4gICAgdmFsdWVbczJdID09IG51bGwgJiYgbm9kZVN0eWxlLnJlbW92ZVByb3BlcnR5KHMyKTtcbiAgICBkZWxldGUgcHJldltzMl07XG4gIH1cbiAgZm9yIChzMiBpbiB2YWx1ZSkge1xuICAgIHYgPSB2YWx1ZVtzMl07XG4gICAgaWYgKHYgIT09IHByZXZbczJdKSB7XG4gICAgICBub2RlU3R5bGUuc2V0UHJvcGVydHkoczIsIHYpO1xuICAgICAgcHJldltzMl0gPSB2O1xuICAgIH1cbiAgfVxuICByZXR1cm4gcHJldjtcbn1cbmZ1bmN0aW9uIHNwcmVhZChub2RlLCBwcm9wcyA9IHt9LCBpc1NWRywgc2tpcENoaWxkcmVuKSB7XG4gIGNvbnN0IHByZXZQcm9wcyA9IHt9O1xuICBpZiAoIXNraXBDaGlsZHJlbikge1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoKSA9PiBwcmV2UHJvcHMuY2hpbGRyZW4gPSBpbnNlcnRFeHByZXNzaW9uKG5vZGUsIHByb3BzLmNoaWxkcmVuLCBwcmV2UHJvcHMuY2hpbGRyZW4pKTtcbiAgfVxuICBjcmVhdGVSZW5kZXJFZmZlY3QoKCkgPT4gcHJvcHMucmVmICYmIHByb3BzLnJlZihub2RlKSk7XG4gIGNyZWF0ZVJlbmRlckVmZmVjdCgoKSA9PiBhc3NpZ24obm9kZSwgcHJvcHMsIGlzU1ZHLCB0cnVlLCBwcmV2UHJvcHMsIHRydWUpKTtcbiAgcmV0dXJuIHByZXZQcm9wcztcbn1cbmZ1bmN0aW9uIHVzZShmbiwgZWxlbWVudCwgYXJnKSB7XG4gIHJldHVybiB1bnRyYWNrKCgpID0+IGZuKGVsZW1lbnQsIGFyZykpO1xufVxuZnVuY3Rpb24gaW5zZXJ0KHBhcmVudCwgYWNjZXNzb3IsIG1hcmtlciwgaW5pdGlhbCkge1xuICBpZiAobWFya2VyICE9PSB2b2lkIDAgJiYgIWluaXRpYWwpXG4gICAgaW5pdGlhbCA9IFtdO1xuICBpZiAodHlwZW9mIGFjY2Vzc29yICE9PSBcImZ1bmN0aW9uXCIpXG4gICAgcmV0dXJuIGluc2VydEV4cHJlc3Npb24ocGFyZW50LCBhY2Nlc3NvciwgaW5pdGlhbCwgbWFya2VyKTtcbiAgY3JlYXRlUmVuZGVyRWZmZWN0KChjdXJyZW50KSA9PiBpbnNlcnRFeHByZXNzaW9uKHBhcmVudCwgYWNjZXNzb3IoKSwgY3VycmVudCwgbWFya2VyKSwgaW5pdGlhbCk7XG59XG5mdW5jdGlvbiBhc3NpZ24obm9kZSwgcHJvcHMsIGlzU1ZHLCBza2lwQ2hpbGRyZW4sIHByZXZQcm9wcyA9IHt9LCBza2lwUmVmID0gZmFsc2UpIHtcbiAgcHJvcHMgfHwgKHByb3BzID0ge30pO1xuICBmb3IgKGNvbnN0IHByb3AgaW4gcHJldlByb3BzKSB7XG4gICAgaWYgKCEocHJvcCBpbiBwcm9wcykpIHtcbiAgICAgIGlmIChwcm9wID09PSBcImNoaWxkcmVuXCIpXG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgcHJldlByb3BzW3Byb3BdID0gYXNzaWduUHJvcChub2RlLCBwcm9wLCBudWxsLCBwcmV2UHJvcHNbcHJvcF0sIGlzU1ZHLCBza2lwUmVmKTtcbiAgICB9XG4gIH1cbiAgZm9yIChjb25zdCBwcm9wIGluIHByb3BzKSB7XG4gICAgaWYgKHByb3AgPT09IFwiY2hpbGRyZW5cIikge1xuICAgICAgaWYgKCFza2lwQ2hpbGRyZW4pXG4gICAgICAgIGluc2VydEV4cHJlc3Npb24obm9kZSwgcHJvcHMuY2hpbGRyZW4pO1xuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIGNvbnN0IHZhbHVlID0gcHJvcHNbcHJvcF07XG4gICAgcHJldlByb3BzW3Byb3BdID0gYXNzaWduUHJvcChub2RlLCBwcm9wLCB2YWx1ZSwgcHJldlByb3BzW3Byb3BdLCBpc1NWRywgc2tpcFJlZik7XG4gIH1cbn1cbmZ1bmN0aW9uIGdldE5leHRFbGVtZW50KHRlbXBsYXRlMikge1xuICBsZXQgbm9kZSwga2V5O1xuICBpZiAoIXNoYXJlZENvbmZpZy5jb250ZXh0IHx8ICEobm9kZSA9IHNoYXJlZENvbmZpZy5yZWdpc3RyeS5nZXQoa2V5ID0gZ2V0SHlkcmF0aW9uS2V5KCkpKSkge1xuICAgIHJldHVybiB0ZW1wbGF0ZTIuY2xvbmVOb2RlKHRydWUpO1xuICB9XG4gIGlmIChzaGFyZWRDb25maWcuY29tcGxldGVkKVxuICAgIHNoYXJlZENvbmZpZy5jb21wbGV0ZWQuYWRkKG5vZGUpO1xuICBzaGFyZWRDb25maWcucmVnaXN0cnkuZGVsZXRlKGtleSk7XG4gIHJldHVybiBub2RlO1xufVxuZnVuY3Rpb24gdG9Qcm9wZXJ0eU5hbWUobmFtZSkge1xuICByZXR1cm4gbmFtZS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoLy0oW2Etel0pL2csIChfLCB3KSA9PiB3LnRvVXBwZXJDYXNlKCkpO1xufVxuZnVuY3Rpb24gdG9nZ2xlQ2xhc3NLZXkobm9kZSwga2V5LCB2YWx1ZSkge1xuICBjb25zdCBjbGFzc05hbWVzID0ga2V5LnRyaW0oKS5zcGxpdCgvXFxzKy8pO1xuICBmb3IgKGxldCBpMiA9IDAsIG5hbWVMZW4gPSBjbGFzc05hbWVzLmxlbmd0aDsgaTIgPCBuYW1lTGVuOyBpMisrKVxuICAgIG5vZGUuY2xhc3NMaXN0LnRvZ2dsZShjbGFzc05hbWVzW2kyXSwgdmFsdWUpO1xufVxuZnVuY3Rpb24gYXNzaWduUHJvcChub2RlLCBwcm9wLCB2YWx1ZSwgcHJldiwgaXNTVkcsIHNraXBSZWYpIHtcbiAgbGV0IGlzQ0UsIGlzUHJvcCwgaXNDaGlsZFByb3A7XG4gIGlmIChwcm9wID09PSBcInN0eWxlXCIpXG4gICAgcmV0dXJuIHN0eWxlKG5vZGUsIHZhbHVlLCBwcmV2KTtcbiAgaWYgKHByb3AgPT09IFwiY2xhc3NMaXN0XCIpXG4gICAgcmV0dXJuIGNsYXNzTGlzdChub2RlLCB2YWx1ZSwgcHJldik7XG4gIGlmICh2YWx1ZSA9PT0gcHJldilcbiAgICByZXR1cm4gcHJldjtcbiAgaWYgKHByb3AgPT09IFwicmVmXCIpIHtcbiAgICBpZiAoIXNraXBSZWYpXG4gICAgICB2YWx1ZShub2RlKTtcbiAgfSBlbHNlIGlmIChwcm9wLnNsaWNlKDAsIDMpID09PSBcIm9uOlwiKSB7XG4gICAgY29uc3QgZTIgPSBwcm9wLnNsaWNlKDMpO1xuICAgIHByZXYgJiYgbm9kZS5yZW1vdmVFdmVudExpc3RlbmVyKGUyLCBwcmV2KTtcbiAgICB2YWx1ZSAmJiBub2RlLmFkZEV2ZW50TGlzdGVuZXIoZTIsIHZhbHVlKTtcbiAgfSBlbHNlIGlmIChwcm9wLnNsaWNlKDAsIDEwKSA9PT0gXCJvbmNhcHR1cmU6XCIpIHtcbiAgICBjb25zdCBlMiA9IHByb3Auc2xpY2UoMTApO1xuICAgIHByZXYgJiYgbm9kZS5yZW1vdmVFdmVudExpc3RlbmVyKGUyLCBwcmV2LCB0cnVlKTtcbiAgICB2YWx1ZSAmJiBub2RlLmFkZEV2ZW50TGlzdGVuZXIoZTIsIHZhbHVlLCB0cnVlKTtcbiAgfSBlbHNlIGlmIChwcm9wLnNsaWNlKDAsIDIpID09PSBcIm9uXCIpIHtcbiAgICBjb25zdCBuYW1lID0gcHJvcC5zbGljZSgyKS50b0xvd2VyQ2FzZSgpO1xuICAgIGNvbnN0IGRlbGVnYXRlID0gRGVsZWdhdGVkRXZlbnRzLmhhcyhuYW1lKTtcbiAgICBpZiAoIWRlbGVnYXRlICYmIHByZXYpIHtcbiAgICAgIGNvbnN0IGgyID0gQXJyYXkuaXNBcnJheShwcmV2KSA/IHByZXZbMF0gOiBwcmV2O1xuICAgICAgbm9kZS5yZW1vdmVFdmVudExpc3RlbmVyKG5hbWUsIGgyKTtcbiAgICB9XG4gICAgaWYgKGRlbGVnYXRlIHx8IHZhbHVlKSB7XG4gICAgICBhZGRFdmVudExpc3RlbmVyKG5vZGUsIG5hbWUsIHZhbHVlLCBkZWxlZ2F0ZSk7XG4gICAgICBkZWxlZ2F0ZSAmJiBkZWxlZ2F0ZUV2ZW50cyhbbmFtZV0pO1xuICAgIH1cbiAgfSBlbHNlIGlmICgoaXNDaGlsZFByb3AgPSBDaGlsZFByb3BlcnRpZXMuaGFzKHByb3ApKSB8fCAhaXNTVkcgJiYgKFByb3BBbGlhc2VzW3Byb3BdIHx8IChpc1Byb3AgPSBQcm9wZXJ0aWVzLmhhcyhwcm9wKSkpIHx8IChpc0NFID0gbm9kZS5ub2RlTmFtZS5pbmNsdWRlcyhcIi1cIikpKSB7XG4gICAgaWYgKHByb3AgPT09IFwiY2xhc3NcIiB8fCBwcm9wID09PSBcImNsYXNzTmFtZVwiKVxuICAgICAgY2xhc3NOYW1lKG5vZGUsIHZhbHVlKTtcbiAgICBlbHNlIGlmIChpc0NFICYmICFpc1Byb3AgJiYgIWlzQ2hpbGRQcm9wKVxuICAgICAgbm9kZVt0b1Byb3BlcnR5TmFtZShwcm9wKV0gPSB2YWx1ZTtcbiAgICBlbHNlXG4gICAgICBub2RlW1Byb3BBbGlhc2VzW3Byb3BdIHx8IHByb3BdID0gdmFsdWU7XG4gIH0gZWxzZSB7XG4gICAgY29uc3QgbnMgPSBpc1NWRyAmJiBwcm9wLmluZGV4T2YoXCI6XCIpID4gLTEgJiYgU1ZHTmFtZXNwYWNlW3Byb3Auc3BsaXQoXCI6XCIpWzBdXTtcbiAgICBpZiAobnMpXG4gICAgICBzZXRBdHRyaWJ1dGVOUyhub2RlLCBucywgcHJvcCwgdmFsdWUpO1xuICAgIGVsc2VcbiAgICAgIHNldEF0dHJpYnV0ZShub2RlLCBBbGlhc2VzW3Byb3BdIHx8IHByb3AsIHZhbHVlKTtcbiAgfVxuICByZXR1cm4gdmFsdWU7XG59XG5mdW5jdGlvbiBldmVudEhhbmRsZXIoZTIpIHtcbiAgY29uc3Qga2V5ID0gYCQkJHtlMi50eXBlfWA7XG4gIGxldCBub2RlID0gZTIuY29tcG9zZWRQYXRoICYmIGUyLmNvbXBvc2VkUGF0aCgpWzBdIHx8IGUyLnRhcmdldDtcbiAgaWYgKGUyLnRhcmdldCAhPT0gbm9kZSkge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlMiwgXCJ0YXJnZXRcIiwge1xuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgdmFsdWU6IG5vZGVcbiAgICB9KTtcbiAgfVxuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZTIsIFwiY3VycmVudFRhcmdldFwiLCB7XG4gICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgIGdldCgpIHtcbiAgICAgIHJldHVybiBub2RlIHx8IGRvY3VtZW50O1xuICAgIH1cbiAgfSk7XG4gIGlmIChzaGFyZWRDb25maWcucmVnaXN0cnkgJiYgIXNoYXJlZENvbmZpZy5kb25lKSB7XG4gICAgc2hhcmVkQ29uZmlnLmRvbmUgPSB0cnVlO1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbaWRePXBsLV1cIikuZm9yRWFjaCgoZWxlbSkgPT4ge1xuICAgICAgd2hpbGUgKGVsZW0gJiYgZWxlbS5ub2RlVHlwZSAhPT0gOCAmJiBlbGVtLm5vZGVWYWx1ZSAhPT0gXCJwbC1cIiArIGUyKSB7XG4gICAgICAgIGxldCB4ID0gZWxlbS5uZXh0U2libGluZztcbiAgICAgICAgZWxlbS5yZW1vdmUoKTtcbiAgICAgICAgZWxlbSA9IHg7XG4gICAgICB9XG4gICAgICBlbGVtICYmIGVsZW0ucmVtb3ZlKCk7XG4gICAgfSk7XG4gIH1cbiAgd2hpbGUgKG5vZGUpIHtcbiAgICBjb25zdCBoYW5kbGVyID0gbm9kZVtrZXldO1xuICAgIGlmIChoYW5kbGVyICYmICFub2RlLmRpc2FibGVkKSB7XG4gICAgICBjb25zdCBkYXRhID0gbm9kZVtgJHtrZXl9RGF0YWBdO1xuICAgICAgZGF0YSAhPT0gdm9pZCAwID8gaGFuZGxlci5jYWxsKG5vZGUsIGRhdGEsIGUyKSA6IGhhbmRsZXIuY2FsbChub2RlLCBlMik7XG4gICAgICBpZiAoZTIuY2FuY2VsQnViYmxlKVxuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIG5vZGUgPSBub2RlLl8kaG9zdCB8fCBub2RlLnBhcmVudE5vZGUgfHwgbm9kZS5ob3N0O1xuICB9XG59XG5mdW5jdGlvbiBpbnNlcnRFeHByZXNzaW9uKHBhcmVudCwgdmFsdWUsIGN1cnJlbnQsIG1hcmtlciwgdW53cmFwQXJyYXkpIHtcbiAgaWYgKHNoYXJlZENvbmZpZy5jb250ZXh0ICYmICFjdXJyZW50KVxuICAgIGN1cnJlbnQgPSBbLi4ucGFyZW50LmNoaWxkTm9kZXNdO1xuICB3aGlsZSAodHlwZW9mIGN1cnJlbnQgPT09IFwiZnVuY3Rpb25cIilcbiAgICBjdXJyZW50ID0gY3VycmVudCgpO1xuICBpZiAodmFsdWUgPT09IGN1cnJlbnQpXG4gICAgcmV0dXJuIGN1cnJlbnQ7XG4gIGNvbnN0IHQyID0gdHlwZW9mIHZhbHVlLCBtdWx0aSA9IG1hcmtlciAhPT0gdm9pZCAwO1xuICBwYXJlbnQgPSBtdWx0aSAmJiBjdXJyZW50WzBdICYmIGN1cnJlbnRbMF0ucGFyZW50Tm9kZSB8fCBwYXJlbnQ7XG4gIGlmICh0MiA9PT0gXCJzdHJpbmdcIiB8fCB0MiA9PT0gXCJudW1iZXJcIikge1xuICAgIGlmIChzaGFyZWRDb25maWcuY29udGV4dClcbiAgICAgIHJldHVybiBjdXJyZW50O1xuICAgIGlmICh0MiA9PT0gXCJudW1iZXJcIilcbiAgICAgIHZhbHVlID0gdmFsdWUudG9TdHJpbmcoKTtcbiAgICBpZiAobXVsdGkpIHtcbiAgICAgIGxldCBub2RlID0gY3VycmVudFswXTtcbiAgICAgIGlmIChub2RlICYmIG5vZGUubm9kZVR5cGUgPT09IDMpIHtcbiAgICAgICAgbm9kZS5kYXRhID0gdmFsdWU7XG4gICAgICB9IGVsc2VcbiAgICAgICAgbm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHZhbHVlKTtcbiAgICAgIGN1cnJlbnQgPSBjbGVhbkNoaWxkcmVuKHBhcmVudCwgY3VycmVudCwgbWFya2VyLCBub2RlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKGN1cnJlbnQgIT09IFwiXCIgJiYgdHlwZW9mIGN1cnJlbnQgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgY3VycmVudCA9IHBhcmVudC5maXJzdENoaWxkLmRhdGEgPSB2YWx1ZTtcbiAgICAgIH0gZWxzZVxuICAgICAgICBjdXJyZW50ID0gcGFyZW50LnRleHRDb250ZW50ID0gdmFsdWU7XG4gICAgfVxuICB9IGVsc2UgaWYgKHZhbHVlID09IG51bGwgfHwgdDIgPT09IFwiYm9vbGVhblwiKSB7XG4gICAgaWYgKHNoYXJlZENvbmZpZy5jb250ZXh0KVxuICAgICAgcmV0dXJuIGN1cnJlbnQ7XG4gICAgY3VycmVudCA9IGNsZWFuQ2hpbGRyZW4ocGFyZW50LCBjdXJyZW50LCBtYXJrZXIpO1xuICB9IGVsc2UgaWYgKHQyID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKCkgPT4ge1xuICAgICAgbGV0IHYgPSB2YWx1ZSgpO1xuICAgICAgd2hpbGUgKHR5cGVvZiB2ID09PSBcImZ1bmN0aW9uXCIpXG4gICAgICAgIHYgPSB2KCk7XG4gICAgICBjdXJyZW50ID0gaW5zZXJ0RXhwcmVzc2lvbihwYXJlbnQsIHYsIGN1cnJlbnQsIG1hcmtlcik7XG4gICAgfSk7XG4gICAgcmV0dXJuICgpID0+IGN1cnJlbnQ7XG4gIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICBjb25zdCBhcnJheSA9IFtdO1xuICAgIGNvbnN0IGN1cnJlbnRBcnJheSA9IGN1cnJlbnQgJiYgQXJyYXkuaXNBcnJheShjdXJyZW50KTtcbiAgICBpZiAobm9ybWFsaXplSW5jb21pbmdBcnJheShhcnJheSwgdmFsdWUsIGN1cnJlbnQsIHVud3JhcEFycmF5KSkge1xuICAgICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IGN1cnJlbnQgPSBpbnNlcnRFeHByZXNzaW9uKHBhcmVudCwgYXJyYXksIGN1cnJlbnQsIG1hcmtlciwgdHJ1ZSkpO1xuICAgICAgcmV0dXJuICgpID0+IGN1cnJlbnQ7XG4gICAgfVxuICAgIGlmIChzaGFyZWRDb25maWcuY29udGV4dCkge1xuICAgICAgaWYgKCFhcnJheS5sZW5ndGgpXG4gICAgICAgIHJldHVybiBjdXJyZW50O1xuICAgICAgZm9yIChsZXQgaTIgPSAwOyBpMiA8IGFycmF5Lmxlbmd0aDsgaTIrKykge1xuICAgICAgICBpZiAoYXJyYXlbaTJdLnBhcmVudE5vZGUpXG4gICAgICAgICAgcmV0dXJuIGN1cnJlbnQgPSBhcnJheTtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKGFycmF5Lmxlbmd0aCA9PT0gMCkge1xuICAgICAgY3VycmVudCA9IGNsZWFuQ2hpbGRyZW4ocGFyZW50LCBjdXJyZW50LCBtYXJrZXIpO1xuICAgICAgaWYgKG11bHRpKVxuICAgICAgICByZXR1cm4gY3VycmVudDtcbiAgICB9IGVsc2UgaWYgKGN1cnJlbnRBcnJheSkge1xuICAgICAgaWYgKGN1cnJlbnQubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIGFwcGVuZE5vZGVzKHBhcmVudCwgYXJyYXksIG1hcmtlcik7XG4gICAgICB9IGVsc2VcbiAgICAgICAgcmVjb25jaWxlQXJyYXlzKHBhcmVudCwgY3VycmVudCwgYXJyYXkpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjdXJyZW50ICYmIGNsZWFuQ2hpbGRyZW4ocGFyZW50KTtcbiAgICAgIGFwcGVuZE5vZGVzKHBhcmVudCwgYXJyYXkpO1xuICAgIH1cbiAgICBjdXJyZW50ID0gYXJyYXk7XG4gIH0gZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiBOb2RlKSB7XG4gICAgaWYgKHNoYXJlZENvbmZpZy5jb250ZXh0ICYmIHZhbHVlLnBhcmVudE5vZGUpXG4gICAgICByZXR1cm4gY3VycmVudCA9IG11bHRpID8gW3ZhbHVlXSA6IHZhbHVlO1xuICAgIGlmIChBcnJheS5pc0FycmF5KGN1cnJlbnQpKSB7XG4gICAgICBpZiAobXVsdGkpXG4gICAgICAgIHJldHVybiBjdXJyZW50ID0gY2xlYW5DaGlsZHJlbihwYXJlbnQsIGN1cnJlbnQsIG1hcmtlciwgdmFsdWUpO1xuICAgICAgY2xlYW5DaGlsZHJlbihwYXJlbnQsIGN1cnJlbnQsIG51bGwsIHZhbHVlKTtcbiAgICB9IGVsc2UgaWYgKGN1cnJlbnQgPT0gbnVsbCB8fCBjdXJyZW50ID09PSBcIlwiIHx8ICFwYXJlbnQuZmlyc3RDaGlsZCkge1xuICAgICAgcGFyZW50LmFwcGVuZENoaWxkKHZhbHVlKTtcbiAgICB9IGVsc2VcbiAgICAgIHBhcmVudC5yZXBsYWNlQ2hpbGQodmFsdWUsIHBhcmVudC5maXJzdENoaWxkKTtcbiAgICBjdXJyZW50ID0gdmFsdWU7XG4gIH0gZWxzZVxuICAgIDtcbiAgcmV0dXJuIGN1cnJlbnQ7XG59XG5mdW5jdGlvbiBub3JtYWxpemVJbmNvbWluZ0FycmF5KG5vcm1hbGl6ZWQsIGFycmF5LCBjdXJyZW50LCB1bndyYXAyKSB7XG4gIGxldCBkeW5hbWljID0gZmFsc2U7XG4gIGZvciAobGV0IGkyID0gMCwgbGVuID0gYXJyYXkubGVuZ3RoOyBpMiA8IGxlbjsgaTIrKykge1xuICAgIGxldCBpdGVtID0gYXJyYXlbaTJdLCBwcmV2ID0gY3VycmVudCAmJiBjdXJyZW50W2kyXTtcbiAgICBpZiAoaXRlbSBpbnN0YW5jZW9mIE5vZGUpIHtcbiAgICAgIG5vcm1hbGl6ZWQucHVzaChpdGVtKTtcbiAgICB9IGVsc2UgaWYgKGl0ZW0gPT0gbnVsbCB8fCBpdGVtID09PSB0cnVlIHx8IGl0ZW0gPT09IGZhbHNlKVxuICAgICAgO1xuICAgIGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoaXRlbSkpIHtcbiAgICAgIGR5bmFtaWMgPSBub3JtYWxpemVJbmNvbWluZ0FycmF5KG5vcm1hbGl6ZWQsIGl0ZW0sIHByZXYpIHx8IGR5bmFtaWM7XG4gICAgfSBlbHNlIGlmICh0eXBlb2YgaXRlbSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICBpZiAodW53cmFwMikge1xuICAgICAgICB3aGlsZSAodHlwZW9mIGl0ZW0gPT09IFwiZnVuY3Rpb25cIilcbiAgICAgICAgICBpdGVtID0gaXRlbSgpO1xuICAgICAgICBkeW5hbWljID0gbm9ybWFsaXplSW5jb21pbmdBcnJheShub3JtYWxpemVkLCBBcnJheS5pc0FycmF5KGl0ZW0pID8gaXRlbSA6IFtpdGVtXSwgQXJyYXkuaXNBcnJheShwcmV2KSA/IHByZXYgOiBbcHJldl0pIHx8IGR5bmFtaWM7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBub3JtYWxpemVkLnB1c2goaXRlbSk7XG4gICAgICAgIGR5bmFtaWMgPSB0cnVlO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCB2YWx1ZSA9IFN0cmluZyhpdGVtKTtcbiAgICAgIGlmIChwcmV2ICYmIHByZXYubm9kZVR5cGUgPT09IDMgJiYgcHJldi5kYXRhID09PSB2YWx1ZSkge1xuICAgICAgICBub3JtYWxpemVkLnB1c2gocHJldik7XG4gICAgICB9IGVsc2VcbiAgICAgICAgbm9ybWFsaXplZC5wdXNoKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHZhbHVlKSk7XG4gICAgfVxuICB9XG4gIHJldHVybiBkeW5hbWljO1xufVxuZnVuY3Rpb24gYXBwZW5kTm9kZXMocGFyZW50LCBhcnJheSwgbWFya2VyID0gbnVsbCkge1xuICBmb3IgKGxldCBpMiA9IDAsIGxlbiA9IGFycmF5Lmxlbmd0aDsgaTIgPCBsZW47IGkyKyspXG4gICAgcGFyZW50Lmluc2VydEJlZm9yZShhcnJheVtpMl0sIG1hcmtlcik7XG59XG5mdW5jdGlvbiBjbGVhbkNoaWxkcmVuKHBhcmVudCwgY3VycmVudCwgbWFya2VyLCByZXBsYWNlbWVudCkge1xuICBpZiAobWFya2VyID09PSB2b2lkIDApXG4gICAgcmV0dXJuIHBhcmVudC50ZXh0Q29udGVudCA9IFwiXCI7XG4gIGNvbnN0IG5vZGUgPSByZXBsYWNlbWVudCB8fCBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShcIlwiKTtcbiAgaWYgKGN1cnJlbnQubGVuZ3RoKSB7XG4gICAgbGV0IGluc2VydGVkID0gZmFsc2U7XG4gICAgZm9yIChsZXQgaTIgPSBjdXJyZW50Lmxlbmd0aCAtIDE7IGkyID49IDA7IGkyLS0pIHtcbiAgICAgIGNvbnN0IGVsID0gY3VycmVudFtpMl07XG4gICAgICBpZiAobm9kZSAhPT0gZWwpIHtcbiAgICAgICAgY29uc3QgaXNQYXJlbnQgPSBlbC5wYXJlbnROb2RlID09PSBwYXJlbnQ7XG4gICAgICAgIGlmICghaW5zZXJ0ZWQgJiYgIWkyKVxuICAgICAgICAgIGlzUGFyZW50ID8gcGFyZW50LnJlcGxhY2VDaGlsZChub2RlLCBlbCkgOiBwYXJlbnQuaW5zZXJ0QmVmb3JlKG5vZGUsIG1hcmtlcik7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICBpc1BhcmVudCAmJiBlbC5yZW1vdmUoKTtcbiAgICAgIH0gZWxzZVxuICAgICAgICBpbnNlcnRlZCA9IHRydWU7XG4gICAgfVxuICB9IGVsc2VcbiAgICBwYXJlbnQuaW5zZXJ0QmVmb3JlKG5vZGUsIG1hcmtlcik7XG4gIHJldHVybiBbbm9kZV07XG59XG5mdW5jdGlvbiBnZXRIeWRyYXRpb25LZXkoKSB7XG4gIGNvbnN0IGh5ZHJhdGUgPSBzaGFyZWRDb25maWcuY29udGV4dDtcbiAgcmV0dXJuIGAke2h5ZHJhdGUuaWR9JHtoeWRyYXRlLmNvdW50Kyt9YDtcbn1cbmNvbnN0IFNWR19OQU1FU1BBQ0UgPSBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI7XG5mdW5jdGlvbiBjcmVhdGVFbGVtZW50KHRhZ05hbWUsIGlzU1ZHID0gZmFsc2UpIHtcbiAgcmV0dXJuIGlzU1ZHID8gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKFNWR19OQU1FU1BBQ0UsIHRhZ05hbWUpIDogZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0YWdOYW1lKTtcbn1cbmZ1bmN0aW9uIFBvcnRhbChwcm9wcykge1xuICBjb25zdCB7XG4gICAgdXNlU2hhZG93XG4gIH0gPSBwcm9wcywgbWFya2VyID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoXCJcIiksIG1vdW50ID0gcHJvcHMubW91bnQgfHwgZG9jdW1lbnQuYm9keTtcbiAgZnVuY3Rpb24gcmVuZGVyUG9ydGFsKCkge1xuICAgIGlmIChzaGFyZWRDb25maWcuY29udGV4dCkge1xuICAgICAgY29uc3QgW3MyLCBzZXRdID0gY3JlYXRlU2lnbmFsKGZhbHNlKTtcbiAgICAgIHF1ZXVlTWljcm90YXNrKCgpID0+IHNldCh0cnVlKSk7XG4gICAgICByZXR1cm4gKCkgPT4gczIoKSAmJiBwcm9wcy5jaGlsZHJlbjtcbiAgICB9IGVsc2VcbiAgICAgIHJldHVybiAoKSA9PiBwcm9wcy5jaGlsZHJlbjtcbiAgfVxuICBpZiAobW91bnQgaW5zdGFuY2VvZiBIVE1MSGVhZEVsZW1lbnQpIHtcbiAgICBjb25zdCBbY2xlYW4sIHNldENsZWFuXSA9IGNyZWF0ZVNpZ25hbChmYWxzZSk7XG4gICAgY29uc3QgY2xlYW51cCA9ICgpID0+IHNldENsZWFuKHRydWUpO1xuICAgIGNyZWF0ZVJvb3QoKGRpc3Bvc2UyKSA9PiBpbnNlcnQobW91bnQsICgpID0+ICFjbGVhbigpID8gcmVuZGVyUG9ydGFsKCkoKSA6IGRpc3Bvc2UyKCksIG51bGwpKTtcbiAgICBvbkNsZWFudXAoKCkgPT4ge1xuICAgICAgaWYgKHNoYXJlZENvbmZpZy5jb250ZXh0KVxuICAgICAgICBxdWV1ZU1pY3JvdGFzayhjbGVhbnVwKTtcbiAgICAgIGVsc2VcbiAgICAgICAgY2xlYW51cCgpO1xuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIGNvbnN0IGNvbnRhaW5lciA9IGNyZWF0ZUVsZW1lbnQocHJvcHMuaXNTVkcgPyBcImdcIiA6IFwiZGl2XCIsIHByb3BzLmlzU1ZHKSwgcmVuZGVyUm9vdCA9IHVzZVNoYWRvdyAmJiBjb250YWluZXIuYXR0YWNoU2hhZG93ID8gY29udGFpbmVyLmF0dGFjaFNoYWRvdyh7XG4gICAgICBtb2RlOiBcIm9wZW5cIlxuICAgIH0pIDogY29udGFpbmVyO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShjb250YWluZXIsIFwiXyRob3N0XCIsIHtcbiAgICAgIGdldCgpIHtcbiAgICAgICAgcmV0dXJuIG1hcmtlci5wYXJlbnROb2RlO1xuICAgICAgfSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIGluc2VydChyZW5kZXJSb290LCByZW5kZXJQb3J0YWwoKSk7XG4gICAgbW91bnQuYXBwZW5kQ2hpbGQoY29udGFpbmVyKTtcbiAgICBwcm9wcy5yZWYgJiYgcHJvcHMucmVmKGNvbnRhaW5lcik7XG4gICAgb25DbGVhbnVwKCgpID0+IG1vdW50LnJlbW92ZUNoaWxkKGNvbnRhaW5lcikpO1xuICB9XG4gIHJldHVybiBtYXJrZXI7XG59XG5mdW5jdGlvbiBEeW5hbWljKHByb3BzKSB7XG4gIGNvbnN0IFtwMiwgb3RoZXJzXSA9IHNwbGl0UHJvcHMocHJvcHMsIFtcImNvbXBvbmVudFwiXSk7XG4gIGNvbnN0IGNhY2hlZCA9IGNyZWF0ZU1lbW8oKCkgPT4gcDIuY29tcG9uZW50KTtcbiAgcmV0dXJuIGNyZWF0ZU1lbW8oKCkgPT4ge1xuICAgIGNvbnN0IGNvbXBvbmVudCA9IGNhY2hlZCgpO1xuICAgIHN3aXRjaCAodHlwZW9mIGNvbXBvbmVudCkge1xuICAgICAgY2FzZSBcImZ1bmN0aW9uXCI6XG4gICAgICAgIHJldHVybiB1bnRyYWNrKCgpID0+IGNvbXBvbmVudChvdGhlcnMpKTtcbiAgICAgIGNhc2UgXCJzdHJpbmdcIjpcbiAgICAgICAgY29uc3QgaXNTdmcgPSBTVkdFbGVtZW50cy5oYXMoY29tcG9uZW50KTtcbiAgICAgICAgY29uc3QgZWwgPSBzaGFyZWRDb25maWcuY29udGV4dCA/IGdldE5leHRFbGVtZW50KCkgOiBjcmVhdGVFbGVtZW50KGNvbXBvbmVudCwgaXNTdmcpO1xuICAgICAgICBzcHJlYWQoZWwsIG90aGVycywgaXNTdmcpO1xuICAgICAgICByZXR1cm4gZWw7XG4gICAgfVxuICB9KTtcbn1cbnZhciBUSEVNRSA9IC8qIEBfX1BVUkVfXyAqLyAoKFRIRU1FMikgPT4ge1xuICBUSEVNRTJbXCJEQVJLXCJdID0gXCJEQVJLXCI7XG4gIFRIRU1FMltcIkxJR0hUXCJdID0gXCJMSUdIVFwiO1xuICByZXR1cm4gVEhFTUUyO1xufSkoVEhFTUUgfHwge30pO1xubGV0IGUgPSB7IGRhdGE6IFwiXCIgfSwgdCA9ICh0MikgPT4gXCJvYmplY3RcIiA9PSB0eXBlb2Ygd2luZG93ID8gKCh0MiA/IHQyLnF1ZXJ5U2VsZWN0b3IoXCIjX2dvb2JlclwiKSA6IHdpbmRvdy5fZ29vYmVyKSB8fCBPYmplY3QuYXNzaWduKCh0MiB8fCBkb2N1bWVudC5oZWFkKS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIikpLCB7IGlubmVySFRNTDogXCIgXCIsIGlkOiBcIl9nb29iZXJcIiB9KSkuZmlyc3RDaGlsZCA6IHQyIHx8IGUsIGwgPSAvKD86KFtcXHUwMDgwLVxcdUZGRkZcXHctJUBdKykgKjo/ICooW157O10rPyk7fChbXjt9e10qPykgKnspfCh9XFxzKikvZywgYSA9IC9cXC9cXCpbXl0qP1xcKlxcL3wgICsvZywgbiA9IC9cXG4rL2csIG8gPSAoZTIsIHQyKSA9PiB7XG4gIGxldCByID0gXCJcIiwgbDIgPSBcIlwiLCBhMiA9IFwiXCI7XG4gIGZvciAobGV0IG4yIGluIGUyKSB7XG4gICAgbGV0IGMyID0gZTJbbjJdO1xuICAgIFwiQFwiID09IG4yWzBdID8gXCJpXCIgPT0gbjJbMV0gPyByID0gbjIgKyBcIiBcIiArIGMyICsgXCI7XCIgOiBsMiArPSBcImZcIiA9PSBuMlsxXSA/IG8oYzIsIG4yKSA6IG4yICsgXCJ7XCIgKyBvKGMyLCBcImtcIiA9PSBuMlsxXSA/IFwiXCIgOiB0MikgKyBcIn1cIiA6IFwib2JqZWN0XCIgPT0gdHlwZW9mIGMyID8gbDIgKz0gbyhjMiwgdDIgPyB0Mi5yZXBsYWNlKC8oW14sXSkrL2csIChlMykgPT4gbjIucmVwbGFjZSgvKF46LiopfChbXixdKSsvZywgKHQzKSA9PiAvJi8udGVzdCh0MykgPyB0My5yZXBsYWNlKC8mL2csIGUzKSA6IGUzID8gZTMgKyBcIiBcIiArIHQzIDogdDMpKSA6IG4yKSA6IG51bGwgIT0gYzIgJiYgKG4yID0gL14tLS8udGVzdChuMikgPyBuMiA6IG4yLnJlcGxhY2UoL1tBLVpdL2csIFwiLSQmXCIpLnRvTG93ZXJDYXNlKCksIGEyICs9IG8ucCA/IG8ucChuMiwgYzIpIDogbjIgKyBcIjpcIiArIGMyICsgXCI7XCIpO1xuICB9XG4gIHJldHVybiByICsgKHQyICYmIGEyID8gdDIgKyBcIntcIiArIGEyICsgXCJ9XCIgOiBhMikgKyBsMjtcbn0sIGMgPSB7fSwgcyA9IChlMikgPT4ge1xuICBpZiAoXCJvYmplY3RcIiA9PSB0eXBlb2YgZTIpIHtcbiAgICBsZXQgdDIgPSBcIlwiO1xuICAgIGZvciAobGV0IHIgaW4gZTIpXG4gICAgICB0MiArPSByICsgcyhlMltyXSk7XG4gICAgcmV0dXJuIHQyO1xuICB9XG4gIHJldHVybiBlMjtcbn0sIGkgPSAoZTIsIHQyLCByLCBpMiwgcDIpID0+IHtcbiAgbGV0IHUyID0gcyhlMiksIGQgPSBjW3UyXSB8fCAoY1t1Ml0gPSAoKGUzKSA9PiB7XG4gICAgbGV0IHQzID0gMCwgcjIgPSAxMTtcbiAgICBmb3IgKDsgdDMgPCBlMy5sZW5ndGg7IClcbiAgICAgIHIyID0gMTAxICogcjIgKyBlMy5jaGFyQ29kZUF0KHQzKyspID4+PiAwO1xuICAgIHJldHVybiBcImdvXCIgKyByMjtcbiAgfSkodTIpKTtcbiAgaWYgKCFjW2RdKSB7XG4gICAgbGV0IHQzID0gdTIgIT09IGUyID8gZTIgOiAoKGUzKSA9PiB7XG4gICAgICBsZXQgdDQsIHIyLCBvMiA9IFt7fV07XG4gICAgICBmb3IgKDsgdDQgPSBsLmV4ZWMoZTMucmVwbGFjZShhLCBcIlwiKSk7IClcbiAgICAgICAgdDRbNF0gPyBvMi5zaGlmdCgpIDogdDRbM10gPyAocjIgPSB0NFszXS5yZXBsYWNlKG4sIFwiIFwiKS50cmltKCksIG8yLnVuc2hpZnQobzJbMF1bcjJdID0gbzJbMF1bcjJdIHx8IHt9KSkgOiBvMlswXVt0NFsxXV0gPSB0NFsyXS5yZXBsYWNlKG4sIFwiIFwiKS50cmltKCk7XG4gICAgICByZXR1cm4gbzJbMF07XG4gICAgfSkoZTIpO1xuICAgIGNbZF0gPSBvKHAyID8geyBbXCJAa2V5ZnJhbWVzIFwiICsgZF06IHQzIH0gOiB0MywgciA/IFwiXCIgOiBcIi5cIiArIGQpO1xuICB9XG4gIGxldCBmID0gciAmJiBjLmcgPyBjLmcgOiBudWxsO1xuICByZXR1cm4gciAmJiAoYy5nID0gY1tkXSksICgoZTMsIHQzLCByMiwgbDIpID0+IHtcbiAgICBsMiA/IHQzLmRhdGEgPSB0My5kYXRhLnJlcGxhY2UobDIsIGUzKSA6IC0xID09PSB0My5kYXRhLmluZGV4T2YoZTMpICYmICh0My5kYXRhID0gcjIgPyBlMyArIHQzLmRhdGEgOiB0My5kYXRhICsgZTMpO1xuICB9KShjW2RdLCB0MiwgaTIsIGYpLCBkO1xufSwgcCA9IChlMiwgdDIsIHIpID0+IGUyLnJlZHVjZSgoZTMsIGwyLCBhMikgPT4ge1xuICBsZXQgbjIgPSB0MlthMl07XG4gIGlmIChuMiAmJiBuMi5jYWxsKSB7XG4gICAgbGV0IGU0ID0gbjIociksIHQzID0gZTQgJiYgZTQucHJvcHMgJiYgZTQucHJvcHMuY2xhc3NOYW1lIHx8IC9eZ28vLnRlc3QoZTQpICYmIGU0O1xuICAgIG4yID0gdDMgPyBcIi5cIiArIHQzIDogZTQgJiYgXCJvYmplY3RcIiA9PSB0eXBlb2YgZTQgPyBlNC5wcm9wcyA/IFwiXCIgOiBvKGU0LCBcIlwiKSA6IGZhbHNlID09PSBlNCA/IFwiXCIgOiBlNDtcbiAgfVxuICByZXR1cm4gZTMgKyBsMiArIChudWxsID09IG4yID8gXCJcIiA6IG4yKTtcbn0sIFwiXCIpO1xuZnVuY3Rpb24gdShlMikge1xuICBsZXQgciA9IHRoaXMgfHwge30sIGwyID0gZTIuY2FsbCA/IGUyKHIucCkgOiBlMjtcbiAgcmV0dXJuIGkobDIudW5zaGlmdCA/IGwyLnJhdyA/IHAobDIsIFtdLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKSwgci5wKSA6IGwyLnJlZHVjZSgoZTMsIHQyKSA9PiBPYmplY3QuYXNzaWduKGUzLCB0MiAmJiB0Mi5jYWxsID8gdDIoci5wKSA6IHQyKSwge30pIDogbDIsIHQoci50YXJnZXQpLCByLmcsIHIubywgci5rKTtcbn1cbnUuYmluZCh7IGc6IDEgfSk7XG5sZXQgaCA9IHUuYmluZCh7IGs6IDEgfSk7XG5jb25zdCBUaGVtZUNvbnRleHQgPSBjcmVhdGVDb250ZXh0KCk7XG5mdW5jdGlvbiBUaGVtZVByb3ZpZGVyKHByb3BzKSB7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoVGhlbWVDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgdmFsdWU6IHByb3BzLnRoZW1lLFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBwcm9wcy5jaGlsZHJlbjtcbiAgICB9XG4gIH0pO1xufVxuZnVuY3Rpb24gdXNlVGhlbWUoKSB7XG4gIHJldHVybiB1c2VDb250ZXh0KFRoZW1lQ29udGV4dCk7XG59XG5mdW5jdGlvbiBtYWtlU3R5bGVkKHRhZykge1xuICBsZXQgX2N0eCA9IHRoaXMgfHwge307XG4gIHJldHVybiAoLi4uYXJncykgPT4ge1xuICAgIGNvbnN0IFN0eWxlZCA9IChwcm9wcykgPT4ge1xuICAgICAgY29uc3QgdGhlbWUgPSB1c2VDb250ZXh0KFRoZW1lQ29udGV4dCk7XG4gICAgICBjb25zdCB3aXRoVGhlbWUgPSBtZXJnZVByb3BzKHByb3BzLCB7IHRoZW1lIH0pO1xuICAgICAgY29uc3QgY2xvbmUgPSBtZXJnZVByb3BzKHdpdGhUaGVtZSwge1xuICAgICAgICBnZXQgY2xhc3MoKSB7XG4gICAgICAgICAgY29uc3QgcENsYXNzID0gd2l0aFRoZW1lLmNsYXNzLCBhcHBlbmQgPSBcImNsYXNzXCIgaW4gd2l0aFRoZW1lICYmIC9eZ29bMC05XSsvLnRlc3QocENsYXNzKTtcbiAgICAgICAgICBsZXQgY2xhc3NOYW1lMiA9IHUuYXBwbHkoXG4gICAgICAgICAgICB7IHRhcmdldDogX2N0eC50YXJnZXQsIG86IGFwcGVuZCwgcDogd2l0aFRoZW1lLCBnOiBfY3R4LmcgfSxcbiAgICAgICAgICAgIGFyZ3NcbiAgICAgICAgICApO1xuICAgICAgICAgIHJldHVybiBbcENsYXNzLCBjbGFzc05hbWUyXS5maWx0ZXIoQm9vbGVhbikuam9pbihcIiBcIik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgY29uc3QgW2xvY2FsLCBuZXdQcm9wc10gPSBzcGxpdFByb3BzKGNsb25lLCBbXCJhc1wiLCBcInRoZW1lXCJdKTtcbiAgICAgIGNvbnN0IGh0bWxQcm9wcyA9IG5ld1Byb3BzO1xuICAgICAgY29uc3QgY3JlYXRlVGFnID0gbG9jYWwuYXMgfHwgdGFnO1xuICAgICAgbGV0IGVsO1xuICAgICAgaWYgKHR5cGVvZiBjcmVhdGVUYWcgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICBlbCA9IGNyZWF0ZVRhZyhodG1sUHJvcHMpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAge1xuICAgICAgICAgIGlmIChfY3R4LmcgPT0gMSkge1xuICAgICAgICAgICAgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KGNyZWF0ZVRhZyk7XG4gICAgICAgICAgICBzcHJlYWQoZWwsIGh0bWxQcm9wcyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGVsID0gRHluYW1pYyhtZXJnZVByb3BzKHsgY29tcG9uZW50OiBjcmVhdGVUYWcgfSwgaHRtbFByb3BzKSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gZWw7XG4gICAgfTtcbiAgICBTdHlsZWQuY2xhc3MgPSAocHJvcHMpID0+IHtcbiAgICAgIHJldHVybiB1bnRyYWNrKCgpID0+IHtcbiAgICAgICAgcmV0dXJuIHUuYXBwbHkoeyB0YXJnZXQ6IF9jdHgudGFyZ2V0LCBwOiBwcm9wcywgZzogX2N0eC5nIH0sIGFyZ3MpO1xuICAgICAgfSk7XG4gICAgfTtcbiAgICByZXR1cm4gU3R5bGVkO1xuICB9O1xufVxuY29uc3Qgc3R5bGVkID0gbmV3IFByb3h5KG1ha2VTdHlsZWQsIHtcbiAgZ2V0KHRhcmdldCwgdGFnKSB7XG4gICAgcmV0dXJuIHRhcmdldCh0YWcpO1xuICB9XG59KTtcbmZ1bmN0aW9uIGNyZWF0ZUdsb2JhbFN0eWxlcygpIHtcbiAgY29uc3QgZm4gPSBtYWtlU3R5bGVkLmNhbGwoeyBnOiAxIH0sIFwiZGl2XCIpLmFwcGx5KG51bGwsIGFyZ3VtZW50cyk7XG4gIHJldHVybiBmdW5jdGlvbiBHbG9iYWxTdHlsZXMyKHByb3BzKSB7XG4gICAgZm4ocHJvcHMpO1xuICAgIHJldHVybiBudWxsO1xuICB9O1xufVxuY29uc3QgZ2xvYmFsU3R5bGVzVGFnID0gXCJ0Yy1yb290XCI7XG5jb25zdCBkaXNhYmxlU2Nyb2xsQ2xhc3MgPSBcInRjLWRpc2FibGUtc2Nyb2xsXCI7XG5jb25zdCB1c2luZ01vdXNlQ2xhc3MgPSBcInRjLXVzaW5nLW1vdXNlXCI7XG5jb25zdCBHbG9iYWxTdHlsZXMgPSAoKSA9PiB7XG4gIGRvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLCAoKSA9PiBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5hZGQodXNpbmdNb3VzZUNsYXNzKSk7XG4gIGRvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgKGV2ZW50KSA9PiB7XG4gICAgaWYgKGV2ZW50LmtleSA9PT0gXCJUYWJcIikge1xuICAgICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QucmVtb3ZlKHVzaW5nTW91c2VDbGFzcyk7XG4gICAgfVxuICB9KTtcbiAgY29uc3QgU3R5bGVzID0gY3JlYXRlR2xvYmFsU3R5bGVzYFxuICAgICR7Z2xvYmFsU3R5bGVzVGFnfSAqIHtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICBcbiAgICAgICAgZm9udC1mYW1pbHk6IC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgJ1JvYm90bycsICdIZWx2ZXRpY2EgTmV1ZScsIEFyaWFsLCBUYWhvbWEsIFZlcmRhbmEsIHNhbnMtc2VyaWY7XG4gICAgICAgIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICAgICAgICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlOyAgICAgICAgXG4gICAgICAgIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgfVxuICAgIFxuICAgICR7Z2xvYmFsU3R5bGVzVGFnfSBpbWcge1xuICAgICAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcbiAgICAgIC13ZWJraXQtdG91Y2gtY2FsbG91dDogbm9uZTtcbiAgICB9ICAgXG4gXG4gICAgJHtnbG9iYWxTdHlsZXNUYWd9ICo6Zm9jdXMge1xuICAgICAgICBvdXRsaW5lOiAjMDhmIGF1dG8gMnB4O1xuICAgIH1cbiAgICBcbiAgICAke2dsb2JhbFN0eWxlc1RhZ30gbGkge1xuICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIH1cbiAgICBcbiAgICAke2dsb2JhbFN0eWxlc1RhZ30gYnV0dG9uIHtcbiAgICAgICAgb3V0bGluZTogbm9uZTtcbiAgICB9XG4gICAgXG4gICAgYm9keS4ke2Rpc2FibGVTY3JvbGxDbGFzc30ge1xuICAgICAgICBwb3NpdGlvbjogZml4ZWQ7IFxuICAgICAgICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICBsZWZ0OiAwO1xuICAgIH1cbiAgICBcbiAgICBib2R5LiR7dXNpbmdNb3VzZUNsYXNzfSAke2dsb2JhbFN0eWxlc1RhZ30gKjpmb2N1cyB7XG4gICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgfVxuYDtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChTdHlsZXMsIHt9KTtcbn07XG5mdW5jdGlvbiBoZXhUb1JnYihoZXgpIHtcbiAgaWYgKGhleFswXSA9PT0gXCIjXCIpIHtcbiAgICBoZXggPSBoZXguc2xpY2UoMSk7XG4gIH1cbiAgY29uc3QgYmlnaW50ID0gcGFyc2VJbnQoaGV4LCAxNik7XG4gIGNvbnN0IHIgPSBiaWdpbnQgPj4gMTYgJiAyNTU7XG4gIGNvbnN0IGcgPSBiaWdpbnQgPj4gOCAmIDI1NTtcbiAgY29uc3QgYiA9IGJpZ2ludCAmIDI1NTtcbiAgcmV0dXJuIFtyLCBnLCBiXS5qb2luKFwiLFwiKTtcbn1cbmZ1bmN0aW9uIHJnYmEoY29sb3IsIG9wYWNpdHkpIHtcbiAgaWYgKGNvbG9yWzBdID09PSBcIiNcIikge1xuICAgIGNvbG9yID0gaGV4VG9SZ2IoY29sb3IpO1xuICB9XG4gIHJldHVybiBgcmdiYSgke2NvbG9yfSwgJHtvcGFjaXR5fSlgO1xufVxuZnVuY3Rpb24gdG9QeCh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUudG9TdHJpbmcoKSArIFwicHhcIjtcbn1cbmNvbnN0IF9Jbk1lbW9yeVN0b3JhZ2UgPSBjbGFzcyB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJzdG9yYWdlXCIsIHt9KTtcbiAgfVxuICBzdGF0aWMgZ2V0SW5zdGFuY2UoKSB7XG4gICAgaWYgKCFfSW5NZW1vcnlTdG9yYWdlLmluc3RhbmNlKSB7XG4gICAgICBfSW5NZW1vcnlTdG9yYWdlLmluc3RhbmNlID0gbmV3IF9Jbk1lbW9yeVN0b3JhZ2UoKTtcbiAgICB9XG4gICAgcmV0dXJuIF9Jbk1lbW9yeVN0b3JhZ2UuaW5zdGFuY2U7XG4gIH1cbiAgZ2V0IGxlbmd0aCgpIHtcbiAgICByZXR1cm4gT2JqZWN0LmtleXModGhpcy5zdG9yYWdlKS5sZW5ndGg7XG4gIH1cbiAgY2xlYXIoKSB7XG4gICAgdGhpcy5zdG9yYWdlID0ge307XG4gIH1cbiAgZ2V0SXRlbShrZXkpIHtcbiAgICB2YXIgX2EyO1xuICAgIHJldHVybiAoX2EyID0gdGhpcy5zdG9yYWdlW2tleV0pICE9IG51bGwgPyBfYTIgOiBudWxsO1xuICB9XG4gIGtleShpbmRleCkge1xuICAgIHZhciBfYTI7XG4gICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKHRoaXMuc3RvcmFnZSk7XG4gICAgaWYgKGluZGV4IDwgMCB8fCBpbmRleCA+PSBrZXlzLmxlbmd0aCkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiAoX2EyID0ga2V5c1tpbmRleF0pICE9IG51bGwgPyBfYTIgOiBudWxsO1xuICB9XG4gIHJlbW92ZUl0ZW0oa2V5KSB7XG4gICAgZGVsZXRlIHRoaXMuc3RvcmFnZVtrZXldO1xuICB9XG4gIHNldEl0ZW0oa2V5LCB2YWx1ZSkge1xuICAgIHRoaXMuc3RvcmFnZVtrZXldID0gdmFsdWU7XG4gIH1cbn07XG5sZXQgSW5NZW1vcnlTdG9yYWdlID0gX0luTWVtb3J5U3RvcmFnZTtcbl9fcHVibGljRmllbGQoSW5NZW1vcnlTdG9yYWdlLCBcImluc3RhbmNlXCIpO1xuY2xhc3MgVG9uQ29ubmVjdFVJRXJyb3IgZXh0ZW5kcyBUb25Db25uZWN0RXJyb3Ige1xuICBjb25zdHJ1Y3RvciguLi5hcmdzKSB7XG4gICAgc3VwZXIoLi4uYXJncyk7XG4gICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIFRvbkNvbm5lY3RVSUVycm9yLnByb3RvdHlwZSk7XG4gIH1cbn1cbmZ1bmN0aW9uIGxvZ0RlYnVnKC4uLmFyZ3MpIHtcbiAge1xuICAgIHRyeSB7XG4gICAgICBjb25zb2xlLmRlYnVnKFwiW1RPTl9DT05ORUNUX1VJXVwiLCAuLi5hcmdzKTtcbiAgICB9IGNhdGNoIChlMikge1xuICAgIH1cbiAgfVxufVxuZnVuY3Rpb24gbG9nRXJyb3IoLi4uYXJncykge1xuICB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJbVE9OX0NPTk5FQ1RfVUldXCIsIC4uLmFyZ3MpO1xuICAgIH0gY2F0Y2ggKGUyKSB7XG4gICAgfVxuICB9XG59XG5mdW5jdGlvbiBsb2dXYXJuaW5nKC4uLmFyZ3MpIHtcbiAge1xuICAgIHRyeSB7XG4gICAgICBjb25zb2xlLndhcm4oXCJbVE9OX0NPTk5FQ1RfVUldXCIsIC4uLmFyZ3MpO1xuICAgIH0gY2F0Y2ggKGUyKSB7XG4gICAgfVxuICB9XG59XG5mdW5jdGlvbiBvcGVuTGluayhocmVmLCB0YXJnZXQgPSBcIl9zZWxmXCIpIHtcbiAgbG9nRGVidWcoXCJvcGVuTGlua1wiLCBocmVmLCB0YXJnZXQpO1xuICB3aW5kb3cub3BlbihocmVmLCB0YXJnZXQsIFwibm9vcGVuZXIgbm9yZWZlcnJlclwiKTtcbn1cbmZ1bmN0aW9uIG9wZW5MaW5rQmxhbmsoaHJlZikge1xuICBvcGVuTGluayhocmVmLCBcIl9ibGFua1wiKTtcbn1cbmZ1bmN0aW9uIG9wZW5EZWVwbGlua1dpdGhGYWxsYmFjayhocmVmLCBmYWxsYmFjaykge1xuICBjb25zdCBkb0ZhbGxiYWNrID0gKCkgPT4ge1xuICAgIGlmIChpc0Jyb3dzZXIoXCJzYWZhcmlcIikgfHwgaXNPUyhcImFuZHJvaWRcIikgJiYgaXNCcm93c2VyKFwiZmlyZWZveFwiKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBmYWxsYmFjaygpO1xuICB9O1xuICBjb25zdCBmYWxsYmFja1RpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IGRvRmFsbGJhY2soKSwgMjAwKTtcbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJibHVyXCIsICgpID0+IGNsZWFyVGltZW91dChmYWxsYmFja1RpbWVvdXQpLCB7IG9uY2U6IHRydWUgfSk7XG4gIG9wZW5MaW5rKGhyZWYsIFwiX3NlbGZcIik7XG59XG5mdW5jdGlvbiBnZXRTeXN0ZW1UaGVtZSgpIHtcbiAgaWYgKHdpbmRvdy5tYXRjaE1lZGlhICYmIHdpbmRvdy5tYXRjaE1lZGlhKFwiKHByZWZlcnMtY29sb3Itc2NoZW1lOiBsaWdodClcIikubWF0Y2hlcykge1xuICAgIHJldHVybiBUSEVNRS5MSUdIVDtcbiAgfVxuICByZXR1cm4gVEhFTUUuREFSSztcbn1cbmZ1bmN0aW9uIHN1YnNjcmliZVRvVGhlbWVDaGFuZ2UoY2FsbGJhY2spIHtcbiAgY29uc3QgaGFuZGxlciA9IChldmVudCkgPT4gY2FsbGJhY2soZXZlbnQubWF0Y2hlcyA/IFRIRU1FLkRBUksgOiBUSEVNRS5MSUdIVCk7XG4gIHdpbmRvdy5tYXRjaE1lZGlhKFwiKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKVwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsIGhhbmRsZXIpO1xuICByZXR1cm4gKCkgPT4gd2luZG93Lm1hdGNoTWVkaWEoXCIocHJlZmVycy1jb2xvci1zY2hlbWU6IGRhcmspXCIpLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIiwgaGFuZGxlcik7XG59XG5mdW5jdGlvbiBkaXNhYmxlU2Nyb2xsKCkge1xuICBpZiAoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbEhlaWdodCA9PT0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodCkge1xuICAgIHJldHVybjtcbiAgfVxuICBkb2N1bWVudC5ib2R5LnN0eWxlLnRvcCA9IHRvUHgoLWRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3ApO1xuICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5hZGQoZGlzYWJsZVNjcm9sbENsYXNzKTtcbn1cbmZ1bmN0aW9uIGVuYWJsZVNjcm9sbCgpIHtcbiAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QucmVtb3ZlKGRpc2FibGVTY3JvbGxDbGFzcyk7XG4gIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUbyh7IHRvcDogLXBhcnNlRmxvYXQoZ2V0Q29tcHV0ZWRTdHlsZShkb2N1bWVudC5ib2R5KS50b3ApIH0pO1xuICBkb2N1bWVudC5ib2R5LnN0eWxlLnRvcCA9IFwiYXV0b1wiO1xufVxuZnVuY3Rpb24gZml4TW9iaWxlU2FmYXJpQWN0aXZlVHJhbnNpdGlvbigpIHtcbiAgaWYgKCFkb2N1bWVudC5ib2R5Lmhhc0F0dHJpYnV0ZShcIm9udG91Y2hzdGFydFwiKSkge1xuICAgIGRvY3VtZW50LmJvZHkuc2V0QXR0cmlidXRlKFwib250b3VjaHN0YXJ0XCIsIFwiXCIpO1xuICB9XG59XG5mdW5jdGlvbiBkZWZpbmVTdHlsZXNSb290KCkge1xuICBjdXN0b21FbGVtZW50cy5kZWZpbmUoZ2xvYmFsU3R5bGVzVGFnLCBjbGFzcyBUY1Jvb3RFbGVtZW50IGV4dGVuZHMgSFRNTEVsZW1lbnQge1xuICB9KTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZU1hY3JvdGFzayhjYWxsYmFjaykge1xuICByZXR1cm4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgIHlpZWxkIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiByZXF1ZXN0QW5pbWF0aW9uRnJhbWUocmVzb2x2ZSkpO1xuICAgIGNhbGxiYWNrKCk7XG4gIH0pO1xufVxuZnVuY3Rpb24gY3JlYXRlTWFjcm90YXNrQXN5bmMoY2FsbGJhY2spIHtcbiAgcmV0dXJuIF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICB5aWVsZCBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHJlc29sdmUpKTtcbiAgICByZXR1cm4gY2FsbGJhY2soKTtcbiAgfSk7XG59XG5mdW5jdGlvbiBwcmVsb2FkSW1hZ2VzKGltYWdlcykge1xuICBpZiAoZG9jdW1lbnQucmVhZHlTdGF0ZSAhPT0gXCJjb21wbGV0ZVwiKSB7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsICgpID0+IGNyZWF0ZU1hY3JvdGFzaygoKSA9PiBwcmVsb2FkSW1hZ2VzKGltYWdlcykpLCB7XG4gICAgICBvbmNlOiB0cnVlXG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgaW1hZ2VzLmZvckVhY2goKGltZykgPT4ge1xuICAgICAgY29uc3Qgbm9kZSA9IG5ldyB3aW5kb3cuSW1hZ2UoKTtcbiAgICAgIG5vZGUuc3JjID0gaW1nO1xuICAgIH0pO1xuICB9XG59XG5mdW5jdGlvbiBnZXRXaW5kb3ckMSgpIHtcbiAgaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4gd2luZG93O1xuICB9XG4gIHJldHVybiB2b2lkIDA7XG59XG5mdW5jdGlvbiB0cnlHZXRMb2NhbFN0b3JhZ2UoKSB7XG4gIGlmIChpc0xvY2FsU3RvcmFnZUF2YWlsYWJsZSgpKSB7XG4gICAgcmV0dXJuIGxvY2FsU3RvcmFnZTtcbiAgfVxuICBpZiAoaXNOb2RlSnMoKSkge1xuICAgIHRocm93IG5ldyBUb25Db25uZWN0VUlFcnJvcihcbiAgICAgIFwiYGxvY2FsU3RvcmFnZWAgaXMgdW5hdmFpbGFibGUsIGJ1dCBpdCBpcyByZXF1aXJlZCBmb3IgVG9uQ29ubmVjdC4gRm9yIG1vcmUgZGV0YWlscywgc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS90b24tY29ubmVjdC9zZGsvdHJlZS9tYWluL3BhY2thZ2VzL3NkayNpbml0LWNvbm5lY3RvclwiXG4gICAgKTtcbiAgfVxuICByZXR1cm4gSW5NZW1vcnlTdG9yYWdlLmdldEluc3RhbmNlKCk7XG59XG5mdW5jdGlvbiBpc0xvY2FsU3RvcmFnZUF2YWlsYWJsZSgpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gdHlwZW9mIGxvY2FsU3RvcmFnZSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgfSBjYXRjaCAoZTIpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cbmZ1bmN0aW9uIGlzTm9kZUpzKCkge1xuICByZXR1cm4gdHlwZW9mIHByb2Nlc3MgIT09IFwidW5kZWZpbmVkXCIgJiYgcHJvY2Vzcy52ZXJzaW9ucyAhPSBudWxsICYmIHByb2Nlc3MudmVyc2lvbnMubm9kZSAhPSBudWxsO1xufVxuZnVuY3Rpb24gZ2V0VXNlckFnZW50KCkge1xuICB2YXIgX2EyLCBfYjIsIF9jMjtcbiAgY29uc3QgcmVzdWx0cyA9IG5ldyBVQVBhcnNlcigpLmdldFJlc3VsdCgpO1xuICBjb25zdCBvc05hbWUgPSAoX2EyID0gcmVzdWx0cy5vcy5uYW1lKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLnRvTG93ZXJDYXNlKCk7XG4gIGNvbnN0IGRldmljZU1vZGVsID0gKF9iMiA9IHJlc3VsdHMuZGV2aWNlLm1vZGVsKSA9PSBudWxsID8gdm9pZCAwIDogX2IyLnRvTG93ZXJDYXNlKCk7XG4gIGxldCBvcztcbiAgc3dpdGNoICh0cnVlKSB7XG4gICAgY2FzZSBkZXZpY2VNb2RlbCA9PT0gXCJpcGFkXCI6XG4gICAgICBvcyA9IFwiaXBhZFwiO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBvc05hbWUgPT09IFwiaW9zXCI6XG4gICAgICBvcyA9IFwiaW9zXCI7XG4gICAgICBicmVhaztcbiAgICBjYXNlIG9zTmFtZSA9PT0gXCJhbmRyb2lkXCI6XG4gICAgICBvcyA9IFwiYW5kcm9pZFwiO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBvc05hbWUgPT09IFwibWFjIG9zXCI6XG4gICAgICBvcyA9IFwibWFjb3NcIjtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2Ugb3NOYW1lID09PSBcImxpbnV4XCI6XG4gICAgICBvcyA9IFwibGludXhcIjtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgKG9zTmFtZSA9PSBudWxsID8gdm9pZCAwIDogb3NOYW1lLmluY2x1ZGVzKFwid2luZG93c1wiKSk6XG4gICAgICBvcyA9IFwid2luZG93c1wiO1xuICAgICAgYnJlYWs7XG4gIH1cbiAgY29uc3QgYnJvd3Nlck5hbWUgPSAoX2MyID0gcmVzdWx0cy5icm93c2VyLm5hbWUpID09IG51bGwgPyB2b2lkIDAgOiBfYzIudG9Mb3dlckNhc2UoKTtcbiAgbGV0IGJyb3dzZXI7XG4gIHN3aXRjaCAodHJ1ZSkge1xuICAgIGNhc2UgYnJvd3Nlck5hbWUgPT09IFwiY2hyb21lXCI6XG4gICAgICBicm93c2VyID0gXCJjaHJvbWVcIjtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgYnJvd3Nlck5hbWUgPT09IFwiZmlyZWZveFwiOlxuICAgICAgYnJvd3NlciA9IFwiZmlyZWZveFwiO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAoYnJvd3Nlck5hbWUgPT0gbnVsbCA/IHZvaWQgMCA6IGJyb3dzZXJOYW1lLmluY2x1ZGVzKFwic2FmYXJpXCIpKTpcbiAgICAgIGJyb3dzZXIgPSBcInNhZmFyaVwiO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAoYnJvd3Nlck5hbWUgPT0gbnVsbCA/IHZvaWQgMCA6IGJyb3dzZXJOYW1lLmluY2x1ZGVzKFwib3BlcmFcIikpOlxuICAgICAgYnJvd3NlciA9IFwib3BlcmFcIjtcbiAgICAgIGJyZWFrO1xuICB9XG4gIHJldHVybiB7XG4gICAgb3MsXG4gICAgYnJvd3NlclxuICB9O1xufVxuZnVuY3Rpb24gaXNPUyguLi5vcykge1xuICByZXR1cm4gb3MuaW5jbHVkZXMoZ2V0VXNlckFnZW50KCkub3MpO1xufVxuZnVuY3Rpb24gaXNCcm93c2VyKC4uLmJyb3dzZXIpIHtcbiAgcmV0dXJuIGJyb3dzZXIuaW5jbHVkZXMoZ2V0VXNlckFnZW50KCkuYnJvd3Nlcik7XG59XG5mdW5jdGlvbiB0b0RlZXBsaW5rKHVuaXZlcnNhbExpbmssIGRlZXBsaW5rKSB7XG4gIGNvbnN0IHVybCA9IG5ldyBVUkwodW5pdmVyc2FsTGluayk7XG4gIHJldHVybiBkZWVwbGluayArIHVybC5zZWFyY2g7XG59XG5jbGFzcyBXYWxsZXRJbmZvU3RvcmFnZSB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJsb2NhbFN0b3JhZ2VcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInN0b3JhZ2VLZXlcIiwgXCJ0b24tY29ubmVjdC11aV93YWxsZXQtaW5mb1wiKTtcbiAgICB0aGlzLmxvY2FsU3RvcmFnZSA9IHRyeUdldExvY2FsU3RvcmFnZSgpO1xuICB9XG4gIHNldFdhbGxldEluZm8od2FsbGV0SW5mbykge1xuICAgIHRoaXMubG9jYWxTdG9yYWdlLnNldEl0ZW0odGhpcy5zdG9yYWdlS2V5LCBKU09OLnN0cmluZ2lmeSh3YWxsZXRJbmZvKSk7XG4gIH1cbiAgZ2V0V2FsbGV0SW5mbygpIHtcbiAgICBjb25zdCB3YWxsZXRJbmZvU3RyaW5nID0gdGhpcy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbSh0aGlzLnN0b3JhZ2VLZXkpO1xuICAgIGlmICghd2FsbGV0SW5mb1N0cmluZykge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiBKU09OLnBhcnNlKHdhbGxldEluZm9TdHJpbmcpO1xuICB9XG4gIHJlbW92ZVdhbGxldEluZm8oKSB7XG4gICAgdGhpcy5sb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSh0aGlzLnN0b3JhZ2VLZXkpO1xuICB9XG59XG5jbGFzcyBQcmVmZXJyZWRXYWxsZXRTdG9yYWdlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImxvY2FsU3RvcmFnZVwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic3RvcmFnZUtleVwiLCBcInRvbi1jb25uZWN0LXVpX3ByZWZlcnJlZC13YWxsZXRcIik7XG4gICAgdGhpcy5sb2NhbFN0b3JhZ2UgPSB0cnlHZXRMb2NhbFN0b3JhZ2UoKTtcbiAgfVxuICBzZXRQcmVmZXJyZWRXYWxsZXRBcHBOYW1lKG5hbWUpIHtcbiAgICB0aGlzLmxvY2FsU3RvcmFnZS5zZXRJdGVtKHRoaXMuc3RvcmFnZUtleSwgbmFtZSk7XG4gIH1cbiAgZ2V0UHJlZmVycmVkV2FsbGV0QXBwTmFtZSgpIHtcbiAgICByZXR1cm4gdGhpcy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbSh0aGlzLnN0b3JhZ2VLZXkpIHx8IHZvaWQgMDtcbiAgfVxufVxuY2xhc3MgTGFzdFNlbGVjdGVkV2FsbGV0SW5mb1N0b3JhZ2Uge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwibG9jYWxTdG9yYWdlXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJzdG9yYWdlS2V5XCIsIFwidG9uLWNvbm5lY3QtdWlfbGFzdC1zZWxlY3RlZC13YWxsZXQtaW5mb1wiKTtcbiAgICB0aGlzLmxvY2FsU3RvcmFnZSA9IHRyeUdldExvY2FsU3RvcmFnZSgpO1xuICB9XG4gIHNldExhc3RTZWxlY3RlZFdhbGxldEluZm8od2FsbGV0SW5mbykge1xuICAgIHRoaXMubG9jYWxTdG9yYWdlLnNldEl0ZW0odGhpcy5zdG9yYWdlS2V5LCBKU09OLnN0cmluZ2lmeSh3YWxsZXRJbmZvKSk7XG4gIH1cbiAgZ2V0TGFzdFNlbGVjdGVkV2FsbGV0SW5mbygpIHtcbiAgICBjb25zdCB3YWxsZXRJbmZvU3RyaW5nID0gdGhpcy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbSh0aGlzLnN0b3JhZ2VLZXkpO1xuICAgIGlmICghd2FsbGV0SW5mb1N0cmluZykge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiBKU09OLnBhcnNlKHdhbGxldEluZm9TdHJpbmcpO1xuICB9XG4gIHJlbW92ZUxhc3RTZWxlY3RlZFdhbGxldEluZm8oKSB7XG4gICAgdGhpcy5sb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSh0aGlzLnN0b3JhZ2VLZXkpO1xuICB9XG59XG5jb25zdCBbd2FsbGV0c01vZGFsU3RhdGUsIHNldFdhbGxldHNNb2RhbFN0YXRlXSA9IGNyZWF0ZVNpZ25hbCh7XG4gIHN0YXR1czogXCJjbG9zZWRcIixcbiAgY2xvc2VSZWFzb246IG51bGxcbn0pO1xuY29uc3QgZ2V0V2FsbGV0c01vZGFsSXNPcGVuZWQgPSBjcmVhdGVNZW1vKCgpID0+IHdhbGxldHNNb2RhbFN0YXRlKCkuc3RhdHVzID09PSBcIm9wZW5lZFwiKTtcbmNvbnN0IFtzaW5nbGVXYWxsZXRNb2RhbFN0YXRlLCBzZXRTaW5nbGVXYWxsZXRNb2RhbFN0YXRlXSA9IGNyZWF0ZVNpZ25hbCh7XG4gIHN0YXR1czogXCJjbG9zZWRcIixcbiAgY2xvc2VSZWFzb246IG51bGxcbn0pO1xuY29uc3QgZ2V0U2luZ2xlV2FsbGV0TW9kYWxJc09wZW5lZCA9IGNyZWF0ZU1lbW8oXG4gICgpID0+IHNpbmdsZVdhbGxldE1vZGFsU3RhdGUoKS5zdGF0dXMgPT09IFwib3BlbmVkXCJcbik7XG5jb25zdCBnZXRTaW5nbGVXYWxsZXRNb2RhbFdhbGxldEluZm8gPSBjcmVhdGVNZW1vKCgpID0+IHtcbiAgY29uc3Qgc3RhdGUgPSBzaW5nbGVXYWxsZXRNb2RhbFN0YXRlKCk7XG4gIGlmIChzdGF0ZS5zdGF0dXMgPT09IFwib3BlbmVkXCIpIHtcbiAgICByZXR1cm4gc3RhdGUud2FsbGV0SW5mbztcbiAgfVxuICByZXR1cm4gbnVsbDtcbn0pO1xubGV0IGxhc3RTZWxlY3RlZFdhbGxldEluZm9TdG9yYWdlID0gdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IG5ldyBMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvU3RvcmFnZSgpIDogdm9pZCAwO1xuY29uc3QgW2xhc3RTZWxlY3RlZFdhbGxldEluZm8sIF9zZXRMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvXSA9IGNyZWF0ZVNpZ25hbCgobGFzdFNlbGVjdGVkV2FsbGV0SW5mb1N0b3JhZ2UgPT0gbnVsbCA/IHZvaWQgMCA6IGxhc3RTZWxlY3RlZFdhbGxldEluZm9TdG9yYWdlLmdldExhc3RTZWxlY3RlZFdhbGxldEluZm8oKSkgfHwgbnVsbCk7XG5jb25zdCBzZXRMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvID0gKHdhbGxldEluZm8pID0+IHtcbiAgaWYgKCFsYXN0U2VsZWN0ZWRXYWxsZXRJbmZvU3RvcmFnZSkge1xuICAgIGxhc3RTZWxlY3RlZFdhbGxldEluZm9TdG9yYWdlID0gbmV3IExhc3RTZWxlY3RlZFdhbGxldEluZm9TdG9yYWdlKCk7XG4gIH1cbiAgaWYgKHdhbGxldEluZm8pIHtcbiAgICBsYXN0U2VsZWN0ZWRXYWxsZXRJbmZvU3RvcmFnZS5zZXRMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvKHdhbGxldEluZm8pO1xuICB9IGVsc2Uge1xuICAgIGxhc3RTZWxlY3RlZFdhbGxldEluZm9TdG9yYWdlLnJlbW92ZUxhc3RTZWxlY3RlZFdhbGxldEluZm8oKTtcbiAgfVxuICBfc2V0TGFzdFNlbGVjdGVkV2FsbGV0SW5mbyh3YWxsZXRJbmZvKTtcbn07XG5jb25zdCBbYWN0aW9uLCBzZXRBY3Rpb25dID0gY3JlYXRlU2lnbmFsKG51bGwpO1xuY29uc3QgY29tbW9uJDEgPSB7XG4gIGNsb3NlOiBcIkNsb3NlXCIsXG4gIG9wZW5XYWxsZXQ6IFwiT3BlbiB3YWxsZXRcIixcbiAgY29weUxpbms6IFwiQ29weSBMaW5rXCIsXG4gIGxpbmtDb3BpZWQ6IFwiTGluayBDb3BpZWRcIixcbiAgY29waWVkOiBcIkNvcGllZFwiLFxuICB5b3VyV2FsbGV0OiBcIllvdXIgV2FsbGV0XCIsXG4gIHJldHJ5OiBcIlJldHJ5XCIsXG4gIGdldDogXCJHRVRcIixcbiAgbW9iaWxlOiBcIk1vYmlsZVwiLFxuICBicm93c2VyRXh0ZW5zaW9uOiBcIkJyb3dzZXIgRXh0ZW5zaW9uXCIsXG4gIGRlc2t0b3A6IFwiRGVza3RvcFwiXG59O1xuY29uc3QgYnV0dG9uJDEgPSB7XG4gIGNvbm5lY3RXYWxsZXQ6IFwiQ29ubmVjdCBXYWxsZXRcIixcbiAgZHJvcGRvd246IHtcbiAgICBjb3B5OiBcIkNvcHkgYWRkcmVzc1wiLFxuICAgIGNvcGllZDogXCJBZGRyZXNzIGNvcGllZCFcIixcbiAgICBkaXNjb25uZWN0OiBcIkRpc2Nvbm5lY3RcIlxuICB9XG59O1xuY29uc3Qgbm90aWZpY2F0aW9ucyQxID0ge1xuICBjb25maXJtOiB7XG4gICAgaGVhZGVyOiBcIk9wZW4ge3sgbmFtZSB9fSB0b1xceEEwY29uZmlybSB0aGVcXHhBMHRyYW5zYWN0aW9uLlwiXG4gIH0sXG4gIHRyYW5zYWN0aW9uU2VudDoge1xuICAgIGhlYWRlcjogXCJUcmFuc2FjdGlvbiBzZW50XCIsXG4gICAgdGV4dDogXCJZb3VyIHRyYW5zYWN0aW9uXFx4QTB3aWxsIGJlXFx4QTBwcm9jZXNzZWQgaW5cXHhBMGFcXHhBMGZldyBzZWNvbmRzLlwiXG4gIH0sXG4gIHRyYW5zYWN0aW9uQ2FuY2VsZWQ6IHtcbiAgICBoZWFkZXI6IFwiVHJhbnNhY3Rpb24gY2FuY2VsZWRcIixcbiAgICB0ZXh0OiBcIlRoZXJlIHdpbGwgYmUgbm8gY2hhbmdlcyB0b1xceEEweW91ciBhY2NvdW50LlwiXG4gIH0sXG4gIGRhdGFTaWduZWQ6IHtcbiAgICBoZWFkZXI6IFwiRGF0YSBzaWduZWRcIlxuICB9LFxuICBzaWduRGF0YUNhbmNlbGVkOiB7XG4gICAgaGVhZGVyOiBcIlNpZ24gZGF0YSBjYW5jZWxlZFwiXG4gIH1cbn07XG5jb25zdCB3YWxsZXRJdGVtJDEgPSB7XG4gIHdhbGxldE9uOiBcIldhbGxldCBpblwiLFxuICByZWNlbnQ6IFwiUmVjZW50XCIsXG4gIGluc3RhbGxlZDogXCJJbnN0YWxsZWRcIixcbiAgcG9wdWxhcjogXCJQb3B1bGFyXCJcbn07XG5jb25zdCB3YWxsZXRNb2RhbCQxID0ge1xuICBsb2FkaW5nOiBcIkxvYWRpbmcgd2FsbGV0c1wiLFxuICB3YWxsZXRzOiBcIldhbGxldHNcIixcbiAgbW9iaWxlVW5pdmVyc2FsTW9kYWw6IHtcbiAgICBjb25uZWN0WW91cldhbGxldDogXCJDb25uZWN0IHlvdXIgVE9OXFx4QTB3YWxsZXRcIixcbiAgICBvcGVuV2FsbGV0T25UZWxlZ3JhbU9yU2VsZWN0OiBcIlVzZSBXYWxsZXQgaW4gVGVsZWdyYW0gb3IgY2hvb3NlIG90aGVyIGFwcGxpY2F0aW9uXCIsXG4gICAgb3BlbldhbGxldE9uVGVsZWdyYW06IFwiQ29ubmVjdCBXYWxsZXQgaW4gVGVsZWdyYW1cIixcbiAgICBjaG9vc2VPdGhlckFwcGxpY2F0aW9uOiBcIkNob29zZSBvdGhlciBhcHBsaWNhdGlvblwiLFxuICAgIG9wZW5MaW5rOiBcIk9wZW4gTGlua1wiLFxuICAgIHNjYW46IFwiU2NhbiB3aXRoIHlvdXIgbW9iaWxlXFx4QTB3YWxsZXRcIlxuICB9LFxuICBkZXNrdG9wVW5pdmVyc2FsTW9kYWw6IHtcbiAgICBjb25uZWN0WW91cldhbGxldDogXCJDb25uZWN0IHlvdXIgVE9OIHdhbGxldFwiLFxuICAgIHNjYW46IFwiU2NhbiB3aXRoIHlvdXIgbW9iaWxlIHdhbGxldFwiLFxuICAgIGF2YWlsYWJsZVdhbGxldHM6IFwiQXZhaWxhYmxlIHdhbGxldHNcIlxuICB9LFxuICBtb2JpbGVDb25uZWN0aW9uTW9kYWw6IHtcbiAgICBzaG93UVI6IFwiU2hvdyBRUiBDb2RlXCIsXG4gICAgc2NhblFSOiBcIlNjYW4gdGhlXFx4QTBRUiBjb2RlIGJlbG93IHdpdGggeW91ciBwaG9uZVxcdTIwMTlzXFx4QTBvclxceEEwe3sgbmFtZSB9fVxcdTIwMTlzIGNhbWVyYVwiLFxuICAgIG1pc3NpbmdGZWF0dXJlczogXCJQbGVhc2UgdXBkYXRlIHt7IG5hbWUgfX0sIHlvdXIgdmVyc2lvbiBkb2VzIG5vdCBzdXBwb3J0IHJlcXVpcmVkIGZlYXR1cmVzIGZvciB0aGlzIGRBcHBcIixcbiAgICBub3RTdXBwb3J0ZWRXYWxsZXQ6IFwie3sgbmFtZSB9fSBkb2VzblxcdTIwMTl0IHN1cHBvcnQgdGhlIHJlcXVlc3RlZCBhY3Rpb24uIFBsZWFzZSBjb25uZWN0IGFub3RoZXIgd2FsbGV0IHRoYXQgc3VwcG9ydHMgaXRcIixcbiAgICBjb250aW51ZUluOiBcIkNvbnRpbnVlIGluIHt7IG5hbWUgfX1cXHUyMDI2XCIsXG4gICAgdXBkYXRlV2FsbGV0OiBcIlVwZGF0ZSB7eyBuYW1lIH19XCIsXG4gICAgY2hvb3NlQW5vdGhlcldhbGxldDogXCJDaG9vc2UgQW5vdGhlciBXYWxsZXRcIixcbiAgICBjb25uZWN0aW9uRGVjbGluZWQ6IFwiQ29ubmVjdGlvbiBkZWNsaW5lZFwiXG4gIH0sXG4gIGRlc2t0b3BDb25uZWN0aW9uTW9kYWw6IHtcbiAgICBzY2FuUVI6IFwiU2NhbiB0aGVcXHhBMFFSIGNvZGUgYmVsb3cgd2l0aCB5b3VyIHBob25lXFx1MjAxOXNcXHhBMG9yXFx4QTB7eyBuYW1lIH19XFx1MjAxOXMgY2FtZXJhXCIsXG4gICAgY29udGludWVJbkV4dGVuc2lvbjogXCJDb250aW51ZSBpblxceEEwe3sgbmFtZSB9fSBicm93c2VyIGV4dGVuc2lvblxcdTIwMjZcIixcbiAgICBkb250SGF2ZUV4dGVuc2lvbjogXCJTZWVtcyB5b3UgZG9uJ3QgaGF2ZSBpbnN0YWxsZWQge3sgbmFtZSB9fVxceEEwYnJvd3NlclxceEEwZXh0ZW5zaW9uXCIsXG4gICAgbWlzc2luZ0ZlYXR1cmVzOiBcIlBsZWFzZSB1cGRhdGUge3sgbmFtZSB9fSwgeW91ciB2ZXJzaW9uIGRvZXMgbm90IHN1cHBvcnQgcmVxdWlyZWQgZmVhdHVyZXMgZm9yIHRoaXMgZEFwcFwiLFxuICAgIG5vdFN1cHBvcnRlZFdhbGxldDogXCJ7eyBuYW1lIH19IGRvZXNuXFx1MjAxOXQgc3VwcG9ydCB0aGUgcmVxdWVzdGVkIGFjdGlvbi4gUGxlYXNlIGNvbm5lY3QgYW5vdGhlciB3YWxsZXQgdGhhdCBzdXBwb3J0cyBpdFwiLFxuICAgIGdldFdhbGxldDogXCJHZXQge3sgbmFtZSB9fVwiLFxuICAgIHVwZGF0ZVdhbGxldDogXCJVcGRhdGUge3sgbmFtZSB9fVwiLFxuICAgIGNob29zZUFub3RoZXJXYWxsZXQ6IFwiQ2hvb3NlIEFub3RoZXIgV2FsbGV0XCIsXG4gICAgY29udGludWVPbkRlc2t0b3A6IFwiQ29udGludWUgaW5cXHhBMHt7IG5hbWUgfX0gb24gZGVza3RvcFxcdTIwMjZcIixcbiAgICBvcGVuV2FsbGV0T25UZWxlZ3JhbTogXCJDb25uZWN0IFdhbGxldCBpbiBUZWxlZ3JhbSBvbiBkZXNrdG9wXCIsXG4gICAgY29ubmVjdGlvbkRlY2xpbmVkOiBcIkNvbm5lY3Rpb24gZGVjbGluZWRcIlxuICB9LFxuICBpbmZvTW9kYWw6IHtcbiAgICB3aGF0SXNBV2FsbGV0OiBcIldoYXQgaXMgYSB3YWxsZXRcIixcbiAgICBzZWN1cmVEaWdpdGFsQXNzZXRzOiBcIlNlY3VyZSBkaWdpdGFsIGFzc2V0cyBzdG9yYWdlXCIsXG4gICAgd2FsbGV0UHJvdGVjdHM6IFwiQSB3YWxsZXQgcHJvdGVjdHMgYW5kIG1hbmFnZXMgeW91ciBkaWdpdGFsIGFzc2V0c1xceEEwaW5jbHVkaW5nIFRPTiwgdG9rZW5zIGFuZCBjb2xsZWN0YWJsZXMuXCIsXG4gICAgY29udHJvbElkZW50aXR5OiBcIkNvbnRyb2wgeW91ciBXZWIzIGlkZW50aXR5XCIsXG4gICAgbWFuYWdlSWRlbnRpdHk6IFwiTWFuYWdlIHlvdXIgZGlnaXRhbCBpZGVudGl0eSBhbmQgYWNjZXNzIGRlY2VudHJhbGl6ZWQgYXBwbGljYXRpb25zIHdpdGggZWFzZS4gTWFpbnRhaW4gY29udHJvbCBvdmVyIHlvdXIgZGF0YSBhbmQgZW5nYWdlIHNlY3VyZWx5IGluXFx4QTB0aGVcXHhBMGJsb2NrY2hhaW4gZWNvc3lzdGVtLlwiLFxuICAgIGVmZm9ydGxlc3NDcnlwdG9UcmFuc2FjdGlvbnM6IFwiRWZmb3J0bGVzcyBjcnlwdG8gdHJhbnNhY3Rpb25zXCIsXG4gICAgZWFzaWx5U2VuZDogXCJFYXNpbHkgc2VuZCwgcmVjZWl2ZSwgbW9uaXRvciB5b3VyIGNyeXB0b2N1cnJlbmNpZXMuXFx4QTBTdHJlYW1saW5lIHlvdXIgb3BlcmF0aW9ucyB3aXRoXFx4QTBkZWNlbnRyYWxpemVkIGFwcGxpY2F0aW9ucy5cIixcbiAgICBnZXRBV2FsbGV0OiBcIkdldCBhIFdhbGxldFwiXG4gIH0sXG4gIHJlc3RvcmVNb2RhbDoge1xuICAgIHRpdGxlOiBcIlJlc3RvcmVcIixcbiAgICBzdGVwMToge1xuICAgICAgdGl0bGU6IFwiRmluZCB5b3VyIGN1cnJlbnQgcmVjb3ZlcnkgcGhyYXNlXCIsXG4gICAgICB0ZXh0OiBcIk9wZW4geW91ciB3YWxsZXQgc2V0dGluZ3MgYW5kIGxvY2F0ZSB0aGVcXHhBMHJlY292ZXJ5XFx4QTBwaHJhc2VcIlxuICAgIH0sXG4gICAgc3RlcDI6IHtcbiAgICAgIHRpdGxlOiBcIkNvcHkgeW91ciByZWNvdmVyeSBwaHJhc2VcIixcbiAgICAgIHRleHQ6IFwiV3JpdGUgaXQgZG93biBvciBjb3B5IGl0IHRvIGEgc2FmZSBwbGFjZVwiXG4gICAgfSxcbiAgICBzdGVwMzoge1xuICAgICAgdGl0bGU6IFwiUmVzdG9yZSBpbiBhIHN1cHBvcnRlZCB3YWxsZXRcIixcbiAgICAgIHRleHQ6IFwiRW50ZXIgdGhlIHJlY292ZXJ5IHBocmFzZSB0byBhY2Nlc3MgeW91ciB3YWxsZXRcIlxuICAgIH1cbiAgfSxcbiAgYWxsV2FsbGV0czoge1xuICAgIHdhbGxldHNCZWxvd05vdFN1cHBvcnRlZDogXCJUaGUgd2FsbGV0cyBiZWxvdyBkb25cXHUyMDE5dCBzdXBwb3J0IGFsbCBmZWF0dXJlcyBvZlxceEEwdGhlIGNvbm5lY3RlZCBzZXJ2aWNlLiBZb3UgY2FuIHVzZSB5b3VyIHJlY292ZXJ5IHBocmFzZSBpbiBvbmUgb2YgdGhlIHN1cHBvcnRlZCB3YWxsZXRzIGFib3ZlLlwiLFxuICAgIHdhbGxldE5vdFN1cHBvcnRTZXJ2aWNlOiBcInt7IG5hbWUgfX0gZG9lc25cXHUyMDE5dCBzdXBwb3J0IGNvbm5lY3RlZCBzZXJ2aWNlXCJcbiAgfSxcbiAgZmVhdHVyZU5vdFN1cHBvcnRlZDoge1xuICAgIHdhbGxldDoge1xuICAgICAgdGl0bGU6IFwie3sgbmFtZSB9fSBkb2VzblxcdTIwMTl0IHN1cHBvcnQgdGhlIHJlcXVlc3RlZFxceEEwYWN0aW9uXCIsXG4gICAgICBkZXNjcmlwdGlvbjogXCJJbnN0YWxsIGEgc3VwcG9ydGVkIHdhbGxldCBmcm9tIHRoZSBsaXN0IGJlbG93LCByZXN0b3JlIGl0IHdpdGggeW91ciByZWNvdmVyeSBwaHJhc2UsIHRoZW4gY29ubmVjdCBpdCBhbmQgdHJ5IGFnYWluLlwiLFxuICAgICAgaW5mbzogXCJMZWFybiBob3cgdG8gcmVzdG9yZSB5b3VyIHdhbGxldFwiXG4gICAgfSxcbiAgICB2ZXJzaW9uOiB7XG4gICAgICBkZXNjcmlwdGlvbjogXCJZb3VyIGN1cnJlbnQgdmVyc2lvbiBvZiB7eyBuYW1lIH19IG9yIHdhbGxldCBjb250cmFjdCB0eXBlIGRvZXNuJ3Qgc3VwcG9ydCB0aGUgcmVxdWlyZWQgZmVhdHVyZXMuIFBsZWFzZSB1cGRhdGUgaXQgdG8gY29udGludWUuXCIsXG4gICAgICB1cGRhdGVCdXR0b246IFwiVXBkYXRlIHt7IG5hbWUgfX1cIixcbiAgICAgIGFib3V0VzU6IFwiQWJvdXQgVzVcIlxuICAgIH0sXG4gICAgZGlzY29ubmVjdDoge1xuICAgICAgdGl0bGU6IFwiQ29uZmlybSBEaXNjb25uZWN0XCIsXG4gICAgICBkZXNjcmlwdGlvbjogXCJZb3Ugd2lsbCBiZSBkaXNjb25uZWN0ZWQgZnJvbSB5b3VyIGN1cnJlbnQgd2FsbGV0IGFuZCByZWRpcmVjdGVkIHRvIGNvbm5lY3Qge3sgbmFtZSB9fS5cIixcbiAgICAgIGJ1dHRvbjogXCJEaXNjb25uZWN0XCJcbiAgICB9XG4gIH1cbn07XG5jb25zdCBhY3Rpb25Nb2RhbCQxID0ge1xuICBjb25maXJtVHJhbnNhY3Rpb246IHtcbiAgICBoZWFkZXI6IFwiQ29uZmlybSB0aGVcXHhBMHRyYW5zYWN0aW9uIGluXFx4QTB7eyBuYW1lIH19XCIsXG4gICAgdGV4dDogXCJJdCB3aWxsIG9ubHkgdGFrZSBhXFx4QTBtb21lbnQuXCJcbiAgfSxcbiAgc2lnbkRhdGE6IHtcbiAgICBoZWFkZXI6IFwiU2lnbiB0aGVcXHhBMGRhdGEgaW5cXHhBMHt7IG5hbWUgfX1cIixcbiAgICB0ZXh0OiBcIkl0IHdpbGwgb25seSB0YWtlIGFcXHhBMG1vbWVudC5cIlxuICB9LFxuICB0cmFuc2FjdGlvblNlbnQ6IFwiJG5vdGlmaWNhdGlvbnMudHJhbnNhY3Rpb25TZW50XCIsXG4gIHRyYW5zYWN0aW9uQ2FuY2VsZWQ6IFwiJG5vdGlmaWNhdGlvbnMudHJhbnNhY3Rpb25DYW5jZWxlZFwiLFxuICBkYXRhU2lnbmVkOiBcIiRub3RpZmljYXRpb25zLmRhdGFTaWduZWRcIixcbiAgc2lnbkRhdGFDYW5jZWxlZDogXCIkbm90aWZpY2F0aW9ucy5zaWduRGF0YUNhbmNlbGVkXCJcbn07XG5jb25zdCBlbiA9IHtcbiAgY29tbW9uOiBjb21tb24kMSxcbiAgYnV0dG9uOiBidXR0b24kMSxcbiAgbm90aWZpY2F0aW9uczogbm90aWZpY2F0aW9ucyQxLFxuICB3YWxsZXRJdGVtOiB3YWxsZXRJdGVtJDEsXG4gIHdhbGxldE1vZGFsOiB3YWxsZXRNb2RhbCQxLFxuICBhY3Rpb25Nb2RhbDogYWN0aW9uTW9kYWwkMVxufTtcbmNvbnN0IGNvbW1vbiA9IHtcbiAgY2xvc2U6IFwiXFx1MDQxN1xcdTA0MzBcXHUwNDNBXFx1MDQ0MFxcdTA0NEJcXHUwNDQyXFx1MDQ0Q1wiLFxuICBvcGVuV2FsbGV0OiBcIlxcdTA0MUVcXHUwNDQyXFx1MDQzQVxcdTA0NDBcXHUwNDRCXFx1MDQ0MlxcdTA0NEMgXFx1MDQzQVxcdTA0M0VcXHUwNDQ4XFx1MDQzNVxcdTA0M0JcXHUwNDUxXFx1MDQzQVwiLFxuICBjb3B5TGluazogXCJcXHUwNDIxXFx1MDQzQVxcdTA0M0VcXHUwNDNGXFx1MDQzOFxcdTA0NDBcXHUwNDNFXFx1MDQzMlxcdTA0MzBcXHUwNDQyXFx1MDQ0Q1wiLFxuICBsaW5rQ29waWVkOiBcIlxcdTA0MjFcXHUwNDQxXFx1MDQ0QlxcdTA0M0JcXHUwNDNBXFx1MDQzMCBcXHUwNDQxXFx1MDQzQVxcdTA0M0VcXHUwNDNGXFx1MDQzOFxcdTA0NDBcXHUwNDNFXFx1MDQzMlxcdTA0MzBcXHUwNDNEXFx1MDQzMFwiLFxuICBjb3BpZWQ6IFwiXFx1MDQyMVxcdTA0M0FcXHUwNDNFXFx1MDQzRlxcdTA0MzhcXHUwNDQwXFx1MDQzRVxcdTA0MzJcXHUwNDMwXFx1MDQzRFxcdTA0M0VcIixcbiAgeW91cldhbGxldDogXCJcXHUwNDEyXFx1MDQzMFxcdTA0NDggXFx1MDQzQVxcdTA0M0VcXHUwNDQ4XFx1MDQzNVxcdTA0M0JcXHUwNDUxXFx1MDQzQVwiLFxuICByZXRyeTogXCJcXHUwNDFGXFx1MDQzRVxcdTA0MzJcXHUwNDQyXFx1MDQzRVxcdTA0NDBcXHUwNDM4XFx1MDQ0MlxcdTA0NENcIixcbiAgZ2V0OiBcIlxcdTA0MjFcXHUwNDNBXFx1MDQzMFxcdTA0NDdcXHUwNDMwXFx1MDQ0MlxcdTA0NENcIixcbiAgbW9iaWxlOiBcIlxcdTA0MUNcXHUwNDNFXFx1MDQzMVxcdTA0MzhcXHUwNDNCXFx1MDQ0Q1xcdTA0M0RcXHUwNDRCXFx1MDQzOVwiLFxuICBicm93c2VyRXh0ZW5zaW9uOiBcIlxcdTA0MjBcXHUwNDMwXFx1MDQ0MVxcdTA0NDhcXHUwNDM4XFx1MDQ0MFxcdTA0MzVcXHUwNDNEXFx1MDQzOFxcdTA0MzVcIixcbiAgZGVza3RvcDogXCJcXHUwNDE0XFx1MDQzNVxcdTA0NDFcXHUwNDNBXFx1MDQ0MlxcdTA0M0VcXHUwNDNGXCJcbn07XG5jb25zdCBidXR0b24gPSB7XG4gIGNvbm5lY3RXYWxsZXQ6IFwiXFx1MDQxRlxcdTA0M0VcXHUwNDM0XFx1MDQzQVxcdTA0M0JcXHUwNDRFXFx1MDQ0N1xcdTA0MzhcXHUwNDQyXFx1MDQ0QyBcXHUwNDNBXFx1MDQzRVxcdTA0NDhcXHUwNDM1XFx1MDQzQlxcdTA0NTFcXHUwNDNBXCIsXG4gIGRyb3Bkb3duOiB7XG4gICAgY29weTogXCJcXHUwNDIxXFx1MDQzQVxcdTA0M0VcXHUwNDNGXFx1MDQzOFxcdTA0NDBcXHUwNDNFXFx1MDQzMlxcdTA0MzBcXHUwNDQyXFx1MDQ0QyBcXHUwNDMwXFx1MDQzNFxcdTA0NDBcXHUwNDM1XFx1MDQ0MVwiLFxuICAgIGNvcGllZDogXCJcXHUwNDEwXFx1MDQzNFxcdTA0NDBcXHUwNDM1XFx1MDQ0MSBcXHUwNDQxXFx1MDQzQVxcdTA0M0VcXHUwNDNGXFx1MDQzOFxcdTA0NDBcXHUwNDNFXFx1MDQzMlxcdTA0MzBcXHUwNDNEIVwiLFxuICAgIGRpc2Nvbm5lY3Q6IFwiXFx1MDQxRVxcdTA0NDJcXHUwNDNBXFx1MDQzQlxcdTA0NEVcXHUwNDQ3XFx1MDQzOFxcdTA0NDJcXHUwNDRDIFxcdTA0M0FcXHUwNDNFXFx1MDQ0OFxcdTA0MzVcXHUwNDNCXFx1MDQ1MVxcdTA0M0FcIlxuICB9XG59O1xuY29uc3Qgbm90aWZpY2F0aW9ucyA9IHtcbiAgY29uZmlybToge1xuICAgIGhlYWRlcjogXCJcXHUwNDFFXFx1MDQ0MlxcdTA0M0FcXHUwNDQwXFx1MDQzRVxcdTA0MzlcXHUwNDQyXFx1MDQzNSB7eyBuYW1lIH19LCBcXHUwNDQ3XFx1MDQ0MlxcdTA0M0VcXHUwNDMxXFx1MDQ0QlxceEEwXFx1MDQzRlxcdTA0M0VcXHUwNDM0XFx1MDQ0MlxcdTA0MzJcXHUwNDM1XFx1MDQ0MFxcdTA0MzRcXHUwNDM4XFx1MDQ0MlxcdTA0NEMgXFx1MDQ0MlxcdTA0NDBcXHUwNDMwXFx1MDQzRFxcdTA0MzdcXHUwNDMwXFx1MDQzQVxcdTA0NDZcXHUwNDM4XFx1MDQ0RS5cIlxuICB9LFxuICB0cmFuc2FjdGlvblNlbnQ6IHtcbiAgICBoZWFkZXI6IFwiXFx1MDQyMlxcdTA0NDBcXHUwNDMwXFx1MDQzRFxcdTA0MzdcXHUwNDMwXFx1MDQzQVxcdTA0NDZcXHUwNDM4XFx1MDQ0RiBcXHUwNDNFXFx1MDQ0MlxcdTA0M0ZcXHUwNDQwXFx1MDQzMFxcdTA0MzJcXHUwNDNCXFx1MDQzNVxcdTA0M0RcXHUwNDMwXCIsXG4gICAgdGV4dDogXCJcXHUwNDEyXFx1MDQzMFxcdTA0NDhcXHUwNDMwIFxcdTA0NDJcXHUwNDQwXFx1MDQzMFxcdTA0M0RcXHUwNDM3XFx1MDQzMFxcdTA0M0FcXHUwNDQ2XFx1MDQzOFxcdTA0NEZcXHhBMFxcdTA0MzFcXHUwNDQzXFx1MDQzNFxcdTA0MzVcXHUwNDQyIFxcdTA0M0VcXHUwNDMxXFx1MDQ0MFxcdTA0MzBcXHUwNDMxXFx1MDQzRVxcdTA0NDJcXHUwNDMwXFx1MDQzRFxcdTA0MzAgXFx1MDQ0N1xcdTA0MzVcXHUwNDQwXFx1MDQzNVxcdTA0MzdcXHhBMFxcdTA0M0RcXHUwNDM1XFx1MDQ0MVxcdTA0M0FcXHUwNDNFXFx1MDQzQlxcdTA0NENcXHUwNDNBXFx1MDQzRSBcXHUwNDQxXFx1MDQzNVxcdTA0M0FcXHUwNDQzXFx1MDQzRFxcdTA0MzQuXCJcbiAgfSxcbiAgdHJhbnNhY3Rpb25DYW5jZWxlZDoge1xuICAgIGhlYWRlcjogXCJcXHUwNDIyXFx1MDQ0MFxcdTA0MzBcXHUwNDNEXFx1MDQzN1xcdTA0MzBcXHUwNDNBXFx1MDQ0NlxcdTA0MzhcXHUwNDRGIFxcdTA0M0VcXHUwNDQyXFx1MDQzQ1xcdTA0MzVcXHUwNDNEXFx1MDQzNVxcdTA0M0RcXHUwNDMwXCIsXG4gICAgdGV4dDogXCJcXHUwNDIxXFx1MDQzRVxcdTA0NDFcXHUwNDQyXFx1MDQzRVxcdTA0NEZcXHUwNDNEXFx1MDQzOFxcdTA0MzUgXFx1MDQzMlxcdTA0MzBcXHUwNDQ4XFx1MDQzNVxcdTA0MzNcXHUwNDNFIFxcdTA0NDFcXHUwNDQ3XFx1MDQ1MVxcdTA0NDJcXHUwNDMwIFxcdTA0M0RcXHUwNDM1XFx4QTBcXHUwNDM4XFx1MDQzN1xcdTA0M0NcXHUwNDM1XFx1MDQzRFxcdTA0MzhcXHUwNDQyXFx1MDQ0MVxcdTA0NEYuXCJcbiAgfSxcbiAgZGF0YVNpZ25lZDoge1xuICAgIGhlYWRlcjogXCJcXHUwNDE0XFx1MDQzMFxcdTA0M0RcXHUwNDNEXFx1MDQ0QlxcdTA0MzUgXFx1MDQzRlxcdTA0M0VcXHUwNDM0XFx1MDQzRlxcdTA0MzhcXHUwNDQxXFx1MDQzMFxcdTA0M0RcXHUwNDRCXCJcbiAgfSxcbiAgc2lnbkRhdGFDYW5jZWxlZDoge1xuICAgIGhlYWRlcjogXCJcXHUwNDFGXFx1MDQzRVxcdTA0MzRcXHUwNDNGXFx1MDQzOFxcdTA0NDFcXHUwNDRDIFxcdTA0MzRcXHUwNDMwXFx1MDQzRFxcdTA0M0RcXHUwNDRCXFx1MDQ0NSBcXHUwNDNFXFx1MDQ0MlxcdTA0M0NcXHUwNDM1XFx1MDQzRFxcdTA0MzVcXHUwNDNEXFx1MDQzMFwiXG4gIH1cbn07XG5jb25zdCB3YWxsZXRJdGVtID0ge1xuICB3YWxsZXRPbjogXCJXYWxsZXQgXFx1MDQzMlwiLFxuICByZWNlbnQ6IFwiXFx1MDQxRFxcdTA0MzVcXHUwNDM0XFx1MDQzMFxcdTA0MzJcXHUwNDNEXFx1MDQzOFxcdTA0MzlcIixcbiAgaW5zdGFsbGVkOiBcIlxcdTA0MjNcXHUwNDQxXFx1MDQ0MlxcdTA0MzBcXHUwNDNEXFx1MDQzRVxcdTA0MzJcXHUwNDNCXFx1MDQzNVxcdTA0M0RcIixcbiAgcG9wdWxhcjogXCJcXHUwNDFGXFx1MDQzRVxcdTA0M0ZcXHUwNDQzXFx1MDQzQlxcdTA0NEZcXHUwNDQwXFx1MDQzNVxcdTA0M0RcIlxufTtcbmNvbnN0IHdhbGxldE1vZGFsID0ge1xuICBsb2FkaW5nOiBcIlxcdTA0MUFcXHUwNDNFXFx1MDQ0OFxcdTA0MzVcXHUwNDNCXFx1MDQ0Q1xcdTA0M0FcXHUwNDM4IFxcdTA0MzdcXHUwNDMwXFx1MDQzM1xcdTA0NDBcXHUwNDQzXFx1MDQzNlxcdTA0MzBcXHUwNDRFXFx1MDQ0MlxcdTA0NDFcXHUwNDRGXCIsXG4gIHdhbGxldHM6IFwiXFx1MDQxQVxcdTA0M0VcXHUwNDQ4XFx1MDQzNVxcdTA0M0JcXHUwNDRDXFx1MDQzQVxcdTA0MzhcIixcbiAgbW9iaWxlVW5pdmVyc2FsTW9kYWw6IHtcbiAgICBjb25uZWN0WW91cldhbGxldDogXCJcXHUwNDFGXFx1MDQzRVxcdTA0MzRcXHUwNDNBXFx1MDQzQlxcdTA0NEVcXHUwNDQ3XFx1MDQzOFxcdTA0NDJcXHUwNDM1IFRPTlxceEEwXFx1MDQzQVxcdTA0M0VcXHUwNDQ4XFx1MDQzNVxcdTA0M0JcXHUwNDUxXFx1MDQzQVwiLFxuICAgIG9wZW5XYWxsZXRPblRlbGVncmFtT3JTZWxlY3Q6IFwiXFx1MDQxRlxcdTA0M0VcXHUwNDM0XFx1MDQzQVxcdTA0M0JcXHUwNDRFXFx1MDQ0N1xcdTA0MzhcXHUwNDQyXFx1MDQzNSBXYWxsZXQgXFx1MDQzMlxceEEwVGVsZWdyYW0gXFx1MDQzOFxcdTA0M0JcXHUwNDM4XFx4QTBcXHUwNDMyXFx1MDQ0QlxcdTA0MzFcXHUwNDM1XFx1MDQ0MFxcdTA0MzVcXHUwNDQyXFx1MDQzNSBcXHUwNDM0XFx1MDQ0MFxcdTA0NDNcXHUwNDMzXFx1MDQzRVxcdTA0MzUgXFx1MDQzRlxcdTA0NDBcXHUwNDM4XFx1MDQzQlxcdTA0M0VcXHUwNDM2XFx1MDQzNVxcdTA0M0RcXHUwNDM4XFx1MDQzNVwiLFxuICAgIG9wZW5XYWxsZXRPblRlbGVncmFtOiBcIlxcdTA0MUVcXHUwNDQyXFx1MDQzQVxcdTA0NDBcXHUwNDRCXFx1MDQ0MlxcdTA0NEMgV2FsbGV0IFxcdTA0MzIgVGVsZWdyYW1cIixcbiAgICBjaG9vc2VPdGhlckFwcGxpY2F0aW9uOiBcIlxcdTA0MTJcXHUwNDRCXFx1MDQzMVxcdTA0MzVcXHUwNDQwXFx1MDQzOFxcdTA0NDJcXHUwNDM1IFxcdTA0MzRcXHUwNDQwXFx1MDQ0M1xcdTA0MzNcXHUwNDNFXFx1MDQzNSBcXHUwNDNGXFx1MDQ0MFxcdTA0MzhcXHUwNDNCXFx1MDQzRVxcdTA0MzZcXHUwNDM1XFx1MDQzRFxcdTA0MzhcXHUwNDM1XCIsXG4gICAgb3Blbkxpbms6IFwiXFx1MDQxRVxcdTA0NDJcXHUwNDNBXFx1MDQ0MFxcdTA0NEJcXHUwNDQyXFx1MDQ0Q1wiLFxuICAgIHNjYW46IFwiXFx1MDQxRVxcdTA0NDJcXHUwNDQxXFx1MDQzQVxcdTA0MzBcXHUwNDNEXFx1MDQzOFxcdTA0NDBcXHUwNDQzXFx1MDQzOVxcdTA0NDJcXHUwNDM1IFxcdTA0M0FcXHUwNDMwXFx1MDQzQ1xcdTA0MzVcXHUwNDQwXFx1MDQzRVxcdTA0MzkgXFx1MDQzMlxcdTA0MzBcXHUwNDQ4XFx1MDQzNVxcdTA0MzNcXHUwNDNFXFx4QTBcXHUwNDQyXFx1MDQzNVxcdTA0M0JcXHUwNDM1XFx1MDQ0NFxcdTA0M0VcXHUwNDNEXFx1MDQzMFwiXG4gIH0sXG4gIGRlc2t0b3BVbml2ZXJzYWxNb2RhbDoge1xuICAgIGNvbm5lY3RZb3VyV2FsbGV0OiBcIlxcdTA0MUZcXHUwNDNFXFx1MDQzNFxcdTA0M0FcXHUwNDNCXFx1MDQ0RVxcdTA0NDdcXHUwNDM4XFx1MDQ0MlxcdTA0MzUgVE9OIFxcdTA0M0FcXHUwNDNFXFx1MDQ0OFxcdTA0MzVcXHUwNDNCXFx1MDQ1MVxcdTA0M0FcIixcbiAgICBzY2FuOiBcIlxcdTA0MUVcXHUwNDQyXFx1MDQ0MVxcdTA0M0FcXHUwNDMwXFx1MDQzRFxcdTA0MzhcXHUwNDQwXFx1MDQ0M1xcdTA0MzlcXHUwNDQyXFx1MDQzNSBRUi1cXHUwNDNBXFx1MDQzRVxcdTA0MzQgXFx1MDQzQVxcdTA0MzBcXHUwNDNDXFx1MDQzNVxcdTA0NDBcXHUwNDNFXFx1MDQzOSBcXHUwNDMyXFx1MDQzMFxcdTA0NDhcXHUwNDM1XFx1MDQzM1xcdTA0M0VcXHhBMFxcdTA0NDJcXHUwNDM1XFx1MDQzQlxcdTA0MzVcXHUwNDQ0XFx1MDQzRVxcdTA0M0RcXHUwNDMwXCIsXG4gICAgYXZhaWxhYmxlV2FsbGV0czogXCJcXHUwNDE0XFx1MDQzRVxcdTA0NDFcXHUwNDQyXFx1MDQ0M1xcdTA0M0ZcXHUwNDNEXFx1MDQ0QlxcdTA0MzUgXFx1MDQzQVxcdTA0M0VcXHUwNDQ4XFx1MDQzNVxcdTA0M0JcXHUwNDRDXFx1MDQzQVxcdTA0MzhcIlxuICB9LFxuICBtb2JpbGVDb25uZWN0aW9uTW9kYWw6IHtcbiAgICBzaG93UVI6IFwiXFx1MDQxRlxcdTA0M0VcXHUwNDNBXFx1MDQzMFxcdTA0MzdcXHUwNDMwXFx1MDQ0MlxcdTA0NEMgUVItXFx1MDQzQVxcdTA0M0VcXHUwNDM0XCIsXG4gICAgc2NhblFSOiBcIlxcdTA0MUVcXHUwNDQyXFx1MDQ0MVxcdTA0M0FcXHUwNDMwXFx1MDQzRFxcdTA0MzhcXHUwNDQwXFx1MDQ0M1xcdTA0MzlcXHUwNDQyXFx1MDQzNSBRUi1cXHUwNDNBXFx1MDQzRVxcdTA0MzQgXFx1MDQzRFxcdTA0MzhcXHUwNDM2XFx1MDQzNSBcXHUwNDNBXFx1MDQzMFxcdTA0M0NcXHUwNDM1XFx1MDQ0MFxcdTA0M0VcXHUwNDM5IFxcdTA0MzJcXHhBMFxcdTA0M0ZcXHUwNDQwXFx1MDQzOFxcdTA0M0JcXHUwNDNFXFx1MDQzNlxcdTA0MzVcXHUwNDNEXFx1MDQzOFxcdTA0Mzgge3sgbmFtZSB9fSwgXFx1MDQzOFxcdTA0M0JcXHUwNDM4XFx4QTBcXHUwNDNBXFx1MDQzMFxcdTA0M0NcXHUwNDM1XFx1MDQ0MFxcdTA0M0VcXHUwNDM5IFxcdTA0NDJcXHUwNDM1XFx1MDQzQlxcdTA0MzVcXHUwNDQ0XFx1MDQzRVxcdTA0M0RcXHUwNDMwXCIsXG4gICAgbWlzc2luZ0ZlYXR1cmVzOiBcIlxcdTA0MUVcXHUwNDMxXFx1MDQzRFxcdTA0M0VcXHUwNDMyXFx1MDQzOFxcdTA0NDJcXHUwNDM1IHt7IG5hbWUgfX0sIFxcdTA0MzJcXHUwNDMwXFx1MDQ0OFxcdTA0MzAgXFx1MDQzMlxcdTA0MzVcXHUwNDQwXFx1MDQ0MVxcdTA0MzhcXHUwNDRGIFxcdTA0M0RcXHUwNDM1IFxcdTA0M0ZcXHUwNDNFXFx1MDQzNFxcdTA0MzRcXHUwNDM1XFx1MDQ0MFxcdTA0MzZcXHUwNDM4XFx1MDQzMlxcdTA0MzBcXHUwNDM1XFx1MDQ0MiBcXHUwNDNEXFx1MDQzNVxcdTA0M0VcXHUwNDMxXFx1MDQ0NVxcdTA0M0VcXHUwNDM0XFx1MDQzOFxcdTA0M0NcXHUwNDRCXFx1MDQzNSBcXHUwNDQ0XFx1MDQ0M1xcdTA0M0RcXHUwNDNBXFx1MDQ0NlxcdTA0MzhcXHUwNDM4IFxcdTA0MzRcXHUwNDNCXFx1MDQ0RiBcXHUwNDREXFx1MDQ0MlxcdTA0M0VcXHUwNDMzXFx1MDQzRSBkQXBwXCIsXG4gICAgbm90U3VwcG9ydGVkV2FsbGV0OiBcInt7IG5hbWUgfX0gXFx1MDQzRFxcdTA0MzUgXFx1MDQzRlxcdTA0M0VcXHUwNDM0XFx1MDQzNFxcdTA0MzVcXHUwNDQwXFx1MDQzNlxcdTA0MzhcXHUwNDMyXFx1MDQzMFxcdTA0MzVcXHUwNDQyIFxcdTA0MzdcXHUwNDMwXFx1MDQzRlxcdTA0NDBcXHUwNDNFXFx1MDQ0OFxcdTA0MzVcXHUwNDNEXFx1MDQzRFxcdTA0M0VcXHUwNDM1IFxcdTA0MzRcXHUwNDM1XFx1MDQzOVxcdTA0NDFcXHUwNDQyXFx1MDQzMlxcdTA0MzhcXHUwNDM1LiBcXHUwNDFGXFx1MDQzRVxcdTA0MzZcXHUwNDMwXFx1MDQzQlxcdTA0NDNcXHUwNDM5XFx1MDQ0MVxcdTA0NDJcXHUwNDMwLCBcXHUwNDNGXFx1MDQzRVxcdTA0MzRcXHUwNDNBXFx1MDQzQlxcdTA0NEVcXHUwNDQ3XFx1MDQzOFxcdTA0NDJcXHUwNDM1IFxcdTA0MzRcXHUwNDQwXFx1MDQ0M1xcdTA0MzNcXHUwNDNFXFx1MDQzOSBcXHUwNDNBXFx1MDQzRVxcdTA0NDhcXHUwNDM1XFx1MDQzQlxcdTA0NTFcXHUwNDNBLCBcXHUwNDNBXFx1MDQzRVxcdTA0NDJcXHUwNDNFXFx1MDQ0MFxcdTA0NEJcXHUwNDM5IFxcdTA0M0ZcXHUwNDNFXFx1MDQzNFxcdTA0MzRcXHUwNDM1XFx1MDQ0MFxcdTA0MzZcXHUwNDM4XFx1MDQzMlxcdTA0MzBcXHUwNDM1XFx1MDQ0MiBcXHUwNDREXFx1MDQ0MlxcdTA0M0VcIixcbiAgICBjb250aW51ZUluOiBcIlxcdTA0MUZcXHUwNDQwXFx1MDQzRVxcdTA0MzRcXHUwNDNFXFx1MDQzQlxcdTA0MzZcXHUwNDM4XFx1MDQ0MlxcdTA0MzUgXFx1MDQzMiB7eyBuYW1lIH19XFx1MjAyNlwiLFxuICAgIHVwZGF0ZVdhbGxldDogXCJcXHUwNDFFXFx1MDQzMVxcdTA0M0RcXHUwNDNFXFx1MDQzMlxcdTA0MzhcXHUwNDQyXFx1MDQ0QyB7eyBuYW1lIH19XCIsXG4gICAgY2hvb3NlQW5vdGhlcldhbGxldDogXCJcXHUwNDEyXFx1MDQ0QlxcdTA0MzFcXHUwNDQwXFx1MDQzMFxcdTA0NDJcXHUwNDRDIFxcdTA0MzRcXHUwNDQwXFx1MDQ0M1xcdTA0MzNcXHUwNDNFXFx1MDQzOSBcXHUwNDNBXFx1MDQzRVxcdTA0NDhcXHUwNDM1XFx1MDQzQlxcdTA0NTFcXHUwNDNBXCIsXG4gICAgY29ubmVjdGlvbkRlY2xpbmVkOiBcIlxcdTA0MUZcXHUwNDNFXFx1MDQzNFxcdTA0M0FcXHUwNDNCXFx1MDQ0RVxcdTA0NDdcXHUwNDM1XFx1MDQzRFxcdTA0MzhcXHUwNDM1IFxcdTA0M0VcXHUwNDQyXFx1MDQzQVxcdTA0M0JcXHUwNDNFXFx1MDQzRFxcdTA0MzVcXHUwNDNEXFx1MDQzRVwiXG4gIH0sXG4gIGRlc2t0b3BDb25uZWN0aW9uTW9kYWw6IHtcbiAgICBzY2FuUVI6IFwiXFx1MDQxRVxcdTA0NDJcXHUwNDQxXFx1MDQzQVxcdTA0MzBcXHUwNDNEXFx1MDQzOFxcdTA0NDBcXHUwNDQzXFx1MDQzOVxcdTA0NDJcXHUwNDM1IFFSLVxcdTA0M0FcXHUwNDNFXFx1MDQzNCBcXHUwNDNEXFx1MDQzOFxcdTA0MzZcXHUwNDM1IFxcdTA0M0FcXHUwNDMwXFx1MDQzQ1xcdTA0MzVcXHUwNDQwXFx1MDQzRVxcdTA0MzkgXFx1MDQzMlxceEEwXFx1MDQzRlxcdTA0NDBcXHUwNDM4XFx1MDQzQlxcdTA0M0VcXHUwNDM2XFx1MDQzNVxcdTA0M0RcXHUwNDM4XFx1MDQzOCB7eyBuYW1lIH19LCBcXHUwNDM4XFx1MDQzQlxcdTA0MzhcXHhBMFxcdTA0M0FcXHUwNDMwXFx1MDQzQ1xcdTA0MzVcXHUwNDQwXFx1MDQzRVxcdTA0MzkgXFx1MDQ0MlxcdTA0MzVcXHUwNDNCXFx1MDQzNVxcdTA0NDRcXHUwNDNFXFx1MDQzRFxcdTA0MzBcIixcbiAgICBjb250aW51ZUluRXh0ZW5zaW9uOiBcIlxcdTA0MUVcXHUwNDQyXFx1MDQzQVxcdTA0NDBcXHUwNDNFXFx1MDQzOVxcdTA0NDJcXHUwNDM1IFxcdTA0MzFcXHUwNDQwXFx1MDQzMFxcdTA0NDNcXHUwNDM3XFx1MDQzNVxcdTA0NDBcXHUwNDNEXFx1MDQzRVxcdTA0MzUgXFx1MDQ0MFxcdTA0MzBcXHUwNDQxXFx1MDQ0OFxcdTA0MzhcXHUwNDQwXFx1MDQzNVxcdTA0M0RcXHUwNDM4XFx1MDQzNSB7eyBuYW1lIH19XCIsXG4gICAgZG9udEhhdmVFeHRlbnNpb246IFwiXFx1MDQxRlxcdTA0M0VcXHUwNDQ1XFx1MDQzRVxcdTA0MzZcXHUwNDM1LCBcXHUwNDQzIFxcdTA0MzJcXHUwNDMwXFx1MDQ0MSBcXHUwNDNEXFx1MDQzNVxceEEwXFx1MDQ0M1xcdTA0NDFcXHUwNDQyXFx1MDQzMFxcdTA0M0RcXHUwNDNFXFx1MDQzMlxcdTA0M0JcXHUwNDM1XFx1MDQzRFxcdTA0M0UgXFx1MDQzMVxcdTA0NDBcXHUwNDMwXFx1MDQ0M1xcdTA0MzdcXHUwNDM1XFx1MDQ0MFxcdTA0M0RcXHUwNDNFXFx1MDQzNVxceEEwXFx1MDQ0MFxcdTA0MzBcXHUwNDQxXFx1MDQ0OFxcdTA0MzhcXHUwNDQwXFx1MDQzNVxcdTA0M0RcXHUwNDM4XFx1MDQzNVxceEEwe3sgbmFtZSB9fVwiLFxuICAgIG1pc3NpbmdGZWF0dXJlczogXCJcXHUwNDFFXFx1MDQzMVxcdTA0M0RcXHUwNDNFXFx1MDQzMlxcdTA0MzhcXHUwNDQyXFx1MDQzNSB7eyBuYW1lIH19LCBcXHUwNDMyXFx1MDQzMFxcdTA0NDhcXHUwNDMwIFxcdTA0MzJcXHUwNDM1XFx1MDQ0MFxcdTA0NDFcXHUwNDM4XFx1MDQ0RiBcXHUwNDNEXFx1MDQzNSBcXHUwNDNGXFx1MDQzRVxcdTA0MzRcXHUwNDM0XFx1MDQzNVxcdTA0NDBcXHUwNDM2XFx1MDQzOFxcdTA0MzJcXHUwNDMwXFx1MDQzNVxcdTA0NDIgXFx1MDQzRFxcdTA0MzVcXHUwNDNFXFx1MDQzMVxcdTA0NDVcXHUwNDNFXFx1MDQzNFxcdTA0MzhcXHUwNDNDXFx1MDQ0QlxcdTA0MzUgXFx1MDQ0NFxcdTA0NDNcXHUwNDNEXFx1MDQzQVxcdTA0NDZcXHUwNDM4XFx1MDQzOCBcXHUwNDM0XFx1MDQzQlxcdTA0NEYgXFx1MDQ0RFxcdTA0NDJcXHUwNDNFXFx1MDQzM1xcdTA0M0UgZEFwcFwiLFxuICAgIG5vdFN1cHBvcnRlZFdhbGxldDogXCJ7eyBuYW1lIH19IFxcdTA0M0RcXHUwNDM1IFxcdTA0M0ZcXHUwNDNFXFx1MDQzNFxcdTA0MzRcXHUwNDM1XFx1MDQ0MFxcdTA0MzZcXHUwNDM4XFx1MDQzMlxcdTA0MzBcXHUwNDM1XFx1MDQ0MiBcXHUwNDM3XFx1MDQzMFxcdTA0M0ZcXHUwNDQwXFx1MDQzRVxcdTA0NDhcXHUwNDM1XFx1MDQzRFxcdTA0M0RcXHUwNDNFXFx1MDQzNSBcXHUwNDM0XFx1MDQzNVxcdTA0MzlcXHUwNDQxXFx1MDQ0MlxcdTA0MzJcXHUwNDM4XFx1MDQzNS4gXFx1MDQxRlxcdTA0M0VcXHUwNDM2XFx1MDQzMFxcdTA0M0JcXHUwNDQzXFx1MDQzOVxcdTA0NDFcXHUwNDQyXFx1MDQzMCwgXFx1MDQzRlxcdTA0M0VcXHUwNDM0XFx1MDQzQVxcdTA0M0JcXHUwNDRFXFx1MDQ0N1xcdTA0MzhcXHUwNDQyXFx1MDQzNSBcXHUwNDM0XFx1MDQ0MFxcdTA0NDNcXHUwNDMzXFx1MDQzRVxcdTA0MzkgXFx1MDQzQVxcdTA0M0VcXHUwNDQ4XFx1MDQzNVxcdTA0M0JcXHUwNDUxXFx1MDQzQSwgXFx1MDQzQVxcdTA0M0VcXHUwNDQyXFx1MDQzRVxcdTA0NDBcXHUwNDRCXFx1MDQzOSBcXHUwNDNGXFx1MDQzRVxcdTA0MzRcXHUwNDM0XFx1MDQzNVxcdTA0NDBcXHUwNDM2XFx1MDQzOFxcdTA0MzJcXHUwNDMwXFx1MDQzNVxcdTA0NDIgXFx1MDQ0RFxcdTA0NDJcXHUwNDNFXCIsXG4gICAgZ2V0V2FsbGV0OiBcIlxcdTA0MjFcXHUwNDNBXFx1MDQzMFxcdTA0NDdcXHUwNDMwXFx1MDQ0MlxcdTA0NEMge3sgbmFtZSB9fVwiLFxuICAgIHVwZGF0ZVdhbGxldDogXCJcXHUwNDFFXFx1MDQzMVxcdTA0M0RcXHUwNDNFXFx1MDQzMlxcdTA0MzhcXHUwNDQyXFx1MDQ0QyB7eyBuYW1lIH19XCIsXG4gICAgY2hvb3NlQW5vdGhlcldhbGxldDogXCJcXHUwNDEyXFx1MDQ0QlxcdTA0MzFcXHUwNDQwXFx1MDQzMFxcdTA0NDJcXHUwNDRDIFxcdTA0MzRcXHUwNDQwXFx1MDQ0M1xcdTA0MzNcXHUwNDNFXFx1MDQzOSBcXHUwNDNBXFx1MDQzRVxcdTA0NDhcXHUwNDM1XFx1MDQzQlxcdTA0NTFcXHUwNDNBXCIsXG4gICAgY29udGludWVPbkRlc2t0b3A6IFwiXFx1MDQxRVxcdTA0NDJcXHUwNDNBXFx1MDQ0MFxcdTA0M0VcXHUwNDM5XFx1MDQ0MlxcdTA0MzUge3sgbmFtZSB9fSBcXHUwNDNEXFx1MDQzMFxceEEwXFx1MDQzQVxcdTA0M0VcXHUwNDNDXFx1MDQzRlxcdTA0NENcXHUwNDRFXFx1MDQ0MlxcdTA0MzVcXHUwNDQwXFx1MDQzNVxcdTIwMjZcIixcbiAgICBvcGVuV2FsbGV0T25UZWxlZ3JhbTogXCJcXHUwNDFFXFx1MDQ0MlxcdTA0M0FcXHUwNDQwXFx1MDQ0QlxcdTA0NDJcXHUwNDRDIFdhbGxldCBcXHUwNDMyXFx4QTBUZWxlZ3JhbVwiLFxuICAgIGNvbm5lY3Rpb25EZWNsaW5lZDogXCJcXHUwNDFGXFx1MDQzRVxcdTA0MzRcXHUwNDNBXFx1MDQzQlxcdTA0NEVcXHUwNDQ3XFx1MDQzNVxcdTA0M0RcXHUwNDM4XFx1MDQzNSBcXHUwNDNFXFx1MDQ0MlxcdTA0M0FcXHUwNDNCXFx1MDQzRVxcdTA0M0RcXHUwNDM1XFx1MDQzRFxcdTA0M0VcIlxuICB9LFxuICBpbmZvTW9kYWw6IHtcbiAgICB3aGF0SXNBV2FsbGV0OiBcIlxcdTA0MjdcXHUwNDQyXFx1MDQzRSBcXHUwNDQyXFx1MDQzMFxcdTA0M0FcXHUwNDNFXFx1MDQzNSBcXHUwNDNBXFx1MDQzRVxcdTA0NDhcXHUwNDM1XFx1MDQzQlxcdTA0NTFcXHUwNDNBP1wiLFxuICAgIHNlY3VyZURpZ2l0YWxBc3NldHM6IFwiXFx1MDQxRFxcdTA0MzBcXHUwNDM0XFx1MDQzNVxcdTA0MzZcXHUwNDNEXFx1MDQzRVxcdTA0MzUgXFx1MDQ0NVxcdTA0NDBcXHUwNDMwXFx1MDQzRFxcdTA0MzhcXHUwNDNCXFx1MDQzOFxcdTA0NDlcXHUwNDM1IFxcdTA0NDZcXHUwNDM4XFx1MDQ0NFxcdTA0NDBcXHUwNDNFXFx1MDQzMlxcdTA0NEJcXHUwNDQ1IFxcdTA0MzBcXHUwNDNBXFx1MDQ0MlxcdTA0MzhcXHUwNDMyXFx1MDQzRVxcdTA0MzJcIixcbiAgICB3YWxsZXRQcm90ZWN0czogXCJcXHUwNDFBXFx1MDQzRVxcdTA0NDhcXHUwNDM1XFx1MDQzQlxcdTA0NTFcXHUwNDNBIFxcdTA0MzdcXHUwNDMwXFx1MDQ0OVxcdTA0MzhcXHUwNDQ5XFx1MDQzMFxcdTA0MzVcXHUwNDQyIFxcdTA0MzJcXHUwNDMwXFx1MDQ0OFxcdTA0MzggXFx1MDQ0NlxcdTA0MzhcXHUwNDQ0XFx1MDQ0MFxcdTA0M0VcXHUwNDMyXFx1MDQ0QlxcdTA0MzUgXFx1MDQzMFxcdTA0M0FcXHUwNDQyXFx1MDQzOFxcdTA0MzJcXHUwNDRCLCBcXHUwNDMyXFx1MDQzQVxcdTA0M0JcXHUwNDRFXFx1MDQ0N1xcdTA0MzBcXHUwNDRGIFRPTiwgXFx1MDQ0MlxcdTA0M0VcXHUwNDNBXFx1MDQzNVxcdTA0M0RcXHUwNDRCIFxcdTA0MzhcXHhBMFxcdTA0M0ZcXHUwNDQwXFx1MDQzNVxcdTA0MzRcXHUwNDNDXFx1MDQzNVxcdTA0NDJcXHUwNDRCIFxcdTA0M0FcXHUwNDNFXFx1MDQzQlxcdTA0M0JcXHUwNDM1XFx1MDQzQVxcdTA0NDZcXHUwNDM4XFx1MDQzRVxcdTA0M0RcXHUwNDM4XFx1MDQ0MFxcdTA0M0VcXHUwNDMyXFx1MDQzMFxcdTA0M0RcXHUwNDM4XFx1MDQ0RiwgXFx1MDQzOFxceEEwXFx1MDQ0M1xcdTA0M0ZcXHUwNDQwXFx1MDQzMFxcdTA0MzJcXHUwNDNCXFx1MDQ0RlxcdTA0MzVcXHUwNDQyIFxcdTA0MzhcXHUwNDNDXFx1MDQzOC5cIixcbiAgICBjb250cm9sSWRlbnRpdHk6IFwiXFx1MDQxQVxcdTA0M0VcXHUwNDNEXFx1MDQ0MlxcdTA0NDBcXHUwNDNFXFx1MDQzQlxcdTA0NEMgXFx1MDQ0MVxcdTA0MzJcXHUwNDNFXFx1MDQzNVxcdTA0MzkgXFx1MDQzQlxcdTA0MzhcXHUwNDQ3XFx1MDQzRFxcdTA0M0VcXHUwNDQxXFx1MDQ0MlxcdTA0MzggV2ViM1wiLFxuICAgIG1hbmFnZUlkZW50aXR5OiBcIlxcdTA0MjNcXHUwNDNGXFx1MDQ0MFxcdTA0MzBcXHUwNDMyXFx1MDQzQlxcdTA0NEZcXHUwNDM5XFx1MDQ0MlxcdTA0MzUgXFx1MDQ0MVxcdTA0MzJcXHUwNDNFXFx1MDQzNVxcdTA0MzkgXFx1MDQ0NlxcdTA0MzhcXHUwNDQ0XFx1MDQ0MFxcdTA0M0VcXHUwNDMyXFx1MDQzRVxcdTA0MzkgXFx1MDQzOFxcdTA0MzRcXHUwNDM1XFx1MDQzRFxcdTA0NDJcXHUwNDM4XFx1MDQ0NFxcdTA0MzhcXHUwNDNBXFx1MDQzMFxcdTA0NDZcXHUwNDM4XFx1MDQzNVxcdTA0MzkgXFx1MDQzOFxceEEwXFx1MDQ0MVxceEEwXFx1MDQzQlxcdTA0MzVcXHUwNDMzXFx1MDQzQVxcdTA0M0VcXHUwNDQxXFx1MDQ0MlxcdTA0NENcXHUwNDRFIFxcdTA0M0ZcXHUwNDNFXFx1MDQzQlxcdTA0NDNcXHUwNDQ3XFx1MDQzMFxcdTA0MzlcXHUwNDQyXFx1MDQzNSBcXHUwNDM0XFx1MDQzRVxcdTA0NDFcXHUwNDQyXFx1MDQ0M1xcdTA0M0YgXFx1MDQzQVxceEEwXFx1MDQzNFxcdTA0MzVcXHUwNDQ2XFx1MDQzNVxcdTA0M0RcXHUwNDQyXFx1MDQ0MFxcdTA0MzBcXHUwNDNCXFx1MDQzOFxcdTA0MzdcXHUwNDNFXFx1MDQzMlxcdTA0MzBcXHUwNDNEXFx1MDQzRFxcdTA0NEJcXHUwNDNDIFxcdTA0M0ZcXHUwNDQwXFx1MDQzOFxcdTA0M0JcXHUwNDNFXFx1MDQzNlxcdTA0MzVcXHUwNDNEXFx1MDQzOFxcdTA0NEZcXHUwNDNDLiBcXHUwNDIxXFx1MDQzRVxcdTA0NDVcXHUwNDQwXFx1MDQzMFxcdTA0M0RcXHUwNDRGXFx1MDQzOVxcdTA0NDJcXHUwNDM1IFxcdTA0M0FcXHUwNDNFXFx1MDQzRFxcdTA0NDJcXHUwNDQwXFx1MDQzRVxcdTA0M0JcXHUwNDRDIFxcdTA0M0RcXHUwNDMwXFx1MDQzNFxceEEwXFx1MDQ0MVxcdTA0MzJcXHUwNDNFXFx1MDQzOFxcdTA0M0NcXHUwNDM4IFxcdTA0MzRcXHUwNDMwXFx1MDQzRFxcdTA0M0RcXHUwNDRCXFx1MDQzQ1xcdTA0MzggXFx1MDQzOFxceEEwXFx1MDQzMVxcdTA0MzVcXHUwNDM3XFx1MDQzRVxcdTA0M0ZcXHUwNDMwXFx1MDQ0MVxcdTA0M0RcXHUwNDNFIFxcdTA0NDNcXHUwNDQ3XFx1MDQzMFxcdTA0NDFcXHUwNDQyXFx1MDQzMlxcdTA0NDNcXHUwNDM5XFx1MDQ0MlxcdTA0MzUgXFx1MDQzMlxceEEwXFx1MDQ0RFxcdTA0M0FcXHUwNDNFXFx1MDQ0MVxcdTA0MzhcXHUwNDQxXFx1MDQ0MlxcdTA0MzVcXHUwNDNDXFx1MDQzNVxceEEwXFx1MDQzMVxcdTA0M0JcXHUwNDNFXFx1MDQzQVxcdTA0NDdcXHUwNDM1XFx1MDQzOVxcdTA0M0RcXHUwNDMwLlwiLFxuICAgIGVmZm9ydGxlc3NDcnlwdG9UcmFuc2FjdGlvbnM6IFwiXFx1MDQxRlxcdTA0NDBcXHUwNDNFXFx1MDQ0MVxcdTA0NDJcXHUwNDRCXFx1MDQzNSBcXHUwNDNBXFx1MDQ0MFxcdTA0MzhcXHUwNDNGXFx1MDQ0MlxcdTA0M0VcXHUwNDQyXFx1MDQ0MFxcdTA0MzBcXHUwNDNEXFx1MDQzN1xcdTA0MzBcXHUwNDNBXFx1MDQ0NlxcdTA0MzhcXHUwNDM4XCIsXG4gICAgZWFzaWx5U2VuZDogXCJcXHUwNDFCXFx1MDQzNVxcdTA0MzNcXHUwNDNBXFx1MDQzRSBcXHUwNDNFXFx1MDQ0MlxcdTA0M0ZcXHUwNDQwXFx1MDQzMFxcdTA0MzJcXHUwNDNCXFx1MDQ0RlxcdTA0MzlcXHUwNDQyXFx1MDQzNSwgXFx1MDQzRlxcdTA0M0VcXHUwNDNCXFx1MDQ0M1xcdTA0NDdcXHUwNDMwXFx1MDQzOVxcdTA0NDJcXHUwNDM1IFxcdTA0MzhcXHhBMFxcdTA0M0VcXHUwNDQyXFx1MDQ0MVxcdTA0M0JcXHUwNDM1XFx1MDQzNlxcdTA0MzhcXHUwNDMyXFx1MDQzMFxcdTA0MzlcXHUwNDQyXFx1MDQzNSBcXHUwNDQxXFx1MDQzMlxcdTA0M0VcXHUwNDM4IFxcdTA0M0FcXHUwNDQwXFx1MDQzOFxcdTA0M0ZcXHUwNDQyXFx1MDQzRVxcdTA0MzJcXHUwNDMwXFx1MDQzQlxcdTA0NEVcXHUwNDQyXFx1MDQ0Qi4gXFx1MDQxRVxcdTA0M0ZcXHUwNDQyXFx1MDQzOFxcdTA0M0NcXHUwNDM4XFx1MDQzN1xcdTA0MzhcXHUwNDQwXFx1MDQ0M1xcdTA0MzlcXHUwNDQyXFx1MDQzNSBcXHUwNDQxXFx1MDQzMlxcdTA0M0VcXHUwNDM4IFxcdTA0M0VcXHUwNDNGXFx1MDQzNVxcdTA0NDBcXHUwNDMwXFx1MDQ0NlxcdTA0MzhcXHUwNDM4IFxcdTA0NDFcXHhBMFxcdTA0M0ZcXHUwNDNFXFx1MDQzQ1xcdTA0M0VcXHUwNDQ5XFx1MDQ0Q1xcdTA0NEUgXFx1MDQzNFxcdTA0MzVcXHUwNDQ2XFx1MDQzNVxcdTA0M0RcXHUwNDQyXFx1MDQ0MFxcdTA0MzBcXHUwNDNCXFx1MDQzOFxcdTA0MzdcXHUwNDNFXFx1MDQzMlxcdTA0MzBcXHUwNDNEXFx1MDQzRFxcdTA0NEJcXHUwNDQ1IFxcdTA0M0ZcXHUwNDQwXFx1MDQzOFxcdTA0M0JcXHUwNDNFXFx1MDQzNlxcdTA0MzVcXHUwNDNEXFx1MDQzOFxcdTA0MzkuXCIsXG4gICAgZ2V0QVdhbGxldDogXCJcXHUwNDIxXFx1MDQzQVxcdTA0MzBcXHUwNDQ3XFx1MDQzMFxcdTA0NDJcXHUwNDRDIFxcdTA0M0FcXHUwNDNFXFx1MDQ0OFxcdTA0MzVcXHUwNDNCXFx1MDQ1MVxcdTA0M0FcIlxuICB9LFxuICByZXN0b3JlTW9kYWw6IHtcbiAgICB0aXRsZTogXCJcXHUwNDEyXFx1MDQzRVxcdTA0NDFcXHUwNDQxXFx1MDQ0MlxcdTA0MzBcXHUwNDNEXFx1MDQzRVxcdTA0MzJcXHUwNDNCXFx1MDQzNVxcdTA0M0RcXHUwNDM4XFx1MDQzNVwiLFxuICAgIHN0ZXAxOiB7XG4gICAgICB0aXRsZTogXCJcXHUwNDFEXFx1MDQzMFxcdTA0MzlcXHUwNDM0XFx1MDQzOFxcdTA0NDJcXHUwNDM1IFxcdTA0MzJcXHUwNDMwXFx1MDQ0OFxcdTA0NDMgXFx1MDQ0MlxcdTA0MzVcXHUwNDNBXFx1MDQ0M1xcdTA0NDlcXHUwNDQzXFx1MDQ0RSBcXHUwNDQ0XFx1MDQ0MFxcdTA0MzBcXHUwNDM3XFx1MDQ0MyBcXHUwNDMyXFx1MDQzRVxcdTA0NDFcXHUwNDQxXFx1MDQ0MlxcdTA0MzBcXHUwNDNEXFx1MDQzRVxcdTA0MzJcXHUwNDNCXFx1MDQzNVxcdTA0M0RcXHUwNDM4XFx1MDQ0RlwiLFxuICAgICAgdGV4dDogXCJcXHUwNDFFXFx1MDQ0MlxcdTA0M0FcXHUwNDQwXFx1MDQzRVxcdTA0MzlcXHUwNDQyXFx1MDQzNSBcXHUwNDNEXFx1MDQzMFxcdTA0NDFcXHUwNDQyXFx1MDQ0MFxcdTA0M0VcXHUwNDM5XFx1MDQzQVxcdTA0MzggXFx1MDQzQVxcdTA0M0VcXHUwNDQ4XFx1MDQzNVxcdTA0M0JcXHUwNDRDXFx1MDQzQVxcdTA0MzAgXFx1MDQzOCBcXHUwNDNEXFx1MDQzMFxcdTA0MzlcXHUwNDM0XFx1MDQzOFxcdTA0NDJcXHUwNDM1IFxcdTA0NDRcXHUwNDQwXFx1MDQzMFxcdTA0MzdcXHUwNDQzXFx4QTBcXHUwNDMyXFx1MDQzRVxcdTA0NDFcXHUwNDQxXFx1MDQ0MlxcdTA0MzBcXHUwNDNEXFx1MDQzRVxcdTA0MzJcXHUwNDNCXFx1MDQzNVxcdTA0M0RcXHUwNDM4XFx1MDQ0RlwiXG4gICAgfSxcbiAgICBzdGVwMjoge1xuICAgICAgdGl0bGU6IFwiXFx1MDQyMVxcdTA0M0FcXHUwNDNFXFx1MDQzRlxcdTA0MzhcXHUwNDQwXFx1MDQ0M1xcdTA0MzlcXHUwNDQyXFx1MDQzNSBcXHUwNDMyXFx1MDQzMFxcdTA0NDhcXHUwNDQzIFxcdTA0NDRcXHUwNDQwXFx1MDQzMFxcdTA0MzdcXHUwNDQzIFxcdTA0MzJcXHUwNDNFXFx1MDQ0MVxcdTA0NDFcXHUwNDQyXFx1MDQzMFxcdTA0M0RcXHUwNDNFXFx1MDQzMlxcdTA0M0JcXHUwNDM1XFx1MDQzRFxcdTA0MzhcXHUwNDRGXCIsXG4gICAgICB0ZXh0OiBcIlxcdTA0MTdcXHUwNDMwXFx1MDQzRlxcdTA0MzhcXHUwNDQ4XFx1MDQzOFxcdTA0NDJcXHUwNDM1IFxcdTA0MzVcXHUwNDUxIFxcdTA0MzhcXHUwNDNCXFx1MDQzOCBcXHUwNDQxXFx1MDQzRVxcdTA0NDVcXHUwNDQwXFx1MDQzMFxcdTA0M0RcXHUwNDM4XFx1MDQ0MlxcdTA0MzUgXFx1MDQzMiBcXHUwNDMxXFx1MDQzNVxcdTA0MzdcXHUwNDNFXFx1MDQzRlxcdTA0MzBcXHUwNDQxXFx1MDQzRFxcdTA0M0VcXHUwNDNDIFxcdTA0M0NcXHUwNDM1XFx1MDQ0MVxcdTA0NDJcXHUwNDM1XCJcbiAgICB9LFxuICAgIHN0ZXAzOiB7XG4gICAgICB0aXRsZTogXCJcXHUwNDEyXFx1MDQzRVxcdTA0NDFcXHUwNDQxXFx1MDQ0MlxcdTA0MzBcXHUwNDNEXFx1MDQzRVxcdTA0MzJcXHUwNDM4XFx1MDQ0MlxcdTA0MzUgXFx1MDQzMiBcXHUwNDNGXFx1MDQzRVxcdTA0MzRcXHUwNDM0XFx1MDQzNVxcdTA0NDBcXHUwNDM2XFx1MDQzOFxcdTA0MzJcXHUwNDMwXFx1MDQzNVxcdTA0M0NcXHUwNDNFXFx1MDQzQyBcXHUwNDNBXFx1MDQzRVxcdTA0NDhcXHUwNDM1XFx1MDQzQlxcdTA0NENcXHUwNDNBXFx1MDQzNVwiLFxuICAgICAgdGV4dDogXCJcXHUwNDEyXFx1MDQzMlxcdTA0MzVcXHUwNDM0XFx1MDQzOFxcdTA0NDJcXHUwNDM1IFxcdTA0NDRcXHUwNDQwXFx1MDQzMFxcdTA0MzdcXHUwNDQzIFxcdTA0MzJcXHUwNDNFXFx1MDQ0MVxcdTA0NDFcXHUwNDQyXFx1MDQzMFxcdTA0M0RcXHUwNDNFXFx1MDQzMlxcdTA0M0JcXHUwNDM1XFx1MDQzRFxcdTA0MzhcXHUwNDRGIFxcdTA0MzRcXHUwNDNCXFx1MDQ0RiBcXHUwNDM0XFx1MDQzRVxcdTA0NDFcXHUwNDQyXFx1MDQ0M1xcdTA0M0ZcXHUwNDMwXFx4QTBcXHUwNDNBXFx4QTBcXHUwNDMyXFx1MDQzMFxcdTA0NDhcXHUwNDM1XFx1MDQzQ1xcdTA0NDNcXHhBMFxcdTA0M0FcXHUwNDNFXFx1MDQ0OFxcdTA0MzVcXHUwNDNCXFx1MDQ0Q1xcdTA0M0FcXHUwNDQzXCJcbiAgICB9XG4gIH0sXG4gIGFsbFdhbGxldHM6IHtcbiAgICB3YWxsZXRzQmVsb3dOb3RTdXBwb3J0ZWQ6IFwiXFx1MDQxQVxcdTA0M0VcXHUwNDQ4XFx1MDQzNVxcdTA0M0JcXHUwNDRDXFx1MDQzQVxcdTA0MzggXFx1MDQzRFxcdTA0MzhcXHUwNDM2XFx1MDQzNSBcXHUwNDNEXFx1MDQzNSBcXHUwNDNGXFx1MDQzRVxcdTA0MzRcXHUwNDM0XFx1MDQzNVxcdTA0NDBcXHUwNDM2XFx1MDQzOFxcdTA0MzJcXHUwNDMwXFx1MDQ0RVxcdTA0NDIgXFx1MDQzMlxcdTA0NDFcXHUwNDM1IFxcdTA0NDRcXHUwNDQzXFx1MDQzRFxcdTA0M0FcXHUwNDQ2XFx1MDQzOFxcdTA0MzggXFx1MDQzRlxcdTA0M0VcXHUwNDM0XFx1MDQzQVxcdTA0M0JcXHUwNDRFXFx1MDQ0N1xcdTA0NTFcXHUwNDNEXFx1MDQzRFxcdTA0M0VcXHUwNDMzXFx1MDQzRSBcXHUwNDQxXFx1MDQzNVxcdTA0NDBcXHUwNDMyXFx1MDQzOFxcdTA0NDFcXHUwNDMwLiBcXHUwNDEyXFx1MDQ0QiBcXHUwNDNDXFx1MDQzRVxcdTA0MzZcXHUwNDM1XFx1MDQ0MlxcdTA0MzUgXFx1MDQzOFxcdTA0NDFcXHUwNDNGXFx1MDQzRVxcdTA0M0JcXHUwNDRDXFx1MDQzN1xcdTA0M0VcXHUwNDMyXFx1MDQzMFxcdTA0NDJcXHUwNDRDIFxcdTA0NDFcXHUwNDMyXFx1MDQzRVxcdTA0NEUgXFx1MDQ0NFxcdTA0NDBcXHUwNDMwXFx1MDQzN1xcdTA0NDMgXFx1MDQzMlxcdTA0M0VcXHUwNDQxXFx1MDQ0MVxcdTA0NDJcXHUwNDMwXFx1MDQzRFxcdTA0M0VcXHUwNDMyXFx1MDQzQlxcdTA0MzVcXHUwNDNEXFx1MDQzOFxcdTA0NEYgXFx1MDQzMiBcXHUwNDNFXFx1MDQzNFxcdTA0M0RcXHUwNDNFXFx1MDQzQyBcXHUwNDM4XFx1MDQzNyBcXHUwNDNGXFx1MDQzRVxcdTA0MzRcXHUwNDM0XFx1MDQzNVxcdTA0NDBcXHUwNDM2XFx1MDQzOFxcdTA0MzJcXHUwNDMwXFx1MDQzNVxcdTA0M0NcXHUwNDRCXFx1MDQ0NSBcXHUwNDMyXFx1MDQ0QlxcdTA0NDhcXHUwNDM1IFxcdTA0M0FcXHUwNDNFXFx1MDQ0OFxcdTA0MzVcXHUwNDNCXFx1MDQ0Q1xcdTA0M0FcXHUwNDNFXFx1MDQzMi5cIixcbiAgICB3YWxsZXROb3RTdXBwb3J0U2VydmljZTogXCJ7eyBuYW1lIH19IFxcdTA0M0RcXHUwNDM1IFxcdTA0M0ZcXHUwNDNFXFx1MDQzNFxcdTA0MzRcXHUwNDM1XFx1MDQ0MFxcdTA0MzZcXHUwNDM4XFx1MDQzMlxcdTA0MzBcXHUwNDM1XFx1MDQ0MiBcXHUwNDNGXFx1MDQzRVxcdTA0MzRcXHUwNDNBXFx1MDQzQlxcdTA0NEVcXHUwNDQ3XFx1MDQ1MVxcdTA0M0RcXHUwNDNEXFx1MDQ0QlxcdTA0MzkgXFx1MDQ0MVxcdTA0MzVcXHUwNDQwXFx1MDQzMlxcdTA0MzhcXHUwNDQxXCJcbiAgfSxcbiAgZmVhdHVyZU5vdFN1cHBvcnRlZDoge1xuICAgIHdhbGxldDoge1xuICAgICAgdGl0bGU6IFwie3sgbmFtZSB9fSBcXHUwNDNEXFx1MDQzNSBcXHUwNDNGXFx1MDQzRVxcdTA0MzRcXHUwNDM0XFx1MDQzNVxcdTA0NDBcXHUwNDM2XFx1MDQzOFxcdTA0MzJcXHUwNDMwXFx1MDQzNVxcdTA0NDIgXFx1MDQzN1xcdTA0MzBcXHUwNDNGXFx1MDQ0MFxcdTA0M0VcXHUwNDQ4XFx1MDQzNVxcdTA0M0RcXHUwNDNEXFx1MDQzRVxcdTA0MzVcXHhBMFxcdTA0MzRcXHUwNDM1XFx1MDQzOVxcdTA0NDFcXHUwNDQyXFx1MDQzMlxcdTA0MzhcXHUwNDM1XCIsXG4gICAgICBkZXNjcmlwdGlvbjogXCJcXHUwNDIzXFx1MDQ0MVxcdTA0NDJcXHUwNDMwXFx1MDQzRFxcdTA0M0VcXHUwNDMyXFx1MDQzOFxcdTA0NDJcXHUwNDM1IFxcdTA0M0ZcXHUwNDNFXFx1MDQzNFxcdTA0MzRcXHUwNDM1XFx1MDQ0MFxcdTA0MzZcXHUwNDM4XFx1MDQzMlxcdTA0MzBcXHUwNDM1XFx1MDQzQ1xcdTA0NEJcXHUwNDM5IFxcdTA0M0FcXHUwNDNFXFx1MDQ0OFxcdTA0MzVcXHUwNDNCXFx1MDQ1MVxcdTA0M0EgXFx1MDQzOFxcdTA0MzcgXFx1MDQ0MVxcdTA0M0ZcXHUwNDM4XFx1MDQ0MVxcdTA0M0FcXHUwNDMwIFxcdTA0M0RcXHUwNDM4XFx1MDQzNlxcdTA0MzUsIFxcdTA0MzJcXHUwNDNFXFx1MDQ0MVxcdTA0NDFcXHUwNDQyXFx1MDQzMFxcdTA0M0RcXHUwNDNFXFx1MDQzMlxcdTA0MzhcXHUwNDQyXFx1MDQzNSBcXHUwNDM1XFx1MDQzM1xcdTA0M0UgXFx1MDQ0MSBcXHUwNDNGXFx1MDQzRVxcdTA0M0NcXHUwNDNFXFx1MDQ0OVxcdTA0NENcXHUwNDRFIFxcdTA0NDRcXHUwNDQwXFx1MDQzMFxcdTA0MzdcXHUwNDRCIFxcdTA0MzJcXHUwNDNFXFx1MDQ0MVxcdTA0NDFcXHUwNDQyXFx1MDQzMFxcdTA0M0RcXHUwNDNFXFx1MDQzMlxcdTA0M0JcXHUwNDM1XFx1MDQzRFxcdTA0MzhcXHUwNDRGLCBcXHUwNDM3XFx1MDQzMFxcdTA0NDJcXHUwNDM1XFx1MDQzQyBcXHUwNDNGXFx1MDQzRVxcdTA0MzRcXHUwNDNBXFx1MDQzQlxcdTA0NEVcXHUwNDQ3XFx1MDQzOFxcdTA0NDJcXHUwNDM1XFx1MDQ0MVxcdTA0NEMgXFx1MDQzOCBcXHUwNDNGXFx1MDQzRVxcdTA0M0ZcXHUwNDQwXFx1MDQzRVxcdTA0MzFcXHUwNDQzXFx1MDQzOVxcdTA0NDJcXHUwNDM1IFxcdTA0NDFcXHUwNDNEXFx1MDQzRVxcdTA0MzJcXHUwNDMwLlwiLFxuICAgICAgaW5mbzogXCJcXHUwNDIzXFx1MDQzN1xcdTA0M0RcXHUwNDMwXFx1MDQ0MlxcdTA0NEMsIFxcdTA0M0FcXHUwNDMwXFx1MDQzQSBcXHUwNDMyXFx1MDQzRVxcdTA0NDFcXHUwNDQxXFx1MDQ0MlxcdTA0MzBcXHUwNDNEXFx1MDQzRVxcdTA0MzJcXHUwNDM4XFx1MDQ0MlxcdTA0NEMgXFx1MDQzQVxcdTA0M0VcXHUwNDQ4XFx1MDQzNVxcdTA0M0JcXHUwNDUxXFx1MDQzQVwiXG4gICAgfSxcbiAgICB2ZXJzaW9uOiB7XG4gICAgICBkZXNjcmlwdGlvbjogXCJcXHUwNDIyXFx1MDQzNVxcdTA0M0FcXHUwNDQzXFx1MDQ0OVxcdTA0MzBcXHUwNDRGIFxcdTA0MzJcXHUwNDM1XFx1MDQ0MFxcdTA0NDFcXHUwNDM4XFx1MDQ0RiB7eyBuYW1lIH19IFxcdTA0MzhcXHUwNDNCXFx1MDQzOCBcXHUwNDQyXFx1MDQzOFxcdTA0M0YgXFx1MDQzQVxcdTA0M0VcXHUwNDNEXFx1MDQ0MlxcdTA0NDBcXHUwNDMwXFx1MDQzQVxcdTA0NDJcXHUwNDMwIFxcdTA0M0FcXHUwNDNFXFx1MDQ0OFxcdTA0MzVcXHUwNDNCXFx1MDQ0Q1xcdTA0M0FcXHUwNDMwIFxcdTA0M0RcXHUwNDM1IFxcdTA0M0ZcXHUwNDNFXFx1MDQzNFxcdTA0MzRcXHUwNDM1XFx1MDQ0MFxcdTA0MzZcXHUwNDM4XFx1MDQzMlxcdTA0MzBcXHUwNDM1XFx1MDQ0MiBcXHUwNDNEXFx1MDQzNVxcdTA0M0VcXHUwNDMxXFx1MDQ0NVxcdTA0M0VcXHUwNDM0XFx1MDQzOFxcdTA0M0NcXHUwNDRCXFx1MDQzNSBcXHUwNDQ0XFx1MDQ0M1xcdTA0M0RcXHUwNDNBXFx1MDQ0NlxcdTA0MzhcXHUwNDM4LiBcXHUwNDFFXFx1MDQzMVxcdTA0M0RcXHUwNDNFXFx1MDQzMlxcdTA0MzhcXHUwNDQyXFx1MDQzNSBcXHUwNDNBXFx1MDQzRVxcdTA0NDhcXHUwNDM1XFx1MDQzQlxcdTA0NTFcXHUwNDNBLCBcXHUwNDQ3XFx1MDQ0MlxcdTA0M0VcXHUwNDMxXFx1MDQ0QiBcXHUwNDNGXFx1MDQ0MFxcdTA0M0VcXHUwNDM0XFx1MDQzRVxcdTA0M0JcXHUwNDM2XFx1MDQzOFxcdTA0NDJcXHUwNDRDLlwiLFxuICAgICAgdXBkYXRlQnV0dG9uOiBcIlxcdTA0MUVcXHUwNDMxXFx1MDQzRFxcdTA0M0VcXHUwNDMyXFx1MDQzOFxcdTA0NDJcXHUwNDRDIHt7IG5hbWUgfX1cIixcbiAgICAgIGFib3V0VzU6IFwiXFx1MDQxRlxcdTA0NDBcXHUwNDNFIFc1XCJcbiAgICB9LFxuICAgIGRpc2Nvbm5lY3Q6IHtcbiAgICAgIHRpdGxlOiBcIlxcdTA0MUZcXHUwNDNFXFx1MDQzNFxcdTA0NDJcXHUwNDMyXFx1MDQzNVxcdTA0NDBcXHUwNDM0XFx1MDQzOFxcdTA0NDJcXHUwNDM1IFxcdTA0M0VcXHUwNDQyXFx1MDQzQVxcdTA0M0JcXHUwNDRFXFx1MDQ0N1xcdTA0MzVcXHUwNDNEXFx1MDQzOFxcdTA0MzVcIixcbiAgICAgIGRlc2NyaXB0aW9uOiBcIlxcdTA0MTJcXHUwNDRCIFxcdTA0MzFcXHUwNDQzXFx1MDQzNFxcdTA0MzVcXHUwNDQyXFx1MDQzNSBcXHUwNDNFXFx1MDQ0MlxcdTA0M0FcXHUwNDNCXFx1MDQ0RVxcdTA0NDdcXHUwNDM1XFx1MDQzRFxcdTA0NEIgXFx1MDQzRVxcdTA0NDIgXFx1MDQ0MlxcdTA0MzVcXHUwNDNBXFx1MDQ0M1xcdTA0NDlcXHUwNDM1XFx1MDQzM1xcdTA0M0UgXFx1MDQzQVxcdTA0M0VcXHUwNDQ4XFx1MDQzNVxcdTA0M0JcXHUwNDRDXFx1MDQzQVxcdTA0MzAgXFx1MDQzOCBcXHUwNDNGXFx1MDQzNVxcdTA0NDBcXHUwNDM1XFx1MDQzRFxcdTA0MzBcXHUwNDNGXFx1MDQ0MFxcdTA0MzBcXHUwNDMyXFx1MDQzQlxcdTA0MzVcXHUwNDNEXFx1MDQ0QiBcXHUwNDNEXFx1MDQzMCBcXHUwNDNGXFx1MDQzRVxcdTA0MzRcXHUwNDNBXFx1MDQzQlxcdTA0NEVcXHUwNDQ3XFx1MDQzNVxcdTA0M0RcXHUwNDM4XFx1MDQzNSB7eyBuYW1lIH19LlwiLFxuICAgICAgYnV0dG9uOiBcIlxcdTA0MUVcXHUwNDQyXFx1MDQzQVxcdTA0M0JcXHUwNDRFXFx1MDQ0N1xcdTA0MzhcXHUwNDQyXFx1MDQ0Q1xcdTA0NDFcXHUwNDRGXCJcbiAgICB9XG4gIH1cbn07XG5jb25zdCBhY3Rpb25Nb2RhbCA9IHtcbiAgY29uZmlybVRyYW5zYWN0aW9uOiB7XG4gICAgaGVhZGVyOiBcIlxcdTA0MUZcXHUwNDNFXFx1MDQzNFxcdTA0NDJcXHUwNDMyXFx1MDQzNVxcdTA0NDBcXHUwNDM0XFx1MDQzOFxcdTA0NDJcXHUwNDM1IFxcdTA0MzRcXHUwNDM1XFx1MDQzOVxcdTA0NDFcXHUwNDQyXFx1MDQzMlxcdTA0MzhcXHUwNDM1IFxcdTA0MzJcXHhBMHt7IG5hbWUgfX1cIixcbiAgICB0ZXh0OiBcIlxcdTA0MkRcXHUwNDQyXFx1MDQzRSBcXHUwNDM3XFx1MDQzMFxcdTA0MzlcXHUwNDNDXFx1MDQzNVxcdTA0NDIgXFx1MDQzRlxcdTA0MzBcXHUwNDQwXFx1MDQ0MyBcXHUwNDQxXFx1MDQzNVxcdTA0M0FcXHUwNDQzXFx1MDQzRFxcdTA0MzQuXCJcbiAgfSxcbiAgc2lnbkRhdGE6IHtcbiAgICBoZWFkZXI6IFwiXFx1MDQxRlxcdTA0M0VcXHUwNDM0XFx1MDQzRlxcdTA0MzhcXHUwNDQ4XFx1MDQzOFxcdTA0NDJcXHUwNDM1IFxcdTA0MzRcXHUwNDMwXFx1MDQzRFxcdTA0M0RcXHUwNDRCXFx1MDQzNSBcXHUwNDMyXFx4QTB7eyBuYW1lIH19XCIsXG4gICAgdGV4dDogXCJcXHUwNDJEXFx1MDQ0MlxcdTA0M0UgXFx1MDQzN1xcdTA0MzBcXHUwNDM5XFx1MDQzQ1xcdTA0MzVcXHUwNDQyIFxcdTA0M0ZcXHUwNDMwXFx1MDQ0MFxcdTA0NDMgXFx1MDQ0MVxcdTA0MzVcXHUwNDNBXFx1MDQ0M1xcdTA0M0RcXHUwNDM0LlwiXG4gIH0sXG4gIHRyYW5zYWN0aW9uU2VudDogXCIkbm90aWZpY2F0aW9ucy50cmFuc2FjdGlvblNlbnRcIixcbiAgdHJhbnNhY3Rpb25DYW5jZWxlZDogXCIkbm90aWZpY2F0aW9ucy50cmFuc2FjdGlvbkNhbmNlbGVkXCIsXG4gIGRhdGFTaWduZWQ6IFwiJG5vdGlmaWNhdGlvbnMuZGF0YVNpZ25lZFwiLFxuICBzaWduRGF0YUNhbmNlbGVkOiBcIiRub3RpZmljYXRpb25zLnNpZ25EYXRhQ2FuY2VsZWRcIlxufTtcbmNvbnN0IHJ1ID0ge1xuICBjb21tb24sXG4gIGJ1dHRvbixcbiAgbm90aWZpY2F0aW9ucyxcbiAgd2FsbGV0SXRlbSxcbiAgd2FsbGV0TW9kYWwsXG4gIGFjdGlvbk1vZGFsXG59O1xuY29uc3QgaTE4bkRpY3Rpb25hcnkgPSB7XG4gIGVuOiBwYXJzZURpY3Rpb25hcnkoZW4pLFxuICBydTogcGFyc2VEaWN0aW9uYXJ5KHJ1KVxufTtcbmZ1bmN0aW9uIHBhcnNlRGljdGlvbmFyeShkaWN0aW9uYXJ5KSB7XG4gIGNvbnN0IHJlZlN5bWJvbCA9IFwiJFwiO1xuICBjb25zdCBpdGVyYXRlID0gKHN1YkRpY3Rpb25hcnkpID0+IHtcbiAgICBPYmplY3QuZW50cmllcyhzdWJEaWN0aW9uYXJ5KS5mb3JFYWNoKChba2V5LCB2YWx1ZV0pID0+IHtcbiAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09IFwib2JqZWN0XCIgJiYgdmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIGl0ZXJhdGUodmFsdWUpO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICBpZiAodmFsdWVbMF0gPT09IHJlZlN5bWJvbCkge1xuICAgICAgICAgIGNvbnN0IHBhdGggPSB2YWx1ZS5zbGljZSgxKS5zcGxpdChcIi5cIik7XG4gICAgICAgICAgbGV0IG9iaiA9IGRpY3Rpb25hcnk7XG4gICAgICAgICAgcGF0aC5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgICAgICAgICBpZiAoaXRlbSBpbiBvYmopIHtcbiAgICAgICAgICAgICAgb2JqID0gb2JqW2l0ZW1dO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAgICAgICAgIGBDYW5ub3QgcGFyc2UgdHJhbnNsYXRpb25zOiB0aGVyZSBpcyBubyBwcm9wZXJ0eSAke2l0ZW19IGluIHRyYW5zbGF0aW9uYFxuICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICAgIHN1YkRpY3Rpb25hcnlba2V5XSA9IG9iajtcbiAgICAgICAgfVxuICAgICAgICBpZiAodmFsdWUuc2xpY2UoMCwgMikgPT09IGBcXFxcJHtyZWZTeW1ib2x9YCkge1xuICAgICAgICAgIHN1YkRpY3Rpb25hcnlba2V5XSA9IHZhbHVlLnNsaWNlKDEpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG4gIGl0ZXJhdGUoZGljdGlvbmFyeSk7XG4gIHJldHVybiBkaWN0aW9uYXJ5O1xufVxuY29uc3QgQ29ubmVjdG9yQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQoKTtcbmNvbnN0ICRSQVcgPSBTeW1ib2woXCJzdG9yZS1yYXdcIiksICROT0RFID0gU3ltYm9sKFwic3RvcmUtbm9kZVwiKSwgJE5BTUUgPSBTeW1ib2woXCJzdG9yZS1uYW1lXCIpO1xuZnVuY3Rpb24gd3JhcCQxKHZhbHVlLCBuYW1lKSB7XG4gIGxldCBwMiA9IHZhbHVlWyRQUk9YWV07XG4gIGlmICghcDIpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodmFsdWUsICRQUk9YWSwge1xuICAgICAgdmFsdWU6IHAyID0gbmV3IFByb3h5KHZhbHVlLCBwcm94eVRyYXBzJDEpXG4gICAgfSk7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKHZhbHVlKSwgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHZhbHVlKTtcbiAgICAgIGZvciAobGV0IGkyID0gMCwgbDIgPSBrZXlzLmxlbmd0aDsgaTIgPCBsMjsgaTIrKykge1xuICAgICAgICBjb25zdCBwcm9wID0ga2V5c1tpMl07XG4gICAgICAgIGlmIChkZXNjW3Byb3BdLmdldCkge1xuICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh2YWx1ZSwgcHJvcCwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogZGVzY1twcm9wXS5lbnVtZXJhYmxlLFxuICAgICAgICAgICAgZ2V0OiBkZXNjW3Byb3BdLmdldC5iaW5kKHAyKVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHJldHVybiBwMjtcbn1cbmZ1bmN0aW9uIGlzV3JhcHBhYmxlKG9iaikge1xuICBsZXQgcHJvdG87XG4gIHJldHVybiBvYmogIT0gbnVsbCAmJiB0eXBlb2Ygb2JqID09PSBcIm9iamVjdFwiICYmIChvYmpbJFBST1hZXSB8fCAhKHByb3RvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKG9iaikpIHx8IHByb3RvID09PSBPYmplY3QucHJvdG90eXBlIHx8IEFycmF5LmlzQXJyYXkob2JqKSk7XG59XG5mdW5jdGlvbiB1bndyYXAoaXRlbSwgc2V0ID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKSkge1xuICBsZXQgcmVzdWx0LCB1bndyYXBwZWQsIHYsIHByb3A7XG4gIGlmIChyZXN1bHQgPSBpdGVtICE9IG51bGwgJiYgaXRlbVskUkFXXSlcbiAgICByZXR1cm4gcmVzdWx0O1xuICBpZiAoIWlzV3JhcHBhYmxlKGl0ZW0pIHx8IHNldC5oYXMoaXRlbSkpXG4gICAgcmV0dXJuIGl0ZW07XG4gIGlmIChBcnJheS5pc0FycmF5KGl0ZW0pKSB7XG4gICAgaWYgKE9iamVjdC5pc0Zyb3plbihpdGVtKSlcbiAgICAgIGl0ZW0gPSBpdGVtLnNsaWNlKDApO1xuICAgIGVsc2VcbiAgICAgIHNldC5hZGQoaXRlbSk7XG4gICAgZm9yIChsZXQgaTIgPSAwLCBsMiA9IGl0ZW0ubGVuZ3RoOyBpMiA8IGwyOyBpMisrKSB7XG4gICAgICB2ID0gaXRlbVtpMl07XG4gICAgICBpZiAoKHVud3JhcHBlZCA9IHVud3JhcCh2LCBzZXQpKSAhPT0gdilcbiAgICAgICAgaXRlbVtpMl0gPSB1bndyYXBwZWQ7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGlmIChPYmplY3QuaXNGcm96ZW4oaXRlbSkpXG4gICAgICBpdGVtID0gT2JqZWN0LmFzc2lnbih7fSwgaXRlbSk7XG4gICAgZWxzZVxuICAgICAgc2V0LmFkZChpdGVtKTtcbiAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXMoaXRlbSksIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhpdGVtKTtcbiAgICBmb3IgKGxldCBpMiA9IDAsIGwyID0ga2V5cy5sZW5ndGg7IGkyIDwgbDI7IGkyKyspIHtcbiAgICAgIHByb3AgPSBrZXlzW2kyXTtcbiAgICAgIGlmIChkZXNjW3Byb3BdLmdldClcbiAgICAgICAgY29udGludWU7XG4gICAgICB2ID0gaXRlbVtwcm9wXTtcbiAgICAgIGlmICgodW53cmFwcGVkID0gdW53cmFwKHYsIHNldCkpICE9PSB2KVxuICAgICAgICBpdGVtW3Byb3BdID0gdW53cmFwcGVkO1xuICAgIH1cbiAgfVxuICByZXR1cm4gaXRlbTtcbn1cbmZ1bmN0aW9uIGdldERhdGFOb2Rlcyh0YXJnZXQpIHtcbiAgbGV0IG5vZGVzID0gdGFyZ2V0WyROT0RFXTtcbiAgaWYgKCFub2RlcylcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCAkTk9ERSwge1xuICAgICAgdmFsdWU6IG5vZGVzID0ge31cbiAgICB9KTtcbiAgcmV0dXJuIG5vZGVzO1xufVxuZnVuY3Rpb24gZ2V0RGF0YU5vZGUobm9kZXMsIHByb3BlcnR5LCB2YWx1ZSkge1xuICByZXR1cm4gbm9kZXNbcHJvcGVydHldIHx8IChub2Rlc1twcm9wZXJ0eV0gPSBjcmVhdGVEYXRhTm9kZSh2YWx1ZSkpO1xufVxuZnVuY3Rpb24gcHJveHlEZXNjcmlwdG9yJDEodGFyZ2V0LCBwcm9wZXJ0eSkge1xuICBjb25zdCBkZXNjID0gUmVmbGVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBwcm9wZXJ0eSk7XG4gIGlmICghZGVzYyB8fCBkZXNjLmdldCB8fCAhZGVzYy5jb25maWd1cmFibGUgfHwgcHJvcGVydHkgPT09ICRQUk9YWSB8fCBwcm9wZXJ0eSA9PT0gJE5PREUgfHwgcHJvcGVydHkgPT09ICROQU1FKVxuICAgIHJldHVybiBkZXNjO1xuICBkZWxldGUgZGVzYy52YWx1ZTtcbiAgZGVsZXRlIGRlc2Mud3JpdGFibGU7XG4gIGRlc2MuZ2V0ID0gKCkgPT4gdGFyZ2V0WyRQUk9YWV1bcHJvcGVydHldO1xuICByZXR1cm4gZGVzYztcbn1cbmZ1bmN0aW9uIHRyYWNrU2VsZih0YXJnZXQpIHtcbiAgaWYgKGdldExpc3RlbmVyKCkpIHtcbiAgICBjb25zdCBub2RlcyA9IGdldERhdGFOb2Rlcyh0YXJnZXQpO1xuICAgIChub2Rlcy5fIHx8IChub2Rlcy5fID0gY3JlYXRlRGF0YU5vZGUoKSkpKCk7XG4gIH1cbn1cbmZ1bmN0aW9uIG93bktleXModGFyZ2V0KSB7XG4gIHRyYWNrU2VsZih0YXJnZXQpO1xuICByZXR1cm4gUmVmbGVjdC5vd25LZXlzKHRhcmdldCk7XG59XG5mdW5jdGlvbiBjcmVhdGVEYXRhTm9kZSh2YWx1ZSkge1xuICBjb25zdCBbczIsIHNldF0gPSBjcmVhdGVTaWduYWwodmFsdWUsIHtcbiAgICBlcXVhbHM6IGZhbHNlLFxuICAgIGludGVybmFsOiB0cnVlXG4gIH0pO1xuICBzMi4kID0gc2V0O1xuICByZXR1cm4gczI7XG59XG5jb25zdCBwcm94eVRyYXBzJDEgPSB7XG4gIGdldCh0YXJnZXQsIHByb3BlcnR5LCByZWNlaXZlcikge1xuICAgIGlmIChwcm9wZXJ0eSA9PT0gJFJBVylcbiAgICAgIHJldHVybiB0YXJnZXQ7XG4gICAgaWYgKHByb3BlcnR5ID09PSAkUFJPWFkpXG4gICAgICByZXR1cm4gcmVjZWl2ZXI7XG4gICAgaWYgKHByb3BlcnR5ID09PSAkVFJBQ0spIHtcbiAgICAgIHRyYWNrU2VsZih0YXJnZXQpO1xuICAgICAgcmV0dXJuIHJlY2VpdmVyO1xuICAgIH1cbiAgICBjb25zdCBub2RlcyA9IGdldERhdGFOb2Rlcyh0YXJnZXQpO1xuICAgIGNvbnN0IHRyYWNrZWQgPSBub2Rlcy5oYXNPd25Qcm9wZXJ0eShwcm9wZXJ0eSk7XG4gICAgbGV0IHZhbHVlID0gdHJhY2tlZCA/IG5vZGVzW3Byb3BlcnR5XSgpIDogdGFyZ2V0W3Byb3BlcnR5XTtcbiAgICBpZiAocHJvcGVydHkgPT09ICROT0RFIHx8IHByb3BlcnR5ID09PSBcIl9fcHJvdG9fX1wiKVxuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIGlmICghdHJhY2tlZCkge1xuICAgICAgY29uc3QgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBwcm9wZXJ0eSk7XG4gICAgICBpZiAoZ2V0TGlzdGVuZXIoKSAmJiAodHlwZW9mIHZhbHVlICE9PSBcImZ1bmN0aW9uXCIgfHwgdGFyZ2V0Lmhhc093blByb3BlcnR5KHByb3BlcnR5KSkgJiYgIShkZXNjICYmIGRlc2MuZ2V0KSlcbiAgICAgICAgdmFsdWUgPSBnZXREYXRhTm9kZShub2RlcywgcHJvcGVydHksIHZhbHVlKSgpO1xuICAgIH1cbiAgICByZXR1cm4gaXNXcmFwcGFibGUodmFsdWUpID8gd3JhcCQxKHZhbHVlKSA6IHZhbHVlO1xuICB9LFxuICBoYXModGFyZ2V0LCBwcm9wZXJ0eSkge1xuICAgIGlmIChwcm9wZXJ0eSA9PT0gJFJBVyB8fCBwcm9wZXJ0eSA9PT0gJFBST1hZIHx8IHByb3BlcnR5ID09PSAkVFJBQ0sgfHwgcHJvcGVydHkgPT09ICROT0RFIHx8IHByb3BlcnR5ID09PSBcIl9fcHJvdG9fX1wiKVxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgdGhpcy5nZXQodGFyZ2V0LCBwcm9wZXJ0eSwgdGFyZ2V0KTtcbiAgICByZXR1cm4gcHJvcGVydHkgaW4gdGFyZ2V0O1xuICB9LFxuICBzZXQoKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0sXG4gIGRlbGV0ZVByb3BlcnR5KCkge1xuICAgIHJldHVybiB0cnVlO1xuICB9LFxuICBvd25LZXlzLFxuICBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I6IHByb3h5RGVzY3JpcHRvciQxXG59O1xuZnVuY3Rpb24gc2V0UHJvcGVydHkoc3RhdGUsIHByb3BlcnR5LCB2YWx1ZSwgZGVsZXRpbmcgPSBmYWxzZSkge1xuICBpZiAoIWRlbGV0aW5nICYmIHN0YXRlW3Byb3BlcnR5XSA9PT0gdmFsdWUpXG4gICAgcmV0dXJuO1xuICBjb25zdCBwcmV2ID0gc3RhdGVbcHJvcGVydHldLCBsZW4gPSBzdGF0ZS5sZW5ndGg7XG4gIGlmICh2YWx1ZSA9PT0gdm9pZCAwKVxuICAgIGRlbGV0ZSBzdGF0ZVtwcm9wZXJ0eV07XG4gIGVsc2VcbiAgICBzdGF0ZVtwcm9wZXJ0eV0gPSB2YWx1ZTtcbiAgbGV0IG5vZGVzID0gZ2V0RGF0YU5vZGVzKHN0YXRlKSwgbm9kZTtcbiAgaWYgKG5vZGUgPSBnZXREYXRhTm9kZShub2RlcywgcHJvcGVydHksIHByZXYpKVxuICAgIG5vZGUuJCgoKSA9PiB2YWx1ZSk7XG4gIGlmIChBcnJheS5pc0FycmF5KHN0YXRlKSAmJiBzdGF0ZS5sZW5ndGggIT09IGxlbilcbiAgICAobm9kZSA9IGdldERhdGFOb2RlKG5vZGVzLCBcImxlbmd0aFwiLCBsZW4pKSAmJiBub2RlLiQoc3RhdGUubGVuZ3RoKTtcbiAgKG5vZGUgPSBub2Rlcy5fKSAmJiBub2RlLiQoKTtcbn1cbmZ1bmN0aW9uIG1lcmdlU3RvcmVOb2RlKHN0YXRlLCB2YWx1ZSkge1xuICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXModmFsdWUpO1xuICBmb3IgKGxldCBpMiA9IDA7IGkyIDwga2V5cy5sZW5ndGg7IGkyICs9IDEpIHtcbiAgICBjb25zdCBrZXkgPSBrZXlzW2kyXTtcbiAgICBzZXRQcm9wZXJ0eShzdGF0ZSwga2V5LCB2YWx1ZVtrZXldKTtcbiAgfVxufVxuZnVuY3Rpb24gdXBkYXRlQXJyYXkoY3VycmVudCwgbmV4dCkge1xuICBpZiAodHlwZW9mIG5leHQgPT09IFwiZnVuY3Rpb25cIilcbiAgICBuZXh0ID0gbmV4dChjdXJyZW50KTtcbiAgbmV4dCA9IHVud3JhcChuZXh0KTtcbiAgaWYgKEFycmF5LmlzQXJyYXkobmV4dCkpIHtcbiAgICBpZiAoY3VycmVudCA9PT0gbmV4dClcbiAgICAgIHJldHVybjtcbiAgICBsZXQgaTIgPSAwLCBsZW4gPSBuZXh0Lmxlbmd0aDtcbiAgICBmb3IgKDsgaTIgPCBsZW47IGkyKyspIHtcbiAgICAgIGNvbnN0IHZhbHVlID0gbmV4dFtpMl07XG4gICAgICBpZiAoY3VycmVudFtpMl0gIT09IHZhbHVlKVxuICAgICAgICBzZXRQcm9wZXJ0eShjdXJyZW50LCBpMiwgdmFsdWUpO1xuICAgIH1cbiAgICBzZXRQcm9wZXJ0eShjdXJyZW50LCBcImxlbmd0aFwiLCBsZW4pO1xuICB9IGVsc2VcbiAgICBtZXJnZVN0b3JlTm9kZShjdXJyZW50LCBuZXh0KTtcbn1cbmZ1bmN0aW9uIHVwZGF0ZVBhdGgoY3VycmVudCwgcGF0aCwgdHJhdmVyc2VkID0gW10pIHtcbiAgbGV0IHBhcnQsIHByZXYgPSBjdXJyZW50O1xuICBpZiAocGF0aC5sZW5ndGggPiAxKSB7XG4gICAgcGFydCA9IHBhdGguc2hpZnQoKTtcbiAgICBjb25zdCBwYXJ0VHlwZSA9IHR5cGVvZiBwYXJ0LCBpc0FycmF5ID0gQXJyYXkuaXNBcnJheShjdXJyZW50KTtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShwYXJ0KSkge1xuICAgICAgZm9yIChsZXQgaTIgPSAwOyBpMiA8IHBhcnQubGVuZ3RoOyBpMisrKSB7XG4gICAgICAgIHVwZGF0ZVBhdGgoY3VycmVudCwgW3BhcnRbaTJdXS5jb25jYXQocGF0aCksIHRyYXZlcnNlZCk7XG4gICAgICB9XG4gICAgICByZXR1cm47XG4gICAgfSBlbHNlIGlmIChpc0FycmF5ICYmIHBhcnRUeXBlID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgIGZvciAobGV0IGkyID0gMDsgaTIgPCBjdXJyZW50Lmxlbmd0aDsgaTIrKykge1xuICAgICAgICBpZiAocGFydChjdXJyZW50W2kyXSwgaTIpKVxuICAgICAgICAgIHVwZGF0ZVBhdGgoY3VycmVudCwgW2kyXS5jb25jYXQocGF0aCksIHRyYXZlcnNlZCk7XG4gICAgICB9XG4gICAgICByZXR1cm47XG4gICAgfSBlbHNlIGlmIChpc0FycmF5ICYmIHBhcnRUeXBlID09PSBcIm9iamVjdFwiKSB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIGZyb20gPSAwLFxuICAgICAgICB0byA9IGN1cnJlbnQubGVuZ3RoIC0gMSxcbiAgICAgICAgYnkgPSAxXG4gICAgICB9ID0gcGFydDtcbiAgICAgIGZvciAobGV0IGkyID0gZnJvbTsgaTIgPD0gdG87IGkyICs9IGJ5KSB7XG4gICAgICAgIHVwZGF0ZVBhdGgoY3VycmVudCwgW2kyXS5jb25jYXQocGF0aCksIHRyYXZlcnNlZCk7XG4gICAgICB9XG4gICAgICByZXR1cm47XG4gICAgfSBlbHNlIGlmIChwYXRoLmxlbmd0aCA+IDEpIHtcbiAgICAgIHVwZGF0ZVBhdGgoY3VycmVudFtwYXJ0XSwgcGF0aCwgW3BhcnRdLmNvbmNhdCh0cmF2ZXJzZWQpKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgcHJldiA9IGN1cnJlbnRbcGFydF07XG4gICAgdHJhdmVyc2VkID0gW3BhcnRdLmNvbmNhdCh0cmF2ZXJzZWQpO1xuICB9XG4gIGxldCB2YWx1ZSA9IHBhdGhbMF07XG4gIGlmICh0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhbHVlID0gdmFsdWUocHJldiwgdHJhdmVyc2VkKTtcbiAgICBpZiAodmFsdWUgPT09IHByZXYpXG4gICAgICByZXR1cm47XG4gIH1cbiAgaWYgKHBhcnQgPT09IHZvaWQgMCAmJiB2YWx1ZSA9PSB2b2lkIDApXG4gICAgcmV0dXJuO1xuICB2YWx1ZSA9IHVud3JhcCh2YWx1ZSk7XG4gIGlmIChwYXJ0ID09PSB2b2lkIDAgfHwgaXNXcmFwcGFibGUocHJldikgJiYgaXNXcmFwcGFibGUodmFsdWUpICYmICFBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgIG1lcmdlU3RvcmVOb2RlKHByZXYsIHZhbHVlKTtcbiAgfSBlbHNlXG4gICAgc2V0UHJvcGVydHkoY3VycmVudCwgcGFydCwgdmFsdWUpO1xufVxuZnVuY3Rpb24gY3JlYXRlU3RvcmUoLi4uW3N0b3JlLCBvcHRpb25zXSkge1xuICBjb25zdCB1bndyYXBwZWRTdG9yZSA9IHVud3JhcChzdG9yZSB8fCB7fSk7XG4gIGNvbnN0IGlzQXJyYXkgPSBBcnJheS5pc0FycmF5KHVud3JhcHBlZFN0b3JlKTtcbiAgY29uc3Qgd3JhcHBlZFN0b3JlID0gd3JhcCQxKHVud3JhcHBlZFN0b3JlKTtcbiAgZnVuY3Rpb24gc2V0U3RvcmUoLi4uYXJncykge1xuICAgIGJhdGNoKCgpID0+IHtcbiAgICAgIGlzQXJyYXkgJiYgYXJncy5sZW5ndGggPT09IDEgPyB1cGRhdGVBcnJheSh1bndyYXBwZWRTdG9yZSwgYXJnc1swXSkgOiB1cGRhdGVQYXRoKHVud3JhcHBlZFN0b3JlLCBhcmdzKTtcbiAgICB9KTtcbiAgfVxuICByZXR1cm4gW3dyYXBwZWRTdG9yZSwgc2V0U3RvcmVdO1xufVxuY29uc3QgZGVmYXVsdExpZ2h0Q29sb3JzU2V0ID0ge1xuICBjb25zdGFudDoge1xuICAgIGJsYWNrOiBcIiMwMDAwMDBcIixcbiAgICB3aGl0ZTogXCIjRkZGRkZGXCJcbiAgfSxcbiAgY29ubmVjdEJ1dHRvbjoge1xuICAgIGJhY2tncm91bmQ6IFwiIzAwOThFQVwiLFxuICAgIGZvcmVncm91bmQ6IFwiI0ZGRkZGRlwiXG4gIH0sXG4gIGFjY2VudDogXCIjMDA5OEVBXCIsXG4gIHRlbGVncmFtQnV0dG9uOiBcIiMwMDk4RUFcIixcbiAgaWNvbjoge1xuICAgIHByaW1hcnk6IFwiIzBGMEYwRlwiLFxuICAgIHNlY29uZGFyeTogXCIjN0E4OTk5XCIsXG4gICAgdGVydGlhcnk6IFwiI0MxQ0FEMlwiLFxuICAgIHN1Y2Nlc3M6IFwiIzI5Q0M2QVwiLFxuICAgIGVycm9yOiBcIiNGNUE3M0JcIlxuICB9LFxuICBiYWNrZ3JvdW5kOiB7XG4gICAgcHJpbWFyeTogXCIjRkZGRkZGXCIsXG4gICAgc2Vjb25kYXJ5OiBcIiNGMUYzRjVcIixcbiAgICBzZWdtZW50OiBcIiNGRkZGRkZcIixcbiAgICB0aW50OiBcIiNGMUYzRjVcIixcbiAgICBxcjogXCIjRjFGM0Y1XCJcbiAgfSxcbiAgdGV4dDoge1xuICAgIHByaW1hcnk6IFwiIzBGMEYwRlwiLFxuICAgIHNlY29uZGFyeTogXCIjNkE3Nzg1XCJcbiAgfVxufTtcbmNvbnN0IGRlZmF1bHREYXJrQ29sb3JzU2V0ID0ge1xuICBjb25zdGFudDoge1xuICAgIGJsYWNrOiBcIiMwMDAwMDBcIixcbiAgICB3aGl0ZTogXCIjRkZGRkZGXCJcbiAgfSxcbiAgY29ubmVjdEJ1dHRvbjoge1xuICAgIGJhY2tncm91bmQ6IFwiIzAwOThFQVwiLFxuICAgIGZvcmVncm91bmQ6IFwiI0ZGRkZGRlwiXG4gIH0sXG4gIGFjY2VudDogXCIjRTVFNUVBXCIsXG4gIHRlbGVncmFtQnV0dG9uOiBcIiMzMUE2RjVcIixcbiAgaWNvbjoge1xuICAgIHByaW1hcnk6IFwiI0U1RTVFQVwiLFxuICAgIHNlY29uZGFyeTogXCIjOTA5MDk5XCIsXG4gICAgdGVydGlhcnk6IFwiIzQzNDM0N1wiLFxuICAgIHN1Y2Nlc3M6IFwiIzI5Q0M2QVwiLFxuICAgIGVycm9yOiBcIiNGNUE3M0JcIlxuICB9LFxuICBiYWNrZ3JvdW5kOiB7XG4gICAgcHJpbWFyeTogXCIjMTIxMjE0XCIsXG4gICAgc2Vjb25kYXJ5OiBcIiMxODE4MUFcIixcbiAgICBzZWdtZW50OiBcIiMyNjI2MjlcIixcbiAgICB0aW50OiBcIiMyMjIyMjRcIixcbiAgICBxcjogXCIjRkZGRkZGXCJcbiAgfSxcbiAgdGV4dDoge1xuICAgIHByaW1hcnk6IFwiI0U1RTVFQVwiLFxuICAgIHNlY29uZGFyeTogXCIjN0Q3RDg1XCJcbiAgfVxufTtcbi8qIVxuICogaXMtcGxhaW4tb2JqZWN0IDxodHRwczovL2dpdGh1Yi5jb20vam9uc2NobGlua2VydC9pcy1wbGFpbi1vYmplY3Q+XG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDE0LTIwMTcsIEpvbiBTY2hsaW5rZXJ0LlxuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG5mdW5jdGlvbiBpc09iamVjdChvMikge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8yKSA9PT0gXCJbb2JqZWN0IE9iamVjdF1cIjtcbn1cbmZ1bmN0aW9uIGlzUGxhaW5PYmplY3QobzIpIHtcbiAgdmFyIGN0b3IsIHByb3Q7XG4gIGlmIChpc09iamVjdChvMikgPT09IGZhbHNlKVxuICAgIHJldHVybiBmYWxzZTtcbiAgY3RvciA9IG8yLmNvbnN0cnVjdG9yO1xuICBpZiAoY3RvciA9PT0gdm9pZCAwKVxuICAgIHJldHVybiB0cnVlO1xuICBwcm90ID0gY3Rvci5wcm90b3R5cGU7XG4gIGlmIChpc09iamVjdChwcm90KSA9PT0gZmFsc2UpXG4gICAgcmV0dXJuIGZhbHNlO1xuICBpZiAocHJvdC5oYXNPd25Qcm9wZXJ0eShcImlzUHJvdG90eXBlT2ZcIikgPT09IGZhbHNlKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiB0cnVlO1xufVxuZnVuY3Rpb24gbWVyZ2VPcHRpb25zKG9wdGlvbnMsIGRlZmF1bHRPcHRpb25zKSB7XG4gIGlmICghb3B0aW9ucykge1xuICAgIHJldHVybiBkZWZhdWx0T3B0aW9ucztcbiAgfVxuICBjb25zdCBvdmVyd3JpdGVNZXJnZSA9IChfLCBzb3VyY2VBcnJheSwgX18pID0+IHNvdXJjZUFycmF5O1xuICByZXR1cm4gZGVlcG1lcmdlKGRlZmF1bHRPcHRpb25zLCBvcHRpb25zLCB7XG4gICAgYXJyYXlNZXJnZTogb3ZlcndyaXRlTWVyZ2UsXG4gICAgaXNNZXJnZWFibGVPYmplY3Q6IGlzUGxhaW5PYmplY3RcbiAgfSk7XG59XG5jb25zdCBbdGhlbWVTdGF0ZSwgc2V0VGhlbWVTdGF0ZV0gPSBjcmVhdGVTdG9yZSh7XG4gIHRoZW1lOiBUSEVNRS5MSUdIVCxcbiAgY29sb3JzOiBkZWZhdWx0TGlnaHRDb2xvcnNTZXQsXG4gIGJvcmRlclJhZGl1czogXCJtXCJcbn0pO1xuY29uc3QgdGhlbWVDb2xvcnNNYXBwaW5nRGVmYXVsdCA9IHtcbiAgW1RIRU1FLkxJR0hUXTogZGVmYXVsdExpZ2h0Q29sb3JzU2V0LFxuICBbVEhFTUUuREFSS106IGRlZmF1bHREYXJrQ29sb3JzU2V0XG59O1xuY29uc3QgdGhlbWVDdXN0b21Db2xvcnMgPSB7XG4gIFtUSEVNRS5MSUdIVF06IHZvaWQgMCxcbiAgW1RIRU1FLkRBUktdOiB2b2lkIDBcbn07XG5mdW5jdGlvbiBzZXRUaGVtZSh0aGVtZSwgY29sb3JzU2V0KSB7XG4gIGlmIChjb2xvcnNTZXQpIHtcbiAgICB0aGVtZUN1c3RvbUNvbG9yc1tUSEVNRS5EQVJLXSA9IG1lcmdlT3B0aW9ucyhcbiAgICAgIGNvbG9yc1NldFtUSEVNRS5EQVJLXSxcbiAgICAgIHRoZW1lQ3VzdG9tQ29sb3JzW1RIRU1FLkRBUktdXG4gICAgKTtcbiAgICB0aGVtZUN1c3RvbUNvbG9yc1tUSEVNRS5MSUdIVF0gPSBtZXJnZU9wdGlvbnMoXG4gICAgICBjb2xvcnNTZXRbVEhFTUUuTElHSFRdLFxuICAgICAgdGhlbWVDdXN0b21Db2xvcnNbVEhFTUUuTElHSFRdXG4gICAgKTtcbiAgfVxuICBzZXRUaGVtZVN0YXRlKHtcbiAgICB0aGVtZSxcbiAgICBjb2xvcnM6IG1lcmdlT3B0aW9ucyh0aGVtZUN1c3RvbUNvbG9yc1t0aGVtZV0sIHRoZW1lQ29sb3JzTWFwcGluZ0RlZmF1bHRbdGhlbWVdKVxuICB9KTtcbn1cbmZ1bmN0aW9uIHNldEJvcmRlclJhZGl1cyhib3JkZXJSYWRpdXMpIHtcbiAgc2V0VGhlbWVTdGF0ZSh7IGJvcmRlclJhZGl1cyB9KTtcbn1cbmZ1bmN0aW9uIHNldENvbG9ycyhjb2xvcnNTZXQpIHtcbiAgdGhlbWVDdXN0b21Db2xvcnNbVEhFTUUuREFSS10gPSBtZXJnZU9wdGlvbnMoXG4gICAgY29sb3JzU2V0W1RIRU1FLkRBUktdLFxuICAgIHRoZW1lQ3VzdG9tQ29sb3JzW1RIRU1FLkRBUktdXG4gICk7XG4gIHRoZW1lQ3VzdG9tQ29sb3JzW1RIRU1FLkxJR0hUXSA9IG1lcmdlT3B0aW9ucyhcbiAgICBjb2xvcnNTZXRbVEhFTUUuTElHSFRdLFxuICAgIHRoZW1lQ3VzdG9tQ29sb3JzW1RIRU1FLkxJR0hUXVxuICApO1xuICBzZXRUaGVtZVN0YXRlKChzdGF0ZSkgPT4gKHtcbiAgICBjb2xvcnM6IG1lcmdlT3B0aW9ucyhcbiAgICAgIHRoZW1lQ3VzdG9tQ29sb3JzW3N0YXRlLnRoZW1lXSxcbiAgICAgIHRoZW1lQ29sb3JzTWFwcGluZ0RlZmF1bHRbc3RhdGUudGhlbWVdXG4gICAgKVxuICB9KSk7XG59XG5jb25zdCBJbWFnZVBsYWNlaG9sZGVyID0gc3R5bGVkLmRpdmBcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmQuc2Vjb25kYXJ5fTtcbmA7XG5jb25zdCBJbWFnZSA9IChwcm9wcykgPT4ge1xuICBsZXQgaW1nUmVmO1xuICBjb25zdCBbaW1hZ2UsIHNldEltYWdlXSA9IGNyZWF0ZVNpZ25hbChudWxsKTtcbiAgY3JlYXRlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBpbWcgPSBuZXcgd2luZG93LkltYWdlKCk7XG4gICAgaW1nLnNyYyA9IHByb3BzLnNyYztcbiAgICBpbWcuYWx0ID0gcHJvcHMuYWx0IHx8IFwiXCI7XG4gICAgaW1nLnNldEF0dHJpYnV0ZShcImRyYWdnYWJsZVwiLCBcImZhbHNlXCIpO1xuICAgIGlmIChwcm9wcy5jbGFzcykge1xuICAgICAgaW1nLmNsYXNzTGlzdC5hZGQocHJvcHMuY2xhc3MpO1xuICAgIH1cbiAgICBpZiAoaW1nLmNvbXBsZXRlKSB7XG4gICAgICByZXR1cm4gc2V0SW1hZ2UoaW1nKTtcbiAgICB9XG4gICAgaW1nLmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsICgpID0+IHNldEltYWdlKGltZykpO1xuICAgIHJldHVybiAoKSA9PiBpbWcucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwgKCkgPT4gc2V0SW1hZ2UoaW1nKSk7XG4gIH0pO1xuICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgZ2V0IHdoZW4oKSB7XG4gICAgICByZXR1cm4gaW1hZ2UoKTtcbiAgICB9LFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBpbWFnZSgpO1xuICAgIH1cbiAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgZ2V0IHdoZW4oKSB7XG4gICAgICByZXR1cm4gIWltYWdlKCk7XG4gICAgfSxcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEltYWdlUGxhY2Vob2xkZXIsIHtcbiAgICAgICAgZ2V0IFtcImNsYXNzXCJdKCkge1xuICAgICAgICAgIHJldHVybiBwcm9wcy5jbGFzcztcbiAgICAgICAgfSxcbiAgICAgICAgcmVmKHIkKSB7XG4gICAgICAgICAgY29uc3QgX3JlZiQgPSBpbWdSZWY7XG4gICAgICAgICAgdHlwZW9mIF9yZWYkID09PSBcImZ1bmN0aW9uXCIgPyBfcmVmJChyJCkgOiBpbWdSZWYgPSByJDtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9KV07XG59O1xubGV0IGluaXRQYXJhbXMgPSB7fTtcbnRyeSB7XG4gIGxldCBsb2NhdGlvbkhhc2ggPSBsb2NhdGlvbi5oYXNoLnRvU3RyaW5nKCk7XG4gIGluaXRQYXJhbXMgPSB1cmxQYXJzZUhhc2hQYXJhbXMobG9jYXRpb25IYXNoKTtcbn0gY2F0Y2ggKGUyKSB7XG59XG5sZXQgdG1hUGxhdGZvcm0gPSBcInVua25vd25cIjtcbmlmIChpbml0UGFyYW1zID09IG51bGwgPyB2b2lkIDAgOiBpbml0UGFyYW1zLnRnV2ViQXBwUGxhdGZvcm0pIHtcbiAgdG1hUGxhdGZvcm0gPSAoX2EgPSBpbml0UGFyYW1zLnRnV2ViQXBwUGxhdGZvcm0pICE9IG51bGwgPyBfYSA6IFwidW5rbm93blwiO1xufVxuaWYgKHRtYVBsYXRmb3JtID09PSBcInVua25vd25cIikge1xuICBjb25zdCB3aW5kb3cyID0gZ2V0V2luZG93JDEoKTtcbiAgdG1hUGxhdGZvcm0gPSAoX2QgPSAoX2MgPSAoX2IgPSB3aW5kb3cyID09IG51bGwgPyB2b2lkIDAgOiB3aW5kb3cyLlRlbGVncmFtKSA9PSBudWxsID8gdm9pZCAwIDogX2IuV2ViQXBwKSA9PSBudWxsID8gdm9pZCAwIDogX2MucGxhdGZvcm0pICE9IG51bGwgPyBfZCA6IFwidW5rbm93blwiO1xufVxubGV0IHdlYkFwcFZlcnNpb24gPSBcIjYuMFwiO1xuaWYgKGluaXRQYXJhbXMgPT0gbnVsbCA/IHZvaWQgMCA6IGluaXRQYXJhbXMudGdXZWJBcHBWZXJzaW9uKSB7XG4gIHdlYkFwcFZlcnNpb24gPSBpbml0UGFyYW1zLnRnV2ViQXBwVmVyc2lvbjtcbn1cbmlmICghd2ViQXBwVmVyc2lvbikge1xuICBjb25zdCB3aW5kb3cyID0gZ2V0V2luZG93JDEoKTtcbiAgd2ViQXBwVmVyc2lvbiA9IChfZyA9IChfZiA9IChfZSA9IHdpbmRvdzIgPT0gbnVsbCA/IHZvaWQgMCA6IHdpbmRvdzIuVGVsZWdyYW0pID09IG51bGwgPyB2b2lkIDAgOiBfZS5XZWJBcHApID09IG51bGwgPyB2b2lkIDAgOiBfZi52ZXJzaW9uKSAhPSBudWxsID8gX2cgOiBcIjYuMFwiO1xufVxuZnVuY3Rpb24gaXNUbWFQbGF0Zm9ybSguLi5wbGF0Zm9ybXMpIHtcbiAgcmV0dXJuIHBsYXRmb3Jtcy5pbmNsdWRlcyh0bWFQbGF0Zm9ybSk7XG59XG5mdW5jdGlvbiBpc0luVE1BKCkge1xuICB2YXIgX2EyO1xuICByZXR1cm4gdG1hUGxhdGZvcm0gIT09IFwidW5rbm93blwiIHx8ICEhKChfYTIgPSBnZXRXaW5kb3ckMSgpKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLlRlbGVncmFtV2Vidmlld1Byb3h5KTtcbn1cbmZ1bmN0aW9uIGlzSW5UZWxlZ3JhbUJyb3dzZXIoKSB7XG4gIHZhciBfYTI7XG4gIGNvbnN0IGlzVGVsZWdyYW1XZWJ2aWV3ID0gISEoKF9hMiA9IGdldFdpbmRvdyQxKCkpID09IG51bGwgPyB2b2lkIDAgOiBfYTIuVGVsZWdyYW1XZWJ2aWV3KTtcbiAgcmV0dXJuIChpc0luVE1BKCkgfHwgaXNUZWxlZ3JhbVdlYnZpZXcpICYmIHRtYVBsYXRmb3JtID09PSBcInVua25vd25cIjtcbn1cbmZ1bmN0aW9uIHNlbmRFeHBhbmQoKSB7XG4gIHBvc3RFdmVudChcIndlYl9hcHBfZXhwYW5kXCIsIHt9KTtcbn1cbmZ1bmN0aW9uIHNlbmRPcGVuVGVsZWdyYW1MaW5rKGxpbmssIGZhbGxiYWNrKSB7XG4gIGNvbnN0IHVybCA9IG5ldyBVUkwobGluayk7XG4gIGlmICh1cmwucHJvdG9jb2wgIT09IFwiaHR0cDpcIiAmJiB1cmwucHJvdG9jb2wgIT09IFwiaHR0cHM6XCIpIHtcbiAgICBpZiAoZmFsbGJhY2spIHtcbiAgICAgIHJldHVybiBmYWxsYmFjaygpO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgVG9uQ29ubmVjdFVJRXJyb3IoYFVybCBwcm90b2NvbCBpcyBub3Qgc3VwcG9ydGVkOiAke3VybH1gKTtcbiAgfVxuICBpZiAodXJsLmhvc3RuYW1lICE9PSBcInQubWVcIikge1xuICAgIGlmIChmYWxsYmFjaykge1xuICAgICAgcmV0dXJuIGZhbGxiYWNrKCk7XG4gICAgfVxuICAgIHRocm93IG5ldyBUb25Db25uZWN0VUlFcnJvcihgVXJsIGhvc3QgaXMgbm90IHN1cHBvcnRlZDogJHt1cmx9YCk7XG4gIH1cbiAgY29uc3QgcGF0aEZ1bGwgPSB1cmwucGF0aG5hbWUgKyB1cmwuc2VhcmNoO1xuICBpZiAoaXNJZnJhbWUoKSB8fCB2ZXJzaW9uQXRMZWFzdChcIjYuMVwiKSkge1xuICAgIHBvc3RFdmVudChcIndlYl9hcHBfb3Blbl90Z19saW5rXCIsIHsgcGF0aF9mdWxsOiBwYXRoRnVsbCB9KTtcbiAgfSBlbHNlIHtcbiAgICBvcGVuTGlua0JsYW5rKFwiaHR0cHM6Ly90Lm1lXCIgKyBwYXRoRnVsbCk7XG4gIH1cbn1cbmZ1bmN0aW9uIGlzSWZyYW1lKCkge1xuICB0cnkge1xuICAgIGNvbnN0IHdpbmRvdzIgPSBnZXRXaW5kb3ckMSgpO1xuICAgIGlmICghd2luZG93Mikge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gd2luZG93Mi5wYXJlbnQgIT0gbnVsbCAmJiB3aW5kb3cyICE9PSB3aW5kb3cyLnBhcmVudDtcbiAgfSBjYXRjaCAoZTIpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cbmZ1bmN0aW9uIHBvc3RFdmVudChldmVudFR5cGUsIGV2ZW50RGF0YSkge1xuICB0cnkge1xuICAgIGNvbnN0IHdpbmRvdzIgPSBnZXRXaW5kb3ckMSgpO1xuICAgIGlmICghd2luZG93Mikge1xuICAgICAgdGhyb3cgbmV3IFRvbkNvbm5lY3RVSUVycm9yKGBDYW4ndCBwb3N0IGV2ZW50IHRvIHBhcmVudCB3aW5kb3c6IHdpbmRvdyBpcyBub3QgZGVmaW5lZGApO1xuICAgIH1cbiAgICBpZiAod2luZG93Mi5UZWxlZ3JhbVdlYnZpZXdQcm94eSAhPT0gdm9pZCAwKSB7XG4gICAgICBsb2dEZWJ1ZyhcInBvc3RFdmVudFwiLCBldmVudFR5cGUsIGV2ZW50RGF0YSk7XG4gICAgICB3aW5kb3cyLlRlbGVncmFtV2Vidmlld1Byb3h5LnBvc3RFdmVudChldmVudFR5cGUsIEpTT04uc3RyaW5naWZ5KGV2ZW50RGF0YSkpO1xuICAgIH0gZWxzZSBpZiAod2luZG93Mi5leHRlcm5hbCAmJiBcIm5vdGlmeVwiIGluIHdpbmRvdzIuZXh0ZXJuYWwpIHtcbiAgICAgIGxvZ0RlYnVnKFwicG9zdEV2ZW50XCIsIGV2ZW50VHlwZSwgZXZlbnREYXRhKTtcbiAgICAgIHdpbmRvdzIuZXh0ZXJuYWwubm90aWZ5KEpTT04uc3RyaW5naWZ5KHsgZXZlbnRUeXBlLCBldmVudERhdGEgfSkpO1xuICAgIH0gZWxzZSBpZiAoaXNJZnJhbWUoKSkge1xuICAgICAgY29uc3QgdHJ1c3RlZFRhcmdldCA9IFwiKlwiO1xuICAgICAgY29uc3QgbWVzc2FnZSA9IEpTT04uc3RyaW5naWZ5KHsgZXZlbnRUeXBlLCBldmVudERhdGEgfSk7XG4gICAgICBsb2dEZWJ1ZyhcInBvc3RFdmVudFwiLCBldmVudFR5cGUsIGV2ZW50RGF0YSk7XG4gICAgICB3aW5kb3cyLnBhcmVudC5wb3N0TWVzc2FnZShtZXNzYWdlLCB0cnVzdGVkVGFyZ2V0KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgbmV3IFRvbkNvbm5lY3RVSUVycm9yKGBDYW4ndCBwb3N0IGV2ZW50IHRvIFRNQWApO1xuICAgIH1cbiAgfSBjYXRjaCAoZTIpIHtcbiAgICBsb2dFcnJvcihgQ2FuJ3QgcG9zdCBldmVudCB0byBwYXJlbnQgd2luZG93OiAke2UyfWApO1xuICB9XG59XG5mdW5jdGlvbiB1cmxQYXJzZUhhc2hQYXJhbXMobG9jYXRpb25IYXNoKSB7XG4gIGxvY2F0aW9uSGFzaCA9IGxvY2F0aW9uSGFzaC5yZXBsYWNlKC9eIy8sIFwiXCIpO1xuICBsZXQgcGFyYW1zID0ge307XG4gIGlmICghbG9jYXRpb25IYXNoLmxlbmd0aCkge1xuICAgIHJldHVybiBwYXJhbXM7XG4gIH1cbiAgaWYgKGxvY2F0aW9uSGFzaC5pbmRleE9mKFwiPVwiKSA8IDAgJiYgbG9jYXRpb25IYXNoLmluZGV4T2YoXCI/XCIpIDwgMCkge1xuICAgIHBhcmFtcy5fcGF0aCA9IHVybFNhZmVEZWNvZGUobG9jYXRpb25IYXNoKTtcbiAgICByZXR1cm4gcGFyYW1zO1xuICB9XG4gIGxldCBxSW5kZXggPSBsb2NhdGlvbkhhc2guaW5kZXhPZihcIj9cIik7XG4gIGlmIChxSW5kZXggPj0gMCkge1xuICAgIGxldCBwYXRoUGFyYW0gPSBsb2NhdGlvbkhhc2guc3Vic3RyKDAsIHFJbmRleCk7XG4gICAgcGFyYW1zLl9wYXRoID0gdXJsU2FmZURlY29kZShwYXRoUGFyYW0pO1xuICAgIGxvY2F0aW9uSGFzaCA9IGxvY2F0aW9uSGFzaC5zdWJzdHIocUluZGV4ICsgMSk7XG4gIH1cbiAgbGV0IHF1ZXJ5X3BhcmFtcyA9IHVybFBhcnNlUXVlcnlTdHJpbmcobG9jYXRpb25IYXNoKTtcbiAgZm9yIChsZXQgayBpbiBxdWVyeV9wYXJhbXMpIHtcbiAgICBwYXJhbXNba10gPSBxdWVyeV9wYXJhbXNba107XG4gIH1cbiAgcmV0dXJuIHBhcmFtcztcbn1cbmZ1bmN0aW9uIHVybFNhZmVEZWNvZGUodXJsZW5jb2RlZCkge1xuICB0cnkge1xuICAgIHVybGVuY29kZWQgPSB1cmxlbmNvZGVkLnJlcGxhY2UoL1xcKy9nLCBcIiUyMFwiKTtcbiAgICByZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KHVybGVuY29kZWQpO1xuICB9IGNhdGNoIChlMikge1xuICAgIHJldHVybiB1cmxlbmNvZGVkO1xuICB9XG59XG5mdW5jdGlvbiB1cmxQYXJzZVF1ZXJ5U3RyaW5nKHF1ZXJ5U3RyaW5nKSB7XG4gIGxldCBwYXJhbXMgPSB7fTtcbiAgaWYgKCFxdWVyeVN0cmluZy5sZW5ndGgpIHtcbiAgICByZXR1cm4gcGFyYW1zO1xuICB9XG4gIGxldCBxdWVyeVN0cmluZ1BhcmFtcyA9IHF1ZXJ5U3RyaW5nLnNwbGl0KFwiJlwiKTtcbiAgbGV0IGkyLCBwYXJhbSwgcGFyYW1OYW1lLCBwYXJhbVZhbHVlO1xuICBmb3IgKGkyID0gMDsgaTIgPCBxdWVyeVN0cmluZ1BhcmFtcy5sZW5ndGg7IGkyKyspIHtcbiAgICBwYXJhbSA9IHF1ZXJ5U3RyaW5nUGFyYW1zW2kyXS5zcGxpdChcIj1cIik7XG4gICAgcGFyYW1OYW1lID0gdXJsU2FmZURlY29kZShwYXJhbVswXSk7XG4gICAgcGFyYW1WYWx1ZSA9IHBhcmFtWzFdID09IG51bGwgPyBudWxsIDogdXJsU2FmZURlY29kZShwYXJhbVsxXSk7XG4gICAgcGFyYW1zW3BhcmFtTmFtZV0gPSBwYXJhbVZhbHVlO1xuICB9XG4gIHJldHVybiBwYXJhbXM7XG59XG5mdW5jdGlvbiB2ZXJzaW9uQ29tcGFyZSh2MSwgdjIpIHtcbiAgaWYgKHR5cGVvZiB2MSAhPT0gXCJzdHJpbmdcIilcbiAgICB2MSA9IFwiXCI7XG4gIGlmICh0eXBlb2YgdjIgIT09IFwic3RyaW5nXCIpXG4gICAgdjIgPSBcIlwiO1xuICBsZXQgdjFMaXN0ID0gdjEucmVwbGFjZSgvXlxccyt8XFxzKyQvZywgXCJcIikuc3BsaXQoXCIuXCIpO1xuICBsZXQgdjJMaXN0ID0gdjIucmVwbGFjZSgvXlxccyt8XFxzKyQvZywgXCJcIikuc3BsaXQoXCIuXCIpO1xuICBsZXQgYTIsIGkyLCBwMSwgcDI7XG4gIGEyID0gTWF0aC5tYXgodjFMaXN0Lmxlbmd0aCwgdjJMaXN0Lmxlbmd0aCk7XG4gIGZvciAoaTIgPSAwOyBpMiA8IGEyOyBpMisrKSB7XG4gICAgcDEgPSBwYXJzZUludCh2MUxpc3RbaTJdKSB8fCAwO1xuICAgIHAyID0gcGFyc2VJbnQodjJMaXN0W2kyXSkgfHwgMDtcbiAgICBpZiAocDEgPT09IHAyKVxuICAgICAgY29udGludWU7XG4gICAgaWYgKHAxID4gcDIpXG4gICAgICByZXR1cm4gMTtcbiAgICByZXR1cm4gLTE7XG4gIH1cbiAgcmV0dXJuIDA7XG59XG5mdW5jdGlvbiB2ZXJzaW9uQXRMZWFzdCh2ZXIpIHtcbiAgcmV0dXJuIHZlcnNpb25Db21wYXJlKHdlYkFwcFZlcnNpb24sIHZlcikgPj0gMDtcbn1cbmNvbnN0IG1heFdpZHRoID0ge1xuICBtb2JpbGU6IDQ0MCxcbiAgdGFibGV0OiAxMDIwXG59O1xuZnVuY3Rpb24gaXNEZXZpY2UoZGV2aWNlKSB7XG4gIGNvbnN0IHdpbmRvdzIgPSBnZXRXaW5kb3ckMSgpO1xuICBpZiAoIXdpbmRvdzIpIHtcbiAgICByZXR1cm4gZGV2aWNlID09PSBcImRlc2t0b3BcIjtcbiAgfVxuICBpZiAoaXNUbWFQbGF0Zm9ybShcIndlYmFcIikpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICBjb25zdCB3aWR0aCA9IHdpbmRvdzIuaW5uZXJXaWR0aDtcbiAgc3dpdGNoIChkZXZpY2UpIHtcbiAgICBjYXNlIFwiZGVza3RvcFwiOlxuICAgICAgcmV0dXJuIHdpZHRoID4gbWF4V2lkdGgudGFibGV0O1xuICAgIGNhc2UgXCJ0YWJsZXRcIjpcbiAgICAgIHJldHVybiB3aWR0aCA+IG1heFdpZHRoLm1vYmlsZTtcbiAgICBkZWZhdWx0OlxuICAgIGNhc2UgXCJtb2JpbGVcIjpcbiAgICAgIHJldHVybiB3aWR0aCA8PSBtYXhXaWR0aC5tb2JpbGUgfHwgaXNPUyhcImlvc1wiLCBcImFuZHJvaWRcIiwgXCJpcGFkXCIpO1xuICB9XG59XG5mdW5jdGlvbiBtZWRpYShkZXZpY2UpIHtcbiAgc3dpdGNoIChkZXZpY2UpIHtcbiAgICBjYXNlIFwibW9iaWxlXCI6XG4gICAgICByZXR1cm4gYEBtZWRpYSAobWF4LXdpZHRoOiAke21heFdpZHRoLm1vYmlsZX1weClgO1xuICAgIGNhc2UgXCJ0YWJsZXRcIjpcbiAgICAgIHJldHVybiBgQG1lZGlhIChtYXgtd2lkdGg6ICR7bWF4V2lkdGgudGFibGV0fXB4KSAobWluLXdpZHRoOiAke21heFdpZHRoLm1vYmlsZX1weClgO1xuICAgIGRlZmF1bHQ6XG4gICAgY2FzZSBcImRlc2t0b3BcIjpcbiAgICAgIHJldHVybiBgQG1lZGlhIChtaW4td2lkdGg6ICR7bWF4V2lkdGgudGFibGV0fXB4KWA7XG4gIH1cbn1cbmNvbnN0IG1lZGlhVG91Y2ggPSBcIkBtZWRpYSAoaG92ZXI6IG5vbmUpXCI7XG5jb25zdCBtZWRpYU5vdFRvdWNoID0gXCJAbWVkaWEgbm90IGFsbCBhbmQgKGhvdmVyOiBub25lKVwiO1xuY29uc3QgYm9yZGVycyQ2ID0ge1xuICBtOiBcIjEwMHZoXCIsXG4gIHM6IFwiOHB4XCIsXG4gIG5vbmU6IFwiMFwiXG59O1xuY29uc3Qgc2NhbGVWYWx1ZXMgPSB7XG4gIHM6IDAuMDIsXG4gIG06IDAuMDRcbn07XG5jb25zdCBCdXR0b25TdHlsZWQkMSA9IHN0eWxlZC5idXR0b25gXG4gICAgZGlzcGxheTogJHsocHJvcHMpID0+IHByb3BzLmxlZnRJY29uIHx8IHByb3BzLnJpZ2h0SWNvbiA/IFwiZmxleFwiIDogXCJpbmxpbmUtYmxvY2tcIn07XG4gICAgZ2FwOiAkeyhwcm9wcykgPT4gcHJvcHMubGVmdEljb24gfHwgcHJvcHMucmlnaHRJY29uID8gXCI2cHhcIiA6IFwidW5zZXRcIn07XG4gICAgYWxpZ24taXRlbXM6ICR7KHByb3BzKSA9PiBwcm9wcy5sZWZ0SWNvbiB8fCBwcm9wcy5yaWdodEljb24gPyBcImNlbnRlclwiIDogXCJ1bnNldFwifTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6ICR7KHByb3BzKSA9PiBwcm9wcy5sZWZ0SWNvbiB8fCBwcm9wcy5yaWdodEljb24gPyBcInNwYWNlLWJldHdlZW5cIiA6IFwidW5zZXRcIn07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+IHByb3BzLmFwcGVhcmFuY2UgPT09IFwiZmxhdFwiID8gXCJ0cmFuc3BhcmVudFwiIDogcHJvcHMuYXBwZWFyYW5jZSA9PT0gXCJzZWNvbmRhcnlcIiA/IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kLnRpbnQgOiByZ2JhKHByb3BzLnRoZW1lLmNvbG9ycy5hY2NlbnQsIDAuMTIpfTtcbiAgICBjb2xvcjogJHsocHJvcHMpID0+IHByb3BzLmFwcGVhcmFuY2UgPT09IFwic2Vjb25kYXJ5XCIgPyBwcm9wcy50aGVtZS5jb2xvcnMudGV4dC5wcmltYXJ5IDogcHJvcHMudGhlbWUuY29sb3JzLmFjY2VudH07XG5cbiAgICBwYWRkaW5nOiAkeyhwcm9wcykgPT4gcHJvcHMuYXBwZWFyYW5jZSA9PT0gXCJmbGF0XCIgPyBcIjBcIiA6IFwiOXB4IDE2cHhcIn07XG4gICAgcGFkZGluZy1sZWZ0OiAkeyhwcm9wcykgPT4gcHJvcHMubGVmdEljb24gJiYgcHJvcHMuYXBwZWFyYW5jZSAhPT0gXCJmbGF0XCIgPyBcIjEycHhcIiA6IFwiMTZweFwifTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAkeyhwcm9wcykgPT4gcHJvcHMucmlnaHRJY29uICYmIHByb3BzLmFwcGVhcmFuY2UgIT09IFwiZmxhdFwiID8gXCIxMnB4XCIgOiBcIjE2cHhcIn07XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJvcmRlci1yYWRpdXM6ICR7KHByb3BzKSA9PiBib3JkZXJzJDZbcHJvcHMudGhlbWUuYm9yZGVyUmFkaXVzXX07XG4gICAgY3Vyc29yOiAkeyhwcm9wcykgPT4gcHJvcHMuZGlzYWJsZWQgPyBcIm5vdC1hbGxvd2VkXCIgOiBcInBvaW50ZXJcIn07XG5cbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgZm9udC13ZWlnaHQ6IDUxMDtcbiAgICBsaW5lLWhlaWdodDogMThweDtcblxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjEyNXMgZWFzZS1pbi1vdXQ7XG5cbiAgICAke21lZGlhTm90VG91Y2h9IHtcbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06ICR7KHByb3BzKSA9PiBwcm9wcy5kaXNhYmxlZCA/IFwidW5zZXRcIiA6IGBzY2FsZSgkezEgKyBzY2FsZVZhbHVlc1twcm9wcy5zY2FsZV19KWB9O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgJjphY3RpdmUge1xuICAgICAgICB0cmFuc2Zvcm06ICR7KHByb3BzKSA9PiBwcm9wcy5kaXNhYmxlZCA/IFwidW5zZXRcIiA6IGBzY2FsZSgkezEgLSBzY2FsZVZhbHVlc1twcm9wcy5zY2FsZV19KWB9O1xuICAgIH1cblxuICAgICR7bWVkaWFUb3VjaH0ge1xuICAgICAgICAmOmFjdGl2ZSB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06ICR7KHByb3BzKSA9PiBwcm9wcy5kaXNhYmxlZCA/IFwidW5zZXRcIiA6IGBzY2FsZSgkezEgLSBzY2FsZVZhbHVlc1twcm9wcy5zY2FsZV0gKiAyfSlgfTtcbiAgICAgICAgfVxuICAgIH1cbmA7XG5mdW5jdGlvbiB1c2VEYXRhQXR0cmlidXRlcyhwcm9wcykge1xuICBjb25zdCBrZXlzID0gdW50cmFjaygoKSA9PiBPYmplY3Qua2V5cyhwcm9wcykuZmlsdGVyKChrZXkpID0+IGtleS5zdGFydHNXaXRoKFwiZGF0YS1cIikpKTtcbiAgY29uc3QgW2RhdGFBdHRyc10gPSBzcGxpdFByb3BzKHByb3BzLCBrZXlzKTtcbiAgcmV0dXJuIGRhdGFBdHRycztcbn1cbmNvbnN0IEJ1dHRvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCBkYXRhQXR0cnMgPSB1c2VEYXRhQXR0cmlidXRlcyhwcm9wcyk7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoQnV0dG9uU3R5bGVkJDEsIG1lcmdlUHJvcHMoe1xuICAgIGdldCBhcHBlYXJhbmNlKCkge1xuICAgICAgcmV0dXJuIHByb3BzLmFwcGVhcmFuY2UgfHwgXCJwcmltYXJ5XCI7XG4gICAgfSxcbiAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2xhc3M7XG4gICAgfSxcbiAgICBvbkNsaWNrOiAoZTIpID0+IHtcbiAgICAgIHZhciBfYTI7XG4gICAgICByZXR1cm4gKF9hMiA9IHByb3BzLm9uQ2xpY2spID09IG51bGwgPyB2b2lkIDAgOiBfYTIuY2FsbChwcm9wcywgZTIpO1xuICAgIH0sXG4gICAgb25Nb3VzZUVudGVyOiAoZTIpID0+IHtcbiAgICAgIHZhciBfYTI7XG4gICAgICByZXR1cm4gKF9hMiA9IHByb3BzLm9uTW91c2VFbnRlcikgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi5jYWxsKHByb3BzLCBlMik7XG4gICAgfSxcbiAgICBvbk1vdXNlTGVhdmU6IChlMikgPT4ge1xuICAgICAgdmFyIF9hMjtcbiAgICAgIHJldHVybiAoX2EyID0gcHJvcHMub25Nb3VzZUxlYXZlKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLmNhbGwocHJvcHMsIGUyKTtcbiAgICB9LFxuICAgIHJlZihyJCkge1xuICAgICAgY29uc3QgX3JlZiQgPSBwcm9wcy5yZWY7XG4gICAgICB0eXBlb2YgX3JlZiQgPT09IFwiZnVuY3Rpb25cIiA/IF9yZWYkKHIkKSA6IHByb3BzLnJlZiA9IHIkO1xuICAgIH0sXG4gICAgZ2V0IGRpc2FibGVkKCkge1xuICAgICAgcmV0dXJuIHByb3BzLmRpc2FibGVkO1xuICAgIH0sXG4gICAgZ2V0IHNjYWxlKCkge1xuICAgICAgcmV0dXJuIHByb3BzLnNjYWxlIHx8IFwibVwiO1xuICAgIH0sXG4gICAgZ2V0IGxlZnRJY29uKCkge1xuICAgICAgcmV0dXJuICEhcHJvcHMubGVmdEljb247XG4gICAgfSxcbiAgICBnZXQgcmlnaHRJY29uKCkge1xuICAgICAgcmV0dXJuICEhcHJvcHMucmlnaHRJY29uO1xuICAgIH0sXG4gICAgXCJkYXRhLXRjLWJ1dHRvblwiOiBcInRydWVcIlxuICB9LCBkYXRhQXR0cnMsIHtcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gW2NyZWF0ZU1lbW8oKCkgPT4gcHJvcHMubGVmdEljb24pLCBjcmVhdGVNZW1vKCgpID0+IHByb3BzLmNoaWxkcmVuKSwgY3JlYXRlTWVtbygoKSA9PiBwcm9wcy5yaWdodEljb24pXTtcbiAgICB9XG4gIH0pKTtcbn07XG5mdW5jdGlvbiBuZXh0RnJhbWUoZm4pIHtcbiAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpID0+IHtcbiAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZm4pO1xuICB9KTtcbn1cbmNvbnN0IFRyYW5zaXRpb24gPSAocHJvcHMpID0+IHtcbiAgbGV0IGVsO1xuICBsZXQgZmlyc3QgPSB0cnVlO1xuICBjb25zdCBbczEsIHNldDFdID0gY3JlYXRlU2lnbmFsKCk7XG4gIGNvbnN0IFtzMiwgc2V0Ml0gPSBjcmVhdGVTaWduYWwoKTtcbiAgY29uc3QgcmVzb2x2ZWQgPSBjaGlsZHJlbigoKSA9PiBwcm9wcy5jaGlsZHJlbik7XG4gIGNvbnN0IHtcbiAgICBvbkJlZm9yZUVudGVyLFxuICAgIG9uRW50ZXIsXG4gICAgb25BZnRlckVudGVyLFxuICAgIG9uQmVmb3JlRXhpdCxcbiAgICBvbkV4aXQsXG4gICAgb25BZnRlckV4aXRcbiAgfSA9IHByb3BzO1xuICBjb25zdCBjbGFzc25hbWVzID0gY3JlYXRlTWVtbygoKSA9PiB7XG4gICAgY29uc3QgbmFtZSA9IHByb3BzLm5hbWUgfHwgXCJzXCI7XG4gICAgcmV0dXJuIHtcbiAgICAgIGVudGVyQWN0aXZlQ2xhc3M6IHByb3BzLmVudGVyQWN0aXZlQ2xhc3MgfHwgbmFtZSArIFwiLWVudGVyLWFjdGl2ZVwiLFxuICAgICAgZW50ZXJDbGFzczogcHJvcHMuZW50ZXJDbGFzcyB8fCBuYW1lICsgXCItZW50ZXJcIixcbiAgICAgIGVudGVyVG9DbGFzczogcHJvcHMuZW50ZXJUb0NsYXNzIHx8IG5hbWUgKyBcIi1lbnRlci10b1wiLFxuICAgICAgZXhpdEFjdGl2ZUNsYXNzOiBwcm9wcy5leGl0QWN0aXZlQ2xhc3MgfHwgbmFtZSArIFwiLWV4aXQtYWN0aXZlXCIsXG4gICAgICBleGl0Q2xhc3M6IHByb3BzLmV4aXRDbGFzcyB8fCBuYW1lICsgXCItZXhpdFwiLFxuICAgICAgZXhpdFRvQ2xhc3M6IHByb3BzLmV4aXRUb0NsYXNzIHx8IG5hbWUgKyBcIi1leGl0LXRvXCJcbiAgICB9O1xuICB9KTtcbiAgZnVuY3Rpb24gZW50ZXJUcmFuc2l0aW9uKGVsMiwgcHJldikge1xuICAgIGlmICghZmlyc3QgfHwgcHJvcHMuYXBwZWFyKSB7XG4gICAgICBsZXQgZW5kVHJhbnNpdGlvbiA9IGZ1bmN0aW9uKGUyKSB7XG4gICAgICAgIGlmIChlbDIgJiYgKCFlMiB8fCBlMi50YXJnZXQgPT09IGVsMikpIHtcbiAgICAgICAgICBlbDIucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRyYW5zaXRpb25lbmRcIiwgZW5kVHJhbnNpdGlvbik7XG4gICAgICAgICAgZWwyLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJhbmltYXRpb25lbmRcIiwgZW5kVHJhbnNpdGlvbik7XG4gICAgICAgICAgZWwyLmNsYXNzTGlzdC5yZW1vdmUoLi4uZW50ZXJBY3RpdmVDbGFzc2VzKTtcbiAgICAgICAgICBlbDIuY2xhc3NMaXN0LnJlbW92ZSguLi5lbnRlclRvQ2xhc3Nlcyk7XG4gICAgICAgICAgYmF0Y2goKCkgPT4ge1xuICAgICAgICAgICAgczEoKSAhPT0gZWwyICYmIHNldDEoZWwyKTtcbiAgICAgICAgICAgIHMyKCkgPT09IGVsMiAmJiBzZXQyKHZvaWQgMCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgb25BZnRlckVudGVyICYmIG9uQWZ0ZXJFbnRlcihlbDIpO1xuICAgICAgICAgIGlmIChwcm9wcy5tb2RlID09PSBcImlub3V0XCIpXG4gICAgICAgICAgICBleGl0VHJhbnNpdGlvbihlbDIsIHByZXYpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgY29uc3QgZW50ZXJDbGFzc2VzID0gY2xhc3NuYW1lcygpLmVudGVyQ2xhc3Muc3BsaXQoXCIgXCIpO1xuICAgICAgY29uc3QgZW50ZXJBY3RpdmVDbGFzc2VzID0gY2xhc3NuYW1lcygpLmVudGVyQWN0aXZlQ2xhc3Muc3BsaXQoXCIgXCIpO1xuICAgICAgY29uc3QgZW50ZXJUb0NsYXNzZXMgPSBjbGFzc25hbWVzKCkuZW50ZXJUb0NsYXNzLnNwbGl0KFwiIFwiKTtcbiAgICAgIG9uQmVmb3JlRW50ZXIgJiYgb25CZWZvcmVFbnRlcihlbDIpO1xuICAgICAgZWwyLmNsYXNzTGlzdC5hZGQoLi4uZW50ZXJDbGFzc2VzKTtcbiAgICAgIGVsMi5jbGFzc0xpc3QuYWRkKC4uLmVudGVyQWN0aXZlQ2xhc3Nlcyk7XG4gICAgICBuZXh0RnJhbWUoKCkgPT4ge1xuICAgICAgICBlbDIuY2xhc3NMaXN0LnJlbW92ZSguLi5lbnRlckNsYXNzZXMpO1xuICAgICAgICBlbDIuY2xhc3NMaXN0LmFkZCguLi5lbnRlclRvQ2xhc3Nlcyk7XG4gICAgICAgIG9uRW50ZXIgJiYgb25FbnRlcihlbDIsICgpID0+IGVuZFRyYW5zaXRpb24oKSk7XG4gICAgICAgIGlmICghb25FbnRlciB8fCBvbkVudGVyLmxlbmd0aCA8IDIpIHtcbiAgICAgICAgICBlbDIuYWRkRXZlbnRMaXN0ZW5lcihcInRyYW5zaXRpb25lbmRcIiwgZW5kVHJhbnNpdGlvbik7XG4gICAgICAgICAgZWwyLmFkZEV2ZW50TGlzdGVuZXIoXCJhbmltYXRpb25lbmRcIiwgZW5kVHJhbnNpdGlvbik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgICBwcmV2ICYmICFwcm9wcy5tb2RlID8gc2V0MihlbDIpIDogc2V0MShlbDIpO1xuICB9XG4gIGZ1bmN0aW9uIGV4aXRUcmFuc2l0aW9uKGVsMiwgcHJldikge1xuICAgIGNvbnN0IGV4aXRDbGFzc2VzID0gY2xhc3NuYW1lcygpLmV4aXRDbGFzcy5zcGxpdChcIiBcIik7XG4gICAgY29uc3QgZXhpdEFjdGl2ZUNsYXNzZXMgPSBjbGFzc25hbWVzKCkuZXhpdEFjdGl2ZUNsYXNzLnNwbGl0KFwiIFwiKTtcbiAgICBjb25zdCBleGl0VG9DbGFzc2VzID0gY2xhc3NuYW1lcygpLmV4aXRUb0NsYXNzLnNwbGl0KFwiIFwiKTtcbiAgICBpZiAoIXByZXYucGFyZW50Tm9kZSlcbiAgICAgIHJldHVybiBlbmRUcmFuc2l0aW9uKCk7XG4gICAgb25CZWZvcmVFeGl0ICYmIG9uQmVmb3JlRXhpdChwcmV2KTtcbiAgICBwcmV2LmNsYXNzTGlzdC5hZGQoLi4uZXhpdENsYXNzZXMpO1xuICAgIHByZXYuY2xhc3NMaXN0LmFkZCguLi5leGl0QWN0aXZlQ2xhc3Nlcyk7XG4gICAgbmV4dEZyYW1lKCgpID0+IHtcbiAgICAgIHByZXYuY2xhc3NMaXN0LnJlbW92ZSguLi5leGl0Q2xhc3Nlcyk7XG4gICAgICBwcmV2LmNsYXNzTGlzdC5hZGQoLi4uZXhpdFRvQ2xhc3Nlcyk7XG4gICAgfSk7XG4gICAgb25FeGl0ICYmIG9uRXhpdChwcmV2LCAoKSA9PiBlbmRUcmFuc2l0aW9uKCkpO1xuICAgIGlmICghb25FeGl0IHx8IG9uRXhpdC5sZW5ndGggPCAyKSB7XG4gICAgICBwcmV2LmFkZEV2ZW50TGlzdGVuZXIoXCJ0cmFuc2l0aW9uZW5kXCIsIGVuZFRyYW5zaXRpb24pO1xuICAgICAgcHJldi5hZGRFdmVudExpc3RlbmVyKFwiYW5pbWF0aW9uZW5kXCIsIGVuZFRyYW5zaXRpb24pO1xuICAgIH1cbiAgICBmdW5jdGlvbiBlbmRUcmFuc2l0aW9uKGUyKSB7XG4gICAgICBpZiAoIWUyIHx8IGUyLnRhcmdldCA9PT0gcHJldikge1xuICAgICAgICBwcmV2LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0cmFuc2l0aW9uZW5kXCIsIGVuZFRyYW5zaXRpb24pO1xuICAgICAgICBwcmV2LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJhbmltYXRpb25lbmRcIiwgZW5kVHJhbnNpdGlvbik7XG4gICAgICAgIHByZXYuY2xhc3NMaXN0LnJlbW92ZSguLi5leGl0QWN0aXZlQ2xhc3Nlcyk7XG4gICAgICAgIHByZXYuY2xhc3NMaXN0LnJlbW92ZSguLi5leGl0VG9DbGFzc2VzKTtcbiAgICAgICAgczEoKSA9PT0gcHJldiAmJiBzZXQxKHZvaWQgMCk7XG4gICAgICAgIG9uQWZ0ZXJFeGl0ICYmIG9uQWZ0ZXJFeGl0KHByZXYpO1xuICAgICAgICBpZiAocHJvcHMubW9kZSA9PT0gXCJvdXRpblwiKVxuICAgICAgICAgIGVudGVyVHJhbnNpdGlvbihlbDIsIHByZXYpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBjcmVhdGVDb21wdXRlZCgocHJldikgPT4ge1xuICAgIGVsID0gcmVzb2x2ZWQoKTtcbiAgICB3aGlsZSAodHlwZW9mIGVsID09PSBcImZ1bmN0aW9uXCIpXG4gICAgICBlbCA9IGVsKCk7XG4gICAgcmV0dXJuIHVudHJhY2soKCkgPT4ge1xuICAgICAgaWYgKGVsICYmIGVsICE9PSBwcmV2KSB7XG4gICAgICAgIGlmIChwcm9wcy5tb2RlICE9PSBcIm91dGluXCIpXG4gICAgICAgICAgZW50ZXJUcmFuc2l0aW9uKGVsLCBwcmV2KTtcbiAgICAgICAgZWxzZSBpZiAoZmlyc3QpXG4gICAgICAgICAgc2V0MShlbCk7XG4gICAgICB9XG4gICAgICBpZiAocHJldiAmJiBwcmV2ICE9PSBlbCAmJiBwcm9wcy5tb2RlICE9PSBcImlub3V0XCIpXG4gICAgICAgIGV4aXRUcmFuc2l0aW9uKGVsLCBwcmV2KTtcbiAgICAgIGZpcnN0ID0gZmFsc2U7XG4gICAgICByZXR1cm4gZWw7XG4gICAgfSk7XG4gIH0pO1xuICByZXR1cm4gW3MxLCBzMl07XG59O1xuZnVuY3Rpb24gZ2V0UmVjdChlbGVtZW50KSB7XG4gIGNvbnN0IHtcbiAgICB0b3AsXG4gICAgYm90dG9tLFxuICAgIGxlZnQsXG4gICAgcmlnaHQsXG4gICAgd2lkdGgsXG4gICAgaGVpZ2h0XG4gIH0gPSBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICBjb25zdCBwYXJlbnRSZWN0ID0gZWxlbWVudC5wYXJlbnROb2RlLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICByZXR1cm4ge1xuICAgIHRvcDogdG9wIC0gcGFyZW50UmVjdC50b3AsXG4gICAgYm90dG9tLFxuICAgIGxlZnQ6IGxlZnQgLSBwYXJlbnRSZWN0LmxlZnQsXG4gICAgcmlnaHQsXG4gICAgd2lkdGgsXG4gICAgaGVpZ2h0XG4gIH07XG59XG5jb25zdCBUcmFuc2l0aW9uR3JvdXAgPSAocHJvcHMpID0+IHtcbiAgY29uc3QgcmVzb2x2ZWQgPSBjaGlsZHJlbigoKSA9PiBwcm9wcy5jaGlsZHJlbik7XG4gIGNvbnN0IGNsYXNzbmFtZXMgPSBjcmVhdGVNZW1vKCgpID0+IHtcbiAgICBjb25zdCBuYW1lID0gcHJvcHMubmFtZSB8fCBcInNcIjtcbiAgICByZXR1cm4ge1xuICAgICAgZW50ZXJBY3RpdmVDbGFzczogcHJvcHMuZW50ZXJBY3RpdmVDbGFzcyB8fCBuYW1lICsgXCItZW50ZXItYWN0aXZlXCIsXG4gICAgICBlbnRlckNsYXNzOiBwcm9wcy5lbnRlckNsYXNzIHx8IG5hbWUgKyBcIi1lbnRlclwiLFxuICAgICAgZW50ZXJUb0NsYXNzOiBwcm9wcy5lbnRlclRvQ2xhc3MgfHwgbmFtZSArIFwiLWVudGVyLXRvXCIsXG4gICAgICBleGl0QWN0aXZlQ2xhc3M6IHByb3BzLmV4aXRBY3RpdmVDbGFzcyB8fCBuYW1lICsgXCItZXhpdC1hY3RpdmVcIixcbiAgICAgIGV4aXRDbGFzczogcHJvcHMuZXhpdENsYXNzIHx8IG5hbWUgKyBcIi1leGl0XCIsXG4gICAgICBleGl0VG9DbGFzczogcHJvcHMuZXhpdFRvQ2xhc3MgfHwgbmFtZSArIFwiLWV4aXQtdG9cIixcbiAgICAgIG1vdmVDbGFzczogcHJvcHMubW92ZUNsYXNzIHx8IG5hbWUgKyBcIi1tb3ZlXCJcbiAgICB9O1xuICB9KTtcbiAgY29uc3Qge1xuICAgIG9uQmVmb3JlRW50ZXIsXG4gICAgb25FbnRlcixcbiAgICBvbkFmdGVyRW50ZXIsXG4gICAgb25CZWZvcmVFeGl0LFxuICAgIG9uRXhpdCxcbiAgICBvbkFmdGVyRXhpdFxuICB9ID0gcHJvcHM7XG4gIGNvbnN0IFtjb21iaW5lZCwgc2V0Q29tYmluZWRdID0gY3JlYXRlU2lnbmFsKCk7XG4gIGxldCBwMiA9IFtdO1xuICBsZXQgZmlyc3QgPSB0cnVlO1xuICBjcmVhdGVDb21wdXRlZCgoKSA9PiB7XG4gICAgY29uc3QgYzIgPSByZXNvbHZlZCgpO1xuICAgIGNvbnN0IGNvbWIgPSBbLi4uYzJdO1xuICAgIGNvbnN0IG5leHQgPSBuZXcgU2V0KGMyKTtcbiAgICBjb25zdCBwcmV2ID0gbmV3IFNldChwMik7XG4gICAgY29uc3QgZW50ZXJDbGFzc2VzID0gY2xhc3NuYW1lcygpLmVudGVyQ2xhc3Muc3BsaXQoXCIgXCIpO1xuICAgIGNvbnN0IGVudGVyQWN0aXZlQ2xhc3NlcyA9IGNsYXNzbmFtZXMoKS5lbnRlckFjdGl2ZUNsYXNzLnNwbGl0KFwiIFwiKTtcbiAgICBjb25zdCBlbnRlclRvQ2xhc3NlcyA9IGNsYXNzbmFtZXMoKS5lbnRlclRvQ2xhc3Muc3BsaXQoXCIgXCIpO1xuICAgIGNvbnN0IGV4aXRDbGFzc2VzID0gY2xhc3NuYW1lcygpLmV4aXRDbGFzcy5zcGxpdChcIiBcIik7XG4gICAgY29uc3QgZXhpdEFjdGl2ZUNsYXNzZXMgPSBjbGFzc25hbWVzKCkuZXhpdEFjdGl2ZUNsYXNzLnNwbGl0KFwiIFwiKTtcbiAgICBjb25zdCBleGl0VG9DbGFzc2VzID0gY2xhc3NuYW1lcygpLmV4aXRUb0NsYXNzLnNwbGl0KFwiIFwiKTtcbiAgICBmb3IgKGxldCBpMiA9IDA7IGkyIDwgYzIubGVuZ3RoOyBpMisrKSB7XG4gICAgICBjb25zdCBlbCA9IGMyW2kyXTtcbiAgICAgIGlmICghZmlyc3QgJiYgIXByZXYuaGFzKGVsKSkge1xuICAgICAgICBsZXQgZW5kVHJhbnNpdGlvbiA9IGZ1bmN0aW9uKGUyKSB7XG4gICAgICAgICAgaWYgKGVsICYmICghZTIgfHwgZTIudGFyZ2V0ID09PSBlbCkpIHtcbiAgICAgICAgICAgIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0cmFuc2l0aW9uZW5kXCIsIGVuZFRyYW5zaXRpb24pO1xuICAgICAgICAgICAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImFuaW1hdGlvbmVuZFwiLCBlbmRUcmFuc2l0aW9uKTtcbiAgICAgICAgICAgIGVsLmNsYXNzTGlzdC5yZW1vdmUoLi4uZW50ZXJBY3RpdmVDbGFzc2VzKTtcbiAgICAgICAgICAgIGVsLmNsYXNzTGlzdC5yZW1vdmUoLi4uZW50ZXJUb0NsYXNzZXMpO1xuICAgICAgICAgICAgb25BZnRlckVudGVyICYmIG9uQWZ0ZXJFbnRlcihlbCk7XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBvbkJlZm9yZUVudGVyICYmIG9uQmVmb3JlRW50ZXIoZWwpO1xuICAgICAgICBlbC5jbGFzc0xpc3QuYWRkKC4uLmVudGVyQ2xhc3Nlcyk7XG4gICAgICAgIGVsLmNsYXNzTGlzdC5hZGQoLi4uZW50ZXJBY3RpdmVDbGFzc2VzKTtcbiAgICAgICAgbmV4dEZyYW1lKCgpID0+IHtcbiAgICAgICAgICBlbC5jbGFzc0xpc3QucmVtb3ZlKC4uLmVudGVyQ2xhc3Nlcyk7XG4gICAgICAgICAgZWwuY2xhc3NMaXN0LmFkZCguLi5lbnRlclRvQ2xhc3Nlcyk7XG4gICAgICAgICAgb25FbnRlciAmJiBvbkVudGVyKGVsLCAoKSA9PiBlbmRUcmFuc2l0aW9uKCkpO1xuICAgICAgICAgIGlmICghb25FbnRlciB8fCBvbkVudGVyLmxlbmd0aCA8IDIpIHtcbiAgICAgICAgICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIoXCJ0cmFuc2l0aW9uZW5kXCIsIGVuZFRyYW5zaXRpb24pO1xuICAgICAgICAgICAgZWwuYWRkRXZlbnRMaXN0ZW5lcihcImFuaW1hdGlvbmVuZFwiLCBlbmRUcmFuc2l0aW9uKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKGxldCBpMiA9IDA7IGkyIDwgcDIubGVuZ3RoOyBpMisrKSB7XG4gICAgICBjb25zdCBvbGQgPSBwMltpMl07XG4gICAgICBpZiAoIW5leHQuaGFzKG9sZCkgJiYgb2xkLnBhcmVudE5vZGUpIHtcbiAgICAgICAgbGV0IGVuZFRyYW5zaXRpb24gPSBmdW5jdGlvbihlMikge1xuICAgICAgICAgIGlmICghZTIgfHwgZTIudGFyZ2V0ID09PSBvbGQpIHtcbiAgICAgICAgICAgIG9sZC5yZW1vdmVFdmVudExpc3RlbmVyKFwidHJhbnNpdGlvbmVuZFwiLCBlbmRUcmFuc2l0aW9uKTtcbiAgICAgICAgICAgIG9sZC5yZW1vdmVFdmVudExpc3RlbmVyKFwiYW5pbWF0aW9uZW5kXCIsIGVuZFRyYW5zaXRpb24pO1xuICAgICAgICAgICAgb2xkLmNsYXNzTGlzdC5yZW1vdmUoLi4uZXhpdEFjdGl2ZUNsYXNzZXMpO1xuICAgICAgICAgICAgb2xkLmNsYXNzTGlzdC5yZW1vdmUoLi4uZXhpdFRvQ2xhc3Nlcyk7XG4gICAgICAgICAgICBvbkFmdGVyRXhpdCAmJiBvbkFmdGVyRXhpdChvbGQpO1xuICAgICAgICAgICAgcDIgPSBwMi5maWx0ZXIoKGkzKSA9PiBpMyAhPT0gb2xkKTtcbiAgICAgICAgICAgIHNldENvbWJpbmVkKHAyKTtcbiAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIGNvbWIuc3BsaWNlKGkyLCAwLCBvbGQpO1xuICAgICAgICBvbkJlZm9yZUV4aXQgJiYgb25CZWZvcmVFeGl0KG9sZCk7XG4gICAgICAgIG9sZC5jbGFzc0xpc3QuYWRkKC4uLmV4aXRDbGFzc2VzKTtcbiAgICAgICAgb2xkLmNsYXNzTGlzdC5hZGQoLi4uZXhpdEFjdGl2ZUNsYXNzZXMpO1xuICAgICAgICBuZXh0RnJhbWUoKCkgPT4ge1xuICAgICAgICAgIG9sZC5jbGFzc0xpc3QucmVtb3ZlKC4uLmV4aXRDbGFzc2VzKTtcbiAgICAgICAgICBvbGQuY2xhc3NMaXN0LmFkZCguLi5leGl0VG9DbGFzc2VzKTtcbiAgICAgICAgfSk7XG4gICAgICAgIG9uRXhpdCAmJiBvbkV4aXQob2xkLCAoKSA9PiBlbmRUcmFuc2l0aW9uKCkpO1xuICAgICAgICBpZiAoIW9uRXhpdCB8fCBvbkV4aXQubGVuZ3RoIDwgMikge1xuICAgICAgICAgIG9sZC5hZGRFdmVudExpc3RlbmVyKFwidHJhbnNpdGlvbmVuZFwiLCBlbmRUcmFuc2l0aW9uKTtcbiAgICAgICAgICBvbGQuYWRkRXZlbnRMaXN0ZW5lcihcImFuaW1hdGlvbmVuZFwiLCBlbmRUcmFuc2l0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBwMiA9IGNvbWI7XG4gICAgc2V0Q29tYmluZWQoY29tYik7XG4gIH0pO1xuICBjcmVhdGVFZmZlY3QoKG5vZGVzKSA9PiB7XG4gICAgY29uc3QgYzIgPSBjb21iaW5lZCgpO1xuICAgIGMyLmZvckVhY2goKGNoaWxkKSA9PiB7XG4gICAgICBsZXQgbjI7XG4gICAgICBpZiAoIShuMiA9IG5vZGVzLmdldChjaGlsZCkpKSB7XG4gICAgICAgIG5vZGVzLnNldChjaGlsZCwgbjIgPSB7XG4gICAgICAgICAgcG9zOiBnZXRSZWN0KGNoaWxkKSxcbiAgICAgICAgICBuZXc6ICFmaXJzdFxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSBpZiAobjIubmV3KSB7XG4gICAgICAgIG4yLm5ldyA9IGZhbHNlO1xuICAgICAgICBuMi5uZXdQb3MgPSBnZXRSZWN0KGNoaWxkKTtcbiAgICAgIH1cbiAgICAgIGlmIChuMi5uZXcpIHtcbiAgICAgICAgY2hpbGQuYWRkRXZlbnRMaXN0ZW5lcihcInRyYW5zaXRpb25lbmRcIiwgKCkgPT4ge1xuICAgICAgICAgIG4yLm5ldyA9IGZhbHNlO1xuICAgICAgICAgIGNoaWxkLnBhcmVudE5vZGUgJiYgKG4yLm5ld1BvcyA9IGdldFJlY3QoY2hpbGQpKTtcbiAgICAgICAgfSwge1xuICAgICAgICAgIG9uY2U6IHRydWVcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBuMi5uZXdQb3MgJiYgKG4yLnBvcyA9IG4yLm5ld1Bvcyk7XG4gICAgICBuMi5uZXdQb3MgPSBnZXRSZWN0KGNoaWxkKTtcbiAgICB9KTtcbiAgICBpZiAoZmlyc3QpIHtcbiAgICAgIGZpcnN0ID0gZmFsc2U7XG4gICAgICByZXR1cm4gbm9kZXM7XG4gICAgfVxuICAgIGMyLmZvckVhY2goKGNoaWxkKSA9PiB7XG4gICAgICBjb25zdCBjMyA9IG5vZGVzLmdldChjaGlsZCk7XG4gICAgICBjb25zdCBvbGRQb3MgPSBjMy5wb3M7XG4gICAgICBjb25zdCBuZXdQb3MgPSBjMy5uZXdQb3M7XG4gICAgICBjb25zdCBkeCA9IG9sZFBvcy5sZWZ0IC0gbmV3UG9zLmxlZnQ7XG4gICAgICBjb25zdCBkeSA9IG9sZFBvcy50b3AgLSBuZXdQb3MudG9wO1xuICAgICAgaWYgKGR4IHx8IGR5KSB7XG4gICAgICAgIGMzLm1vdmVkID0gdHJ1ZTtcbiAgICAgICAgY29uc3QgczIgPSBjaGlsZC5zdHlsZTtcbiAgICAgICAgczIudHJhbnNmb3JtID0gYHRyYW5zbGF0ZSgke2R4fXB4LCR7ZHl9cHgpYDtcbiAgICAgICAgczIudHJhbnNpdGlvbkR1cmF0aW9uID0gXCIwc1wiO1xuICAgICAgfVxuICAgIH0pO1xuICAgIGRvY3VtZW50LmJvZHkub2Zmc2V0SGVpZ2h0O1xuICAgIGMyLmZvckVhY2goKGNoaWxkKSA9PiB7XG4gICAgICBjb25zdCBjMyA9IG5vZGVzLmdldChjaGlsZCk7XG4gICAgICBpZiAoYzMubW92ZWQpIHtcbiAgICAgICAgbGV0IGVuZFRyYW5zaXRpb24gPSBmdW5jdGlvbihlMikge1xuICAgICAgICAgIGlmIChlMiAmJiBlMi50YXJnZXQgIT09IGNoaWxkIHx8ICFjaGlsZC5wYXJlbnROb2RlKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIGlmICghZTIgfHwgL3RyYW5zZm9ybSQvLnRlc3QoZTIucHJvcGVydHlOYW1lKSkge1xuICAgICAgICAgICAgY2hpbGQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRyYW5zaXRpb25lbmRcIiwgZW5kVHJhbnNpdGlvbik7XG4gICAgICAgICAgICBjaGlsZC5jbGFzc0xpc3QucmVtb3ZlKC4uLm1vdmVDbGFzc2VzKTtcbiAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIGMzLm1vdmVkID0gZmFsc2U7XG4gICAgICAgIGNvbnN0IHMyID0gY2hpbGQuc3R5bGU7XG4gICAgICAgIGNvbnN0IG1vdmVDbGFzc2VzID0gY2xhc3NuYW1lcygpLm1vdmVDbGFzcy5zcGxpdChcIiBcIik7XG4gICAgICAgIGNoaWxkLmNsYXNzTGlzdC5hZGQoLi4ubW92ZUNsYXNzZXMpO1xuICAgICAgICBzMi50cmFuc2Zvcm0gPSBzMi50cmFuc2l0aW9uRHVyYXRpb24gPSBcIlwiO1xuICAgICAgICBjaGlsZC5hZGRFdmVudExpc3RlbmVyKFwidHJhbnNpdGlvbmVuZFwiLCBlbmRUcmFuc2l0aW9uKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gbm9kZXM7XG4gIH0sIC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCkpO1xuICByZXR1cm4gY29tYmluZWQ7XG59O1xuZnVuY3Rpb24gY2xpY2tPdXRzaWRlJDEoZWwsIGFjY2Vzc29yKSB7XG4gIGNvbnN0IG9uQ2xpY2sgPSAoZTIpID0+IHtcbiAgICB2YXIgX2EyO1xuICAgIHJldHVybiAhZWwuY29udGFpbnMoZTIudGFyZ2V0KSAmJiAoKF9hMiA9IGFjY2Vzc29yKCkpID09IG51bGwgPyB2b2lkIDAgOiBfYTIoKSk7XG4gIH07XG4gIGRvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIG9uQ2xpY2spO1xuICBvbkNsZWFudXAoKCkgPT4gZG9jdW1lbnQuYm9keS5yZW1vdmVFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgb25DbGljaykpO1xufVxuZnVuY3Rpb24gZXNjUHJlc3NlZChfLCBhY2Nlc3Nvcikge1xuICBjb25zdCBvbktleVByZXNzID0gKGUyKSA9PiB7XG4gICAgdmFyIF9hMiwgX2IyO1xuICAgIGlmIChlMi5rZXkgPT09IFwiRXNjYXBlXCIpIHtcbiAgICAgIChfYTIgPSBkb2N1bWVudC5hY3RpdmVFbGVtZW50KSA9PSBudWxsID8gdm9pZCAwIDogX2EyLmJsdXIoKTtcbiAgICAgIChfYjIgPSBhY2Nlc3NvcigpKSA9PSBudWxsID8gdm9pZCAwIDogX2IyKCk7XG4gICAgfVxuICB9O1xuICBkb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIG9uS2V5UHJlc3MpO1xuICBvbkNsZWFudXAoKCkgPT4gZG9jdW1lbnQuYm9keS5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCBvbktleVByZXNzKSk7XG59XG5mdW5jdGlvbiBhbmRyb2lkQmFja0hhbmRsZXIkMShfLCBjb25maWcpIHtcbiAgY29uc3Qge1xuICAgIGlzRW5hYmxlZCxcbiAgICBvbkNsb3NlXG4gIH0gPSBjb25maWcoKTtcbiAgaWYgKCFpc0VuYWJsZWQpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgY29uc3QgdXNlck9TSXNBbmRyb2lkID0gZ2V0VXNlckFnZW50KCkub3MgPT09IFwiYW5kcm9pZFwiO1xuICBpZiAoIXVzZXJPU0lzQW5kcm9pZCkge1xuICAgIHJldHVybjtcbiAgfVxuICB3aW5kb3cuaGlzdG9yeS5wdXNoU3RhdGUoUk9VVEVfU1RBVEUsIFwiXCIpO1xuICBjb25zdCBwb3BzdGF0ZUhhbmRsZXIgPSAoZXZlbnQpID0+IHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIG9uQ2xvc2UoKTtcbiAgfTtcbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJwb3BzdGF0ZVwiLCBwb3BzdGF0ZUhhbmRsZXIsIHtcbiAgICBvbmNlOiB0cnVlXG4gIH0pO1xuICBvbkNsZWFudXAoKCkgPT4ge1xuICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwicG9wc3RhdGVcIiwgcG9wc3RhdGVIYW5kbGVyKTtcbiAgICBjcmVhdGVNYWNyb3Rhc2soKCkgPT4ge1xuICAgICAgdmFyIF9hMjtcbiAgICAgIGlmICgoKF9hMiA9IHdpbmRvdy5oaXN0b3J5LnN0YXRlKSA9PSBudWxsID8gdm9pZCAwIDogX2EyW1JPVVRFX1NUQVRFX0tFWV0pID09PSB0cnVlKSB7XG4gICAgICAgIHdpbmRvdy5oaXN0b3J5LmJhY2soKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSk7XG59XG5jb25zdCBST1VURV9TVEFURV9LRVkgPSBcImFuZHJvaWRCYWNrSGFuZGxlclwiO1xuY29uc3QgUk9VVEVfU1RBVEUgPSB7XG4gIFtST1VURV9TVEFURV9LRVldOiB0cnVlXG59O1xuY29uc3QgX3RtcGwkJHYgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2Zz48cGF0aCBmaWxsLXJ1bGU9XCJldmVub2RkXCIgY2xpcC1ydWxlPVwiZXZlbm9kZFwiIGQ9XCJNMTAuMjEyMiAxNC4zNDA3QzEwLjUzODQgMTQuMDg1NCAxMC41OTU5IDEzLjYxNCAxMC4zNDA2IDEzLjI4NzhMNi4yMDIzNyA4LjAwMDAzTDEwLjM0MDYgMi43MTIyN0MxMC41OTU5IDIuMzg2MDcgMTAuNTM4NCAxLjkxNDY5IDEwLjIxMjIgMS42NTk0QzkuODg2MDQgMS40MDQxMiA5LjQxNDY1IDEuNDYxNjEgOS4xNTkzNyAxLjc4NzhMNC42NTkzNyA3LjUzNzhDNC40NDY4OCA3LjgwOTMyIDQuNDQ2ODggOC4xOTA3NCA0LjY1OTM3IDguNDYyMjZMOS4xNTkzNyAxNC4yMTIzQzkuNDE0NjUgMTQuNTM4NSA5Ljg4NjA0IDE0LjU5NTkgMTAuMjEyMiAxNC4zNDA3WlwiPjwvcGF0aD48L3N2Zz5gLCA0LCB0cnVlKTtcbmNvbnN0IHJvdGF0aW9uRGVncmVlcyA9IHtcbiAgbGVmdDogMCxcbiAgdG9wOiA5MCxcbiAgcmlnaHQ6IDE4MCxcbiAgYm90dG9tOiAyNzBcbn07XG5jb25zdCBBcnJvd0ljb24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBmaWxsID0gKCkgPT4gcHJvcHMuZmlsbCB8fCB0aGVtZS5jb2xvcnMuaWNvbi5zZWNvbmRhcnk7XG4gIGNvbnN0IGRpcmVjdGlvbiA9ICgpID0+IHByb3BzLmRpcmVjdGlvbiB8fCBcImxlZnRcIjtcbiAgY29uc3QgU3ZnID0gc3R5bGVkKFwic3ZnXCIpYFxuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgkeyhwcm9wczIpID0+IHJvdGF0aW9uRGVncmVlc1twcm9wczIuc3ZnRGlyZWN0aW9uXX1kZWcpO1xuICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4xcyBlYXNlLWluLW91dDtcbiAgICBgO1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFN2Zywge1xuICAgIHhtbG5zOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsXG4gICAgd2lkdGg6IFwiMTZcIixcbiAgICBoZWlnaHQ6IFwiMTZcIixcbiAgICB2aWV3Qm94OiBcIjAgMCAxNiAxNlwiLFxuICAgIGZpbGw6IFwibm9uZVwiLFxuICAgIGdldCBzdmdEaXJlY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZGlyZWN0aW9uKCk7XG4gICAgfSxcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICBjb25zdCBfZWwkID0gX3RtcGwkJHYuY2xvbmVOb2RlKHRydWUpO1xuICAgICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IHNldEF0dHJpYnV0ZShfZWwkLCBcImZpbGxcIiwgZmlsbCgpKSk7XG4gICAgICByZXR1cm4gX2VsJDtcbiAgICB9XG4gIH0pO1xufTtcbmNvbnN0IF90bXBsJCR1ID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHdpZHRoPVwiMTZcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiBmaWxsPVwibm9uZVwiPjxwYXRoIGZpbGwtcnVsZT1cImV2ZW5vZGRcIiBjbGlwLXJ1bGU9XCJldmVub2RkXCIgZD1cIk0yLjcxOTY2IDIuNzE5NjhDMy4wMTI1NSAyLjQyNjc4IDMuNDg3NDMgMi40MjY3NyAzLjc4MDMyIDIuNzE5NjZMOC4wMDAwMiA2LjkzOTI1TDEyLjIxOTcgMi43MTk2N0MxMi41MTI2IDIuNDI2NzcgMTIuOTg3NCAyLjQyNjc4IDEzLjI4MDMgMi43MTk2N0MxMy41NzMyIDMuMDEyNTcgMTMuNTczMiAzLjQ4NzQ0IDEzLjI4MDMgMy43ODAzM0w5LjA2MDY4IDcuOTk5OTFMMTMuMjgwMyAxMi4yMTk3QzEzLjU3MzIgMTIuNTEyNiAxMy41NzMyIDEyLjk4NzQgMTMuMjgwMyAxMy4yODAzQzEyLjk4NzQgMTMuNTczMiAxMi41MTI2IDEzLjU3MzIgMTIuMjE5NyAxMy4yODAzTDguMDAwMDIgOS4wNjA1N0wzLjc4MDMzIDEzLjI4MDNDMy40ODc0NCAxMy41NzMyIDMuMDEyNTcgMTMuNTczMiAyLjcxOTY3IDEzLjI4MDNDMi40MjY3OCAxMi45ODc0IDIuNDI2NzcgMTIuNTEyNiAyLjcxOTY3IDEyLjIxOTdMNi45MzkzNiA3Ljk5OTkxTDIuNzE5NjggMy43ODAzNEMyLjQyNjc4IDMuNDg3NDUgMi40MjY3NyAzLjAxMjU3IDIuNzE5NjYgMi43MTk2OFpcIj48L3BhdGg+PC9zdmc+YCk7XG5jb25zdCBDbG9zZUljb24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBmaWxsID0gKCkgPT4gcHJvcHMuZmlsbCB8fCB0aGVtZS5jb2xvcnMuaWNvbi5zZWNvbmRhcnk7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkdS5jbG9uZU5vZGUodHJ1ZSksIF9lbCQyID0gX2VsJC5maXJzdENoaWxkO1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoKSA9PiBzZXRBdHRyaWJ1dGUoX2VsJDIsIFwiZmlsbFwiLCBmaWxsKCkpKTtcbiAgICByZXR1cm4gX2VsJDtcbiAgfSkoKTtcbn07XG5jb25zdCBJY29uQnV0dG9uU3R5bGVkID0gc3R5bGVkLmJ1dHRvbmBcbiAgICBwYWRkaW5nOiAwO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB3aWR0aDogMzJweDtcbiAgICBoZWlnaHQ6IDMycHg7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZC50aW50fTtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMTI1cyBlYXNlLWluLW91dDtcblxuICAgICR7bWVkaWFOb3RUb3VjaH0ge1xuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wNCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmOmFjdGl2ZSB7XG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMC45Nik7XG4gICAgfVxuXG4gICAgJHttZWRpYVRvdWNofSB7XG4gICAgICAgICY6YWN0aXZlIHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMC45Mik7XG4gICAgICAgIH1cbiAgICB9XG5gO1xuY29uc3QgSWNvbkJ1dHRvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCBkYXRhQXR0cnMgPSB1c2VEYXRhQXR0cmlidXRlcyhwcm9wcyk7XG4gIGNvbnN0IGljb24gPSAoKSA9PiBwcm9wcy5pY29uIHx8IFwiY2xvc2VcIjtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChJY29uQnV0dG9uU3R5bGVkLCBtZXJnZVByb3BzKHtcbiAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2xhc3M7XG4gICAgfSxcbiAgICBvbkNsaWNrOiAoKSA9PiBwcm9wcy5vbkNsaWNrKCksXG4gICAgXCJkYXRhLXRjLWljb24tYnV0dG9uXCI6IFwidHJ1ZVwiXG4gIH0sIGRhdGFBdHRycywge1xuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgcmV0dXJuICEhcHJvcHMuY2hpbGRyZW47XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gcHJvcHMuY2hpbGRyZW47XG4gICAgICAgIH1cbiAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICByZXR1cm4gIXByb3BzLmNoaWxkcmVuO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChTd2l0Y2gsIHtcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoTWF0Y2gsIHtcbiAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBpY29uKCkgPT09IFwiY2xvc2VcIjtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQ2xvc2VJY29uLCB7XG4gICAgICAgICAgICAgICAgICAgIGdldCBmaWxsKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9wcy5maWxsO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoTWF0Y2gsIHtcbiAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBpY29uKCkgPT09IFwiYXJyb3dcIjtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQXJyb3dJY29uLCB7XG4gICAgICAgICAgICAgICAgICAgIGdldCBmaWxsKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9wcy5maWxsO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoTWF0Y2gsIHtcbiAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBpY29uKCkgPT09IFwicXVlc3Rpb25cIjtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoUXVlc3Rpb25JY29uLCB7XG4gICAgICAgICAgICAgICAgICAgIGdldCBmaWxsKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9wcy5maWxsO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoTWF0Y2gsIHtcbiAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiB0eXBlb2YgaWNvbigpICE9PSBcInN0cmluZ1wiO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGljb24oKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSldO1xuICAgIH1cbiAgfSkpO1xufTtcbmNvbnN0IGJvcmRlcnMkNSA9IHtcbiAgbTogXCIyNHB4XCIsXG4gIHM6IFwiMTZweFwiLFxuICBub25lOiBcIjBcIlxufTtcbmNvbnN0IE1vZGFsQmFja2dyb3VuZFN0eWxlZCA9IHN0eWxlZC5kaXZgXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgei1pbmRleDogMTAwMDtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjQpO1xuICAgIHBhZGRpbmc6IDIwcHggMDtcbiAgICBvdmVyZmxvdy15OiBhdXRvO1xuXG4gICAgJHttZWRpYShcIm1vYmlsZVwiKX0ge1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgICB9XG5gO1xuY29uc3QgTW9kYWxXcmFwcGVyQ2xhc3MgPSB1YFxuICAgIGJveC1zaGFkb3c6IDAgNHB4IDE2cHggcmdiYSgwLCAwLCAwLCAwLjA4KSwgMCAxNnB4IDY0cHggcmdiYSgwLCAwLCAwLCAwLjE2KTtcbiAgICB3aWR0aDogZml0LWNvbnRlbnQ7XG4gICAgbWFyZ2luOiBhdXRvO1xuXG4gICAgJHttZWRpYShcIm1vYmlsZVwiKX0ge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiBmaXQtY29udGVudDtcbiAgICAgICAgbWFyZ2luOiBhdXRvIDAgMCAwO1xuICAgIH1cbmA7XG5jb25zdCBNb2RhbEJvZHlTdHlsZWQgPSBzdHlsZWQuZGl2YFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBtaW4taGVpZ2h0OiAxMDBweDtcbiAgICB3aWR0aDogNDE2cHg7XG4gICAgcGFkZGluZzogNDRweCA1NnB4IDI0cHg7XG5cbiAgICBib3gtc2hhZG93OiAwIDJweCA4cHggMCByZ2JhKDAsIDAsIDAsIDAuMDQpO1xuXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kLnByaW1hcnl9O1xuICAgIGJvcmRlci1yYWRpdXM6ICR7KHByb3BzKSA9PiBib3JkZXJzJDVbcHJvcHMudGhlbWUuYm9yZGVyUmFkaXVzXX07XG5cbiAgICAke21lZGlhKFwibW9iaWxlXCIpfSB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cbmA7XG5jb25zdCBDbG9zZUJ1dHRvblN0eWxlZCA9IHN0eWxlZChJY29uQnV0dG9uKWBcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IDE2cHg7XG4gICAgdG9wOiAxNnB4O1xuYDtcbmNvbnN0IE1vZGFsRm9vdGVyU3R5bGVkID0gc3R5bGVkLmRpdmBcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBhZGRpbmc6IDE2cHggMTZweCAxNnB4IDE4cHg7XG4gICAgYm9yZGVyLXJhZGl1czogMCAwICR7KHByb3BzKSA9PiBib3JkZXJzJDVbcHJvcHMudGhlbWUuYm9yZGVyUmFkaXVzXX1cbiAgICAgICAgJHsocHJvcHMpID0+IGJvcmRlcnMkNVtwcm9wcy50aGVtZS5ib3JkZXJSYWRpdXNdfTtcbmA7XG5jb25zdCBRdWVzdGlvbkJ1dHRvblN0eWxlZCA9IHN0eWxlZChJY29uQnV0dG9uKWBcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gcmdiYShwcm9wcy50aGVtZS5jb2xvcnMuaWNvbi5zZWNvbmRhcnksIDAuMTIpfTtcbmA7XG5jbGFzcyBBbmltYXRpb25UaW1lbGluZU5vb3Age1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiY3VycmVudFRpbWVcIiwgMCk7XG4gIH1cbn1cbmNvbnN0IF9BbmltYXRpb25Ob29wID0gY2xhc3Mge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiY3VycmVudFRpbWVcIiwgMCk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInBsYXliYWNrUmF0ZVwiLCAxKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic3RhcnRUaW1lXCIsIG51bGwpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJ0aW1lbGluZVwiLCBuZXcgQW5pbWF0aW9uVGltZWxpbmVOb29wKCkpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJmaW5pc2hlZFwiLCBQcm9taXNlLnJlc29sdmUodGhpcykpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJlZmZlY3RcIiwgbnVsbCk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImlkXCIsIFwiXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJwZW5kaW5nXCIsIGZhbHNlKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwicGxheVN0YXRlXCIsIFwiZmluaXNoZWRcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInJlcGxhY2VTdGF0ZVwiLCBcImFjdGl2ZVwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwicmVhZHlcIiwgUHJvbWlzZS5yZXNvbHZlKHRoaXMpKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwib25jYW5jZWxcIiwgbnVsbCk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcIm9uZmluaXNoXCIsIG51bGwpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJvbnJlbW92ZVwiLCBudWxsKTtcbiAgfVxuICBzdGF0aWMgY3JlYXRlKCkge1xuICAgIGlmICghX0FuaW1hdGlvbk5vb3AuX2luc3RhbmNlKSB7XG4gICAgICBsb2dXYXJuaW5nKFxuICAgICAgICBcIkFuaW1hdGlvbiBpcyBub3Qgc3VwcG9ydGVkIGluIHRoaXMgZW52aXJvbm1lbnQ6IHBsZWFzZSBjb25zaWRlciB1c2luZyB0aGUgYHdlYi1hbmltYXRpb25zLWpzYCBwb2x5ZmlsbCB0byBwcm92aWRlIGEgZmFsbGJhY2sgaW1wbGVtZW50YXRpb24gb2YgdGhlIFdlYiBBbmltYXRpb25zIEFQSS5cIlxuICAgICAgKTtcbiAgICAgIF9BbmltYXRpb25Ob29wLl9pbnN0YW5jZSA9IG5ldyBfQW5pbWF0aW9uTm9vcCgpO1xuICAgIH1cbiAgICByZXR1cm4gX0FuaW1hdGlvbk5vb3AuX2luc3RhbmNlO1xuICB9XG4gIGNhbmNlbCgpIHtcbiAgfVxuICBmaW5pc2goKSB7XG4gIH1cbiAgcGF1c2UoKSB7XG4gIH1cbiAgcGxheSgpIHtcbiAgfVxuICByZXZlcnNlKCkge1xuICB9XG4gIGFkZEV2ZW50TGlzdGVuZXIoX3R5cGUsIF9saXN0ZW5lciwgX29wdGlvbnMpIHtcbiAgfVxuICBkaXNwYXRjaEV2ZW50KF9ldmVudCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICByZW1vdmVFdmVudExpc3RlbmVyKF90eXBlLCBfY2FsbGJhY2ssIF9vcHRpb25zKSB7XG4gIH1cbiAgdXBkYXRlUGxheWJhY2tSYXRlKF9wbGF5YmFja1JhdGUpIHtcbiAgfVxuICBjb21taXRTdHlsZXMoKSB7XG4gIH1cbiAgcGVyc2lzdCgpIHtcbiAgfVxufTtcbmxldCBBbmltYXRpb25Ob29wID0gX0FuaW1hdGlvbk5vb3A7XG5fX3B1YmxpY0ZpZWxkKEFuaW1hdGlvbk5vb3AsIFwiX2luc3RhbmNlXCIsIG51bGwpO1xuZnVuY3Rpb24gYW5pbWF0ZShlbGVtZW50LCBrZXlmcmFtZXMsIG9wdGlvbnMpIHtcbiAgaWYgKFwiYW5pbWF0ZVwiIGluIGVsZW1lbnQpIHtcbiAgICByZXR1cm4gZWxlbWVudC5hbmltYXRlKGtleWZyYW1lcywgb3B0aW9ucyk7XG4gIH1cbiAgcmV0dXJuIEFuaW1hdGlvbk5vb3AuY3JlYXRlKCk7XG59XG5jb25zdCBfdG1wbCQkdCA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8ZGl2PjwvZGl2PmApO1xuY29uc3QgY2xpY2tPdXRzaWRlID0gY2xpY2tPdXRzaWRlJDE7XG5jb25zdCBrZXlQcmVzc2VkID0gZXNjUHJlc3NlZDtcbmNvbnN0IGFuZHJvaWRCYWNrSGFuZGxlciA9IGFuZHJvaWRCYWNrSGFuZGxlciQxO1xuY29uc3QgTW9kYWwgPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBkYXRhQXR0cnMgPSB1c2VEYXRhQXR0cmlidXRlcyhwcm9wcyk7XG4gIGNyZWF0ZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKHByb3BzLm9wZW5lZCkge1xuICAgICAgZGlzYWJsZVNjcm9sbCgpO1xuICAgIH0gZWxzZSB7XG4gICAgICBlbmFibGVTY3JvbGwoKTtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRyYW5zaXRpb24sIHtcbiAgICBvbkJlZm9yZUVudGVyOiAoZWwpID0+IHtcbiAgICAgIGNvbnN0IGR1cmF0aW9uID0gaXNEZXZpY2UoXCJtb2JpbGVcIikgPyAyMDAgOiAxMDA7XG4gICAgICBhbmltYXRlKGVsLCBbe1xuICAgICAgICBvcGFjaXR5OiAwXG4gICAgICB9LCB7XG4gICAgICAgIG9wYWNpdHk6IDFcbiAgICAgIH1dLCB7XG4gICAgICAgIGR1cmF0aW9uXG4gICAgICB9KTtcbiAgICAgIGlmIChpc0RldmljZShcIm1vYmlsZVwiKSkge1xuICAgICAgICBhbmltYXRlKGVsLmZpcnN0RWxlbWVudENoaWxkLCBbe1xuICAgICAgICAgIHRyYW5zZm9ybTogXCJ0cmFuc2xhdGVZKDM5MHB4KVwiXG4gICAgICAgIH0sIHtcbiAgICAgICAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlWSgwKVwiXG4gICAgICAgIH1dLCB7XG4gICAgICAgICAgZHVyYXRpb25cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBvbkV4aXQ6IChlbCwgZG9uZSkgPT4ge1xuICAgICAgY29uc3QgZHVyYXRpb24gPSBpc0RldmljZShcIm1vYmlsZVwiKSA/IDIwMCA6IDEwMDtcbiAgICAgIGNvbnN0IGJhY2tncm91bmRBbmltYXRpb24gPSBhbmltYXRlKGVsLCBbe1xuICAgICAgICBvcGFjaXR5OiAxXG4gICAgICB9LCB7XG4gICAgICAgIG9wYWNpdHk6IDBcbiAgICAgIH1dLCB7XG4gICAgICAgIGR1cmF0aW9uXG4gICAgICB9KTtcbiAgICAgIGlmIChpc0RldmljZShcIm1vYmlsZVwiKSkge1xuICAgICAgICBjb25zdCBjb250ZW50QW5pbWF0aW9uID0gYW5pbWF0ZShlbC5maXJzdEVsZW1lbnRDaGlsZCwgW3tcbiAgICAgICAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlWSgwKVwiXG4gICAgICAgIH0sIHtcbiAgICAgICAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlWSgzOTBweClcIlxuICAgICAgICB9XSwge1xuICAgICAgICAgIGR1cmF0aW9uXG4gICAgICAgIH0pO1xuICAgICAgICBQcm9taXNlLmFsbChbYmFja2dyb3VuZEFuaW1hdGlvbi5maW5pc2hlZCwgY29udGVudEFuaW1hdGlvbi5maW5pc2hlZF0pLnRoZW4oZG9uZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBiYWNrZ3JvdW5kQW5pbWF0aW9uLmZpbmlzaGVkLnRoZW4oZG9uZSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIHByb3BzLm9wZW5lZDtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTW9kYWxCYWNrZ3JvdW5kU3R5bGVkLCBtZXJnZVByb3BzKHtcbiAgICAgICAgICAgIFwiZGF0YS10Yy1tb2RhbFwiOiBcInRydWVcIlxuICAgICAgICAgIH0sIGRhdGFBdHRycywge1xuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICBjb25zdCBfZWwkID0gX3RtcGwkJHQuY2xvbmVOb2RlKHRydWUpO1xuICAgICAgICAgICAgICB1c2UoYW5kcm9pZEJhY2tIYW5kbGVyLCBfZWwkLCAoKSA9PiAoe1xuICAgICAgICAgICAgICAgIGlzRW5hYmxlZDogcHJvcHMuZW5hYmxlQW5kcm9pZEJhY2tIYW5kbGVyLFxuICAgICAgICAgICAgICAgIG9uQ2xvc2U6ICgpID0+IHByb3BzLm9uQ2xvc2UoKVxuICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgIHVzZShrZXlQcmVzc2VkLCBfZWwkLCAoKSA9PiAoKSA9PiBwcm9wcy5vbkNsb3NlKCkpO1xuICAgICAgICAgICAgICB1c2UoY2xpY2tPdXRzaWRlLCBfZWwkLCAoKSA9PiAoKSA9PiBwcm9wcy5vbkNsb3NlKCkpO1xuICAgICAgICAgICAgICBpbnNlcnQoX2VsJCwgY3JlYXRlQ29tcG9uZW50KE1vZGFsQm9keVN0eWxlZCwge1xuICAgICAgICAgICAgICAgIGdldCBbXCJjbGFzc1wiXSgpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9wcy5jbGFzcztcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KENsb3NlQnV0dG9uU3R5bGVkLCB7XG4gICAgICAgICAgICAgICAgICAgIGljb246IFwiY2xvc2VcIixcbiAgICAgICAgICAgICAgICAgICAgb25DbGljazogKCkgPT4gcHJvcHMub25DbG9zZSgpXG4gICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlTWVtbygoKSA9PiBwcm9wcy5jaGlsZHJlbildO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSksIG51bGwpO1xuICAgICAgICAgICAgICBpbnNlcnQoX2VsJCwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9wcy5vbkNsaWNrUXVlc3Rpb24gJiYgcHJvcHMuc2hvd0Zvb3RlcjtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTW9kYWxGb290ZXJTdHlsZWQsIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFRvbkNvbm5lY3RCcmFuZCwge30pLCBjcmVhdGVDb21wb25lbnQoUXVlc3Rpb25CdXR0b25TdHlsZWQsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBvbkNsaWNrKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMub25DbGlja1F1ZXN0aW9uO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGljb246IFwicXVlc3Rpb25cIlxuICAgICAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KSwgbnVsbCk7XG4gICAgICAgICAgICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoKSA9PiBjbGFzc05hbWUoX2VsJCwgY24oTW9kYWxXcmFwcGVyQ2xhc3MsIHVgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6ICR7Ym9yZGVycyQ1W3RoZW1lLmJvcmRlclJhZGl1c119O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kLnRpbnR9O1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR7bWVkaWEoXCJtb2JpbGVcIil9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6ICR7Ym9yZGVycyQ1W3RoZW1lLmJvcmRlclJhZGl1c119XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHtib3JkZXJzJDVbdGhlbWUuYm9yZGVyUmFkaXVzXX0gMCAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYCkpKTtcbiAgICAgICAgICAgICAgcmV0dXJuIF9lbCQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSkpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH0pO1xufTtcbmNvbnN0IHdyYXBwZXJCb3JkZXJSYWRpdXMgPSB7XG4gIG06IFwiMjJweFwiLFxuICBzOiBcIjEycHhcIixcbiAgbm9uZTogXCIwXCJcbn07XG5jb25zdCBzbGlkZXJCb3JkZXJSYWRpdXMgPSB7XG4gIG06IFwiMThweFwiLFxuICBzOiBcIjhweFwiLFxuICBub25lOiBcIjBcIlxufTtcbmNvbnN0IFRhYkJhclN0eWxlZCA9IHN0eWxlZC5kaXZgXG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlOiAxZnIgLyAxZnIgMWZyO1xuICAgIHdpZHRoOiBmaXQtY29udGVudDtcbiAgICBqdXN0aWZ5LWl0ZW1zOiBjZW50ZXI7XG4gICAgZ2FwOiA0cHg7XG5cbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgcGFkZGluZzogNHB4O1xuICAgIGJvcmRlci1yYWRpdXM6ICR7KHByb3BzKSA9PiB3cmFwcGVyQm9yZGVyUmFkaXVzW3Byb3BzLnRoZW1lLmJvcmRlclJhZGl1c119O1xuXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kLnNlY29uZGFyeX07XG5gO1xuY29uc3QgU2xpZGVyU3R5bGVkID0gc3R5bGVkLmRpdmBcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA0cHg7XG4gICAgbGVmdDogNHB4O1xuXG4gICAgaGVpZ2h0OiBjYWxjKDEwMCUgLSA4cHgpO1xuICAgIHdpZHRoOiBjYWxjKDUwJSAtIDRweCk7XG5cbiAgICBib3JkZXItcmFkaXVzOiAkeyhwcm9wcykgPT4gc2xpZGVyQm9yZGVyUmFkaXVzW3Byb3BzLnRoZW1lLmJvcmRlclJhZGl1c119O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZC5zZWdtZW50fTtcblxuICAgIHRyYW5zZm9ybTogJHsocHJvcHMpID0+IHByb3BzLnJpZ2h0ID8gXCJ0cmFuc2xhdGVYKDEwMCUpXCIgOiBcInRyYW5zbGF0ZVgoMClcIn07XG5cbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4xM3MgZWFzZS1pbi1vdXQ7XG5gO1xuY29uc3QgSW5wdXRTdHlsZWQgPSBzdHlsZWQuaW5wdXRgXG4gICAgZGlzcGxheTogbm9uZTtcbmA7XG5jb25zdCBMYWJlbFN0eWxlZCA9IHN0eWxlZC5sYWJlbGBcbiAgICBwYWRkaW5nOiA5cHggMTJweDtcbiAgICB6LWluZGV4OiAxO1xuXG4gICAgY3Vyc29yOiAkeyhwcm9wcykgPT4gcHJvcHMuaXNBY3RpdmUgPyBcImRlZmF1bHRcIiA6IFwicG9pbnRlclwifTtcblxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjEzcyBlYXNlLWluLW91dDtcblxuICAgICY6aG92ZXIge1xuICAgICAgICB0cmFuc2Zvcm06ICR7KHByb3BzKSA9PiBwcm9wcy5pc0FjdGl2ZSA/IFwibm9uZVwiIDogXCJzY2FsZSgxLjAyNSlcIn07XG4gICAgfVxuXG4gICAgPiAqIHtcbiAgICAgICAgJHsocHJvcHMpID0+ICFwcm9wcy5pc0FjdGl2ZSA/IGBjb2xvcjogJHtwcm9wcy50aGVtZS5jb2xvcnMudGV4dC5zZWNvbmRhcnl9O2AgOiBcIlwifVxuICAgIH1cbmA7XG5jb25zdCBUYWJCYXIgPSAocHJvcHMpID0+IHtcbiAgY29uc3QgZ3JvdXBOYW1lID0gXCJ0YWJCYXJcIiArIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDFlNCk7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoVGFiQmFyU3R5bGVkLCB7XG4gICAgZ2V0IFtcImNsYXNzXCJdKCkge1xuICAgICAgcmV0dXJuIHByb3BzLmNsYXNzO1xuICAgIH0sXG4gICAgXCJkYXRhLXRjLXRhYi1iYXJcIjogXCJ0cnVlXCIsXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoU2xpZGVyU3R5bGVkLCB7XG4gICAgICAgIGdldCByaWdodCgpIHtcbiAgICAgICAgICByZXR1cm4gcHJvcHMuc2VsZWN0ZWRUYWJJbmRleCA9PT0gMTtcbiAgICAgICAgfVxuICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChMYWJlbFN0eWxlZCwge1xuICAgICAgICBnZXQgaXNBY3RpdmUoKSB7XG4gICAgICAgICAgcmV0dXJuIHByb3BzLnNlbGVjdGVkVGFiSW5kZXggPT09IDA7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChJbnB1dFN0eWxlZCwge1xuICAgICAgICAgICAgdHlwZTogXCJyYWRpb1wiLFxuICAgICAgICAgICAgbmFtZTogZ3JvdXBOYW1lLFxuICAgICAgICAgICAgZ2V0IGNoZWNrZWQoKSB7XG4gICAgICAgICAgICAgIHJldHVybiBwcm9wcy5zZWxlY3RlZFRhYkluZGV4ID09PSAwO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG9uSW5wdXQ6ICgpID0+IHtcbiAgICAgICAgICAgICAgdmFyIF9hMjtcbiAgICAgICAgICAgICAgcmV0dXJuIChfYTIgPSBwcm9wcy5vblNlbGVjdGVkVGFiSW5kZXhDaGFuZ2UpID09IG51bGwgPyB2b2lkIDAgOiBfYTIuY2FsbChwcm9wcywgMCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSksIGNyZWF0ZU1lbW8oKCkgPT4gcHJvcHMudGFiMSldO1xuICAgICAgICB9XG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KExhYmVsU3R5bGVkLCB7XG4gICAgICAgIGdldCBpc0FjdGl2ZSgpIHtcbiAgICAgICAgICByZXR1cm4gcHJvcHMuc2VsZWN0ZWRUYWJJbmRleCA9PT0gMTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KElucHV0U3R5bGVkLCB7XG4gICAgICAgICAgICB0eXBlOiBcInJhZGlvXCIsXG4gICAgICAgICAgICBnZXQgY2hlY2tlZCgpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLnNlbGVjdGVkVGFiSW5kZXggPT09IDE7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbmFtZTogZ3JvdXBOYW1lLFxuICAgICAgICAgICAgb25JbnB1dDogKCkgPT4ge1xuICAgICAgICAgICAgICB2YXIgX2EyO1xuICAgICAgICAgICAgICByZXR1cm4gKF9hMiA9IHByb3BzLm9uU2VsZWN0ZWRUYWJJbmRleENoYW5nZSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi5jYWxsKHByb3BzLCAxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KSwgY3JlYXRlTWVtbygoKSA9PiBwcm9wcy50YWIyKV07XG4gICAgICAgIH1cbiAgICAgIH0pXTtcbiAgICB9XG4gIH0pO1xufTtcbmNvbnN0IGJhY2tncm91bmRCb3JkZXJzID0ge1xuICBtOiBcIjE2cHhcIixcbiAgczogXCIxMnB4XCIsXG4gIG5vbmU6IFwiMFwiXG59O1xuY29uc3QgaW1hZ2VCb3JkZXJzID0ge1xuICBtOiBcIjEycHhcIixcbiAgczogXCI4cHhcIixcbiAgbm9uZTogXCIwXCJcbn07XG5jb25zdCBxck5vcm1hbFNpemUgPSAyNTY7XG5jb25zdCBpbWdTaXplRGVmYXVsdCA9IDYwO1xuY29uc3QgcGljU2l6ZURlZmF1bHQgPSA0ODtcbmNvbnN0IHFyUGFkZGluZ1RvcCA9IDI0O1xuY29uc3QgQ29weUljb25CdXR0b24gPSBzdHlsZWQuZGl2YFxuICAgIHdpZHRoOiA1MnB4O1xuICAgIGhlaWdodDogNTJweDtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IDA7XG4gICAgYm90dG9tOiAwO1xuXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjEyNXMgZWFzZS1pbi1vdXQ7XG5gO1xuY29uc3QgUXJDb2RlQmFja2dyb3VuZCA9IHN0eWxlZC5idXR0b25gXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmQucXJ9O1xuICAgIGJvcmRlci1yYWRpdXM6ICR7KHByb3BzKSA9PiBiYWNrZ3JvdW5kQm9yZGVyc1twcm9wcy50aGVtZS5ib3JkZXJSYWRpdXNdfTtcbiAgICBwYWRkaW5nOiAke3RvUHgocXJQYWRkaW5nVG9wKX0gMDtcbiAgICBoZWlnaHQ6ICR7dG9QeChxck5vcm1hbFNpemUgKyBxclBhZGRpbmdUb3AgKiAyKX07XG4gICAgd2lkdGg6IDEwMCU7XG5cbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBib3JkZXI6IG5vbmU7XG5cbiAgICAke21lZGlhTm90VG91Y2h9IHtcbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAke0NvcHlJY29uQnV0dG9uLmNsYXNzfSB7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjA0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgICY6YWN0aXZlIHtcbiAgICAgICAgJHtDb3B5SWNvbkJ1dHRvbi5jbGFzc30ge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgwLjk2KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICR7bWVkaWFUb3VjaH0ge1xuICAgICAgICAmOmFjdGl2ZSB7XG4gICAgICAgICAgICAke0NvcHlJY29uQnV0dG9uLmNsYXNzfSB7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgwLjkyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbmA7XG5jb25zdCBRckNvZGVXcmFwcGVyJDIgPSBzdHlsZWQuZGl2YFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgbWFyZ2luOiAwIGF1dG87XG5cbiAgICA+IGRpdjpmaXJzdC1jaGlsZCB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIH1cblxuICAgIHJlY3Qge1xuICAgICAgICBmaWxsOiB0cmFuc3BhcmVudDtcbiAgICB9XG5cbiAgICBwYXRoIHtcbiAgICAgICAgZmlsbDogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy5jb25zdGFudC5ibGFja307XG4gICAgfVxuYDtcbmNvbnN0IEltYWdlQmFja2dyb3VuZCA9IHN0eWxlZC5kaXZgXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOiAke3RvUHgoaW1nU2l6ZURlZmF1bHQpfTtcbiAgICBoZWlnaHQ6ICR7dG9QeChpbWdTaXplRGVmYXVsdCl9O1xuICAgIGJhY2tncm91bmQ6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZC5xcn07XG5cbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5gO1xuY29uc3QgSW1hZ2VTdHlsZWQkMyA9IHN0eWxlZChJbWFnZSlgXG4gICAgd2lkdGg6ICR7KHByb3BzKSA9PiB0b1B4KHByb3BzLnNpemUpfTtcbiAgICBoZWlnaHQ6ICR7KHByb3BzKSA9PiB0b1B4KHByb3BzLnNpemUpfTtcbiAgICBib3JkZXItcmFkaXVzOiAkeyhwcm9wcykgPT4gaW1hZ2VCb3JkZXJzW3Byb3BzLnRoZW1lLmJvcmRlclJhZGl1c119O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZC5xcn07XG5gO1xuY29uc3QgQ29waWVkQm94U3R5bGVkID0gc3R5bGVkLmRpdmBcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm90dG9tOiAxNHB4O1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAwKTtcblxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZ2FwOiA2cHg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBib3JkZXItcmFkaXVzOiAxOHB4O1xuICAgIG1pbi13aWR0aDogMTI2cHg7XG4gICAgcGFkZGluZzogOXB4IDE2cHggOXB4IDEwcHg7XG5cbiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDBweCAycHggOHB4IHJnYmEoMCwgMCwgMCwgMC4wOCkpO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZC5zZWdtZW50fTtcbmA7XG52YXIgcXJjb2RlJDEgPSB7IGV4cG9ydHM6IHt9IH07XG4oZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG4gIHZhciBxcmNvZGUyID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHFyY29kZTMgPSBmdW5jdGlvbih0eXBlTnVtYmVyLCBlcnJvckNvcnJlY3Rpb25MZXZlbCkge1xuICAgICAgdmFyIFBBRDAgPSAyMzY7XG4gICAgICB2YXIgUEFEMSA9IDE3O1xuICAgICAgdmFyIF90eXBlTnVtYmVyID0gdHlwZU51bWJlcjtcbiAgICAgIHZhciBfZXJyb3JDb3JyZWN0aW9uTGV2ZWwgPSBRUkVycm9yQ29ycmVjdGlvbkxldmVsW2Vycm9yQ29ycmVjdGlvbkxldmVsXTtcbiAgICAgIHZhciBfbW9kdWxlcyA9IG51bGw7XG4gICAgICB2YXIgX21vZHVsZUNvdW50ID0gMDtcbiAgICAgIHZhciBfZGF0YUNhY2hlID0gbnVsbDtcbiAgICAgIHZhciBfZGF0YUxpc3QgPSBbXTtcbiAgICAgIHZhciBfdGhpcyA9IHt9O1xuICAgICAgdmFyIG1ha2VJbXBsID0gZnVuY3Rpb24odGVzdCwgbWFza1BhdHRlcm4pIHtcbiAgICAgICAgX21vZHVsZUNvdW50ID0gX3R5cGVOdW1iZXIgKiA0ICsgMTc7XG4gICAgICAgIF9tb2R1bGVzID0gZnVuY3Rpb24obW9kdWxlQ291bnQpIHtcbiAgICAgICAgICB2YXIgbW9kdWxlcyA9IG5ldyBBcnJheShtb2R1bGVDb3VudCk7XG4gICAgICAgICAgZm9yICh2YXIgcm93ID0gMDsgcm93IDwgbW9kdWxlQ291bnQ7IHJvdyArPSAxKSB7XG4gICAgICAgICAgICBtb2R1bGVzW3Jvd10gPSBuZXcgQXJyYXkobW9kdWxlQ291bnQpO1xuICAgICAgICAgICAgZm9yICh2YXIgY29sID0gMDsgY29sIDwgbW9kdWxlQ291bnQ7IGNvbCArPSAxKSB7XG4gICAgICAgICAgICAgIG1vZHVsZXNbcm93XVtjb2xdID0gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIG1vZHVsZXM7XG4gICAgICAgIH0oX21vZHVsZUNvdW50KTtcbiAgICAgICAgc2V0dXBQb3NpdGlvblByb2JlUGF0dGVybigwLCAwKTtcbiAgICAgICAgc2V0dXBQb3NpdGlvblByb2JlUGF0dGVybihfbW9kdWxlQ291bnQgLSA3LCAwKTtcbiAgICAgICAgc2V0dXBQb3NpdGlvblByb2JlUGF0dGVybigwLCBfbW9kdWxlQ291bnQgLSA3KTtcbiAgICAgICAgc2V0dXBQb3NpdGlvbkFkanVzdFBhdHRlcm4oKTtcbiAgICAgICAgc2V0dXBUaW1pbmdQYXR0ZXJuKCk7XG4gICAgICAgIHNldHVwVHlwZUluZm8odGVzdCwgbWFza1BhdHRlcm4pO1xuICAgICAgICBpZiAoX3R5cGVOdW1iZXIgPj0gNykge1xuICAgICAgICAgIHNldHVwVHlwZU51bWJlcih0ZXN0KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoX2RhdGFDYWNoZSA9PSBudWxsKSB7XG4gICAgICAgICAgX2RhdGFDYWNoZSA9IGNyZWF0ZURhdGEoX3R5cGVOdW1iZXIsIF9lcnJvckNvcnJlY3Rpb25MZXZlbCwgX2RhdGFMaXN0KTtcbiAgICAgICAgfVxuICAgICAgICBtYXBEYXRhKF9kYXRhQ2FjaGUsIG1hc2tQYXR0ZXJuKTtcbiAgICAgIH07XG4gICAgICB2YXIgc2V0dXBQb3NpdGlvblByb2JlUGF0dGVybiA9IGZ1bmN0aW9uKHJvdywgY29sKSB7XG4gICAgICAgIGZvciAodmFyIHIgPSAtMTsgciA8PSA3OyByICs9IDEpIHtcbiAgICAgICAgICBpZiAocm93ICsgciA8PSAtMSB8fCBfbW9kdWxlQ291bnQgPD0gcm93ICsgcilcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgIGZvciAodmFyIGMyID0gLTE7IGMyIDw9IDc7IGMyICs9IDEpIHtcbiAgICAgICAgICAgIGlmIChjb2wgKyBjMiA8PSAtMSB8fCBfbW9kdWxlQ291bnQgPD0gY29sICsgYzIpXG4gICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgaWYgKDAgPD0gciAmJiByIDw9IDYgJiYgKGMyID09IDAgfHwgYzIgPT0gNikgfHwgMCA8PSBjMiAmJiBjMiA8PSA2ICYmIChyID09IDAgfHwgciA9PSA2KSB8fCAyIDw9IHIgJiYgciA8PSA0ICYmIDIgPD0gYzIgJiYgYzIgPD0gNCkge1xuICAgICAgICAgICAgICBfbW9kdWxlc1tyb3cgKyByXVtjb2wgKyBjMl0gPSB0cnVlO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgX21vZHVsZXNbcm93ICsgcl1bY29sICsgYzJdID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgdmFyIGdldEJlc3RNYXNrUGF0dGVybiA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgbWluTG9zdFBvaW50ID0gMDtcbiAgICAgICAgdmFyIHBhdHRlcm4gPSAwO1xuICAgICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgODsgaTIgKz0gMSkge1xuICAgICAgICAgIG1ha2VJbXBsKHRydWUsIGkyKTtcbiAgICAgICAgICB2YXIgbG9zdFBvaW50ID0gUVJVdGlsLmdldExvc3RQb2ludChfdGhpcyk7XG4gICAgICAgICAgaWYgKGkyID09IDAgfHwgbWluTG9zdFBvaW50ID4gbG9zdFBvaW50KSB7XG4gICAgICAgICAgICBtaW5Mb3N0UG9pbnQgPSBsb3N0UG9pbnQ7XG4gICAgICAgICAgICBwYXR0ZXJuID0gaTI7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBwYXR0ZXJuO1xuICAgICAgfTtcbiAgICAgIHZhciBzZXR1cFRpbWluZ1BhdHRlcm4gPSBmdW5jdGlvbigpIHtcbiAgICAgICAgZm9yICh2YXIgciA9IDg7IHIgPCBfbW9kdWxlQ291bnQgLSA4OyByICs9IDEpIHtcbiAgICAgICAgICBpZiAoX21vZHVsZXNbcl1bNl0gIT0gbnVsbCkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgfVxuICAgICAgICAgIF9tb2R1bGVzW3JdWzZdID0gciAlIDIgPT0gMDtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKHZhciBjMiA9IDg7IGMyIDwgX21vZHVsZUNvdW50IC0gODsgYzIgKz0gMSkge1xuICAgICAgICAgIGlmIChfbW9kdWxlc1s2XVtjMl0gIT0gbnVsbCkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgfVxuICAgICAgICAgIF9tb2R1bGVzWzZdW2MyXSA9IGMyICUgMiA9PSAwO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgdmFyIHNldHVwUG9zaXRpb25BZGp1c3RQYXR0ZXJuID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBwb3MgPSBRUlV0aWwuZ2V0UGF0dGVyblBvc2l0aW9uKF90eXBlTnVtYmVyKTtcbiAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IHBvcy5sZW5ndGg7IGkyICs9IDEpIHtcbiAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHBvcy5sZW5ndGg7IGogKz0gMSkge1xuICAgICAgICAgICAgdmFyIHJvdyA9IHBvc1tpMl07XG4gICAgICAgICAgICB2YXIgY29sID0gcG9zW2pdO1xuICAgICAgICAgICAgaWYgKF9tb2R1bGVzW3Jvd11bY29sXSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZm9yICh2YXIgciA9IC0yOyByIDw9IDI7IHIgKz0gMSkge1xuICAgICAgICAgICAgICBmb3IgKHZhciBjMiA9IC0yOyBjMiA8PSAyOyBjMiArPSAxKSB7XG4gICAgICAgICAgICAgICAgaWYgKHIgPT0gLTIgfHwgciA9PSAyIHx8IGMyID09IC0yIHx8IGMyID09IDIgfHwgciA9PSAwICYmIGMyID09IDApIHtcbiAgICAgICAgICAgICAgICAgIF9tb2R1bGVzW3JvdyArIHJdW2NvbCArIGMyXSA9IHRydWU7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgIF9tb2R1bGVzW3JvdyArIHJdW2NvbCArIGMyXSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIHZhciBzZXR1cFR5cGVOdW1iZXIgPSBmdW5jdGlvbih0ZXN0KSB7XG4gICAgICAgIHZhciBiaXRzID0gUVJVdGlsLmdldEJDSFR5cGVOdW1iZXIoX3R5cGVOdW1iZXIpO1xuICAgICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgMTg7IGkyICs9IDEpIHtcbiAgICAgICAgICB2YXIgbW9kID0gIXRlc3QgJiYgKGJpdHMgPj4gaTIgJiAxKSA9PSAxO1xuICAgICAgICAgIF9tb2R1bGVzW01hdGguZmxvb3IoaTIgLyAzKV1baTIgJSAzICsgX21vZHVsZUNvdW50IC0gOCAtIDNdID0gbW9kO1xuICAgICAgICB9XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCAxODsgaTIgKz0gMSkge1xuICAgICAgICAgIHZhciBtb2QgPSAhdGVzdCAmJiAoYml0cyA+PiBpMiAmIDEpID09IDE7XG4gICAgICAgICAgX21vZHVsZXNbaTIgJSAzICsgX21vZHVsZUNvdW50IC0gOCAtIDNdW01hdGguZmxvb3IoaTIgLyAzKV0gPSBtb2Q7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICB2YXIgc2V0dXBUeXBlSW5mbyA9IGZ1bmN0aW9uKHRlc3QsIG1hc2tQYXR0ZXJuKSB7XG4gICAgICAgIHZhciBkYXRhID0gX2Vycm9yQ29ycmVjdGlvbkxldmVsIDw8IDMgfCBtYXNrUGF0dGVybjtcbiAgICAgICAgdmFyIGJpdHMgPSBRUlV0aWwuZ2V0QkNIVHlwZUluZm8oZGF0YSk7XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCAxNTsgaTIgKz0gMSkge1xuICAgICAgICAgIHZhciBtb2QgPSAhdGVzdCAmJiAoYml0cyA+PiBpMiAmIDEpID09IDE7XG4gICAgICAgICAgaWYgKGkyIDwgNikge1xuICAgICAgICAgICAgX21vZHVsZXNbaTJdWzhdID0gbW9kO1xuICAgICAgICAgIH0gZWxzZSBpZiAoaTIgPCA4KSB7XG4gICAgICAgICAgICBfbW9kdWxlc1tpMiArIDFdWzhdID0gbW9kO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBfbW9kdWxlc1tfbW9kdWxlQ291bnQgLSAxNSArIGkyXVs4XSA9IG1vZDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IDE1OyBpMiArPSAxKSB7XG4gICAgICAgICAgdmFyIG1vZCA9ICF0ZXN0ICYmIChiaXRzID4+IGkyICYgMSkgPT0gMTtcbiAgICAgICAgICBpZiAoaTIgPCA4KSB7XG4gICAgICAgICAgICBfbW9kdWxlc1s4XVtfbW9kdWxlQ291bnQgLSBpMiAtIDFdID0gbW9kO1xuICAgICAgICAgIH0gZWxzZSBpZiAoaTIgPCA5KSB7XG4gICAgICAgICAgICBfbW9kdWxlc1s4XVsxNSAtIGkyIC0gMSArIDFdID0gbW9kO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBfbW9kdWxlc1s4XVsxNSAtIGkyIC0gMV0gPSBtb2Q7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIF9tb2R1bGVzW19tb2R1bGVDb3VudCAtIDhdWzhdID0gIXRlc3Q7XG4gICAgICB9O1xuICAgICAgdmFyIG1hcERhdGEgPSBmdW5jdGlvbihkYXRhLCBtYXNrUGF0dGVybikge1xuICAgICAgICB2YXIgaW5jID0gLTE7XG4gICAgICAgIHZhciByb3cgPSBfbW9kdWxlQ291bnQgLSAxO1xuICAgICAgICB2YXIgYml0SW5kZXggPSA3O1xuICAgICAgICB2YXIgYnl0ZUluZGV4ID0gMDtcbiAgICAgICAgdmFyIG1hc2tGdW5jID0gUVJVdGlsLmdldE1hc2tGdW5jdGlvbihtYXNrUGF0dGVybik7XG4gICAgICAgIGZvciAodmFyIGNvbCA9IF9tb2R1bGVDb3VudCAtIDE7IGNvbCA+IDA7IGNvbCAtPSAyKSB7XG4gICAgICAgICAgaWYgKGNvbCA9PSA2KVxuICAgICAgICAgICAgY29sIC09IDE7XG4gICAgICAgICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgICAgIGZvciAodmFyIGMyID0gMDsgYzIgPCAyOyBjMiArPSAxKSB7XG4gICAgICAgICAgICAgIGlmIChfbW9kdWxlc1tyb3ddW2NvbCAtIGMyXSA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgdmFyIGRhcmsgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBpZiAoYnl0ZUluZGV4IDwgZGF0YS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgIGRhcmsgPSAoZGF0YVtieXRlSW5kZXhdID4+PiBiaXRJbmRleCAmIDEpID09IDE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciBtYXNrID0gbWFza0Z1bmMocm93LCBjb2wgLSBjMik7XG4gICAgICAgICAgICAgICAgaWYgKG1hc2spIHtcbiAgICAgICAgICAgICAgICAgIGRhcmsgPSAhZGFyaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgX21vZHVsZXNbcm93XVtjb2wgLSBjMl0gPSBkYXJrO1xuICAgICAgICAgICAgICAgIGJpdEluZGV4IC09IDE7XG4gICAgICAgICAgICAgICAgaWYgKGJpdEluZGV4ID09IC0xKSB7XG4gICAgICAgICAgICAgICAgICBieXRlSW5kZXggKz0gMTtcbiAgICAgICAgICAgICAgICAgIGJpdEluZGV4ID0gNztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJvdyArPSBpbmM7XG4gICAgICAgICAgICBpZiAocm93IDwgMCB8fCBfbW9kdWxlQ291bnQgPD0gcm93KSB7XG4gICAgICAgICAgICAgIHJvdyAtPSBpbmM7XG4gICAgICAgICAgICAgIGluYyA9IC1pbmM7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIHZhciBjcmVhdGVCeXRlcyA9IGZ1bmN0aW9uKGJ1ZmZlciwgcnNCbG9ja3MpIHtcbiAgICAgICAgdmFyIG9mZnNldCA9IDA7XG4gICAgICAgIHZhciBtYXhEY0NvdW50ID0gMDtcbiAgICAgICAgdmFyIG1heEVjQ291bnQgPSAwO1xuICAgICAgICB2YXIgZGNkYXRhID0gbmV3IEFycmF5KHJzQmxvY2tzLmxlbmd0aCk7XG4gICAgICAgIHZhciBlY2RhdGEgPSBuZXcgQXJyYXkocnNCbG9ja3MubGVuZ3RoKTtcbiAgICAgICAgZm9yICh2YXIgciA9IDA7IHIgPCByc0Jsb2Nrcy5sZW5ndGg7IHIgKz0gMSkge1xuICAgICAgICAgIHZhciBkY0NvdW50ID0gcnNCbG9ja3Nbcl0uZGF0YUNvdW50O1xuICAgICAgICAgIHZhciBlY0NvdW50ID0gcnNCbG9ja3Nbcl0udG90YWxDb3VudCAtIGRjQ291bnQ7XG4gICAgICAgICAgbWF4RGNDb3VudCA9IE1hdGgubWF4KG1heERjQ291bnQsIGRjQ291bnQpO1xuICAgICAgICAgIG1heEVjQ291bnQgPSBNYXRoLm1heChtYXhFY0NvdW50LCBlY0NvdW50KTtcbiAgICAgICAgICBkY2RhdGFbcl0gPSBuZXcgQXJyYXkoZGNDb3VudCk7XG4gICAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IGRjZGF0YVtyXS5sZW5ndGg7IGkyICs9IDEpIHtcbiAgICAgICAgICAgIGRjZGF0YVtyXVtpMl0gPSAyNTUgJiBidWZmZXIuZ2V0QnVmZmVyKClbaTIgKyBvZmZzZXRdO1xuICAgICAgICAgIH1cbiAgICAgICAgICBvZmZzZXQgKz0gZGNDb3VudDtcbiAgICAgICAgICB2YXIgcnNQb2x5ID0gUVJVdGlsLmdldEVycm9yQ29ycmVjdFBvbHlub21pYWwoZWNDb3VudCk7XG4gICAgICAgICAgdmFyIHJhd1BvbHkgPSBxclBvbHlub21pYWwoZGNkYXRhW3JdLCByc1BvbHkuZ2V0TGVuZ3RoKCkgLSAxKTtcbiAgICAgICAgICB2YXIgbW9kUG9seSA9IHJhd1BvbHkubW9kKHJzUG9seSk7XG4gICAgICAgICAgZWNkYXRhW3JdID0gbmV3IEFycmF5KHJzUG9seS5nZXRMZW5ndGgoKSAtIDEpO1xuICAgICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBlY2RhdGFbcl0ubGVuZ3RoOyBpMiArPSAxKSB7XG4gICAgICAgICAgICB2YXIgbW9kSW5kZXggPSBpMiArIG1vZFBvbHkuZ2V0TGVuZ3RoKCkgLSBlY2RhdGFbcl0ubGVuZ3RoO1xuICAgICAgICAgICAgZWNkYXRhW3JdW2kyXSA9IG1vZEluZGV4ID49IDAgPyBtb2RQb2x5LmdldEF0KG1vZEluZGV4KSA6IDA7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHZhciB0b3RhbENvZGVDb3VudCA9IDA7XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCByc0Jsb2Nrcy5sZW5ndGg7IGkyICs9IDEpIHtcbiAgICAgICAgICB0b3RhbENvZGVDb3VudCArPSByc0Jsb2Nrc1tpMl0udG90YWxDb3VudDtcbiAgICAgICAgfVxuICAgICAgICB2YXIgZGF0YSA9IG5ldyBBcnJheSh0b3RhbENvZGVDb3VudCk7XG4gICAgICAgIHZhciBpbmRleCA9IDA7XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBtYXhEY0NvdW50OyBpMiArPSAxKSB7XG4gICAgICAgICAgZm9yICh2YXIgciA9IDA7IHIgPCByc0Jsb2Nrcy5sZW5ndGg7IHIgKz0gMSkge1xuICAgICAgICAgICAgaWYgKGkyIDwgZGNkYXRhW3JdLmxlbmd0aCkge1xuICAgICAgICAgICAgICBkYXRhW2luZGV4XSA9IGRjZGF0YVtyXVtpMl07XG4gICAgICAgICAgICAgIGluZGV4ICs9IDE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBtYXhFY0NvdW50OyBpMiArPSAxKSB7XG4gICAgICAgICAgZm9yICh2YXIgciA9IDA7IHIgPCByc0Jsb2Nrcy5sZW5ndGg7IHIgKz0gMSkge1xuICAgICAgICAgICAgaWYgKGkyIDwgZWNkYXRhW3JdLmxlbmd0aCkge1xuICAgICAgICAgICAgICBkYXRhW2luZGV4XSA9IGVjZGF0YVtyXVtpMl07XG4gICAgICAgICAgICAgIGluZGV4ICs9IDE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkYXRhO1xuICAgICAgfTtcbiAgICAgIHZhciBjcmVhdGVEYXRhID0gZnVuY3Rpb24odHlwZU51bWJlcjIsIGVycm9yQ29ycmVjdGlvbkxldmVsMiwgZGF0YUxpc3QpIHtcbiAgICAgICAgdmFyIHJzQmxvY2tzID0gUVJSU0Jsb2NrLmdldFJTQmxvY2tzKHR5cGVOdW1iZXIyLCBlcnJvckNvcnJlY3Rpb25MZXZlbDIpO1xuICAgICAgICB2YXIgYnVmZmVyID0gcXJCaXRCdWZmZXIoKTtcbiAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IGRhdGFMaXN0Lmxlbmd0aDsgaTIgKz0gMSkge1xuICAgICAgICAgIHZhciBkYXRhID0gZGF0YUxpc3RbaTJdO1xuICAgICAgICAgIGJ1ZmZlci5wdXQoZGF0YS5nZXRNb2RlKCksIDQpO1xuICAgICAgICAgIGJ1ZmZlci5wdXQoZGF0YS5nZXRMZW5ndGgoKSwgUVJVdGlsLmdldExlbmd0aEluQml0cyhkYXRhLmdldE1vZGUoKSwgdHlwZU51bWJlcjIpKTtcbiAgICAgICAgICBkYXRhLndyaXRlKGJ1ZmZlcik7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHRvdGFsRGF0YUNvdW50ID0gMDtcbiAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IHJzQmxvY2tzLmxlbmd0aDsgaTIgKz0gMSkge1xuICAgICAgICAgIHRvdGFsRGF0YUNvdW50ICs9IHJzQmxvY2tzW2kyXS5kYXRhQ291bnQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGJ1ZmZlci5nZXRMZW5ndGhJbkJpdHMoKSA+IHRvdGFsRGF0YUNvdW50ICogOCkge1xuICAgICAgICAgIHRocm93IFwiY29kZSBsZW5ndGggb3ZlcmZsb3cuIChcIiArIGJ1ZmZlci5nZXRMZW5ndGhJbkJpdHMoKSArIFwiPlwiICsgdG90YWxEYXRhQ291bnQgKiA4ICsgXCIpXCI7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGJ1ZmZlci5nZXRMZW5ndGhJbkJpdHMoKSArIDQgPD0gdG90YWxEYXRhQ291bnQgKiA4KSB7XG4gICAgICAgICAgYnVmZmVyLnB1dCgwLCA0KTtcbiAgICAgICAgfVxuICAgICAgICB3aGlsZSAoYnVmZmVyLmdldExlbmd0aEluQml0cygpICUgOCAhPSAwKSB7XG4gICAgICAgICAgYnVmZmVyLnB1dEJpdChmYWxzZSk7XG4gICAgICAgIH1cbiAgICAgICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgICBpZiAoYnVmZmVyLmdldExlbmd0aEluQml0cygpID49IHRvdGFsRGF0YUNvdW50ICogOCkge1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICAgIGJ1ZmZlci5wdXQoUEFEMCwgOCk7XG4gICAgICAgICAgaWYgKGJ1ZmZlci5nZXRMZW5ndGhJbkJpdHMoKSA+PSB0b3RhbERhdGFDb3VudCAqIDgpIHtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgICAgICBidWZmZXIucHV0KFBBRDEsIDgpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjcmVhdGVCeXRlcyhidWZmZXIsIHJzQmxvY2tzKTtcbiAgICAgIH07XG4gICAgICBfdGhpcy5hZGREYXRhID0gZnVuY3Rpb24oZGF0YSwgbW9kZSkge1xuICAgICAgICBtb2RlID0gbW9kZSB8fCBcIkJ5dGVcIjtcbiAgICAgICAgdmFyIG5ld0RhdGEgPSBudWxsO1xuICAgICAgICBzd2l0Y2ggKG1vZGUpIHtcbiAgICAgICAgICBjYXNlIFwiTnVtZXJpY1wiOlxuICAgICAgICAgICAgbmV3RGF0YSA9IHFyTnVtYmVyKGRhdGEpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBcIkFscGhhbnVtZXJpY1wiOlxuICAgICAgICAgICAgbmV3RGF0YSA9IHFyQWxwaGFOdW0oZGF0YSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIFwiQnl0ZVwiOlxuICAgICAgICAgICAgbmV3RGF0YSA9IHFyOEJpdEJ5dGUoZGF0YSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIFwiS2FuamlcIjpcbiAgICAgICAgICAgIG5ld0RhdGEgPSBxckthbmppKGRhdGEpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IFwibW9kZTpcIiArIG1vZGU7XG4gICAgICAgIH1cbiAgICAgICAgX2RhdGFMaXN0LnB1c2gobmV3RGF0YSk7XG4gICAgICAgIF9kYXRhQ2FjaGUgPSBudWxsO1xuICAgICAgfTtcbiAgICAgIF90aGlzLmlzRGFyayA9IGZ1bmN0aW9uKHJvdywgY29sKSB7XG4gICAgICAgIGlmIChyb3cgPCAwIHx8IF9tb2R1bGVDb3VudCA8PSByb3cgfHwgY29sIDwgMCB8fCBfbW9kdWxlQ291bnQgPD0gY29sKSB7XG4gICAgICAgICAgdGhyb3cgcm93ICsgXCIsXCIgKyBjb2w7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIF9tb2R1bGVzW3Jvd11bY29sXTtcbiAgICAgIH07XG4gICAgICBfdGhpcy5nZXRNb2R1bGVDb3VudCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX21vZHVsZUNvdW50O1xuICAgICAgfTtcbiAgICAgIF90aGlzLm1ha2UgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgaWYgKF90eXBlTnVtYmVyIDwgMSkge1xuICAgICAgICAgIHZhciB0eXBlTnVtYmVyMiA9IDE7XG4gICAgICAgICAgZm9yICg7IHR5cGVOdW1iZXIyIDwgNDA7IHR5cGVOdW1iZXIyKyspIHtcbiAgICAgICAgICAgIHZhciByc0Jsb2NrcyA9IFFSUlNCbG9jay5nZXRSU0Jsb2Nrcyh0eXBlTnVtYmVyMiwgX2Vycm9yQ29ycmVjdGlvbkxldmVsKTtcbiAgICAgICAgICAgIHZhciBidWZmZXIgPSBxckJpdEJ1ZmZlcigpO1xuICAgICAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IF9kYXRhTGlzdC5sZW5ndGg7IGkyKyspIHtcbiAgICAgICAgICAgICAgdmFyIGRhdGEgPSBfZGF0YUxpc3RbaTJdO1xuICAgICAgICAgICAgICBidWZmZXIucHV0KGRhdGEuZ2V0TW9kZSgpLCA0KTtcbiAgICAgICAgICAgICAgYnVmZmVyLnB1dChkYXRhLmdldExlbmd0aCgpLCBRUlV0aWwuZ2V0TGVuZ3RoSW5CaXRzKGRhdGEuZ2V0TW9kZSgpLCB0eXBlTnVtYmVyMikpO1xuICAgICAgICAgICAgICBkYXRhLndyaXRlKGJ1ZmZlcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgdG90YWxEYXRhQ291bnQgPSAwO1xuICAgICAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IHJzQmxvY2tzLmxlbmd0aDsgaTIrKykge1xuICAgICAgICAgICAgICB0b3RhbERhdGFDb3VudCArPSByc0Jsb2Nrc1tpMl0uZGF0YUNvdW50O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGJ1ZmZlci5nZXRMZW5ndGhJbkJpdHMoKSA8PSB0b3RhbERhdGFDb3VudCAqIDgpIHtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIF90eXBlTnVtYmVyID0gdHlwZU51bWJlcjI7XG4gICAgICAgIH1cbiAgICAgICAgbWFrZUltcGwoZmFsc2UsIGdldEJlc3RNYXNrUGF0dGVybigpKTtcbiAgICAgIH07XG4gICAgICBfdGhpcy5jcmVhdGVUYWJsZVRhZyA9IGZ1bmN0aW9uKGNlbGxTaXplLCBtYXJnaW4pIHtcbiAgICAgICAgY2VsbFNpemUgPSBjZWxsU2l6ZSB8fCAyO1xuICAgICAgICBtYXJnaW4gPSB0eXBlb2YgbWFyZ2luID09IFwidW5kZWZpbmVkXCIgPyBjZWxsU2l6ZSAqIDQgOiBtYXJnaW47XG4gICAgICAgIHZhciBxckh0bWwgPSBcIlwiO1xuICAgICAgICBxckh0bWwgKz0gJzx0YWJsZSBzdHlsZT1cIic7XG4gICAgICAgIHFySHRtbCArPSBcIiBib3JkZXItd2lkdGg6IDBweDsgYm9yZGVyLXN0eWxlOiBub25lO1wiO1xuICAgICAgICBxckh0bWwgKz0gXCIgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcIjtcbiAgICAgICAgcXJIdG1sICs9IFwiIHBhZGRpbmc6IDBweDsgbWFyZ2luOiBcIiArIG1hcmdpbiArIFwicHg7XCI7XG4gICAgICAgIHFySHRtbCArPSAnXCI+JztcbiAgICAgICAgcXJIdG1sICs9IFwiPHRib2R5PlwiO1xuICAgICAgICBmb3IgKHZhciByID0gMDsgciA8IF90aGlzLmdldE1vZHVsZUNvdW50KCk7IHIgKz0gMSkge1xuICAgICAgICAgIHFySHRtbCArPSBcIjx0cj5cIjtcbiAgICAgICAgICBmb3IgKHZhciBjMiA9IDA7IGMyIDwgX3RoaXMuZ2V0TW9kdWxlQ291bnQoKTsgYzIgKz0gMSkge1xuICAgICAgICAgICAgcXJIdG1sICs9ICc8dGQgc3R5bGU9XCInO1xuICAgICAgICAgICAgcXJIdG1sICs9IFwiIGJvcmRlci13aWR0aDogMHB4OyBib3JkZXItc3R5bGU6IG5vbmU7XCI7XG4gICAgICAgICAgICBxckh0bWwgKz0gXCIgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcIjtcbiAgICAgICAgICAgIHFySHRtbCArPSBcIiBwYWRkaW5nOiAwcHg7IG1hcmdpbjogMHB4O1wiO1xuICAgICAgICAgICAgcXJIdG1sICs9IFwiIHdpZHRoOiBcIiArIGNlbGxTaXplICsgXCJweDtcIjtcbiAgICAgICAgICAgIHFySHRtbCArPSBcIiBoZWlnaHQ6IFwiICsgY2VsbFNpemUgKyBcInB4O1wiO1xuICAgICAgICAgICAgcXJIdG1sICs9IFwiIGJhY2tncm91bmQtY29sb3I6IFwiO1xuICAgICAgICAgICAgcXJIdG1sICs9IF90aGlzLmlzRGFyayhyLCBjMikgPyBcIiMwMDAwMDBcIiA6IFwiI2ZmZmZmZlwiO1xuICAgICAgICAgICAgcXJIdG1sICs9IFwiO1wiO1xuICAgICAgICAgICAgcXJIdG1sICs9ICdcIi8+JztcbiAgICAgICAgICB9XG4gICAgICAgICAgcXJIdG1sICs9IFwiPC90cj5cIjtcbiAgICAgICAgfVxuICAgICAgICBxckh0bWwgKz0gXCI8L3Rib2R5PlwiO1xuICAgICAgICBxckh0bWwgKz0gXCI8L3RhYmxlPlwiO1xuICAgICAgICByZXR1cm4gcXJIdG1sO1xuICAgICAgfTtcbiAgICAgIF90aGlzLmNyZWF0ZVN2Z1RhZyA9IGZ1bmN0aW9uKGNlbGxTaXplLCBtYXJnaW4sIGFsdCwgdGl0bGUpIHtcbiAgICAgICAgdmFyIG9wdHMgPSB7fTtcbiAgICAgICAgaWYgKHR5cGVvZiBhcmd1bWVudHNbMF0gPT0gXCJvYmplY3RcIikge1xuICAgICAgICAgIG9wdHMgPSBhcmd1bWVudHNbMF07XG4gICAgICAgICAgY2VsbFNpemUgPSBvcHRzLmNlbGxTaXplO1xuICAgICAgICAgIG1hcmdpbiA9IG9wdHMubWFyZ2luO1xuICAgICAgICAgIGFsdCA9IG9wdHMuYWx0O1xuICAgICAgICAgIHRpdGxlID0gb3B0cy50aXRsZTtcbiAgICAgICAgfVxuICAgICAgICBjZWxsU2l6ZSA9IGNlbGxTaXplIHx8IDI7XG4gICAgICAgIG1hcmdpbiA9IHR5cGVvZiBtYXJnaW4gPT0gXCJ1bmRlZmluZWRcIiA/IGNlbGxTaXplICogNCA6IG1hcmdpbjtcbiAgICAgICAgYWx0ID0gdHlwZW9mIGFsdCA9PT0gXCJzdHJpbmdcIiA/IHsgdGV4dDogYWx0IH0gOiBhbHQgfHwge307XG4gICAgICAgIGFsdC50ZXh0ID0gYWx0LnRleHQgfHwgbnVsbDtcbiAgICAgICAgYWx0LmlkID0gYWx0LnRleHQgPyBhbHQuaWQgfHwgXCJxcmNvZGUtZGVzY3JpcHRpb25cIiA6IG51bGw7XG4gICAgICAgIHRpdGxlID0gdHlwZW9mIHRpdGxlID09PSBcInN0cmluZ1wiID8geyB0ZXh0OiB0aXRsZSB9IDogdGl0bGUgfHwge307XG4gICAgICAgIHRpdGxlLnRleHQgPSB0aXRsZS50ZXh0IHx8IG51bGw7XG4gICAgICAgIHRpdGxlLmlkID0gdGl0bGUudGV4dCA/IHRpdGxlLmlkIHx8IFwicXJjb2RlLXRpdGxlXCIgOiBudWxsO1xuICAgICAgICB2YXIgc2l6ZSA9IF90aGlzLmdldE1vZHVsZUNvdW50KCkgKiBjZWxsU2l6ZSArIG1hcmdpbiAqIDI7XG4gICAgICAgIHZhciBjMiwgbWMsIHIsIG1yLCBxclN2ZyA9IFwiXCIsIHJlY3Q7XG4gICAgICAgIHJlY3QgPSBcImxcIiArIGNlbGxTaXplICsgXCIsMCAwLFwiICsgY2VsbFNpemUgKyBcIiAtXCIgKyBjZWxsU2l6ZSArIFwiLDAgMCwtXCIgKyBjZWxsU2l6ZSArIFwieiBcIjtcbiAgICAgICAgcXJTdmcgKz0gJzxzdmcgdmVyc2lvbj1cIjEuMVwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIic7XG4gICAgICAgIHFyU3ZnICs9ICFvcHRzLnNjYWxhYmxlID8gJyB3aWR0aD1cIicgKyBzaXplICsgJ3B4XCIgaGVpZ2h0PVwiJyArIHNpemUgKyAncHhcIicgOiBcIlwiO1xuICAgICAgICBxclN2ZyArPSAnIHZpZXdCb3g9XCIwIDAgJyArIHNpemUgKyBcIiBcIiArIHNpemUgKyAnXCIgJztcbiAgICAgICAgcXJTdmcgKz0gJyBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVwieE1pbllNaW4gbWVldFwiJztcbiAgICAgICAgcXJTdmcgKz0gdGl0bGUudGV4dCB8fCBhbHQudGV4dCA/ICcgcm9sZT1cImltZ1wiIGFyaWEtbGFiZWxsZWRieT1cIicgKyBlc2NhcGVYbWwoW3RpdGxlLmlkLCBhbHQuaWRdLmpvaW4oXCIgXCIpLnRyaW0oKSkgKyAnXCInIDogXCJcIjtcbiAgICAgICAgcXJTdmcgKz0gXCI+XCI7XG4gICAgICAgIHFyU3ZnICs9IHRpdGxlLnRleHQgPyAnPHRpdGxlIGlkPVwiJyArIGVzY2FwZVhtbCh0aXRsZS5pZCkgKyAnXCI+JyArIGVzY2FwZVhtbCh0aXRsZS50ZXh0KSArIFwiPC90aXRsZT5cIiA6IFwiXCI7XG4gICAgICAgIHFyU3ZnICs9IGFsdC50ZXh0ID8gJzxkZXNjcmlwdGlvbiBpZD1cIicgKyBlc2NhcGVYbWwoYWx0LmlkKSArICdcIj4nICsgZXNjYXBlWG1sKGFsdC50ZXh0KSArIFwiPC9kZXNjcmlwdGlvbj5cIiA6IFwiXCI7XG4gICAgICAgIHFyU3ZnICs9ICc8cmVjdCB3aWR0aD1cIjEwMCVcIiBoZWlnaHQ9XCIxMDAlXCIgZmlsbD1cIndoaXRlXCIgY3g9XCIwXCIgY3k9XCIwXCIvPic7XG4gICAgICAgIHFyU3ZnICs9ICc8cGF0aCBkPVwiJztcbiAgICAgICAgZm9yIChyID0gMDsgciA8IF90aGlzLmdldE1vZHVsZUNvdW50KCk7IHIgKz0gMSkge1xuICAgICAgICAgIG1yID0gciAqIGNlbGxTaXplICsgbWFyZ2luO1xuICAgICAgICAgIGZvciAoYzIgPSAwOyBjMiA8IF90aGlzLmdldE1vZHVsZUNvdW50KCk7IGMyICs9IDEpIHtcbiAgICAgICAgICAgIGlmIChfdGhpcy5pc0RhcmsociwgYzIpKSB7XG4gICAgICAgICAgICAgIG1jID0gYzIgKiBjZWxsU2l6ZSArIG1hcmdpbjtcbiAgICAgICAgICAgICAgcXJTdmcgKz0gXCJNXCIgKyBtYyArIFwiLFwiICsgbXIgKyByZWN0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBxclN2ZyArPSAnXCIgc3Ryb2tlPVwidHJhbnNwYXJlbnRcIiBmaWxsPVwiYmxhY2tcIi8+JztcbiAgICAgICAgcXJTdmcgKz0gXCI8L3N2Zz5cIjtcbiAgICAgICAgcmV0dXJuIHFyU3ZnO1xuICAgICAgfTtcbiAgICAgIF90aGlzLmNyZWF0ZURhdGFVUkwgPSBmdW5jdGlvbihjZWxsU2l6ZSwgbWFyZ2luKSB7XG4gICAgICAgIGNlbGxTaXplID0gY2VsbFNpemUgfHwgMjtcbiAgICAgICAgbWFyZ2luID0gdHlwZW9mIG1hcmdpbiA9PSBcInVuZGVmaW5lZFwiID8gY2VsbFNpemUgKiA0IDogbWFyZ2luO1xuICAgICAgICB2YXIgc2l6ZSA9IF90aGlzLmdldE1vZHVsZUNvdW50KCkgKiBjZWxsU2l6ZSArIG1hcmdpbiAqIDI7XG4gICAgICAgIHZhciBtaW4yID0gbWFyZ2luO1xuICAgICAgICB2YXIgbWF4MiA9IHNpemUgLSBtYXJnaW47XG4gICAgICAgIHJldHVybiBjcmVhdGVEYXRhVVJMKHNpemUsIHNpemUsIGZ1bmN0aW9uKHgsIHkpIHtcbiAgICAgICAgICBpZiAobWluMiA8PSB4ICYmIHggPCBtYXgyICYmIG1pbjIgPD0geSAmJiB5IDwgbWF4Mikge1xuICAgICAgICAgICAgdmFyIGMyID0gTWF0aC5mbG9vcigoeCAtIG1pbjIpIC8gY2VsbFNpemUpO1xuICAgICAgICAgICAgdmFyIHIgPSBNYXRoLmZsb29yKCh5IC0gbWluMikgLyBjZWxsU2l6ZSk7XG4gICAgICAgICAgICByZXR1cm4gX3RoaXMuaXNEYXJrKHIsIGMyKSA/IDAgOiAxO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gMTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfTtcbiAgICAgIF90aGlzLmNyZWF0ZUltZ1RhZyA9IGZ1bmN0aW9uKGNlbGxTaXplLCBtYXJnaW4sIGFsdCkge1xuICAgICAgICBjZWxsU2l6ZSA9IGNlbGxTaXplIHx8IDI7XG4gICAgICAgIG1hcmdpbiA9IHR5cGVvZiBtYXJnaW4gPT0gXCJ1bmRlZmluZWRcIiA/IGNlbGxTaXplICogNCA6IG1hcmdpbjtcbiAgICAgICAgdmFyIHNpemUgPSBfdGhpcy5nZXRNb2R1bGVDb3VudCgpICogY2VsbFNpemUgKyBtYXJnaW4gKiAyO1xuICAgICAgICB2YXIgaW1nID0gXCJcIjtcbiAgICAgICAgaW1nICs9IFwiPGltZ1wiO1xuICAgICAgICBpbWcgKz0gJyBzcmM9XCInO1xuICAgICAgICBpbWcgKz0gX3RoaXMuY3JlYXRlRGF0YVVSTChjZWxsU2l6ZSwgbWFyZ2luKTtcbiAgICAgICAgaW1nICs9ICdcIic7XG4gICAgICAgIGltZyArPSAnIHdpZHRoPVwiJztcbiAgICAgICAgaW1nICs9IHNpemU7XG4gICAgICAgIGltZyArPSAnXCInO1xuICAgICAgICBpbWcgKz0gJyBoZWlnaHQ9XCInO1xuICAgICAgICBpbWcgKz0gc2l6ZTtcbiAgICAgICAgaW1nICs9ICdcIic7XG4gICAgICAgIGlmIChhbHQpIHtcbiAgICAgICAgICBpbWcgKz0gJyBhbHQ9XCInO1xuICAgICAgICAgIGltZyArPSBlc2NhcGVYbWwoYWx0KTtcbiAgICAgICAgICBpbWcgKz0gJ1wiJztcbiAgICAgICAgfVxuICAgICAgICBpbWcgKz0gXCIvPlwiO1xuICAgICAgICByZXR1cm4gaW1nO1xuICAgICAgfTtcbiAgICAgIHZhciBlc2NhcGVYbWwgPSBmdW5jdGlvbihzMikge1xuICAgICAgICB2YXIgZXNjYXBlZCA9IFwiXCI7XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBzMi5sZW5ndGg7IGkyICs9IDEpIHtcbiAgICAgICAgICB2YXIgYzIgPSBzMi5jaGFyQXQoaTIpO1xuICAgICAgICAgIHN3aXRjaCAoYzIpIHtcbiAgICAgICAgICAgIGNhc2UgXCI8XCI6XG4gICAgICAgICAgICAgIGVzY2FwZWQgKz0gXCImbHQ7XCI7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcIj5cIjpcbiAgICAgICAgICAgICAgZXNjYXBlZCArPSBcIiZndDtcIjtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiJlwiOlxuICAgICAgICAgICAgICBlc2NhcGVkICs9IFwiJmFtcDtcIjtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdcIic6XG4gICAgICAgICAgICAgIGVzY2FwZWQgKz0gXCImcXVvdDtcIjtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICBlc2NhcGVkICs9IGMyO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGVzY2FwZWQ7XG4gICAgICB9O1xuICAgICAgdmFyIF9jcmVhdGVIYWxmQVNDSUkgPSBmdW5jdGlvbihtYXJnaW4pIHtcbiAgICAgICAgdmFyIGNlbGxTaXplID0gMTtcbiAgICAgICAgbWFyZ2luID0gdHlwZW9mIG1hcmdpbiA9PSBcInVuZGVmaW5lZFwiID8gY2VsbFNpemUgKiAyIDogbWFyZ2luO1xuICAgICAgICB2YXIgc2l6ZSA9IF90aGlzLmdldE1vZHVsZUNvdW50KCkgKiBjZWxsU2l6ZSArIG1hcmdpbiAqIDI7XG4gICAgICAgIHZhciBtaW4yID0gbWFyZ2luO1xuICAgICAgICB2YXIgbWF4MiA9IHNpemUgLSBtYXJnaW47XG4gICAgICAgIHZhciB5LCB4LCByMSwgcjIsIHAyO1xuICAgICAgICB2YXIgYmxvY2tzID0ge1xuICAgICAgICAgIFwiXFx1MjU4OFxcdTI1ODhcIjogXCJcXHUyNTg4XCIsXG4gICAgICAgICAgXCJcXHUyNTg4IFwiOiBcIlxcdTI1ODBcIixcbiAgICAgICAgICBcIiBcXHUyNTg4XCI6IFwiXFx1MjU4NFwiLFxuICAgICAgICAgIFwiICBcIjogXCIgXCJcbiAgICAgICAgfTtcbiAgICAgICAgdmFyIGJsb2Nrc0xhc3RMaW5lTm9NYXJnaW4gPSB7XG4gICAgICAgICAgXCJcXHUyNTg4XFx1MjU4OFwiOiBcIlxcdTI1ODBcIixcbiAgICAgICAgICBcIlxcdTI1ODggXCI6IFwiXFx1MjU4MFwiLFxuICAgICAgICAgIFwiIFxcdTI1ODhcIjogXCIgXCIsXG4gICAgICAgICAgXCIgIFwiOiBcIiBcIlxuICAgICAgICB9O1xuICAgICAgICB2YXIgYXNjaWkgPSBcIlwiO1xuICAgICAgICBmb3IgKHkgPSAwOyB5IDwgc2l6ZTsgeSArPSAyKSB7XG4gICAgICAgICAgcjEgPSBNYXRoLmZsb29yKCh5IC0gbWluMikgLyBjZWxsU2l6ZSk7XG4gICAgICAgICAgcjIgPSBNYXRoLmZsb29yKCh5ICsgMSAtIG1pbjIpIC8gY2VsbFNpemUpO1xuICAgICAgICAgIGZvciAoeCA9IDA7IHggPCBzaXplOyB4ICs9IDEpIHtcbiAgICAgICAgICAgIHAyID0gXCJcXHUyNTg4XCI7XG4gICAgICAgICAgICBpZiAobWluMiA8PSB4ICYmIHggPCBtYXgyICYmIG1pbjIgPD0geSAmJiB5IDwgbWF4MiAmJiBfdGhpcy5pc0RhcmsocjEsIE1hdGguZmxvb3IoKHggLSBtaW4yKSAvIGNlbGxTaXplKSkpIHtcbiAgICAgICAgICAgICAgcDIgPSBcIiBcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChtaW4yIDw9IHggJiYgeCA8IG1heDIgJiYgbWluMiA8PSB5ICsgMSAmJiB5ICsgMSA8IG1heDIgJiYgX3RoaXMuaXNEYXJrKHIyLCBNYXRoLmZsb29yKCh4IC0gbWluMikgLyBjZWxsU2l6ZSkpKSB7XG4gICAgICAgICAgICAgIHAyICs9IFwiIFwiO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgcDIgKz0gXCJcXHUyNTg4XCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhc2NpaSArPSBtYXJnaW4gPCAxICYmIHkgKyAxID49IG1heDIgPyBibG9ja3NMYXN0TGluZU5vTWFyZ2luW3AyXSA6IGJsb2Nrc1twMl07XG4gICAgICAgICAgfVxuICAgICAgICAgIGFzY2lpICs9IFwiXFxuXCI7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNpemUgJSAyICYmIG1hcmdpbiA+IDApIHtcbiAgICAgICAgICByZXR1cm4gYXNjaWkuc3Vic3RyaW5nKDAsIGFzY2lpLmxlbmd0aCAtIHNpemUgLSAxKSArIEFycmF5KHNpemUgKyAxKS5qb2luKFwiXFx1MjU4MFwiKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYXNjaWkuc3Vic3RyaW5nKDAsIGFzY2lpLmxlbmd0aCAtIDEpO1xuICAgICAgfTtcbiAgICAgIF90aGlzLmNyZWF0ZUFTQ0lJID0gZnVuY3Rpb24oY2VsbFNpemUsIG1hcmdpbikge1xuICAgICAgICBjZWxsU2l6ZSA9IGNlbGxTaXplIHx8IDE7XG4gICAgICAgIGlmIChjZWxsU2l6ZSA8IDIpIHtcbiAgICAgICAgICByZXR1cm4gX2NyZWF0ZUhhbGZBU0NJSShtYXJnaW4pO1xuICAgICAgICB9XG4gICAgICAgIGNlbGxTaXplIC09IDE7XG4gICAgICAgIG1hcmdpbiA9IHR5cGVvZiBtYXJnaW4gPT0gXCJ1bmRlZmluZWRcIiA/IGNlbGxTaXplICogMiA6IG1hcmdpbjtcbiAgICAgICAgdmFyIHNpemUgPSBfdGhpcy5nZXRNb2R1bGVDb3VudCgpICogY2VsbFNpemUgKyBtYXJnaW4gKiAyO1xuICAgICAgICB2YXIgbWluMiA9IG1hcmdpbjtcbiAgICAgICAgdmFyIG1heDIgPSBzaXplIC0gbWFyZ2luO1xuICAgICAgICB2YXIgeSwgeCwgciwgcDI7XG4gICAgICAgIHZhciB3aGl0ZSA9IEFycmF5KGNlbGxTaXplICsgMSkuam9pbihcIlxcdTI1ODhcXHUyNTg4XCIpO1xuICAgICAgICB2YXIgYmxhY2sgPSBBcnJheShjZWxsU2l6ZSArIDEpLmpvaW4oXCIgIFwiKTtcbiAgICAgICAgdmFyIGFzY2lpID0gXCJcIjtcbiAgICAgICAgdmFyIGxpbmUgPSBcIlwiO1xuICAgICAgICBmb3IgKHkgPSAwOyB5IDwgc2l6ZTsgeSArPSAxKSB7XG4gICAgICAgICAgciA9IE1hdGguZmxvb3IoKHkgLSBtaW4yKSAvIGNlbGxTaXplKTtcbiAgICAgICAgICBsaW5lID0gXCJcIjtcbiAgICAgICAgICBmb3IgKHggPSAwOyB4IDwgc2l6ZTsgeCArPSAxKSB7XG4gICAgICAgICAgICBwMiA9IDE7XG4gICAgICAgICAgICBpZiAobWluMiA8PSB4ICYmIHggPCBtYXgyICYmIG1pbjIgPD0geSAmJiB5IDwgbWF4MiAmJiBfdGhpcy5pc0RhcmsociwgTWF0aC5mbG9vcigoeCAtIG1pbjIpIC8gY2VsbFNpemUpKSkge1xuICAgICAgICAgICAgICBwMiA9IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsaW5lICs9IHAyID8gd2hpdGUgOiBibGFjaztcbiAgICAgICAgICB9XG4gICAgICAgICAgZm9yIChyID0gMDsgciA8IGNlbGxTaXplOyByICs9IDEpIHtcbiAgICAgICAgICAgIGFzY2lpICs9IGxpbmUgKyBcIlxcblwiO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYXNjaWkuc3Vic3RyaW5nKDAsIGFzY2lpLmxlbmd0aCAtIDEpO1xuICAgICAgfTtcbiAgICAgIF90aGlzLnJlbmRlclRvMmRDb250ZXh0ID0gZnVuY3Rpb24oY29udGV4dCwgY2VsbFNpemUpIHtcbiAgICAgICAgY2VsbFNpemUgPSBjZWxsU2l6ZSB8fCAyO1xuICAgICAgICB2YXIgbGVuZ3RoID0gX3RoaXMuZ2V0TW9kdWxlQ291bnQoKTtcbiAgICAgICAgZm9yICh2YXIgcm93ID0gMDsgcm93IDwgbGVuZ3RoOyByb3crKykge1xuICAgICAgICAgIGZvciAodmFyIGNvbCA9IDA7IGNvbCA8IGxlbmd0aDsgY29sKyspIHtcbiAgICAgICAgICAgIGNvbnRleHQuZmlsbFN0eWxlID0gX3RoaXMuaXNEYXJrKHJvdywgY29sKSA/IFwiYmxhY2tcIiA6IFwid2hpdGVcIjtcbiAgICAgICAgICAgIGNvbnRleHQuZmlsbFJlY3Qocm93ICogY2VsbFNpemUsIGNvbCAqIGNlbGxTaXplLCBjZWxsU2l6ZSwgY2VsbFNpemUpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIHJldHVybiBfdGhpcztcbiAgICB9O1xuICAgIHFyY29kZTMuc3RyaW5nVG9CeXRlc0Z1bmNzID0ge1xuICAgICAgXCJkZWZhdWx0XCI6IGZ1bmN0aW9uKHMyKSB7XG4gICAgICAgIHZhciBieXRlcyA9IFtdO1xuICAgICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgczIubGVuZ3RoOyBpMiArPSAxKSB7XG4gICAgICAgICAgdmFyIGMyID0gczIuY2hhckNvZGVBdChpMik7XG4gICAgICAgICAgYnl0ZXMucHVzaChjMiAmIDI1NSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGJ5dGVzO1xuICAgICAgfVxuICAgIH07XG4gICAgcXJjb2RlMy5zdHJpbmdUb0J5dGVzID0gcXJjb2RlMy5zdHJpbmdUb0J5dGVzRnVuY3NbXCJkZWZhdWx0XCJdO1xuICAgIHFyY29kZTMuY3JlYXRlU3RyaW5nVG9CeXRlcyA9IGZ1bmN0aW9uKHVuaWNvZGVEYXRhLCBudW1DaGFycykge1xuICAgICAgdmFyIHVuaWNvZGVNYXAgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIGJpbiA9IGJhc2U2NERlY29kZUlucHV0U3RyZWFtKHVuaWNvZGVEYXRhKTtcbiAgICAgICAgdmFyIHJlYWQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICB2YXIgYiA9IGJpbi5yZWFkKCk7XG4gICAgICAgICAgaWYgKGIgPT0gLTEpXG4gICAgICAgICAgICB0aHJvdyBcImVvZlwiO1xuICAgICAgICAgIHJldHVybiBiO1xuICAgICAgICB9O1xuICAgICAgICB2YXIgY291bnQgPSAwO1xuICAgICAgICB2YXIgdW5pY29kZU1hcDIgPSB7fTtcbiAgICAgICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgICB2YXIgYjAgPSBiaW4ucmVhZCgpO1xuICAgICAgICAgIGlmIChiMCA9PSAtMSlcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIHZhciBiMSA9IHJlYWQoKTtcbiAgICAgICAgICB2YXIgYjIgPSByZWFkKCk7XG4gICAgICAgICAgdmFyIGIzID0gcmVhZCgpO1xuICAgICAgICAgIHZhciBrID0gU3RyaW5nLmZyb21DaGFyQ29kZShiMCA8PCA4IHwgYjEpO1xuICAgICAgICAgIHZhciB2ID0gYjIgPDwgOCB8IGIzO1xuICAgICAgICAgIHVuaWNvZGVNYXAyW2tdID0gdjtcbiAgICAgICAgICBjb3VudCArPSAxO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjb3VudCAhPSBudW1DaGFycykge1xuICAgICAgICAgIHRocm93IGNvdW50ICsgXCIgIT0gXCIgKyBudW1DaGFycztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdW5pY29kZU1hcDI7XG4gICAgICB9KCk7XG4gICAgICB2YXIgdW5rbm93bkNoYXIgPSBcIj9cIi5jaGFyQ29kZUF0KDApO1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uKHMyKSB7XG4gICAgICAgIHZhciBieXRlcyA9IFtdO1xuICAgICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgczIubGVuZ3RoOyBpMiArPSAxKSB7XG4gICAgICAgICAgdmFyIGMyID0gczIuY2hhckNvZGVBdChpMik7XG4gICAgICAgICAgaWYgKGMyIDwgMTI4KSB7XG4gICAgICAgICAgICBieXRlcy5wdXNoKGMyKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdmFyIGIgPSB1bmljb2RlTWFwW3MyLmNoYXJBdChpMildO1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBiID09IFwibnVtYmVyXCIpIHtcbiAgICAgICAgICAgICAgaWYgKChiICYgMjU1KSA9PSBiKSB7XG4gICAgICAgICAgICAgICAgYnl0ZXMucHVzaChiKTtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBieXRlcy5wdXNoKGIgPj4+IDgpO1xuICAgICAgICAgICAgICAgIGJ5dGVzLnB1c2goYiAmIDI1NSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGJ5dGVzLnB1c2godW5rbm93bkNoYXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYnl0ZXM7XG4gICAgICB9O1xuICAgIH07XG4gICAgdmFyIFFSTW9kZSA9IHtcbiAgICAgIE1PREVfTlVNQkVSOiAxIDw8IDAsXG4gICAgICBNT0RFX0FMUEhBX05VTTogMSA8PCAxLFxuICAgICAgTU9ERV84QklUX0JZVEU6IDEgPDwgMixcbiAgICAgIE1PREVfS0FOSkk6IDEgPDwgM1xuICAgIH07XG4gICAgdmFyIFFSRXJyb3JDb3JyZWN0aW9uTGV2ZWwgPSB7XG4gICAgICBMOiAxLFxuICAgICAgTTogMCxcbiAgICAgIFE6IDMsXG4gICAgICBIOiAyXG4gICAgfTtcbiAgICB2YXIgUVJNYXNrUGF0dGVybiA9IHtcbiAgICAgIFBBVFRFUk4wMDA6IDAsXG4gICAgICBQQVRURVJOMDAxOiAxLFxuICAgICAgUEFUVEVSTjAxMDogMixcbiAgICAgIFBBVFRFUk4wMTE6IDMsXG4gICAgICBQQVRURVJOMTAwOiA0LFxuICAgICAgUEFUVEVSTjEwMTogNSxcbiAgICAgIFBBVFRFUk4xMTA6IDYsXG4gICAgICBQQVRURVJOMTExOiA3XG4gICAgfTtcbiAgICB2YXIgUVJVdGlsID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgUEFUVEVSTl9QT1NJVElPTl9UQUJMRSA9IFtcbiAgICAgICAgW10sXG4gICAgICAgIFs2LCAxOF0sXG4gICAgICAgIFs2LCAyMl0sXG4gICAgICAgIFs2LCAyNl0sXG4gICAgICAgIFs2LCAzMF0sXG4gICAgICAgIFs2LCAzNF0sXG4gICAgICAgIFs2LCAyMiwgMzhdLFxuICAgICAgICBbNiwgMjQsIDQyXSxcbiAgICAgICAgWzYsIDI2LCA0Nl0sXG4gICAgICAgIFs2LCAyOCwgNTBdLFxuICAgICAgICBbNiwgMzAsIDU0XSxcbiAgICAgICAgWzYsIDMyLCA1OF0sXG4gICAgICAgIFs2LCAzNCwgNjJdLFxuICAgICAgICBbNiwgMjYsIDQ2LCA2Nl0sXG4gICAgICAgIFs2LCAyNiwgNDgsIDcwXSxcbiAgICAgICAgWzYsIDI2LCA1MCwgNzRdLFxuICAgICAgICBbNiwgMzAsIDU0LCA3OF0sXG4gICAgICAgIFs2LCAzMCwgNTYsIDgyXSxcbiAgICAgICAgWzYsIDMwLCA1OCwgODZdLFxuICAgICAgICBbNiwgMzQsIDYyLCA5MF0sXG4gICAgICAgIFs2LCAyOCwgNTAsIDcyLCA5NF0sXG4gICAgICAgIFs2LCAyNiwgNTAsIDc0LCA5OF0sXG4gICAgICAgIFs2LCAzMCwgNTQsIDc4LCAxMDJdLFxuICAgICAgICBbNiwgMjgsIDU0LCA4MCwgMTA2XSxcbiAgICAgICAgWzYsIDMyLCA1OCwgODQsIDExMF0sXG4gICAgICAgIFs2LCAzMCwgNTgsIDg2LCAxMTRdLFxuICAgICAgICBbNiwgMzQsIDYyLCA5MCwgMTE4XSxcbiAgICAgICAgWzYsIDI2LCA1MCwgNzQsIDk4LCAxMjJdLFxuICAgICAgICBbNiwgMzAsIDU0LCA3OCwgMTAyLCAxMjZdLFxuICAgICAgICBbNiwgMjYsIDUyLCA3OCwgMTA0LCAxMzBdLFxuICAgICAgICBbNiwgMzAsIDU2LCA4MiwgMTA4LCAxMzRdLFxuICAgICAgICBbNiwgMzQsIDYwLCA4NiwgMTEyLCAxMzhdLFxuICAgICAgICBbNiwgMzAsIDU4LCA4NiwgMTE0LCAxNDJdLFxuICAgICAgICBbNiwgMzQsIDYyLCA5MCwgMTE4LCAxNDZdLFxuICAgICAgICBbNiwgMzAsIDU0LCA3OCwgMTAyLCAxMjYsIDE1MF0sXG4gICAgICAgIFs2LCAyNCwgNTAsIDc2LCAxMDIsIDEyOCwgMTU0XSxcbiAgICAgICAgWzYsIDI4LCA1NCwgODAsIDEwNiwgMTMyLCAxNThdLFxuICAgICAgICBbNiwgMzIsIDU4LCA4NCwgMTEwLCAxMzYsIDE2Ml0sXG4gICAgICAgIFs2LCAyNiwgNTQsIDgyLCAxMTAsIDEzOCwgMTY2XSxcbiAgICAgICAgWzYsIDMwLCA1OCwgODYsIDExNCwgMTQyLCAxNzBdXG4gICAgICBdO1xuICAgICAgdmFyIEcxNSA9IDEgPDwgMTAgfCAxIDw8IDggfCAxIDw8IDUgfCAxIDw8IDQgfCAxIDw8IDIgfCAxIDw8IDEgfCAxIDw8IDA7XG4gICAgICB2YXIgRzE4ID0gMSA8PCAxMiB8IDEgPDwgMTEgfCAxIDw8IDEwIHwgMSA8PCA5IHwgMSA8PCA4IHwgMSA8PCA1IHwgMSA8PCAyIHwgMSA8PCAwO1xuICAgICAgdmFyIEcxNV9NQVNLID0gMSA8PCAxNCB8IDEgPDwgMTIgfCAxIDw8IDEwIHwgMSA8PCA0IHwgMSA8PCAxO1xuICAgICAgdmFyIF90aGlzID0ge307XG4gICAgICB2YXIgZ2V0QkNIRGlnaXQgPSBmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgIHZhciBkaWdpdCA9IDA7XG4gICAgICAgIHdoaWxlIChkYXRhICE9IDApIHtcbiAgICAgICAgICBkaWdpdCArPSAxO1xuICAgICAgICAgIGRhdGEgPj4+PSAxO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkaWdpdDtcbiAgICAgIH07XG4gICAgICBfdGhpcy5nZXRCQ0hUeXBlSW5mbyA9IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgdmFyIGQgPSBkYXRhIDw8IDEwO1xuICAgICAgICB3aGlsZSAoZ2V0QkNIRGlnaXQoZCkgLSBnZXRCQ0hEaWdpdChHMTUpID49IDApIHtcbiAgICAgICAgICBkIF49IEcxNSA8PCBnZXRCQ0hEaWdpdChkKSAtIGdldEJDSERpZ2l0KEcxNSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIChkYXRhIDw8IDEwIHwgZCkgXiBHMTVfTUFTSztcbiAgICAgIH07XG4gICAgICBfdGhpcy5nZXRCQ0hUeXBlTnVtYmVyID0gZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICB2YXIgZCA9IGRhdGEgPDwgMTI7XG4gICAgICAgIHdoaWxlIChnZXRCQ0hEaWdpdChkKSAtIGdldEJDSERpZ2l0KEcxOCkgPj0gMCkge1xuICAgICAgICAgIGQgXj0gRzE4IDw8IGdldEJDSERpZ2l0KGQpIC0gZ2V0QkNIRGlnaXQoRzE4KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZGF0YSA8PCAxMiB8IGQ7XG4gICAgICB9O1xuICAgICAgX3RoaXMuZ2V0UGF0dGVyblBvc2l0aW9uID0gZnVuY3Rpb24odHlwZU51bWJlcikge1xuICAgICAgICByZXR1cm4gUEFUVEVSTl9QT1NJVElPTl9UQUJMRVt0eXBlTnVtYmVyIC0gMV07XG4gICAgICB9O1xuICAgICAgX3RoaXMuZ2V0TWFza0Z1bmN0aW9uID0gZnVuY3Rpb24obWFza1BhdHRlcm4pIHtcbiAgICAgICAgc3dpdGNoIChtYXNrUGF0dGVybikge1xuICAgICAgICAgIGNhc2UgUVJNYXNrUGF0dGVybi5QQVRURVJOMDAwOlxuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKGkyLCBqKSB7XG4gICAgICAgICAgICAgIHJldHVybiAoaTIgKyBqKSAlIDIgPT0gMDtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgY2FzZSBRUk1hc2tQYXR0ZXJuLlBBVFRFUk4wMDE6XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24oaTIsIGopIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGkyICUgMiA9PSAwO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICBjYXNlIFFSTWFza1BhdHRlcm4uUEFUVEVSTjAxMDpcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbihpMiwgaikge1xuICAgICAgICAgICAgICByZXR1cm4gaiAlIDMgPT0gMDtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgY2FzZSBRUk1hc2tQYXR0ZXJuLlBBVFRFUk4wMTE6XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24oaTIsIGopIHtcbiAgICAgICAgICAgICAgcmV0dXJuIChpMiArIGopICUgMyA9PSAwO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICBjYXNlIFFSTWFza1BhdHRlcm4uUEFUVEVSTjEwMDpcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbihpMiwgaikge1xuICAgICAgICAgICAgICByZXR1cm4gKE1hdGguZmxvb3IoaTIgLyAyKSArIE1hdGguZmxvb3IoaiAvIDMpKSAlIDIgPT0gMDtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgY2FzZSBRUk1hc2tQYXR0ZXJuLlBBVFRFUk4xMDE6XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24oaTIsIGopIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGkyICogaiAlIDIgKyBpMiAqIGogJSAzID09IDA7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgIGNhc2UgUVJNYXNrUGF0dGVybi5QQVRURVJOMTEwOlxuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKGkyLCBqKSB7XG4gICAgICAgICAgICAgIHJldHVybiAoaTIgKiBqICUgMiArIGkyICogaiAlIDMpICUgMiA9PSAwO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICBjYXNlIFFSTWFza1BhdHRlcm4uUEFUVEVSTjExMTpcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbihpMiwgaikge1xuICAgICAgICAgICAgICByZXR1cm4gKGkyICogaiAlIDMgKyAoaTIgKyBqKSAlIDIpICUgMiA9PSAwO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgXCJiYWQgbWFza1BhdHRlcm46XCIgKyBtYXNrUGF0dGVybjtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIF90aGlzLmdldEVycm9yQ29ycmVjdFBvbHlub21pYWwgPSBmdW5jdGlvbihlcnJvckNvcnJlY3RMZW5ndGgpIHtcbiAgICAgICAgdmFyIGEyID0gcXJQb2x5bm9taWFsKFsxXSwgMCk7XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBlcnJvckNvcnJlY3RMZW5ndGg7IGkyICs9IDEpIHtcbiAgICAgICAgICBhMiA9IGEyLm11bHRpcGx5KHFyUG9seW5vbWlhbChbMSwgUVJNYXRoLmdleHAoaTIpXSwgMCkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhMjtcbiAgICAgIH07XG4gICAgICBfdGhpcy5nZXRMZW5ndGhJbkJpdHMgPSBmdW5jdGlvbihtb2RlLCB0eXBlKSB7XG4gICAgICAgIGlmICgxIDw9IHR5cGUgJiYgdHlwZSA8IDEwKSB7XG4gICAgICAgICAgc3dpdGNoIChtb2RlKSB7XG4gICAgICAgICAgICBjYXNlIFFSTW9kZS5NT0RFX05VTUJFUjpcbiAgICAgICAgICAgICAgcmV0dXJuIDEwO1xuICAgICAgICAgICAgY2FzZSBRUk1vZGUuTU9ERV9BTFBIQV9OVU06XG4gICAgICAgICAgICAgIHJldHVybiA5O1xuICAgICAgICAgICAgY2FzZSBRUk1vZGUuTU9ERV84QklUX0JZVEU6XG4gICAgICAgICAgICAgIHJldHVybiA4O1xuICAgICAgICAgICAgY2FzZSBRUk1vZGUuTU9ERV9LQU5KSTpcbiAgICAgICAgICAgICAgcmV0dXJuIDg7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICB0aHJvdyBcIm1vZGU6XCIgKyBtb2RlO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmICh0eXBlIDwgMjcpIHtcbiAgICAgICAgICBzd2l0Y2ggKG1vZGUpIHtcbiAgICAgICAgICAgIGNhc2UgUVJNb2RlLk1PREVfTlVNQkVSOlxuICAgICAgICAgICAgICByZXR1cm4gMTI7XG4gICAgICAgICAgICBjYXNlIFFSTW9kZS5NT0RFX0FMUEhBX05VTTpcbiAgICAgICAgICAgICAgcmV0dXJuIDExO1xuICAgICAgICAgICAgY2FzZSBRUk1vZGUuTU9ERV84QklUX0JZVEU6XG4gICAgICAgICAgICAgIHJldHVybiAxNjtcbiAgICAgICAgICAgIGNhc2UgUVJNb2RlLk1PREVfS0FOSkk6XG4gICAgICAgICAgICAgIHJldHVybiAxMDtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgIHRocm93IFwibW9kZTpcIiArIG1vZGU7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKHR5cGUgPCA0MSkge1xuICAgICAgICAgIHN3aXRjaCAobW9kZSkge1xuICAgICAgICAgICAgY2FzZSBRUk1vZGUuTU9ERV9OVU1CRVI6XG4gICAgICAgICAgICAgIHJldHVybiAxNDtcbiAgICAgICAgICAgIGNhc2UgUVJNb2RlLk1PREVfQUxQSEFfTlVNOlxuICAgICAgICAgICAgICByZXR1cm4gMTM7XG4gICAgICAgICAgICBjYXNlIFFSTW9kZS5NT0RFXzhCSVRfQllURTpcbiAgICAgICAgICAgICAgcmV0dXJuIDE2O1xuICAgICAgICAgICAgY2FzZSBRUk1vZGUuTU9ERV9LQU5KSTpcbiAgICAgICAgICAgICAgcmV0dXJuIDEyO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgdGhyb3cgXCJtb2RlOlwiICsgbW9kZTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhyb3cgXCJ0eXBlOlwiICsgdHlwZTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIF90aGlzLmdldExvc3RQb2ludCA9IGZ1bmN0aW9uKHFyY29kZTQpIHtcbiAgICAgICAgdmFyIG1vZHVsZUNvdW50ID0gcXJjb2RlNC5nZXRNb2R1bGVDb3VudCgpO1xuICAgICAgICB2YXIgbG9zdFBvaW50ID0gMDtcbiAgICAgICAgZm9yICh2YXIgcm93ID0gMDsgcm93IDwgbW9kdWxlQ291bnQ7IHJvdyArPSAxKSB7XG4gICAgICAgICAgZm9yICh2YXIgY29sID0gMDsgY29sIDwgbW9kdWxlQ291bnQ7IGNvbCArPSAxKSB7XG4gICAgICAgICAgICB2YXIgc2FtZUNvdW50ID0gMDtcbiAgICAgICAgICAgIHZhciBkYXJrID0gcXJjb2RlNC5pc0Rhcmsocm93LCBjb2wpO1xuICAgICAgICAgICAgZm9yICh2YXIgciA9IC0xOyByIDw9IDE7IHIgKz0gMSkge1xuICAgICAgICAgICAgICBpZiAocm93ICsgciA8IDAgfHwgbW9kdWxlQ291bnQgPD0gcm93ICsgcikge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGZvciAodmFyIGMyID0gLTE7IGMyIDw9IDE7IGMyICs9IDEpIHtcbiAgICAgICAgICAgICAgICBpZiAoY29sICsgYzIgPCAwIHx8IG1vZHVsZUNvdW50IDw9IGNvbCArIGMyKSB7XG4gICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHIgPT0gMCAmJiBjMiA9PSAwKSB7XG4gICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGRhcmsgPT0gcXJjb2RlNC5pc0Rhcmsocm93ICsgciwgY29sICsgYzIpKSB7XG4gICAgICAgICAgICAgICAgICBzYW1lQ291bnQgKz0gMTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzYW1lQ291bnQgPiA1KSB7XG4gICAgICAgICAgICAgIGxvc3RQb2ludCArPSAzICsgc2FtZUNvdW50IC0gNTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZm9yICh2YXIgcm93ID0gMDsgcm93IDwgbW9kdWxlQ291bnQgLSAxOyByb3cgKz0gMSkge1xuICAgICAgICAgIGZvciAodmFyIGNvbCA9IDA7IGNvbCA8IG1vZHVsZUNvdW50IC0gMTsgY29sICs9IDEpIHtcbiAgICAgICAgICAgIHZhciBjb3VudCA9IDA7XG4gICAgICAgICAgICBpZiAocXJjb2RlNC5pc0Rhcmsocm93LCBjb2wpKVxuICAgICAgICAgICAgICBjb3VudCArPSAxO1xuICAgICAgICAgICAgaWYgKHFyY29kZTQuaXNEYXJrKHJvdyArIDEsIGNvbCkpXG4gICAgICAgICAgICAgIGNvdW50ICs9IDE7XG4gICAgICAgICAgICBpZiAocXJjb2RlNC5pc0Rhcmsocm93LCBjb2wgKyAxKSlcbiAgICAgICAgICAgICAgY291bnQgKz0gMTtcbiAgICAgICAgICAgIGlmIChxcmNvZGU0LmlzRGFyayhyb3cgKyAxLCBjb2wgKyAxKSlcbiAgICAgICAgICAgICAgY291bnQgKz0gMTtcbiAgICAgICAgICAgIGlmIChjb3VudCA9PSAwIHx8IGNvdW50ID09IDQpIHtcbiAgICAgICAgICAgICAgbG9zdFBvaW50ICs9IDM7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvciAodmFyIHJvdyA9IDA7IHJvdyA8IG1vZHVsZUNvdW50OyByb3cgKz0gMSkge1xuICAgICAgICAgIGZvciAodmFyIGNvbCA9IDA7IGNvbCA8IG1vZHVsZUNvdW50IC0gNjsgY29sICs9IDEpIHtcbiAgICAgICAgICAgIGlmIChxcmNvZGU0LmlzRGFyayhyb3csIGNvbCkgJiYgIXFyY29kZTQuaXNEYXJrKHJvdywgY29sICsgMSkgJiYgcXJjb2RlNC5pc0Rhcmsocm93LCBjb2wgKyAyKSAmJiBxcmNvZGU0LmlzRGFyayhyb3csIGNvbCArIDMpICYmIHFyY29kZTQuaXNEYXJrKHJvdywgY29sICsgNCkgJiYgIXFyY29kZTQuaXNEYXJrKHJvdywgY29sICsgNSkgJiYgcXJjb2RlNC5pc0Rhcmsocm93LCBjb2wgKyA2KSkge1xuICAgICAgICAgICAgICBsb3N0UG9pbnQgKz0gNDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvciAodmFyIGNvbCA9IDA7IGNvbCA8IG1vZHVsZUNvdW50OyBjb2wgKz0gMSkge1xuICAgICAgICAgIGZvciAodmFyIHJvdyA9IDA7IHJvdyA8IG1vZHVsZUNvdW50IC0gNjsgcm93ICs9IDEpIHtcbiAgICAgICAgICAgIGlmIChxcmNvZGU0LmlzRGFyayhyb3csIGNvbCkgJiYgIXFyY29kZTQuaXNEYXJrKHJvdyArIDEsIGNvbCkgJiYgcXJjb2RlNC5pc0Rhcmsocm93ICsgMiwgY29sKSAmJiBxcmNvZGU0LmlzRGFyayhyb3cgKyAzLCBjb2wpICYmIHFyY29kZTQuaXNEYXJrKHJvdyArIDQsIGNvbCkgJiYgIXFyY29kZTQuaXNEYXJrKHJvdyArIDUsIGNvbCkgJiYgcXJjb2RlNC5pc0Rhcmsocm93ICsgNiwgY29sKSkge1xuICAgICAgICAgICAgICBsb3N0UG9pbnQgKz0gNDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHZhciBkYXJrQ291bnQgPSAwO1xuICAgICAgICBmb3IgKHZhciBjb2wgPSAwOyBjb2wgPCBtb2R1bGVDb3VudDsgY29sICs9IDEpIHtcbiAgICAgICAgICBmb3IgKHZhciByb3cgPSAwOyByb3cgPCBtb2R1bGVDb3VudDsgcm93ICs9IDEpIHtcbiAgICAgICAgICAgIGlmIChxcmNvZGU0LmlzRGFyayhyb3csIGNvbCkpIHtcbiAgICAgICAgICAgICAgZGFya0NvdW50ICs9IDE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHZhciByYXRpbyA9IE1hdGguYWJzKDEwMCAqIGRhcmtDb3VudCAvIG1vZHVsZUNvdW50IC8gbW9kdWxlQ291bnQgLSA1MCkgLyA1O1xuICAgICAgICBsb3N0UG9pbnQgKz0gcmF0aW8gKiAxMDtcbiAgICAgICAgcmV0dXJuIGxvc3RQb2ludDtcbiAgICAgIH07XG4gICAgICByZXR1cm4gX3RoaXM7XG4gICAgfSgpO1xuICAgIHZhciBRUk1hdGggPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBFWFBfVEFCTEUgPSBuZXcgQXJyYXkoMjU2KTtcbiAgICAgIHZhciBMT0dfVEFCTEUgPSBuZXcgQXJyYXkoMjU2KTtcbiAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCA4OyBpMiArPSAxKSB7XG4gICAgICAgIEVYUF9UQUJMRVtpMl0gPSAxIDw8IGkyO1xuICAgICAgfVxuICAgICAgZm9yICh2YXIgaTIgPSA4OyBpMiA8IDI1NjsgaTIgKz0gMSkge1xuICAgICAgICBFWFBfVEFCTEVbaTJdID0gRVhQX1RBQkxFW2kyIC0gNF0gXiBFWFBfVEFCTEVbaTIgLSA1XSBeIEVYUF9UQUJMRVtpMiAtIDZdIF4gRVhQX1RBQkxFW2kyIC0gOF07XG4gICAgICB9XG4gICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgMjU1OyBpMiArPSAxKSB7XG4gICAgICAgIExPR19UQUJMRVtFWFBfVEFCTEVbaTJdXSA9IGkyO1xuICAgICAgfVxuICAgICAgdmFyIF90aGlzID0ge307XG4gICAgICBfdGhpcy5nbG9nID0gZnVuY3Rpb24objIpIHtcbiAgICAgICAgaWYgKG4yIDwgMSkge1xuICAgICAgICAgIHRocm93IFwiZ2xvZyhcIiArIG4yICsgXCIpXCI7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIExPR19UQUJMRVtuMl07XG4gICAgICB9O1xuICAgICAgX3RoaXMuZ2V4cCA9IGZ1bmN0aW9uKG4yKSB7XG4gICAgICAgIHdoaWxlIChuMiA8IDApIHtcbiAgICAgICAgICBuMiArPSAyNTU7XG4gICAgICAgIH1cbiAgICAgICAgd2hpbGUgKG4yID49IDI1Nikge1xuICAgICAgICAgIG4yIC09IDI1NTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gRVhQX1RBQkxFW24yXTtcbiAgICAgIH07XG4gICAgICByZXR1cm4gX3RoaXM7XG4gICAgfSgpO1xuICAgIGZ1bmN0aW9uIHFyUG9seW5vbWlhbChudW0sIHNoaWZ0KSB7XG4gICAgICBpZiAodHlwZW9mIG51bS5sZW5ndGggPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICB0aHJvdyBudW0ubGVuZ3RoICsgXCIvXCIgKyBzaGlmdDtcbiAgICAgIH1cbiAgICAgIHZhciBfbnVtID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBvZmZzZXQgPSAwO1xuICAgICAgICB3aGlsZSAob2Zmc2V0IDwgbnVtLmxlbmd0aCAmJiBudW1bb2Zmc2V0XSA9PSAwKSB7XG4gICAgICAgICAgb2Zmc2V0ICs9IDE7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIF9udW0yID0gbmV3IEFycmF5KG51bS5sZW5ndGggLSBvZmZzZXQgKyBzaGlmdCk7XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBudW0ubGVuZ3RoIC0gb2Zmc2V0OyBpMiArPSAxKSB7XG4gICAgICAgICAgX251bTJbaTJdID0gbnVtW2kyICsgb2Zmc2V0XTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gX251bTI7XG4gICAgICB9KCk7XG4gICAgICB2YXIgX3RoaXMgPSB7fTtcbiAgICAgIF90aGlzLmdldEF0ID0gZnVuY3Rpb24oaW5kZXgpIHtcbiAgICAgICAgcmV0dXJuIF9udW1baW5kZXhdO1xuICAgICAgfTtcbiAgICAgIF90aGlzLmdldExlbmd0aCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX251bS5sZW5ndGg7XG4gICAgICB9O1xuICAgICAgX3RoaXMubXVsdGlwbHkgPSBmdW5jdGlvbihlMikge1xuICAgICAgICB2YXIgbnVtMiA9IG5ldyBBcnJheShfdGhpcy5nZXRMZW5ndGgoKSArIGUyLmdldExlbmd0aCgpIC0gMSk7XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBfdGhpcy5nZXRMZW5ndGgoKTsgaTIgKz0gMSkge1xuICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgZTIuZ2V0TGVuZ3RoKCk7IGogKz0gMSkge1xuICAgICAgICAgICAgbnVtMltpMiArIGpdIF49IFFSTWF0aC5nZXhwKFFSTWF0aC5nbG9nKF90aGlzLmdldEF0KGkyKSkgKyBRUk1hdGguZ2xvZyhlMi5nZXRBdChqKSkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcXJQb2x5bm9taWFsKG51bTIsIDApO1xuICAgICAgfTtcbiAgICAgIF90aGlzLm1vZCA9IGZ1bmN0aW9uKGUyKSB7XG4gICAgICAgIGlmIChfdGhpcy5nZXRMZW5ndGgoKSAtIGUyLmdldExlbmd0aCgpIDwgMCkge1xuICAgICAgICAgIHJldHVybiBfdGhpcztcbiAgICAgICAgfVxuICAgICAgICB2YXIgcmF0aW8gPSBRUk1hdGguZ2xvZyhfdGhpcy5nZXRBdCgwKSkgLSBRUk1hdGguZ2xvZyhlMi5nZXRBdCgwKSk7XG4gICAgICAgIHZhciBudW0yID0gbmV3IEFycmF5KF90aGlzLmdldExlbmd0aCgpKTtcbiAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IF90aGlzLmdldExlbmd0aCgpOyBpMiArPSAxKSB7XG4gICAgICAgICAgbnVtMltpMl0gPSBfdGhpcy5nZXRBdChpMik7XG4gICAgICAgIH1cbiAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IGUyLmdldExlbmd0aCgpOyBpMiArPSAxKSB7XG4gICAgICAgICAgbnVtMltpMl0gXj0gUVJNYXRoLmdleHAoUVJNYXRoLmdsb2coZTIuZ2V0QXQoaTIpKSArIHJhdGlvKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcXJQb2x5bm9taWFsKG51bTIsIDApLm1vZChlMik7XG4gICAgICB9O1xuICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICB2YXIgUVJSU0Jsb2NrID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgUlNfQkxPQ0tfVEFCTEUgPSBbXG4gICAgICAgIFsxLCAyNiwgMTldLFxuICAgICAgICBbMSwgMjYsIDE2XSxcbiAgICAgICAgWzEsIDI2LCAxM10sXG4gICAgICAgIFsxLCAyNiwgOV0sXG4gICAgICAgIFsxLCA0NCwgMzRdLFxuICAgICAgICBbMSwgNDQsIDI4XSxcbiAgICAgICAgWzEsIDQ0LCAyMl0sXG4gICAgICAgIFsxLCA0NCwgMTZdLFxuICAgICAgICBbMSwgNzAsIDU1XSxcbiAgICAgICAgWzEsIDcwLCA0NF0sXG4gICAgICAgIFsyLCAzNSwgMTddLFxuICAgICAgICBbMiwgMzUsIDEzXSxcbiAgICAgICAgWzEsIDEwMCwgODBdLFxuICAgICAgICBbMiwgNTAsIDMyXSxcbiAgICAgICAgWzIsIDUwLCAyNF0sXG4gICAgICAgIFs0LCAyNSwgOV0sXG4gICAgICAgIFsxLCAxMzQsIDEwOF0sXG4gICAgICAgIFsyLCA2NywgNDNdLFxuICAgICAgICBbMiwgMzMsIDE1LCAyLCAzNCwgMTZdLFxuICAgICAgICBbMiwgMzMsIDExLCAyLCAzNCwgMTJdLFxuICAgICAgICBbMiwgODYsIDY4XSxcbiAgICAgICAgWzQsIDQzLCAyN10sXG4gICAgICAgIFs0LCA0MywgMTldLFxuICAgICAgICBbNCwgNDMsIDE1XSxcbiAgICAgICAgWzIsIDk4LCA3OF0sXG4gICAgICAgIFs0LCA0OSwgMzFdLFxuICAgICAgICBbMiwgMzIsIDE0LCA0LCAzMywgMTVdLFxuICAgICAgICBbNCwgMzksIDEzLCAxLCA0MCwgMTRdLFxuICAgICAgICBbMiwgMTIxLCA5N10sXG4gICAgICAgIFsyLCA2MCwgMzgsIDIsIDYxLCAzOV0sXG4gICAgICAgIFs0LCA0MCwgMTgsIDIsIDQxLCAxOV0sXG4gICAgICAgIFs0LCA0MCwgMTQsIDIsIDQxLCAxNV0sXG4gICAgICAgIFsyLCAxNDYsIDExNl0sXG4gICAgICAgIFszLCA1OCwgMzYsIDIsIDU5LCAzN10sXG4gICAgICAgIFs0LCAzNiwgMTYsIDQsIDM3LCAxN10sXG4gICAgICAgIFs0LCAzNiwgMTIsIDQsIDM3LCAxM10sXG4gICAgICAgIFsyLCA4NiwgNjgsIDIsIDg3LCA2OV0sXG4gICAgICAgIFs0LCA2OSwgNDMsIDEsIDcwLCA0NF0sXG4gICAgICAgIFs2LCA0MywgMTksIDIsIDQ0LCAyMF0sXG4gICAgICAgIFs2LCA0MywgMTUsIDIsIDQ0LCAxNl0sXG4gICAgICAgIFs0LCAxMDEsIDgxXSxcbiAgICAgICAgWzEsIDgwLCA1MCwgNCwgODEsIDUxXSxcbiAgICAgICAgWzQsIDUwLCAyMiwgNCwgNTEsIDIzXSxcbiAgICAgICAgWzMsIDM2LCAxMiwgOCwgMzcsIDEzXSxcbiAgICAgICAgWzIsIDExNiwgOTIsIDIsIDExNywgOTNdLFxuICAgICAgICBbNiwgNTgsIDM2LCAyLCA1OSwgMzddLFxuICAgICAgICBbNCwgNDYsIDIwLCA2LCA0NywgMjFdLFxuICAgICAgICBbNywgNDIsIDE0LCA0LCA0MywgMTVdLFxuICAgICAgICBbNCwgMTMzLCAxMDddLFxuICAgICAgICBbOCwgNTksIDM3LCAxLCA2MCwgMzhdLFxuICAgICAgICBbOCwgNDQsIDIwLCA0LCA0NSwgMjFdLFxuICAgICAgICBbMTIsIDMzLCAxMSwgNCwgMzQsIDEyXSxcbiAgICAgICAgWzMsIDE0NSwgMTE1LCAxLCAxNDYsIDExNl0sXG4gICAgICAgIFs0LCA2NCwgNDAsIDUsIDY1LCA0MV0sXG4gICAgICAgIFsxMSwgMzYsIDE2LCA1LCAzNywgMTddLFxuICAgICAgICBbMTEsIDM2LCAxMiwgNSwgMzcsIDEzXSxcbiAgICAgICAgWzUsIDEwOSwgODcsIDEsIDExMCwgODhdLFxuICAgICAgICBbNSwgNjUsIDQxLCA1LCA2NiwgNDJdLFxuICAgICAgICBbNSwgNTQsIDI0LCA3LCA1NSwgMjVdLFxuICAgICAgICBbMTEsIDM2LCAxMiwgNywgMzcsIDEzXSxcbiAgICAgICAgWzUsIDEyMiwgOTgsIDEsIDEyMywgOTldLFxuICAgICAgICBbNywgNzMsIDQ1LCAzLCA3NCwgNDZdLFxuICAgICAgICBbMTUsIDQzLCAxOSwgMiwgNDQsIDIwXSxcbiAgICAgICAgWzMsIDQ1LCAxNSwgMTMsIDQ2LCAxNl0sXG4gICAgICAgIFsxLCAxMzUsIDEwNywgNSwgMTM2LCAxMDhdLFxuICAgICAgICBbMTAsIDc0LCA0NiwgMSwgNzUsIDQ3XSxcbiAgICAgICAgWzEsIDUwLCAyMiwgMTUsIDUxLCAyM10sXG4gICAgICAgIFsyLCA0MiwgMTQsIDE3LCA0MywgMTVdLFxuICAgICAgICBbNSwgMTUwLCAxMjAsIDEsIDE1MSwgMTIxXSxcbiAgICAgICAgWzksIDY5LCA0MywgNCwgNzAsIDQ0XSxcbiAgICAgICAgWzE3LCA1MCwgMjIsIDEsIDUxLCAyM10sXG4gICAgICAgIFsyLCA0MiwgMTQsIDE5LCA0MywgMTVdLFxuICAgICAgICBbMywgMTQxLCAxMTMsIDQsIDE0MiwgMTE0XSxcbiAgICAgICAgWzMsIDcwLCA0NCwgMTEsIDcxLCA0NV0sXG4gICAgICAgIFsxNywgNDcsIDIxLCA0LCA0OCwgMjJdLFxuICAgICAgICBbOSwgMzksIDEzLCAxNiwgNDAsIDE0XSxcbiAgICAgICAgWzMsIDEzNSwgMTA3LCA1LCAxMzYsIDEwOF0sXG4gICAgICAgIFszLCA2NywgNDEsIDEzLCA2OCwgNDJdLFxuICAgICAgICBbMTUsIDU0LCAyNCwgNSwgNTUsIDI1XSxcbiAgICAgICAgWzE1LCA0MywgMTUsIDEwLCA0NCwgMTZdLFxuICAgICAgICBbNCwgMTQ0LCAxMTYsIDQsIDE0NSwgMTE3XSxcbiAgICAgICAgWzE3LCA2OCwgNDJdLFxuICAgICAgICBbMTcsIDUwLCAyMiwgNiwgNTEsIDIzXSxcbiAgICAgICAgWzE5LCA0NiwgMTYsIDYsIDQ3LCAxN10sXG4gICAgICAgIFsyLCAxMzksIDExMSwgNywgMTQwLCAxMTJdLFxuICAgICAgICBbMTcsIDc0LCA0Nl0sXG4gICAgICAgIFs3LCA1NCwgMjQsIDE2LCA1NSwgMjVdLFxuICAgICAgICBbMzQsIDM3LCAxM10sXG4gICAgICAgIFs0LCAxNTEsIDEyMSwgNSwgMTUyLCAxMjJdLFxuICAgICAgICBbNCwgNzUsIDQ3LCAxNCwgNzYsIDQ4XSxcbiAgICAgICAgWzExLCA1NCwgMjQsIDE0LCA1NSwgMjVdLFxuICAgICAgICBbMTYsIDQ1LCAxNSwgMTQsIDQ2LCAxNl0sXG4gICAgICAgIFs2LCAxNDcsIDExNywgNCwgMTQ4LCAxMThdLFxuICAgICAgICBbNiwgNzMsIDQ1LCAxNCwgNzQsIDQ2XSxcbiAgICAgICAgWzExLCA1NCwgMjQsIDE2LCA1NSwgMjVdLFxuICAgICAgICBbMzAsIDQ2LCAxNiwgMiwgNDcsIDE3XSxcbiAgICAgICAgWzgsIDEzMiwgMTA2LCA0LCAxMzMsIDEwN10sXG4gICAgICAgIFs4LCA3NSwgNDcsIDEzLCA3NiwgNDhdLFxuICAgICAgICBbNywgNTQsIDI0LCAyMiwgNTUsIDI1XSxcbiAgICAgICAgWzIyLCA0NSwgMTUsIDEzLCA0NiwgMTZdLFxuICAgICAgICBbMTAsIDE0MiwgMTE0LCAyLCAxNDMsIDExNV0sXG4gICAgICAgIFsxOSwgNzQsIDQ2LCA0LCA3NSwgNDddLFxuICAgICAgICBbMjgsIDUwLCAyMiwgNiwgNTEsIDIzXSxcbiAgICAgICAgWzMzLCA0NiwgMTYsIDQsIDQ3LCAxN10sXG4gICAgICAgIFs4LCAxNTIsIDEyMiwgNCwgMTUzLCAxMjNdLFxuICAgICAgICBbMjIsIDczLCA0NSwgMywgNzQsIDQ2XSxcbiAgICAgICAgWzgsIDUzLCAyMywgMjYsIDU0LCAyNF0sXG4gICAgICAgIFsxMiwgNDUsIDE1LCAyOCwgNDYsIDE2XSxcbiAgICAgICAgWzMsIDE0NywgMTE3LCAxMCwgMTQ4LCAxMThdLFxuICAgICAgICBbMywgNzMsIDQ1LCAyMywgNzQsIDQ2XSxcbiAgICAgICAgWzQsIDU0LCAyNCwgMzEsIDU1LCAyNV0sXG4gICAgICAgIFsxMSwgNDUsIDE1LCAzMSwgNDYsIDE2XSxcbiAgICAgICAgWzcsIDE0NiwgMTE2LCA3LCAxNDcsIDExN10sXG4gICAgICAgIFsyMSwgNzMsIDQ1LCA3LCA3NCwgNDZdLFxuICAgICAgICBbMSwgNTMsIDIzLCAzNywgNTQsIDI0XSxcbiAgICAgICAgWzE5LCA0NSwgMTUsIDI2LCA0NiwgMTZdLFxuICAgICAgICBbNSwgMTQ1LCAxMTUsIDEwLCAxNDYsIDExNl0sXG4gICAgICAgIFsxOSwgNzUsIDQ3LCAxMCwgNzYsIDQ4XSxcbiAgICAgICAgWzE1LCA1NCwgMjQsIDI1LCA1NSwgMjVdLFxuICAgICAgICBbMjMsIDQ1LCAxNSwgMjUsIDQ2LCAxNl0sXG4gICAgICAgIFsxMywgMTQ1LCAxMTUsIDMsIDE0NiwgMTE2XSxcbiAgICAgICAgWzIsIDc0LCA0NiwgMjksIDc1LCA0N10sXG4gICAgICAgIFs0MiwgNTQsIDI0LCAxLCA1NSwgMjVdLFxuICAgICAgICBbMjMsIDQ1LCAxNSwgMjgsIDQ2LCAxNl0sXG4gICAgICAgIFsxNywgMTQ1LCAxMTVdLFxuICAgICAgICBbMTAsIDc0LCA0NiwgMjMsIDc1LCA0N10sXG4gICAgICAgIFsxMCwgNTQsIDI0LCAzNSwgNTUsIDI1XSxcbiAgICAgICAgWzE5LCA0NSwgMTUsIDM1LCA0NiwgMTZdLFxuICAgICAgICBbMTcsIDE0NSwgMTE1LCAxLCAxNDYsIDExNl0sXG4gICAgICAgIFsxNCwgNzQsIDQ2LCAyMSwgNzUsIDQ3XSxcbiAgICAgICAgWzI5LCA1NCwgMjQsIDE5LCA1NSwgMjVdLFxuICAgICAgICBbMTEsIDQ1LCAxNSwgNDYsIDQ2LCAxNl0sXG4gICAgICAgIFsxMywgMTQ1LCAxMTUsIDYsIDE0NiwgMTE2XSxcbiAgICAgICAgWzE0LCA3NCwgNDYsIDIzLCA3NSwgNDddLFxuICAgICAgICBbNDQsIDU0LCAyNCwgNywgNTUsIDI1XSxcbiAgICAgICAgWzU5LCA0NiwgMTYsIDEsIDQ3LCAxN10sXG4gICAgICAgIFsxMiwgMTUxLCAxMjEsIDcsIDE1MiwgMTIyXSxcbiAgICAgICAgWzEyLCA3NSwgNDcsIDI2LCA3NiwgNDhdLFxuICAgICAgICBbMzksIDU0LCAyNCwgMTQsIDU1LCAyNV0sXG4gICAgICAgIFsyMiwgNDUsIDE1LCA0MSwgNDYsIDE2XSxcbiAgICAgICAgWzYsIDE1MSwgMTIxLCAxNCwgMTUyLCAxMjJdLFxuICAgICAgICBbNiwgNzUsIDQ3LCAzNCwgNzYsIDQ4XSxcbiAgICAgICAgWzQ2LCA1NCwgMjQsIDEwLCA1NSwgMjVdLFxuICAgICAgICBbMiwgNDUsIDE1LCA2NCwgNDYsIDE2XSxcbiAgICAgICAgWzE3LCAxNTIsIDEyMiwgNCwgMTUzLCAxMjNdLFxuICAgICAgICBbMjksIDc0LCA0NiwgMTQsIDc1LCA0N10sXG4gICAgICAgIFs0OSwgNTQsIDI0LCAxMCwgNTUsIDI1XSxcbiAgICAgICAgWzI0LCA0NSwgMTUsIDQ2LCA0NiwgMTZdLFxuICAgICAgICBbNCwgMTUyLCAxMjIsIDE4LCAxNTMsIDEyM10sXG4gICAgICAgIFsxMywgNzQsIDQ2LCAzMiwgNzUsIDQ3XSxcbiAgICAgICAgWzQ4LCA1NCwgMjQsIDE0LCA1NSwgMjVdLFxuICAgICAgICBbNDIsIDQ1LCAxNSwgMzIsIDQ2LCAxNl0sXG4gICAgICAgIFsyMCwgMTQ3LCAxMTcsIDQsIDE0OCwgMTE4XSxcbiAgICAgICAgWzQwLCA3NSwgNDcsIDcsIDc2LCA0OF0sXG4gICAgICAgIFs0MywgNTQsIDI0LCAyMiwgNTUsIDI1XSxcbiAgICAgICAgWzEwLCA0NSwgMTUsIDY3LCA0NiwgMTZdLFxuICAgICAgICBbMTksIDE0OCwgMTE4LCA2LCAxNDksIDExOV0sXG4gICAgICAgIFsxOCwgNzUsIDQ3LCAzMSwgNzYsIDQ4XSxcbiAgICAgICAgWzM0LCA1NCwgMjQsIDM0LCA1NSwgMjVdLFxuICAgICAgICBbMjAsIDQ1LCAxNSwgNjEsIDQ2LCAxNl1cbiAgICAgIF07XG4gICAgICB2YXIgcXJSU0Jsb2NrID0gZnVuY3Rpb24odG90YWxDb3VudCwgZGF0YUNvdW50KSB7XG4gICAgICAgIHZhciBfdGhpczIgPSB7fTtcbiAgICAgICAgX3RoaXMyLnRvdGFsQ291bnQgPSB0b3RhbENvdW50O1xuICAgICAgICBfdGhpczIuZGF0YUNvdW50ID0gZGF0YUNvdW50O1xuICAgICAgICByZXR1cm4gX3RoaXMyO1xuICAgICAgfTtcbiAgICAgIHZhciBfdGhpcyA9IHt9O1xuICAgICAgdmFyIGdldFJzQmxvY2tUYWJsZSA9IGZ1bmN0aW9uKHR5cGVOdW1iZXIsIGVycm9yQ29ycmVjdGlvbkxldmVsKSB7XG4gICAgICAgIHN3aXRjaCAoZXJyb3JDb3JyZWN0aW9uTGV2ZWwpIHtcbiAgICAgICAgICBjYXNlIFFSRXJyb3JDb3JyZWN0aW9uTGV2ZWwuTDpcbiAgICAgICAgICAgIHJldHVybiBSU19CTE9DS19UQUJMRVsodHlwZU51bWJlciAtIDEpICogNCArIDBdO1xuICAgICAgICAgIGNhc2UgUVJFcnJvckNvcnJlY3Rpb25MZXZlbC5NOlxuICAgICAgICAgICAgcmV0dXJuIFJTX0JMT0NLX1RBQkxFWyh0eXBlTnVtYmVyIC0gMSkgKiA0ICsgMV07XG4gICAgICAgICAgY2FzZSBRUkVycm9yQ29ycmVjdGlvbkxldmVsLlE6XG4gICAgICAgICAgICByZXR1cm4gUlNfQkxPQ0tfVEFCTEVbKHR5cGVOdW1iZXIgLSAxKSAqIDQgKyAyXTtcbiAgICAgICAgICBjYXNlIFFSRXJyb3JDb3JyZWN0aW9uTGV2ZWwuSDpcbiAgICAgICAgICAgIHJldHVybiBSU19CTE9DS19UQUJMRVsodHlwZU51bWJlciAtIDEpICogNCArIDNdO1xuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gdm9pZCAwO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgX3RoaXMuZ2V0UlNCbG9ja3MgPSBmdW5jdGlvbih0eXBlTnVtYmVyLCBlcnJvckNvcnJlY3Rpb25MZXZlbCkge1xuICAgICAgICB2YXIgcnNCbG9jayA9IGdldFJzQmxvY2tUYWJsZSh0eXBlTnVtYmVyLCBlcnJvckNvcnJlY3Rpb25MZXZlbCk7XG4gICAgICAgIGlmICh0eXBlb2YgcnNCbG9jayA9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgdGhyb3cgXCJiYWQgcnMgYmxvY2sgQCB0eXBlTnVtYmVyOlwiICsgdHlwZU51bWJlciArIFwiL2Vycm9yQ29ycmVjdGlvbkxldmVsOlwiICsgZXJyb3JDb3JyZWN0aW9uTGV2ZWw7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGxlbmd0aCA9IHJzQmxvY2subGVuZ3RoIC8gMztcbiAgICAgICAgdmFyIGxpc3QgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IGxlbmd0aDsgaTIgKz0gMSkge1xuICAgICAgICAgIHZhciBjb3VudCA9IHJzQmxvY2tbaTIgKiAzICsgMF07XG4gICAgICAgICAgdmFyIHRvdGFsQ291bnQgPSByc0Jsb2NrW2kyICogMyArIDFdO1xuICAgICAgICAgIHZhciBkYXRhQ291bnQgPSByc0Jsb2NrW2kyICogMyArIDJdO1xuICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgY291bnQ7IGogKz0gMSkge1xuICAgICAgICAgICAgbGlzdC5wdXNoKHFyUlNCbG9jayh0b3RhbENvdW50LCBkYXRhQ291bnQpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGxpc3Q7XG4gICAgICB9O1xuICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH0oKTtcbiAgICB2YXIgcXJCaXRCdWZmZXIgPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBfYnVmZmVyID0gW107XG4gICAgICB2YXIgX2xlbmd0aCA9IDA7XG4gICAgICB2YXIgX3RoaXMgPSB7fTtcbiAgICAgIF90aGlzLmdldEJ1ZmZlciA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX2J1ZmZlcjtcbiAgICAgIH07XG4gICAgICBfdGhpcy5nZXRBdCA9IGZ1bmN0aW9uKGluZGV4KSB7XG4gICAgICAgIHZhciBidWZJbmRleCA9IE1hdGguZmxvb3IoaW5kZXggLyA4KTtcbiAgICAgICAgcmV0dXJuIChfYnVmZmVyW2J1ZkluZGV4XSA+Pj4gNyAtIGluZGV4ICUgOCAmIDEpID09IDE7XG4gICAgICB9O1xuICAgICAgX3RoaXMucHV0ID0gZnVuY3Rpb24obnVtLCBsZW5ndGgpIHtcbiAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IGxlbmd0aDsgaTIgKz0gMSkge1xuICAgICAgICAgIF90aGlzLnB1dEJpdCgobnVtID4+PiBsZW5ndGggLSBpMiAtIDEgJiAxKSA9PSAxKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIF90aGlzLmdldExlbmd0aEluQml0cyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX2xlbmd0aDtcbiAgICAgIH07XG4gICAgICBfdGhpcy5wdXRCaXQgPSBmdW5jdGlvbihiaXQpIHtcbiAgICAgICAgdmFyIGJ1ZkluZGV4ID0gTWF0aC5mbG9vcihfbGVuZ3RoIC8gOCk7XG4gICAgICAgIGlmIChfYnVmZmVyLmxlbmd0aCA8PSBidWZJbmRleCkge1xuICAgICAgICAgIF9idWZmZXIucHVzaCgwKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYml0KSB7XG4gICAgICAgICAgX2J1ZmZlcltidWZJbmRleF0gfD0gMTI4ID4+PiBfbGVuZ3RoICUgODtcbiAgICAgICAgfVxuICAgICAgICBfbGVuZ3RoICs9IDE7XG4gICAgICB9O1xuICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH07XG4gICAgdmFyIHFyTnVtYmVyID0gZnVuY3Rpb24oZGF0YSkge1xuICAgICAgdmFyIF9tb2RlID0gUVJNb2RlLk1PREVfTlVNQkVSO1xuICAgICAgdmFyIF9kYXRhID0gZGF0YTtcbiAgICAgIHZhciBfdGhpcyA9IHt9O1xuICAgICAgX3RoaXMuZ2V0TW9kZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX21vZGU7XG4gICAgICB9O1xuICAgICAgX3RoaXMuZ2V0TGVuZ3RoID0gZnVuY3Rpb24oYnVmZmVyKSB7XG4gICAgICAgIHJldHVybiBfZGF0YS5sZW5ndGg7XG4gICAgICB9O1xuICAgICAgX3RoaXMud3JpdGUgPSBmdW5jdGlvbihidWZmZXIpIHtcbiAgICAgICAgdmFyIGRhdGEyID0gX2RhdGE7XG4gICAgICAgIHZhciBpMiA9IDA7XG4gICAgICAgIHdoaWxlIChpMiArIDIgPCBkYXRhMi5sZW5ndGgpIHtcbiAgICAgICAgICBidWZmZXIucHV0KHN0clRvTnVtKGRhdGEyLnN1YnN0cmluZyhpMiwgaTIgKyAzKSksIDEwKTtcbiAgICAgICAgICBpMiArPSAzO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpMiA8IGRhdGEyLmxlbmd0aCkge1xuICAgICAgICAgIGlmIChkYXRhMi5sZW5ndGggLSBpMiA9PSAxKSB7XG4gICAgICAgICAgICBidWZmZXIucHV0KHN0clRvTnVtKGRhdGEyLnN1YnN0cmluZyhpMiwgaTIgKyAxKSksIDQpO1xuICAgICAgICAgIH0gZWxzZSBpZiAoZGF0YTIubGVuZ3RoIC0gaTIgPT0gMikge1xuICAgICAgICAgICAgYnVmZmVyLnB1dChzdHJUb051bShkYXRhMi5zdWJzdHJpbmcoaTIsIGkyICsgMikpLCA3KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICB2YXIgc3RyVG9OdW0gPSBmdW5jdGlvbihzMikge1xuICAgICAgICB2YXIgbnVtID0gMDtcbiAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IHMyLmxlbmd0aDsgaTIgKz0gMSkge1xuICAgICAgICAgIG51bSA9IG51bSAqIDEwICsgY2hhdFRvTnVtKHMyLmNoYXJBdChpMikpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudW07XG4gICAgICB9O1xuICAgICAgdmFyIGNoYXRUb051bSA9IGZ1bmN0aW9uKGMyKSB7XG4gICAgICAgIGlmIChcIjBcIiA8PSBjMiAmJiBjMiA8PSBcIjlcIikge1xuICAgICAgICAgIHJldHVybiBjMi5jaGFyQ29kZUF0KDApIC0gXCIwXCIuY2hhckNvZGVBdCgwKTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBcImlsbGVnYWwgY2hhciA6XCIgKyBjMjtcbiAgICAgIH07XG4gICAgICByZXR1cm4gX3RoaXM7XG4gICAgfTtcbiAgICB2YXIgcXJBbHBoYU51bSA9IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgIHZhciBfbW9kZSA9IFFSTW9kZS5NT0RFX0FMUEhBX05VTTtcbiAgICAgIHZhciBfZGF0YSA9IGRhdGE7XG4gICAgICB2YXIgX3RoaXMgPSB7fTtcbiAgICAgIF90aGlzLmdldE1vZGUgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF9tb2RlO1xuICAgICAgfTtcbiAgICAgIF90aGlzLmdldExlbmd0aCA9IGZ1bmN0aW9uKGJ1ZmZlcikge1xuICAgICAgICByZXR1cm4gX2RhdGEubGVuZ3RoO1xuICAgICAgfTtcbiAgICAgIF90aGlzLndyaXRlID0gZnVuY3Rpb24oYnVmZmVyKSB7XG4gICAgICAgIHZhciBzMiA9IF9kYXRhO1xuICAgICAgICB2YXIgaTIgPSAwO1xuICAgICAgICB3aGlsZSAoaTIgKyAxIDwgczIubGVuZ3RoKSB7XG4gICAgICAgICAgYnVmZmVyLnB1dChcbiAgICAgICAgICAgIGdldENvZGUoczIuY2hhckF0KGkyKSkgKiA0NSArIGdldENvZGUoczIuY2hhckF0KGkyICsgMSkpLFxuICAgICAgICAgICAgMTFcbiAgICAgICAgICApO1xuICAgICAgICAgIGkyICs9IDI7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGkyIDwgczIubGVuZ3RoKSB7XG4gICAgICAgICAgYnVmZmVyLnB1dChnZXRDb2RlKHMyLmNoYXJBdChpMikpLCA2KTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIHZhciBnZXRDb2RlID0gZnVuY3Rpb24oYzIpIHtcbiAgICAgICAgaWYgKFwiMFwiIDw9IGMyICYmIGMyIDw9IFwiOVwiKSB7XG4gICAgICAgICAgcmV0dXJuIGMyLmNoYXJDb2RlQXQoMCkgLSBcIjBcIi5jaGFyQ29kZUF0KDApO1xuICAgICAgICB9IGVsc2UgaWYgKFwiQVwiIDw9IGMyICYmIGMyIDw9IFwiWlwiKSB7XG4gICAgICAgICAgcmV0dXJuIGMyLmNoYXJDb2RlQXQoMCkgLSBcIkFcIi5jaGFyQ29kZUF0KDApICsgMTA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc3dpdGNoIChjMikge1xuICAgICAgICAgICAgY2FzZSBcIiBcIjpcbiAgICAgICAgICAgICAgcmV0dXJuIDM2O1xuICAgICAgICAgICAgY2FzZSBcIiRcIjpcbiAgICAgICAgICAgICAgcmV0dXJuIDM3O1xuICAgICAgICAgICAgY2FzZSBcIiVcIjpcbiAgICAgICAgICAgICAgcmV0dXJuIDM4O1xuICAgICAgICAgICAgY2FzZSBcIipcIjpcbiAgICAgICAgICAgICAgcmV0dXJuIDM5O1xuICAgICAgICAgICAgY2FzZSBcIitcIjpcbiAgICAgICAgICAgICAgcmV0dXJuIDQwO1xuICAgICAgICAgICAgY2FzZSBcIi1cIjpcbiAgICAgICAgICAgICAgcmV0dXJuIDQxO1xuICAgICAgICAgICAgY2FzZSBcIi5cIjpcbiAgICAgICAgICAgICAgcmV0dXJuIDQyO1xuICAgICAgICAgICAgY2FzZSBcIi9cIjpcbiAgICAgICAgICAgICAgcmV0dXJuIDQzO1xuICAgICAgICAgICAgY2FzZSBcIjpcIjpcbiAgICAgICAgICAgICAgcmV0dXJuIDQ0O1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgdGhyb3cgXCJpbGxlZ2FsIGNoYXIgOlwiICsgYzI7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH07XG4gICAgdmFyIHFyOEJpdEJ5dGUgPSBmdW5jdGlvbihkYXRhKSB7XG4gICAgICB2YXIgX21vZGUgPSBRUk1vZGUuTU9ERV84QklUX0JZVEU7XG4gICAgICB2YXIgX2J5dGVzID0gcXJjb2RlMy5zdHJpbmdUb0J5dGVzKGRhdGEpO1xuICAgICAgdmFyIF90aGlzID0ge307XG4gICAgICBfdGhpcy5nZXRNb2RlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBfbW9kZTtcbiAgICAgIH07XG4gICAgICBfdGhpcy5nZXRMZW5ndGggPSBmdW5jdGlvbihidWZmZXIpIHtcbiAgICAgICAgcmV0dXJuIF9ieXRlcy5sZW5ndGg7XG4gICAgICB9O1xuICAgICAgX3RoaXMud3JpdGUgPSBmdW5jdGlvbihidWZmZXIpIHtcbiAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IF9ieXRlcy5sZW5ndGg7IGkyICs9IDEpIHtcbiAgICAgICAgICBidWZmZXIucHV0KF9ieXRlc1tpMl0sIDgpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH07XG4gICAgdmFyIHFyS2FuamkgPSBmdW5jdGlvbihkYXRhKSB7XG4gICAgICB2YXIgX21vZGUgPSBRUk1vZGUuTU9ERV9LQU5KSTtcbiAgICAgIHZhciBzdHJpbmdUb0J5dGVzID0gcXJjb2RlMy5zdHJpbmdUb0J5dGVzRnVuY3NbXCJTSklTXCJdO1xuICAgICAgaWYgKCFzdHJpbmdUb0J5dGVzKSB7XG4gICAgICAgIHRocm93IFwic2ppcyBub3Qgc3VwcG9ydGVkLlwiO1xuICAgICAgfVxuICAgICAgIWZ1bmN0aW9uKGMyLCBjb2RlKSB7XG4gICAgICAgIHZhciB0ZXN0ID0gc3RyaW5nVG9CeXRlcyhjMik7XG4gICAgICAgIGlmICh0ZXN0Lmxlbmd0aCAhPSAyIHx8ICh0ZXN0WzBdIDw8IDggfCB0ZXN0WzFdKSAhPSBjb2RlKSB7XG4gICAgICAgICAgdGhyb3cgXCJzamlzIG5vdCBzdXBwb3J0ZWQuXCI7XG4gICAgICAgIH1cbiAgICAgIH0oXCJcXHU1M0NCXCIsIDM4NzI2KTtcbiAgICAgIHZhciBfYnl0ZXMgPSBzdHJpbmdUb0J5dGVzKGRhdGEpO1xuICAgICAgdmFyIF90aGlzID0ge307XG4gICAgICBfdGhpcy5nZXRNb2RlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBfbW9kZTtcbiAgICAgIH07XG4gICAgICBfdGhpcy5nZXRMZW5ndGggPSBmdW5jdGlvbihidWZmZXIpIHtcbiAgICAgICAgcmV0dXJuIH5+KF9ieXRlcy5sZW5ndGggLyAyKTtcbiAgICAgIH07XG4gICAgICBfdGhpcy53cml0ZSA9IGZ1bmN0aW9uKGJ1ZmZlcikge1xuICAgICAgICB2YXIgZGF0YTIgPSBfYnl0ZXM7XG4gICAgICAgIHZhciBpMiA9IDA7XG4gICAgICAgIHdoaWxlIChpMiArIDEgPCBkYXRhMi5sZW5ndGgpIHtcbiAgICAgICAgICB2YXIgYzIgPSAoMjU1ICYgZGF0YTJbaTJdKSA8PCA4IHwgMjU1ICYgZGF0YTJbaTIgKyAxXTtcbiAgICAgICAgICBpZiAoMzMwODggPD0gYzIgJiYgYzIgPD0gNDA5NTYpIHtcbiAgICAgICAgICAgIGMyIC09IDMzMDg4O1xuICAgICAgICAgIH0gZWxzZSBpZiAoNTc0MDggPD0gYzIgJiYgYzIgPD0gNjAzNTEpIHtcbiAgICAgICAgICAgIGMyIC09IDQ5NDcyO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBcImlsbGVnYWwgY2hhciBhdCBcIiArIChpMiArIDEpICsgXCIvXCIgKyBjMjtcbiAgICAgICAgICB9XG4gICAgICAgICAgYzIgPSAoYzIgPj4+IDggJiAyNTUpICogMTkyICsgKGMyICYgMjU1KTtcbiAgICAgICAgICBidWZmZXIucHV0KGMyLCAxMyk7XG4gICAgICAgICAgaTIgKz0gMjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaTIgPCBkYXRhMi5sZW5ndGgpIHtcbiAgICAgICAgICB0aHJvdyBcImlsbGVnYWwgY2hhciBhdCBcIiArIChpMiArIDEpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH07XG4gICAgdmFyIGJ5dGVBcnJheU91dHB1dFN0cmVhbSA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIF9ieXRlcyA9IFtdO1xuICAgICAgdmFyIF90aGlzID0ge307XG4gICAgICBfdGhpcy53cml0ZUJ5dGUgPSBmdW5jdGlvbihiKSB7XG4gICAgICAgIF9ieXRlcy5wdXNoKGIgJiAyNTUpO1xuICAgICAgfTtcbiAgICAgIF90aGlzLndyaXRlU2hvcnQgPSBmdW5jdGlvbihpMikge1xuICAgICAgICBfdGhpcy53cml0ZUJ5dGUoaTIpO1xuICAgICAgICBfdGhpcy53cml0ZUJ5dGUoaTIgPj4+IDgpO1xuICAgICAgfTtcbiAgICAgIF90aGlzLndyaXRlQnl0ZXMgPSBmdW5jdGlvbihiLCBvZmYsIGxlbikge1xuICAgICAgICBvZmYgPSBvZmYgfHwgMDtcbiAgICAgICAgbGVuID0gbGVuIHx8IGIubGVuZ3RoO1xuICAgICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgbGVuOyBpMiArPSAxKSB7XG4gICAgICAgICAgX3RoaXMud3JpdGVCeXRlKGJbaTIgKyBvZmZdKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIF90aGlzLndyaXRlU3RyaW5nID0gZnVuY3Rpb24oczIpIHtcbiAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IHMyLmxlbmd0aDsgaTIgKz0gMSkge1xuICAgICAgICAgIF90aGlzLndyaXRlQnl0ZShzMi5jaGFyQ29kZUF0KGkyKSk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICBfdGhpcy50b0J5dGVBcnJheSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX2J5dGVzO1xuICAgICAgfTtcbiAgICAgIF90aGlzLnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBzMiA9IFwiXCI7XG4gICAgICAgIHMyICs9IFwiW1wiO1xuICAgICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgX2J5dGVzLmxlbmd0aDsgaTIgKz0gMSkge1xuICAgICAgICAgIGlmIChpMiA+IDApIHtcbiAgICAgICAgICAgIHMyICs9IFwiLFwiO1xuICAgICAgICAgIH1cbiAgICAgICAgICBzMiArPSBfYnl0ZXNbaTJdO1xuICAgICAgICB9XG4gICAgICAgIHMyICs9IFwiXVwiO1xuICAgICAgICByZXR1cm4gczI7XG4gICAgICB9O1xuICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH07XG4gICAgdmFyIGJhc2U2NEVuY29kZU91dHB1dFN0cmVhbSA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIF9idWZmZXIgPSAwO1xuICAgICAgdmFyIF9idWZsZW4gPSAwO1xuICAgICAgdmFyIF9sZW5ndGggPSAwO1xuICAgICAgdmFyIF9iYXNlNjQgPSBcIlwiO1xuICAgICAgdmFyIF90aGlzID0ge307XG4gICAgICB2YXIgd3JpdGVFbmNvZGVkID0gZnVuY3Rpb24oYikge1xuICAgICAgICBfYmFzZTY0ICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoZW5jb2RlKGIgJiA2MykpO1xuICAgICAgfTtcbiAgICAgIHZhciBlbmNvZGUgPSBmdW5jdGlvbihuMikge1xuICAgICAgICBpZiAobjIgPCAwKVxuICAgICAgICAgIDtcbiAgICAgICAgZWxzZSBpZiAobjIgPCAyNikge1xuICAgICAgICAgIHJldHVybiA2NSArIG4yO1xuICAgICAgICB9IGVsc2UgaWYgKG4yIDwgNTIpIHtcbiAgICAgICAgICByZXR1cm4gOTcgKyAobjIgLSAyNik7XG4gICAgICAgIH0gZWxzZSBpZiAobjIgPCA2Mikge1xuICAgICAgICAgIHJldHVybiA0OCArIChuMiAtIDUyKTtcbiAgICAgICAgfSBlbHNlIGlmIChuMiA9PSA2Mikge1xuICAgICAgICAgIHJldHVybiA0MztcbiAgICAgICAgfSBlbHNlIGlmIChuMiA9PSA2Mykge1xuICAgICAgICAgIHJldHVybiA0NztcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBcIm46XCIgKyBuMjtcbiAgICAgIH07XG4gICAgICBfdGhpcy53cml0ZUJ5dGUgPSBmdW5jdGlvbihuMikge1xuICAgICAgICBfYnVmZmVyID0gX2J1ZmZlciA8PCA4IHwgbjIgJiAyNTU7XG4gICAgICAgIF9idWZsZW4gKz0gODtcbiAgICAgICAgX2xlbmd0aCArPSAxO1xuICAgICAgICB3aGlsZSAoX2J1ZmxlbiA+PSA2KSB7XG4gICAgICAgICAgd3JpdGVFbmNvZGVkKF9idWZmZXIgPj4+IF9idWZsZW4gLSA2KTtcbiAgICAgICAgICBfYnVmbGVuIC09IDY7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICBfdGhpcy5mbHVzaCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAoX2J1ZmxlbiA+IDApIHtcbiAgICAgICAgICB3cml0ZUVuY29kZWQoX2J1ZmZlciA8PCA2IC0gX2J1Zmxlbik7XG4gICAgICAgICAgX2J1ZmZlciA9IDA7XG4gICAgICAgICAgX2J1ZmxlbiA9IDA7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKF9sZW5ndGggJSAzICE9IDApIHtcbiAgICAgICAgICB2YXIgcGFkbGVuID0gMyAtIF9sZW5ndGggJSAzO1xuICAgICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBwYWRsZW47IGkyICs9IDEpIHtcbiAgICAgICAgICAgIF9iYXNlNjQgKz0gXCI9XCI7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgX3RoaXMudG9TdHJpbmcgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF9iYXNlNjQ7XG4gICAgICB9O1xuICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH07XG4gICAgdmFyIGJhc2U2NERlY29kZUlucHV0U3RyZWFtID0gZnVuY3Rpb24oc3RyKSB7XG4gICAgICB2YXIgX3N0ciA9IHN0cjtcbiAgICAgIHZhciBfcG9zID0gMDtcbiAgICAgIHZhciBfYnVmZmVyID0gMDtcbiAgICAgIHZhciBfYnVmbGVuID0gMDtcbiAgICAgIHZhciBfdGhpcyA9IHt9O1xuICAgICAgX3RoaXMucmVhZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB3aGlsZSAoX2J1ZmxlbiA8IDgpIHtcbiAgICAgICAgICBpZiAoX3BvcyA+PSBfc3RyLmxlbmd0aCkge1xuICAgICAgICAgICAgaWYgKF9idWZsZW4gPT0gMCkge1xuICAgICAgICAgICAgICByZXR1cm4gLTE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aHJvdyBcInVuZXhwZWN0ZWQgZW5kIG9mIGZpbGUuL1wiICsgX2J1ZmxlbjtcbiAgICAgICAgICB9XG4gICAgICAgICAgdmFyIGMyID0gX3N0ci5jaGFyQXQoX3Bvcyk7XG4gICAgICAgICAgX3BvcyArPSAxO1xuICAgICAgICAgIGlmIChjMiA9PSBcIj1cIikge1xuICAgICAgICAgICAgX2J1ZmxlbiA9IDA7XG4gICAgICAgICAgICByZXR1cm4gLTE7XG4gICAgICAgICAgfSBlbHNlIGlmIChjMi5tYXRjaCgvXlxccyQvKSkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgfVxuICAgICAgICAgIF9idWZmZXIgPSBfYnVmZmVyIDw8IDYgfCBkZWNvZGUoYzIuY2hhckNvZGVBdCgwKSk7XG4gICAgICAgICAgX2J1ZmxlbiArPSA2O1xuICAgICAgICB9XG4gICAgICAgIHZhciBuMiA9IF9idWZmZXIgPj4+IF9idWZsZW4gLSA4ICYgMjU1O1xuICAgICAgICBfYnVmbGVuIC09IDg7XG4gICAgICAgIHJldHVybiBuMjtcbiAgICAgIH07XG4gICAgICB2YXIgZGVjb2RlID0gZnVuY3Rpb24oYzIpIHtcbiAgICAgICAgaWYgKDY1IDw9IGMyICYmIGMyIDw9IDkwKSB7XG4gICAgICAgICAgcmV0dXJuIGMyIC0gNjU7XG4gICAgICAgIH0gZWxzZSBpZiAoOTcgPD0gYzIgJiYgYzIgPD0gMTIyKSB7XG4gICAgICAgICAgcmV0dXJuIGMyIC0gOTcgKyAyNjtcbiAgICAgICAgfSBlbHNlIGlmICg0OCA8PSBjMiAmJiBjMiA8PSA1Nykge1xuICAgICAgICAgIHJldHVybiBjMiAtIDQ4ICsgNTI7XG4gICAgICAgIH0gZWxzZSBpZiAoYzIgPT0gNDMpIHtcbiAgICAgICAgICByZXR1cm4gNjI7XG4gICAgICAgIH0gZWxzZSBpZiAoYzIgPT0gNDcpIHtcbiAgICAgICAgICByZXR1cm4gNjM7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhyb3cgXCJjOlwiICsgYzI7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICByZXR1cm4gX3RoaXM7XG4gICAgfTtcbiAgICB2YXIgZ2lmSW1hZ2UgPSBmdW5jdGlvbih3aWR0aCwgaGVpZ2h0KSB7XG4gICAgICB2YXIgX3dpZHRoID0gd2lkdGg7XG4gICAgICB2YXIgX2hlaWdodCA9IGhlaWdodDtcbiAgICAgIHZhciBfZGF0YSA9IG5ldyBBcnJheSh3aWR0aCAqIGhlaWdodCk7XG4gICAgICB2YXIgX3RoaXMgPSB7fTtcbiAgICAgIF90aGlzLnNldFBpeGVsID0gZnVuY3Rpb24oeCwgeSwgcGl4ZWwpIHtcbiAgICAgICAgX2RhdGFbeSAqIF93aWR0aCArIHhdID0gcGl4ZWw7XG4gICAgICB9O1xuICAgICAgX3RoaXMud3JpdGUgPSBmdW5jdGlvbihvdXQpIHtcbiAgICAgICAgb3V0LndyaXRlU3RyaW5nKFwiR0lGODdhXCIpO1xuICAgICAgICBvdXQud3JpdGVTaG9ydChfd2lkdGgpO1xuICAgICAgICBvdXQud3JpdGVTaG9ydChfaGVpZ2h0KTtcbiAgICAgICAgb3V0LndyaXRlQnl0ZSgxMjgpO1xuICAgICAgICBvdXQud3JpdGVCeXRlKDApO1xuICAgICAgICBvdXQud3JpdGVCeXRlKDApO1xuICAgICAgICBvdXQud3JpdGVCeXRlKDApO1xuICAgICAgICBvdXQud3JpdGVCeXRlKDApO1xuICAgICAgICBvdXQud3JpdGVCeXRlKDApO1xuICAgICAgICBvdXQud3JpdGVCeXRlKDI1NSk7XG4gICAgICAgIG91dC53cml0ZUJ5dGUoMjU1KTtcbiAgICAgICAgb3V0LndyaXRlQnl0ZSgyNTUpO1xuICAgICAgICBvdXQud3JpdGVTdHJpbmcoXCIsXCIpO1xuICAgICAgICBvdXQud3JpdGVTaG9ydCgwKTtcbiAgICAgICAgb3V0LndyaXRlU2hvcnQoMCk7XG4gICAgICAgIG91dC53cml0ZVNob3J0KF93aWR0aCk7XG4gICAgICAgIG91dC53cml0ZVNob3J0KF9oZWlnaHQpO1xuICAgICAgICBvdXQud3JpdGVCeXRlKDApO1xuICAgICAgICB2YXIgbHp3TWluQ29kZVNpemUgPSAyO1xuICAgICAgICB2YXIgcmFzdGVyID0gZ2V0TFpXUmFzdGVyKGx6d01pbkNvZGVTaXplKTtcbiAgICAgICAgb3V0LndyaXRlQnl0ZShsendNaW5Db2RlU2l6ZSk7XG4gICAgICAgIHZhciBvZmZzZXQgPSAwO1xuICAgICAgICB3aGlsZSAocmFzdGVyLmxlbmd0aCAtIG9mZnNldCA+IDI1NSkge1xuICAgICAgICAgIG91dC53cml0ZUJ5dGUoMjU1KTtcbiAgICAgICAgICBvdXQud3JpdGVCeXRlcyhyYXN0ZXIsIG9mZnNldCwgMjU1KTtcbiAgICAgICAgICBvZmZzZXQgKz0gMjU1O1xuICAgICAgICB9XG4gICAgICAgIG91dC53cml0ZUJ5dGUocmFzdGVyLmxlbmd0aCAtIG9mZnNldCk7XG4gICAgICAgIG91dC53cml0ZUJ5dGVzKHJhc3Rlciwgb2Zmc2V0LCByYXN0ZXIubGVuZ3RoIC0gb2Zmc2V0KTtcbiAgICAgICAgb3V0LndyaXRlQnl0ZSgwKTtcbiAgICAgICAgb3V0LndyaXRlU3RyaW5nKFwiO1wiKTtcbiAgICAgIH07XG4gICAgICB2YXIgYml0T3V0cHV0U3RyZWFtID0gZnVuY3Rpb24ob3V0KSB7XG4gICAgICAgIHZhciBfb3V0ID0gb3V0O1xuICAgICAgICB2YXIgX2JpdExlbmd0aCA9IDA7XG4gICAgICAgIHZhciBfYml0QnVmZmVyID0gMDtcbiAgICAgICAgdmFyIF90aGlzMiA9IHt9O1xuICAgICAgICBfdGhpczIud3JpdGUgPSBmdW5jdGlvbihkYXRhLCBsZW5ndGgpIHtcbiAgICAgICAgICBpZiAoZGF0YSA+Pj4gbGVuZ3RoICE9IDApIHtcbiAgICAgICAgICAgIHRocm93IFwibGVuZ3RoIG92ZXJcIjtcbiAgICAgICAgICB9XG4gICAgICAgICAgd2hpbGUgKF9iaXRMZW5ndGggKyBsZW5ndGggPj0gOCkge1xuICAgICAgICAgICAgX291dC53cml0ZUJ5dGUoMjU1ICYgKGRhdGEgPDwgX2JpdExlbmd0aCB8IF9iaXRCdWZmZXIpKTtcbiAgICAgICAgICAgIGxlbmd0aCAtPSA4IC0gX2JpdExlbmd0aDtcbiAgICAgICAgICAgIGRhdGEgPj4+PSA4IC0gX2JpdExlbmd0aDtcbiAgICAgICAgICAgIF9iaXRCdWZmZXIgPSAwO1xuICAgICAgICAgICAgX2JpdExlbmd0aCA9IDA7XG4gICAgICAgICAgfVxuICAgICAgICAgIF9iaXRCdWZmZXIgPSBkYXRhIDw8IF9iaXRMZW5ndGggfCBfYml0QnVmZmVyO1xuICAgICAgICAgIF9iaXRMZW5ndGggPSBfYml0TGVuZ3RoICsgbGVuZ3RoO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpczIuZmx1c2ggPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICBpZiAoX2JpdExlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIF9vdXQud3JpdGVCeXRlKF9iaXRCdWZmZXIpO1xuICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIF90aGlzMjtcbiAgICAgIH07XG4gICAgICB2YXIgZ2V0TFpXUmFzdGVyID0gZnVuY3Rpb24obHp3TWluQ29kZVNpemUpIHtcbiAgICAgICAgdmFyIGNsZWFyQ29kZSA9IDEgPDwgbHp3TWluQ29kZVNpemU7XG4gICAgICAgIHZhciBlbmRDb2RlID0gKDEgPDwgbHp3TWluQ29kZVNpemUpICsgMTtcbiAgICAgICAgdmFyIGJpdExlbmd0aCA9IGx6d01pbkNvZGVTaXplICsgMTtcbiAgICAgICAgdmFyIHRhYmxlID0gbHp3VGFibGUoKTtcbiAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IGNsZWFyQ29kZTsgaTIgKz0gMSkge1xuICAgICAgICAgIHRhYmxlLmFkZChTdHJpbmcuZnJvbUNoYXJDb2RlKGkyKSk7XG4gICAgICAgIH1cbiAgICAgICAgdGFibGUuYWRkKFN0cmluZy5mcm9tQ2hhckNvZGUoY2xlYXJDb2RlKSk7XG4gICAgICAgIHRhYmxlLmFkZChTdHJpbmcuZnJvbUNoYXJDb2RlKGVuZENvZGUpKTtcbiAgICAgICAgdmFyIGJ5dGVPdXQgPSBieXRlQXJyYXlPdXRwdXRTdHJlYW0oKTtcbiAgICAgICAgdmFyIGJpdE91dCA9IGJpdE91dHB1dFN0cmVhbShieXRlT3V0KTtcbiAgICAgICAgYml0T3V0LndyaXRlKGNsZWFyQ29kZSwgYml0TGVuZ3RoKTtcbiAgICAgICAgdmFyIGRhdGFJbmRleCA9IDA7XG4gICAgICAgIHZhciBzMiA9IFN0cmluZy5mcm9tQ2hhckNvZGUoX2RhdGFbZGF0YUluZGV4XSk7XG4gICAgICAgIGRhdGFJbmRleCArPSAxO1xuICAgICAgICB3aGlsZSAoZGF0YUluZGV4IDwgX2RhdGEubGVuZ3RoKSB7XG4gICAgICAgICAgdmFyIGMyID0gU3RyaW5nLmZyb21DaGFyQ29kZShfZGF0YVtkYXRhSW5kZXhdKTtcbiAgICAgICAgICBkYXRhSW5kZXggKz0gMTtcbiAgICAgICAgICBpZiAodGFibGUuY29udGFpbnMoczIgKyBjMikpIHtcbiAgICAgICAgICAgIHMyID0gczIgKyBjMjtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYml0T3V0LndyaXRlKHRhYmxlLmluZGV4T2YoczIpLCBiaXRMZW5ndGgpO1xuICAgICAgICAgICAgaWYgKHRhYmxlLnNpemUoKSA8IDQwOTUpIHtcbiAgICAgICAgICAgICAgaWYgKHRhYmxlLnNpemUoKSA9PSAxIDw8IGJpdExlbmd0aCkge1xuICAgICAgICAgICAgICAgIGJpdExlbmd0aCArPSAxO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIHRhYmxlLmFkZChzMiArIGMyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHMyID0gYzI7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGJpdE91dC53cml0ZSh0YWJsZS5pbmRleE9mKHMyKSwgYml0TGVuZ3RoKTtcbiAgICAgICAgYml0T3V0LndyaXRlKGVuZENvZGUsIGJpdExlbmd0aCk7XG4gICAgICAgIGJpdE91dC5mbHVzaCgpO1xuICAgICAgICByZXR1cm4gYnl0ZU91dC50b0J5dGVBcnJheSgpO1xuICAgICAgfTtcbiAgICAgIHZhciBsendUYWJsZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgX21hcCA9IHt9O1xuICAgICAgICB2YXIgX3NpemUgPSAwO1xuICAgICAgICB2YXIgX3RoaXMyID0ge307XG4gICAgICAgIF90aGlzMi5hZGQgPSBmdW5jdGlvbihrZXkpIHtcbiAgICAgICAgICBpZiAoX3RoaXMyLmNvbnRhaW5zKGtleSkpIHtcbiAgICAgICAgICAgIHRocm93IFwiZHVwIGtleTpcIiArIGtleTtcbiAgICAgICAgICB9XG4gICAgICAgICAgX21hcFtrZXldID0gX3NpemU7XG4gICAgICAgICAgX3NpemUgKz0gMTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMyLnNpemUgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICByZXR1cm4gX3NpemU7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzMi5pbmRleE9mID0gZnVuY3Rpb24oa2V5KSB7XG4gICAgICAgICAgcmV0dXJuIF9tYXBba2V5XTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMyLmNvbnRhaW5zID0gZnVuY3Rpb24oa2V5KSB7XG4gICAgICAgICAgcmV0dXJuIHR5cGVvZiBfbWFwW2tleV0gIT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIF90aGlzMjtcbiAgICAgIH07XG4gICAgICByZXR1cm4gX3RoaXM7XG4gICAgfTtcbiAgICB2YXIgY3JlYXRlRGF0YVVSTCA9IGZ1bmN0aW9uKHdpZHRoLCBoZWlnaHQsIGdldFBpeGVsKSB7XG4gICAgICB2YXIgZ2lmID0gZ2lmSW1hZ2Uod2lkdGgsIGhlaWdodCk7XG4gICAgICBmb3IgKHZhciB5ID0gMDsgeSA8IGhlaWdodDsgeSArPSAxKSB7XG4gICAgICAgIGZvciAodmFyIHggPSAwOyB4IDwgd2lkdGg7IHggKz0gMSkge1xuICAgICAgICAgIGdpZi5zZXRQaXhlbCh4LCB5LCBnZXRQaXhlbCh4LCB5KSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHZhciBiID0gYnl0ZUFycmF5T3V0cHV0U3RyZWFtKCk7XG4gICAgICBnaWYud3JpdGUoYik7XG4gICAgICB2YXIgYmFzZTY0ID0gYmFzZTY0RW5jb2RlT3V0cHV0U3RyZWFtKCk7XG4gICAgICB2YXIgYnl0ZXMgPSBiLnRvQnl0ZUFycmF5KCk7XG4gICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgYnl0ZXMubGVuZ3RoOyBpMiArPSAxKSB7XG4gICAgICAgIGJhc2U2NC53cml0ZUJ5dGUoYnl0ZXNbaTJdKTtcbiAgICAgIH1cbiAgICAgIGJhc2U2NC5mbHVzaCgpO1xuICAgICAgcmV0dXJuIFwiZGF0YTppbWFnZS9naWY7YmFzZTY0LFwiICsgYmFzZTY0O1xuICAgIH07XG4gICAgcmV0dXJuIHFyY29kZTM7XG4gIH0oKTtcbiAgIWZ1bmN0aW9uKCkge1xuICAgIHFyY29kZTIuc3RyaW5nVG9CeXRlc0Z1bmNzW1wiVVRGLThcIl0gPSBmdW5jdGlvbihzMikge1xuICAgICAgZnVuY3Rpb24gdG9VVEY4QXJyYXkoc3RyKSB7XG4gICAgICAgIHZhciB1dGY4ID0gW107XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBzdHIubGVuZ3RoOyBpMisrKSB7XG4gICAgICAgICAgdmFyIGNoYXJjb2RlID0gc3RyLmNoYXJDb2RlQXQoaTIpO1xuICAgICAgICAgIGlmIChjaGFyY29kZSA8IDEyOClcbiAgICAgICAgICAgIHV0ZjgucHVzaChjaGFyY29kZSk7XG4gICAgICAgICAgZWxzZSBpZiAoY2hhcmNvZGUgPCAyMDQ4KSB7XG4gICAgICAgICAgICB1dGY4LnB1c2goXG4gICAgICAgICAgICAgIDE5MiB8IGNoYXJjb2RlID4+IDYsXG4gICAgICAgICAgICAgIDEyOCB8IGNoYXJjb2RlICYgNjNcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfSBlbHNlIGlmIChjaGFyY29kZSA8IDU1Mjk2IHx8IGNoYXJjb2RlID49IDU3MzQ0KSB7XG4gICAgICAgICAgICB1dGY4LnB1c2goXG4gICAgICAgICAgICAgIDIyNCB8IGNoYXJjb2RlID4+IDEyLFxuICAgICAgICAgICAgICAxMjggfCBjaGFyY29kZSA+PiA2ICYgNjMsXG4gICAgICAgICAgICAgIDEyOCB8IGNoYXJjb2RlICYgNjNcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGkyKys7XG4gICAgICAgICAgICBjaGFyY29kZSA9IDY1NTM2ICsgKChjaGFyY29kZSAmIDEwMjMpIDw8IDEwIHwgc3RyLmNoYXJDb2RlQXQoaTIpICYgMTAyMyk7XG4gICAgICAgICAgICB1dGY4LnB1c2goXG4gICAgICAgICAgICAgIDI0MCB8IGNoYXJjb2RlID4+IDE4LFxuICAgICAgICAgICAgICAxMjggfCBjaGFyY29kZSA+PiAxMiAmIDYzLFxuICAgICAgICAgICAgICAxMjggfCBjaGFyY29kZSA+PiA2ICYgNjMsXG4gICAgICAgICAgICAgIDEyOCB8IGNoYXJjb2RlICYgNjNcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB1dGY4O1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRvVVRGOEFycmF5KHMyKTtcbiAgICB9O1xuICB9KCk7XG4gIChmdW5jdGlvbihmYWN0b3J5KSB7XG4gICAge1xuICAgICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KCk7XG4gICAgfVxuICB9KShmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gcXJjb2RlMjtcbiAgfSk7XG59KShxcmNvZGUkMSk7XG5jb25zdCBxcmNvZGUgPSBxcmNvZGUkMS5leHBvcnRzO1xuZnVuY3Rpb24gY29weVRvQ2xpcGJvYXJkKHRleHQpIHtcbiAgcmV0dXJuIF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICB0cnkge1xuICAgICAgaWYgKCEobmF2aWdhdG9yID09IG51bGwgPyB2b2lkIDAgOiBuYXZpZ2F0b3IuY2xpcGJvYXJkKSkge1xuICAgICAgICB0aHJvdyBuZXcgVG9uQ29ubmVjdFVJRXJyb3IoXCJDbGlwYm9hcmQgQVBJIG5vdCBhdmFpbGFibGVcIik7XG4gICAgICB9XG4gICAgICByZXR1cm4geWllbGQgbmF2aWdhdG9yLmNsaXBib2FyZC53cml0ZVRleHQodGV4dCk7XG4gICAgfSBjYXRjaCAoZTIpIHtcbiAgICB9XG4gICAgZmFsbGJhY2tDb3B5VGV4dFRvQ2xpcGJvYXJkKHRleHQpO1xuICB9KTtcbn1cbmZ1bmN0aW9uIGZhbGxiYWNrQ29weVRleHRUb0NsaXBib2FyZCh0ZXh0KSB7XG4gIGNvbnN0IHRleHRBcmVhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRleHRhcmVhXCIpO1xuICB0ZXh0QXJlYS52YWx1ZSA9IHRleHQ7XG4gIHRleHRBcmVhLnN0eWxlLnRvcCA9IFwiMFwiO1xuICB0ZXh0QXJlYS5zdHlsZS5sZWZ0ID0gXCIwXCI7XG4gIHRleHRBcmVhLnN0eWxlLnBvc2l0aW9uID0gXCJmaXhlZFwiO1xuICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRleHRBcmVhKTtcbiAgdGV4dEFyZWEuZm9jdXMoKTtcbiAgdGV4dEFyZWEuc2VsZWN0KCk7XG4gIHRyeSB7XG4gICAgZG9jdW1lbnQuZXhlY0NvbW1hbmQoXCJjb3B5XCIpO1xuICB9IGZpbmFsbHkge1xuICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQodGV4dEFyZWEpO1xuICB9XG59XG5jb25zdCBfdG1wbCQkcyA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8ZGl2PjwvZGl2PmApO1xuY29uc3QgUVJDb2RlID0gKHByb3BzKSA9PiB7XG4gIGxldCBxckNvZGVDYW52YXNSZWY7XG4gIGxldCBxckNvZGVXcmFwcGVyUmVmO1xuICBsZXQgaW1hZ2VSZWY7XG4gIGNvbnN0IFtjb3B5QnV0dG9uT3BlbmVkLCBzZXRDb3B5QnV0dG9uT3BlbmVkXSA9IGNyZWF0ZVNpZ25hbChmYWxzZSk7XG4gIGNvbnN0IFtwaWNTaXplLCBzZXRQaWNTaXplXSA9IGNyZWF0ZVNpZ25hbChwaWNTaXplRGVmYXVsdCk7XG4gIGNyZWF0ZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgZXJyb3JDb3JyZWN0aW9uTGV2ZWwgPSBcIkxcIjtcbiAgICBjb25zdCBjZWxsU2l6ZSA9IDQ7XG4gICAgY29uc3QgcXIgPSBxcmNvZGUoMCwgZXJyb3JDb3JyZWN0aW9uTGV2ZWwpO1xuICAgIHFyLmFkZERhdGEocHJvcHMuc291cmNlVXJsKTtcbiAgICBxci5tYWtlKCk7XG4gICAgcXJDb2RlQ2FudmFzUmVmLmlubmVySFRNTCA9IHFyLmNyZWF0ZVN2Z1RhZyhjZWxsU2l6ZSwgMCk7XG4gICAgY29uc3QgcXJTaXplID0gcXJDb2RlQ2FudmFzUmVmLmZpcnN0RWxlbWVudENoaWxkLmNsaWVudFdpZHRoO1xuICAgIGNvbnN0IHNjYWxlID0gTWF0aC5yb3VuZChxck5vcm1hbFNpemUgLyBxclNpemUgKiAxZTUpIC8gMWU1O1xuICAgIGlmIChpbWFnZVJlZikge1xuICAgICAgY29uc3QgaW1nU2l6ZSA9IE1hdGguY2VpbChpbWdTaXplRGVmYXVsdCAvIChzY2FsZSAqIGNlbGxTaXplKSkgKiBjZWxsU2l6ZTtcbiAgICAgIGNvbnN0IGltZ09mZnNldCA9IHRvUHgoTWF0aC5jZWlsKChxclNpemUgLSBpbWdTaXplKSAvICgyICogY2VsbFNpemUpKSAqIGNlbGxTaXplKTtcbiAgICAgIGltYWdlUmVmLnN0eWxlLnRvcCA9IGltZ09mZnNldDtcbiAgICAgIGltYWdlUmVmLnN0eWxlLmxlZnQgPSBpbWdPZmZzZXQ7XG4gICAgICBpbWFnZVJlZi5zdHlsZS5oZWlnaHQgPSB0b1B4KGltZ1NpemUpO1xuICAgICAgaW1hZ2VSZWYuc3R5bGUud2lkdGggPSB0b1B4KGltZ1NpemUpO1xuICAgICAgc2V0UGljU2l6ZShNYXRoLnJvdW5kKHBpY1NpemVEZWZhdWx0IC8gc2NhbGUpKTtcbiAgICB9XG4gICAgcXJDb2RlV3JhcHBlclJlZi5zdHlsZS50cmFuc2Zvcm0gPSBgc2NhbGUoJHtzY2FsZX0pYDtcbiAgfSk7XG4gIGxldCB0aW1lb3V0SWQgPSBudWxsO1xuICBjb25zdCBvbkNvcHlDbGljayA9ICgpID0+IHtcbiAgICBzZXRDb3B5QnV0dG9uT3BlbmVkKHRydWUpO1xuICAgIGNvcHlUb0NsaXBib2FyZChwcm9wcy5zb3VyY2VVcmwpO1xuICAgIGlmICh0aW1lb3V0SWQgIT0gbnVsbCkge1xuICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXRJZCk7XG4gICAgfVxuICAgIHRpbWVvdXRJZCA9IHNldFRpbWVvdXQoKCkgPT4gc2V0Q29weUJ1dHRvbk9wZW5lZChmYWxzZSksIDE1MDApO1xuICB9O1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFFyQ29kZUJhY2tncm91bmQsIHtcbiAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2xhc3M7XG4gICAgfSxcbiAgICBvbkNsaWNrOiBvbkNvcHlDbGljayxcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChRckNvZGVXcmFwcGVyJDIsIHtcbiAgICAgICAgcmVmKHIkKSB7XG4gICAgICAgICAgY29uc3QgX3JlZiQgPSBxckNvZGVXcmFwcGVyUmVmO1xuICAgICAgICAgIHR5cGVvZiBfcmVmJCA9PT0gXCJmdW5jdGlvblwiID8gX3JlZiQociQpIDogcXJDb2RlV3JhcHBlclJlZiA9IHIkO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIFsoKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgX2VsJCA9IF90bXBsJCRzLmNsb25lTm9kZSh0cnVlKTtcbiAgICAgICAgICAgIGNvbnN0IF9yZWYkMiA9IHFyQ29kZUNhbnZhc1JlZjtcbiAgICAgICAgICAgIHR5cGVvZiBfcmVmJDIgPT09IFwiZnVuY3Rpb25cIiA/IHVzZShfcmVmJDIsIF9lbCQpIDogcXJDb2RlQ2FudmFzUmVmID0gX2VsJDtcbiAgICAgICAgICAgIHJldHVybiBfZWwkO1xuICAgICAgICAgIH0pKCksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLmltYWdlVXJsO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChJbWFnZUJhY2tncm91bmQsIHtcbiAgICAgICAgICAgICAgICByZWYociQpIHtcbiAgICAgICAgICAgICAgICAgIGNvbnN0IF9yZWYkMyA9IGltYWdlUmVmO1xuICAgICAgICAgICAgICAgICAgdHlwZW9mIF9yZWYkMyA9PT0gXCJmdW5jdGlvblwiID8gX3JlZiQzKHIkKSA6IGltYWdlUmVmID0gciQ7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEltYWdlU3R5bGVkJDMsIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0IHNyYygpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMuaW1hZ2VVcmw7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGFsdDogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgZ2V0IHNpemUoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHBpY1NpemUoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KV07XG4gICAgICAgIH1cbiAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoVHJhbnNpdGlvbiwge1xuICAgICAgICBvbkJlZm9yZUVudGVyOiAoZWwpID0+IHtcbiAgICAgICAgICBhbmltYXRlKGVsLCBbe1xuICAgICAgICAgICAgb3BhY2l0eTogMCxcbiAgICAgICAgICAgIHRyYW5zZm9ybTogXCJ0cmFuc2xhdGUoLTUwJSwgNDRweClcIlxuICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgIG9wYWNpdHk6IDEsXG4gICAgICAgICAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlKC01MCUsIDApXCJcbiAgICAgICAgICB9XSwge1xuICAgICAgICAgICAgZHVyYXRpb246IDE1MCxcbiAgICAgICAgICAgIGVhc2luZzogXCJlYXNlLW91dFwiXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIG9uRXhpdDogKGVsLCBkb25lKSA9PiB7XG4gICAgICAgICAgYW5pbWF0ZShlbCwgW3tcbiAgICAgICAgICAgIG9wYWNpdHk6IDEsXG4gICAgICAgICAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlKC01MCUsIDApXCJcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICAgICAgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZSgtNTAlLCA0NHB4KVwiXG4gICAgICAgICAgfV0sIHtcbiAgICAgICAgICAgIGR1cmF0aW9uOiAxNTAsXG4gICAgICAgICAgICBlYXNpbmc6IFwiZWFzZS1vdXRcIlxuICAgICAgICAgIH0pLmZpbmlzaGVkLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgZG9uZSgpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNvcHlCdXR0b25PcGVuZWQoKSAmJiAhcHJvcHMuZGlzYWJsZUNvcHk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KENvcGllZEJveFN0eWxlZCwge1xuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFN1Y2Nlc3NJY29uLCB7XG4gICAgICAgICAgICAgICAgICAgIHNpemU6IFwieHNcIlxuICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChUZXh0LCB7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcImNvbW1vbi5saW5rQ29waWVkXCIsXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIkxpbmsgQ29waWVkXCJcbiAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgcmV0dXJuICFwcm9wcy5kaXNhYmxlQ29weTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQ29weUljb25CdXR0b24sIHtcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChDb3B5TGlnaHRJY29uLCB7fSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pXTtcbiAgICB9XG4gIH0pO1xufTtcbnZhciBkZWVwUmVhZE9iamVjdCA9IChvYmosIHBhdGgsIGRlZmF1bHRWYWx1ZSkgPT4ge1xuICBjb25zdCB2YWx1ZSA9IHBhdGgudHJpbSgpLnNwbGl0KFwiLlwiKS5yZWR1Y2UoKGEyLCBiKSA9PiBhMiA/IGEyW2JdIDogdm9pZCAwLCBvYmopO1xuICByZXR1cm4gdmFsdWUgIT09IHZvaWQgMCA/IHZhbHVlIDogZGVmYXVsdFZhbHVlO1xufTtcbnZhciB0ZW1wbGF0ZSA9IChzdHIsIHBhcmFtcywgcmVnID0gL3t7KC4qPyl9fS9nKSA9PiBzdHIucmVwbGFjZShyZWcsIChfLCBrZXkpID0+IGRlZXBSZWFkT2JqZWN0KHBhcmFtcywga2V5LCBcIlwiKSk7XG52YXIgY3JlYXRlSTE4bkNvbnRleHQgPSAoaW5pdCA9IHt9LCBsYW5nID0gbmF2aWdhdG9yLmxhbmd1YWdlIGluIGluaXQgPyBuYXZpZ2F0b3IubGFuZ3VhZ2UgOiBPYmplY3Qua2V5cyhpbml0KVswXSkgPT4ge1xuICBjb25zdCBbbG9jYWxlLCBzZXRMb2NhbGVdID0gY3JlYXRlU2lnbmFsKGxhbmcpO1xuICBjb25zdCBbZGljdCwgc2V0RGljdF0gPSBjcmVhdGVTdG9yZShpbml0KTtcbiAgY29uc3QgdHJhbnNsYXRlID0gKGtleSwgcGFyYW1zLCBkZWZhdWx0VmFsdWUpID0+IHtcbiAgICBjb25zdCB2YWwgPSBkZWVwUmVhZE9iamVjdChkaWN0W2xvY2FsZSgpXSwga2V5LCBkZWZhdWx0VmFsdWUgfHwgXCJcIik7XG4gICAgaWYgKHR5cGVvZiB2YWwgPT09IFwiZnVuY3Rpb25cIilcbiAgICAgIHJldHVybiB2YWwocGFyYW1zKTtcbiAgICBpZiAodHlwZW9mIHZhbCA9PT0gXCJzdHJpbmdcIilcbiAgICAgIHJldHVybiB0ZW1wbGF0ZSh2YWwsIHBhcmFtcyB8fCB7fSk7XG4gICAgcmV0dXJuIHZhbDtcbiAgfTtcbiAgY29uc3QgYWN0aW9ucyA9IHtcbiAgICBhZGQobGFuZzIsIHRhYmxlKSB7XG4gICAgICBzZXREaWN0KGxhbmcyLCAodDIpID0+IE9iamVjdC5hc3NpZ24odDIgfHwge30sIHRhYmxlKSk7XG4gICAgfSxcbiAgICBsb2NhbGU6IChsYW5nMikgPT4gbGFuZzIgPyBzZXRMb2NhbGUobGFuZzIpIDogbG9jYWxlKCksXG4gICAgZGljdDogKGxhbmcyKSA9PiBkZWVwUmVhZE9iamVjdChkaWN0LCBsYW5nMilcbiAgfTtcbiAgcmV0dXJuIFt0cmFuc2xhdGUsIGFjdGlvbnNdO1xufTtcbnZhciBJMThuQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQoe30pO1xudmFyIHVzZUkxOG4gPSAoKSA9PiB1c2VDb250ZXh0KEkxOG5Db250ZXh0KTtcbmNvbnN0IFRleHRTdHlsZWQkNCA9IHN0eWxlZC5kaXZgXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiAkeyhwcm9wcykgPT4gcHJvcHMuZm9udFdlaWdodH07XG4gICAgZm9udC1zaXplOiAkeyhwcm9wcykgPT4gcHJvcHMuZm9udFNpemV9O1xuICAgIGxpbmUtaGVpZ2h0OiAkeyhwcm9wcykgPT4gcHJvcHMubGluZUhlaWdodH07XG5cbiAgICBjb2xvcjogJHsocHJvcHMpID0+IHByb3BzLmNvbG9yfTtcbmA7XG5jb25zdCBUZXh0ID0gKGlucHV0cykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IFt0Ml0gPSB1c2VJMThuKCk7XG4gIGxldCB0ZXh0UmVmO1xuICBjb25zdCBjb2xvciA9ICgpID0+IGlucHV0cy5jb2xvciB8fCB0aGVtZS5jb2xvcnMudGV4dC5wcmltYXJ5O1xuICBjb25zdCBwcm9wcyA9IG1lcmdlUHJvcHMoe1xuICAgIGZvbnRTaXplOiBcIjE0cHhcIixcbiAgICBmb250V2VpZ2h0OiBcIjUxMFwiLFxuICAgIGxpbmVIZWlnaHQ6IFwiMTMwJVwiXG4gIH0sIGlucHV0cyk7XG4gIGNyZWF0ZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCF0ZXh0UmVmKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChwcm9wcy5jdXJzb3IgPT09IFwidW5zZXRcIikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoZ2V0Q29tcHV0ZWRTdHlsZSh0ZXh0UmVmKS5jdXJzb3IgIT09IFwicG9pbnRlclwiKSB7XG4gICAgICB0ZXh0UmVmLnN0eWxlLmN1cnNvciA9IFwiZGVmYXVsdFwiO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoVGV4dFN0eWxlZCQ0LCB7XG4gICAgZ2V0IGZvbnRTaXplKCkge1xuICAgICAgcmV0dXJuIHByb3BzLmZvbnRTaXplO1xuICAgIH0sXG4gICAgZ2V0IGZvbnRXZWlnaHQoKSB7XG4gICAgICByZXR1cm4gcHJvcHMuZm9udFdlaWdodDtcbiAgICB9LFxuICAgIGdldCBsaW5lSGVpZ2h0KCkge1xuICAgICAgcmV0dXJuIHByb3BzLmxpbmVIZWlnaHQ7XG4gICAgfSxcbiAgICBnZXQgY29sb3IoKSB7XG4gICAgICByZXR1cm4gY29sb3IoKTtcbiAgICB9LFxuICAgIGdldCBbXCJjbGFzc1wiXSgpIHtcbiAgICAgIHJldHVybiBwcm9wcy5jbGFzcztcbiAgICB9LFxuICAgIHJlZihyJCkge1xuICAgICAgY29uc3QgX3JlZiQgPSB0ZXh0UmVmO1xuICAgICAgdHlwZW9mIF9yZWYkID09PSBcImZ1bmN0aW9uXCIgPyBfcmVmJChyJCkgOiB0ZXh0UmVmID0gciQ7XG4gICAgfSxcbiAgICBcImRhdGEtdGMtdGV4dFwiOiBcInRydWVcIixcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICB2YXIgX2EyO1xuICAgICAgcmV0dXJuIGNyZWF0ZU1lbW8oKCkgPT4gISFwcm9wcy50cmFuc2xhdGlvbktleSkoKSA/IHQyKHByb3BzLnRyYW5zbGF0aW9uS2V5LCBwcm9wcy50cmFuc2xhdGlvblZhbHVlcywgKF9hMiA9IHByb3BzLmNoaWxkcmVuKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLnRvU3RyaW5nKCkpIDogcHJvcHMuY2hpbGRyZW47XG4gICAgfVxuICB9KTtcbn07XG5jb25zdCBJbWFnZUNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgJjo6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICBib3R0b206IDA7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICBib3JkZXI6IDAuNXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4wOCk7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IGluaGVyaXQ7XG4gICAgfVxuYDtcbmNvbnN0IEltYWdlU3R5bGVkJDIgPSBzdHlsZWQoSW1hZ2UpYFxuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBib3JkZXItcmFkaXVzOiBpbmhlcml0O1xuYDtcbmNvbnN0IFdhbGxldEltYWdlID0gKHByb3BzKSA9PiB7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoSW1hZ2VDb250YWluZXIsIHtcbiAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2xhc3M7XG4gICAgfSxcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChJbWFnZVN0eWxlZCQyLCB7XG4gICAgICAgIGdldCBzcmMoKSB7XG4gICAgICAgICAgcmV0dXJuIHByb3BzLnNyYztcbiAgICAgICAgfVxuICAgICAgfSksIGNyZWF0ZU1lbW8oKCkgPT4gcHJvcHMuYmFkZ2UpXTtcbiAgICB9XG4gIH0pO1xufTtcbmNvbnN0IGJvcmRlcnMkNCA9IHtcbiAgbTogXCIxNnB4XCIsXG4gIHM6IFwiMTJweFwiLFxuICBub25lOiBcIjBcIlxufTtcbmNvbnN0IGJhZGdlQm9yZGVycyA9IHtcbiAgbTogXCI2cHhcIixcbiAgczogXCI2cHhcIixcbiAgbm9uZTogXCIwXCJcbn07XG5jb25zdCBXYWxsZXRVbENvbnRhaW5lciA9IHN0eWxlZC51bGBcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGdhcDogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBvdmVyZmxvdy14OiBhdXRvO1xuICAgIHBhZGRpbmc6IDhweCAxMnB4IDE2cHggMTJweDtcbiAgICBtYXJnaW46IDA7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICBmbGV4LXdyYXA6IG5vd3JhcDtcblxuICAgICYmOjotd2Via2l0LXNjcm9sbGJhciB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuICAgIC1tcy1vdmVyZmxvdy1zdHlsZTogbm9uZTtcbiAgICBzY3JvbGxiYXItd2lkdGg6IG5vbmU7XG5cbiAgICA+IGxpIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleDogMTtcbiAgICAgICAgbWluLXdpZHRoOiA3OHB4O1xuICAgICAgICBoZWlnaHQ6IGZpdC1jb250ZW50O1xuICAgIH1cblxuICAgID4gbGkgPiBidXR0b24ge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG5gO1xuY29uc3QgV2FsbGV0SXRlbVN0eWxlZCA9IHN0eWxlZC5idXR0b25gXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdW5zZXQ7XG4gICAgcGFkZGluZzogOHB4IDRweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtaW4td2lkdGg6IDc4cHg7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4xMjVzIGVhc2UtaW4tb3V0O1xuXG4gICAgJHttZWRpYU5vdFRvdWNofSB7XG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjA0KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICY6YWN0aXZlIHtcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgwLjk2KTtcbiAgICB9XG5cbiAgICAke21lZGlhVG91Y2h9IHtcbiAgICAgICAgJjphY3RpdmUge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgwLjkyKTtcbiAgICAgICAgfVxuICAgIH1cbmA7XG5jb25zdCBJbWFnZVN0eWxlZCQxID0gc3R5bGVkKFdhbGxldEltYWdlKWBcbiAgICB3aWR0aDogNjBweDtcbiAgICBoZWlnaHQ6IDYwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogJHsocHJvcHMpID0+IGJvcmRlcnMkNFtwcm9wcy50aGVtZS5ib3JkZXJSYWRpdXNdfTtcbiAgICBtYXJnaW4tYm90dG9tOiA4cHg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuYDtcbmNvbnN0IEJhZGdlU3R5bGVkID0gc3R5bGVkKEltYWdlKWBcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IC02cHg7XG4gICAgYm90dG9tOiAtNnB4O1xuICAgIHdpZHRoOiAyNHB4O1xuICAgIGhlaWdodDogMjRweDtcbiAgICBib3JkZXItcmFkaXVzOiAkeyhwcm9wcykgPT4gYmFkZ2VCb3JkZXJzW3Byb3BzLnRoZW1lLmJvcmRlclJhZGl1c119O1xuICAgIGJveC1zaGFkb3c6IDAgMnB4IDhweCAwIHJnYmEoMCwgMCwgMCwgMC4wOCk7XG5gO1xuY29uc3QgU3R5bGVkVGV4dCA9IHN0eWxlZChUZXh0KWBcbiAgICBtYXgtd2lkdGg6IDkwcHg7XG4gICAgZm9udC13ZWlnaHQ6IDUxMDtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgICAke21lZGlhKFwibW9iaWxlXCIpfSB7XG4gICAgICAgIG1heC13aWR0aDogODBweDtcbiAgICB9XG5gO1xuY29uc3QgU3R5bGVkU2Vjb25kTGluZSA9IHN0eWxlZChUZXh0KWBcbiAgICBmb250LXdlaWdodDogJHsocHJvcHMpID0+IHByb3BzLmNvbG9yUHJpbWFyeSA/IFwiNTEwXCIgOiBcIjQwMFwifTtcbiAgICBtYXgtd2lkdGg6IDkwcHg7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMuY29sb3JQcmltYXJ5ID8gcHJvcHMudGhlbWUuY29sb3JzLnRleHQucHJpbWFyeSA6IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0LnNlY29uZGFyeX07XG5cbiAgICAke21lZGlhKFwibW9iaWxlXCIpfSB7XG4gICAgICAgIG1heC13aWR0aDogODBweDtcbiAgICB9XG5gO1xuY29uc3QgX3RtcGwkJHIgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPGRpdj48L2Rpdj5gKTtcbmNvbnN0IFdhbGxldEl0ZW0gPSAocHJvcHMpID0+IHtcbiAgbGV0IGN0eFJlZiA9IG51bGw7XG4gIGNvbnN0IGFkanVzdExldHRlclNwYWNpbmcgPSAoKSA9PiB7XG4gICAgY29uc3QgbmFtZSA9IGN0eFJlZiA9PSBudWxsID8gdm9pZCAwIDogY3R4UmVmLnF1ZXJ5U2VsZWN0b3IoXCJkaXZcIik7XG4gICAgaWYgKG5hbWUgJiYgbmFtZS5zY3JvbGxXaWR0aCA+IG5hbWUuY2xpZW50V2lkdGgpIHtcbiAgICAgIGxldCBzcGFjaW5nID0gMDtcbiAgICAgIGNvbnN0IG1pblNwYWNpbmcgPSAtMC40O1xuICAgICAgY29uc3Qgc3RlcCA9IDAuMDU7XG4gICAgICB3aGlsZSAobmFtZS5zY3JvbGxXaWR0aCA+IG5hbWUuY2xpZW50V2lkdGggJiYgc3BhY2luZyA+PSBtaW5TcGFjaW5nKSB7XG4gICAgICAgIHNwYWNpbmcgLT0gc3RlcDtcbiAgICAgICAgbmFtZS5zdHlsZS5sZXR0ZXJTcGFjaW5nID0gYCR7c3BhY2luZ31weGA7XG4gICAgICB9XG4gICAgICBpZiAoc3BhY2luZyAhPT0gMCkge1xuICAgICAgICBzcGFjaW5nIC09IHN0ZXA7XG4gICAgICAgIG5hbWUuc3R5bGUubGV0dGVyU3BhY2luZyA9IGAke3NwYWNpbmd9cHhgO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbiAgb25Nb3VudCgoKSA9PiBhZGp1c3RMZXR0ZXJTcGFjaW5nKCkpO1xuICBjcmVhdGVFZmZlY3QoKCkgPT4ge1xuICAgIGFkanVzdExldHRlclNwYWNpbmcoKTtcbiAgfSk7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoV2FsbGV0SXRlbVN0eWxlZCwge1xuICAgIGdldCBbXCJjbGFzc1wiXSgpIHtcbiAgICAgIHJldHVybiBwcm9wcy5jbGFzcztcbiAgICB9LFxuICAgIG9uQ2xpY2s6ICgpID0+IHByb3BzLm9uQ2xpY2soKSxcbiAgICBcImRhdGEtdGMtd2FsbGV0LWl0ZW1cIjogXCJ0cnVlXCIsXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIFtjcmVhdGVNZW1vKCgpID0+IGNyZWF0ZU1lbW8oKCkgPT4gdHlwZW9mIHByb3BzLmljb24gPT09IFwic3RyaW5nXCIpKCkgPyBjcmVhdGVDb21wb25lbnQoSW1hZ2VTdHlsZWQkMSwge1xuICAgICAgICBnZXQgc3JjKCkge1xuICAgICAgICAgIHJldHVybiBwcm9wcy5pY29uO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgYmFkZ2UoKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZU1lbW8oKCkgPT4gISFwcm9wcy5iYWRnZVVybCkoKSAmJiBjcmVhdGVDb21wb25lbnQoQmFkZ2VTdHlsZWQsIHtcbiAgICAgICAgICAgIGdldCBzcmMoKSB7XG4gICAgICAgICAgICAgIHJldHVybiBwcm9wcy5iYWRnZVVybDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSkgOiBwcm9wcy5pY29uKSwgKCgpID0+IHtcbiAgICAgICAgY29uc3QgX2VsJCA9IF90bXBsJCRyLmNsb25lTm9kZSh0cnVlKTtcbiAgICAgICAgdXNlKChlbCkgPT4gY3R4UmVmID0gZWwsIF9lbCQpO1xuICAgICAgICBpbnNlcnQoX2VsJCwgY3JlYXRlQ29tcG9uZW50KFN0eWxlZFRleHQsIHtcbiAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICByZXR1cm4gcHJvcHMubmFtZTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pKTtcbiAgICAgICAgcmV0dXJuIF9lbCQ7XG4gICAgICB9KSgpLCBjcmVhdGVNZW1vKCgpID0+IGNyZWF0ZU1lbW8oKCkgPT4gISFwcm9wcy5zZWNvbmRMaW5lKSgpICYmIGNyZWF0ZUNvbXBvbmVudChTdHlsZWRTZWNvbmRMaW5lLCB7XG4gICAgICAgIGdldCBjb2xvclByaW1hcnkoKSB7XG4gICAgICAgICAgdmFyIF9hMjtcbiAgICAgICAgICByZXR1cm4gKF9hMiA9IHByb3BzLnNlY29uZExpbmVDb2xvclByaW1hcnkpICE9IG51bGwgPyBfYTIgOiB0cnVlO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIHByb3BzLnNlY29uZExpbmU7XG4gICAgICAgIH1cbiAgICAgIH0pKV07XG4gICAgfVxuICB9KTtcbn07XG5jb25zdCBIMVN0eWxlZCRiID0gc3R5bGVkLmgxYFxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBmb250LXdlaWdodDogNTkwO1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBsaW5lLWhlaWdodDogMjhweDtcblxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgIGNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLnRleHQucHJpbWFyeX07XG5cbiAgICBtYXJnaW4tdG9wOiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG5cbiAgICBjdXJzb3I6IGRlZmF1bHQ7XG5gO1xuY29uc3QgSDEgPSAocHJvcHMpID0+IHtcbiAgY29uc3QgW3QyXSA9IHVzZUkxOG4oKTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChIMVN0eWxlZCRiLCB7XG4gICAgZ2V0IFtcImNsYXNzXCJdKCkge1xuICAgICAgcmV0dXJuIHByb3BzLmNsYXNzO1xuICAgIH0sXG4gICAgXCJkYXRhLXRjLWgxXCI6IFwidHJ1ZVwiLFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHZhciBfYTI7XG4gICAgICByZXR1cm4gY3JlYXRlTWVtbygoKSA9PiAhIXByb3BzLnRyYW5zbGF0aW9uS2V5KSgpID8gdDIocHJvcHMudHJhbnNsYXRpb25LZXksIHByb3BzLnRyYW5zbGF0aW9uVmFsdWVzLCAoX2EyID0gcHJvcHMuY2hpbGRyZW4pID09IG51bGwgPyB2b2lkIDAgOiBfYTIudG9TdHJpbmcoKSkgOiBwcm9wcy5jaGlsZHJlbjtcbiAgICB9XG4gIH0pO1xufTtcbmNvbnN0IEgyU3R5bGVkJDUgPSBzdHlsZWQuaDJgXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xuXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gICAgY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dC5zZWNvbmRhcnl9O1xuXG4gICAgbWFyZ2luLXRvcDogMDtcbiAgICBtYXJnaW4tYm90dG9tOiAzMnB4O1xuXG4gICAgY3Vyc29yOiBkZWZhdWx0O1xuYDtcbmNvbnN0IEgyID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IFt0Ml0gPSB1c2VJMThuKCk7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoSDJTdHlsZWQkNSwge1xuICAgIGdldCBbXCJjbGFzc1wiXSgpIHtcbiAgICAgIHJldHVybiBwcm9wcy5jbGFzcztcbiAgICB9LFxuICAgIFwiZGF0YS10Yy1oMlwiOiBcInRydWVcIixcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICB2YXIgX2EyO1xuICAgICAgcmV0dXJuIGNyZWF0ZU1lbW8oKCkgPT4gISFwcm9wcy50cmFuc2xhdGlvbktleSkoKSA/IHQyKHByb3BzLnRyYW5zbGF0aW9uS2V5LCBwcm9wcy50cmFuc2xhdGlvblZhbHVlcywgKF9hMiA9IHByb3BzLmNoaWxkcmVuKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLnRvU3RyaW5nKCkpIDogcHJvcHMuY2hpbGRyZW47XG4gICAgfVxuICB9KTtcbn07XG5jb25zdCBIM1N0eWxlZCQyID0gc3R5bGVkLmgzYFxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBmb250LXdlaWdodDogNTEwO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMjBweDtcblxuICAgIGNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLnRleHQucHJpbWFyeX07XG5cbiAgICBtYXJnaW4tdG9wOiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG5cbiAgICBjdXJzb3I6IGRlZmF1bHQ7XG5gO1xuY29uc3QgSDMgPSAocHJvcHMpID0+IHtcbiAgY29uc3QgW3QyXSA9IHVzZUkxOG4oKTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChIM1N0eWxlZCQyLCB7XG4gICAgXCJkYXRhLXRjLWgzXCI6IFwidHJ1ZVwiLFxuICAgIGdldCBbXCJjbGFzc1wiXSgpIHtcbiAgICAgIHJldHVybiBwcm9wcy5jbGFzcztcbiAgICB9LFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHZhciBfYTI7XG4gICAgICByZXR1cm4gY3JlYXRlTWVtbygoKSA9PiAhIXByb3BzLnRyYW5zbGF0aW9uS2V5KSgpID8gdDIocHJvcHMudHJhbnNsYXRpb25LZXksIHByb3BzLnRyYW5zbGF0aW9uVmFsdWVzLCAoX2EyID0gcHJvcHMuY2hpbGRyZW4pID09IG51bGwgPyB2b2lkIDAgOiBfYTIudG9TdHJpbmcoKSkgOiBwcm9wcy5jaGlsZHJlbjtcbiAgICB9XG4gIH0pO1xufTtcbmNvbnN0IF90bXBsJCRxID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgd2lkdGg9XCIyNFwiIGhlaWdodD1cIjI0XCIgdmlld0JveD1cIjAgMCAyNCAyNFwiIGZpbGw9XCJub25lXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPjxwYXRoIGZpbGwtcnVsZT1cImV2ZW5vZGRcIiBjbGlwLXJ1bGU9XCJldmVub2RkXCIgZD1cIk0xNC4xODM5IDE3LjcwNjlDMTMuNjQwNSAxOC42NTA3IDEzLjM2ODggMTkuMTIyNiAxMy4wNTkxIDE5LjM0OEMxMi40Mjc4IDE5LjgwNzQgMTEuNTcyMyAxOS44MDc0IDEwLjk0MSAxOS4zNDhDMTAuNjMxMiAxOS4xMjI2IDEwLjM1OTUgMTguNjUwNyA5LjgxNjEzIDE3LjcwNjlMNS41MjA2NiAxMC4yNDY0QzQuNzY4NjQgOC45NDAyNCA0LjM5MjYzIDguMjg3MTcgNC4zMzc2MiA3Ljc1ODk0QzQuMjI1NSA2LjY4MjM2IDQuODE4OTQgNS42NTU5MSA1LjgwNzg4IDUuMjE1ODlDNi4yOTMwOSA1IDcuMDQ2NjcgNSA4LjU1MzgzIDVIMTUuNDQ2MkMxNi45NTM0IDUgMTcuNzA2OSA1IDE4LjE5MjIgNS4yMTU4OUMxOS4xODExIDUuNjU1OTEgMTkuNzc0NSA2LjY4MjM2IDE5LjY2MjQgNy43NTg5NEMxOS42MDc0IDguMjg3MTcgMTkuMjMxNCA4Ljk0MDI0IDE4LjQ3OTQgMTAuMjQ2NEwxNC4xODM5IDE3LjcwNjlaTTExLjEgMTYuMzQxMkw2LjU2MTM5IDguNDgwMDJDNi4zMTk5NSA4LjA2MTg1IDYuMTk5MjQgNy44NTI3NiA2LjE4MTQ2IDcuNjgzNjVDNi4xNDUyMyA3LjMzODk2IDYuMzM1MDcgNy4wMTAxNSA2LjY1MTY5IDYuODY5MTlDNi44MDcwMyA2LjgwMDAyIDcuMDQ4NDcgNi44MDAwMiA3LjUzMTMzIDYuODAwMDJINy41MzEzNEwxMS4xIDYuODAwMDJWMTYuMzQxMlpNMTIuOSAxNi4zNDEyTDE3LjQzODcgOC40ODAwMkMxNy42ODAxIDguMDYxODUgMTcuODAwOCA3Ljg1Mjc2IDE3LjgxODYgNy42ODM2NUMxNy44NTQ4IDcuMzM4OTYgMTcuNjY1IDcuMDEwMTUgMTcuMzQ4NCA2Ljg2OTE5QzE3LjE5MyA2LjgwMDAyIDE2Ljk1MTYgNi44MDAwMiAxNi40Njg3IDYuODAwMDJMMTIuOSA2LjgwMDAyVjE2LjM0MTJaXCI+PC9wYXRoPjwvc3ZnPmApO1xuY29uc3QgVG9uSWNvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGZpbGwgPSAoKSA9PiBwcm9wcy5maWxsIHx8IHRoZW1lLmNvbG9ycy5pY29uLnByaW1hcnk7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkcS5jbG9uZU5vZGUodHJ1ZSksIF9lbCQyID0gX2VsJC5maXJzdENoaWxkO1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoKSA9PiBzZXRBdHRyaWJ1dGUoX2VsJDIsIFwiZmlsbFwiLCBmaWxsKCkpKTtcbiAgICByZXR1cm4gX2VsJDtcbiAgfSkoKTtcbn07XG5jb25zdCBfdG1wbCQkcCA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB3aWR0aD1cIjE2XCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgZmlsbD1cIm5vbmVcIj48ZyBjbGlwLXBhdGg9XCJ1cmwoI2NsaXAwXzM3ODNfMjA0NSlcIj48Y2lyY2xlIGN4PVwiOFwiIGN5PVwiOC4wMDA5OFwiIHI9XCI4XCI+PC9jaXJjbGU+PHBhdGggZD1cIk00Ljc1IDguNTAwOThMNyAxMC43NTFMMTEuNzUgNi4wMDA5OFwiIHN0cm9rZS13aWR0aD1cIjEuNVwiIHN0cm9rZS1saW5lY2FwPVwicm91bmRcIiBzdHJva2UtbGluZWpvaW49XCJyb3VuZFwiPjwvcGF0aD48L2c+PGRlZnM+PGNsaXBQYXRoIGlkPVwiY2xpcDBfMzc4M18yMDQ1XCI+PHJlY3Qgd2lkdGg9XCIxNlwiIGhlaWdodD1cIjE2XCIgZmlsbD1cIndoaXRlXCIgdHJhbnNmb3JtPVwidHJhbnNsYXRlKDAgMC4wMDA5NzY1NjIpXCI+PC9yZWN0PjwvY2xpcFBhdGg+PC9kZWZzPjwvc3ZnPmApLCBfdG1wbCQyJDQgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2ZyB3aWR0aD1cIjI0XCIgaGVpZ2h0PVwiMjRcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCIgZmlsbD1cIm5vbmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+PGNpcmNsZSBjeD1cIjEyXCIgY3k9XCIxMlwiIHI9XCIxMVwiPjwvY2lyY2xlPjxwYXRoIGQ9XCJNMTcuMTM2NCA5LjYzNjRDMTcuNDg3OSA5LjI4NDkzIDE3LjQ4NzkgOC43MTUwOCAxNy4xMzY0IDguMzYzNjFDMTYuNzg0OSA4LjAxMjE0IDE2LjIxNTEgOC4wMTIxNCAxNS44NjM2IDguMzYzNjFMMTAgMTQuMjI3Mkw4LjEzNjQgMTIuMzYzNkM3Ljc4NDkzIDEyLjAxMjEgNy4yMTUwOCAxMi4wMTIxIDYuODYzNjEgMTIuMzYzNkM2LjUxMjE0IDEyLjcxNTEgNi41MTIxNCAxMy4yODQ5IDYuODYzNjEgMTMuNjM2NEw5LjM2MzYxIDE2LjEzNjRDOS43MTUwOCAxNi40ODc5IDEwLjI4NDkgMTYuNDg3OSAxMC42MzY0IDE2LjEzNjRMMTcuMTM2NCA5LjYzNjRaXCI+PC9wYXRoPjwvc3ZnPmApLCBfdG1wbCQzJDIgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2ZyB3aWR0aD1cIjcyXCIgaGVpZ2h0PVwiNzJcIiB2aWV3Qm94PVwiMCAwIDcyIDcyXCIgZmlsbD1cIm5vbmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+PGNpcmNsZSBjeD1cIjM2XCIgY3k9XCIzNlwiIHI9XCIzM1wiPjwvY2lyY2xlPjxwYXRoIGQ9XCJNNTAuOTE0MiAyOC40MTQyQzUxLjY5NTMgMjcuNjMzMiA1MS42OTUzIDI2LjM2NjggNTAuOTE0MiAyNS41ODU4QzUwLjEzMzIgMjQuODA0NyA0OC44NjY4IDI0LjgwNDcgNDguMDg1OCAyNS41ODU4TDMwIDQzLjY3MTZMMjMuOTE0MiAzNy41ODU4QzIzLjEzMzIgMzYuODA0NyAyMS44NjY4IDM2LjgwNDcgMjEuMDg1OCAzNy41ODU4QzIwLjMwNDcgMzguMzY2OCAyMC4zMDQ3IDM5LjYzMzIgMjEuMDg1OCA0MC40MTQyTDI4LjU4NTggNDcuOTE0MkMyOS4zNjY4IDQ4LjY5NTMgMzAuNjMzMiA0OC42OTUzIDMxLjQxNDIgNDcuOTE0Mkw1MC45MTQyIDI4LjQxNDJaXCI+PC9wYXRoPjwvc3ZnPmApO1xuY29uc3QgU3VjY2Vzc0ljb24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBzaXplID0gKCkgPT4gcHJvcHMuc2l6ZSB8fCBcInNcIjtcbiAgY29uc3QgZmlsbCA9ICgpID0+IHByb3BzLmZpbGwgfHwgdGhlbWUuY29sb3JzLmljb24uc3VjY2VzcztcbiAgcmV0dXJuIGNyZWF0ZU1lbW8oKCgpID0+IHtcbiAgICBjb25zdCBfYyQgPSBjcmVhdGVNZW1vKCgpID0+IHNpemUoKSA9PT0gXCJ4c1wiKTtcbiAgICByZXR1cm4gKCkgPT4gX2MkKCkgPyAoKCkgPT4ge1xuICAgICAgY29uc3QgX2VsJCA9IF90bXBsJCRwLmNsb25lTm9kZSh0cnVlKSwgX2VsJDIgPSBfZWwkLmZpcnN0Q2hpbGQsIF9lbCQzID0gX2VsJDIuZmlyc3RDaGlsZCwgX2VsJDQgPSBfZWwkMy5uZXh0U2libGluZztcbiAgICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoX3AkKSA9PiB7XG4gICAgICAgIGNvbnN0IF92JCA9IHByb3BzLmNsYXNzLCBfdiQyID0gZmlsbCgpLCBfdiQzID0gdGhlbWUuY29sb3JzLmNvbnN0YW50LndoaXRlO1xuICAgICAgICBfdiQgIT09IF9wJC5fdiQgJiYgc2V0QXR0cmlidXRlKF9lbCQsIFwiY2xhc3NcIiwgX3AkLl92JCA9IF92JCk7XG4gICAgICAgIF92JDIgIT09IF9wJC5fdiQyICYmIHNldEF0dHJpYnV0ZShfZWwkMywgXCJmaWxsXCIsIF9wJC5fdiQyID0gX3YkMik7XG4gICAgICAgIF92JDMgIT09IF9wJC5fdiQzICYmIHNldEF0dHJpYnV0ZShfZWwkNCwgXCJzdHJva2VcIiwgX3AkLl92JDMgPSBfdiQzKTtcbiAgICAgICAgcmV0dXJuIF9wJDtcbiAgICAgIH0sIHtcbiAgICAgICAgX3YkOiB2b2lkIDAsXG4gICAgICAgIF92JDI6IHZvaWQgMCxcbiAgICAgICAgX3YkMzogdm9pZCAwXG4gICAgICB9KTtcbiAgICAgIHJldHVybiBfZWwkO1xuICAgIH0pKCkgOiAoKCkgPT4ge1xuICAgICAgY29uc3QgX2MkMiA9IGNyZWF0ZU1lbW8oKCkgPT4gc2l6ZSgpID09PSBcInNcIik7XG4gICAgICByZXR1cm4gKCkgPT4gX2MkMigpID8gKCgpID0+IHtcbiAgICAgICAgY29uc3QgX2VsJDUgPSBfdG1wbCQyJDQuY2xvbmVOb2RlKHRydWUpLCBfZWwkNiA9IF9lbCQ1LmZpcnN0Q2hpbGQsIF9lbCQ3ID0gX2VsJDYubmV4dFNpYmxpbmc7XG4gICAgICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoX3AkKSA9PiB7XG4gICAgICAgICAgY29uc3QgX3YkNCA9IHByb3BzLmNsYXNzLCBfdiQ1ID0gZmlsbCgpLCBfdiQ2ID0gdGhlbWUuY29sb3JzLmNvbnN0YW50LndoaXRlO1xuICAgICAgICAgIF92JDQgIT09IF9wJC5fdiQ0ICYmIHNldEF0dHJpYnV0ZShfZWwkNSwgXCJjbGFzc1wiLCBfcCQuX3YkNCA9IF92JDQpO1xuICAgICAgICAgIF92JDUgIT09IF9wJC5fdiQ1ICYmIHNldEF0dHJpYnV0ZShfZWwkNiwgXCJmaWxsXCIsIF9wJC5fdiQ1ID0gX3YkNSk7XG4gICAgICAgICAgX3YkNiAhPT0gX3AkLl92JDYgJiYgc2V0QXR0cmlidXRlKF9lbCQ3LCBcImZpbGxcIiwgX3AkLl92JDYgPSBfdiQ2KTtcbiAgICAgICAgICByZXR1cm4gX3AkO1xuICAgICAgICB9LCB7XG4gICAgICAgICAgX3YkNDogdm9pZCAwLFxuICAgICAgICAgIF92JDU6IHZvaWQgMCxcbiAgICAgICAgICBfdiQ2OiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBfZWwkNTtcbiAgICAgIH0pKCkgOiAoKCkgPT4ge1xuICAgICAgICBjb25zdCBfZWwkOCA9IF90bXBsJDMkMi5jbG9uZU5vZGUodHJ1ZSksIF9lbCQ5ID0gX2VsJDguZmlyc3RDaGlsZCwgX2VsJDEwID0gX2VsJDkubmV4dFNpYmxpbmc7XG4gICAgICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoX3AkKSA9PiB7XG4gICAgICAgICAgY29uc3QgX3YkNyA9IHByb3BzLmNsYXNzLCBfdiQ4ID0gZmlsbCgpLCBfdiQ5ID0gdGhlbWUuY29sb3JzLmNvbnN0YW50LndoaXRlO1xuICAgICAgICAgIF92JDcgIT09IF9wJC5fdiQ3ICYmIHNldEF0dHJpYnV0ZShfZWwkOCwgXCJjbGFzc1wiLCBfcCQuX3YkNyA9IF92JDcpO1xuICAgICAgICAgIF92JDggIT09IF9wJC5fdiQ4ICYmIHNldEF0dHJpYnV0ZShfZWwkOSwgXCJmaWxsXCIsIF9wJC5fdiQ4ID0gX3YkOCk7XG4gICAgICAgICAgX3YkOSAhPT0gX3AkLl92JDkgJiYgc2V0QXR0cmlidXRlKF9lbCQxMCwgXCJmaWxsXCIsIF9wJC5fdiQ5ID0gX3YkOSk7XG4gICAgICAgICAgcmV0dXJuIF9wJDtcbiAgICAgICAgfSwge1xuICAgICAgICAgIF92JDc6IHZvaWQgMCxcbiAgICAgICAgICBfdiQ4OiB2b2lkIDAsXG4gICAgICAgICAgX3YkOTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gX2VsJDg7XG4gICAgICB9KSgpO1xuICAgIH0pKCk7XG4gIH0pKCkpO1xufTtcbmNvbnN0IF90bXBsJCRvID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgd2lkdGg9XCI3MlwiIGhlaWdodD1cIjcyXCIgdmlld0JveD1cIjAgMCA3MiA3MlwiIGZpbGw9XCJub25lXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPjxjaXJjbGUgY3g9XCIzNlwiIGN5PVwiMzZcIiByPVwiMzNcIj48L2NpcmNsZT48cGF0aCBkPVwiTTI0LjA4NTggMjYuOTE0MkMyMy4zMDQ3IDI2LjEzMzIgMjMuMzA0NyAyNC44NjY4IDI0LjA4NTggMjQuMDg1OEMyNC44NjY4IDIzLjMwNDcgMjYuMTMzMiAyMy4zMDQ3IDI2LjkxNDIgMjQuMDg1OEwzNiAzMy4xNzE2TDQ1LjA4NTggMjQuMDg1OEM0NS44NjY4IDIzLjMwNDcgNDcuMTMzMiAyMy4zMDQ3IDQ3LjkxNDIgMjQuMDg1OEM0OC42OTUzIDI0Ljg2NjggNDguNjk1MyAyNi4xMzMyIDQ3LjkxNDIgMjYuOTE0MkwzOC44Mjg0IDM2TDQ3LjkxNDIgNDUuMDg1OEM0OC42OTUzIDQ1Ljg2NjggNDguNjk1MyA0Ny4xMzMyIDQ3LjkxNDIgNDcuOTE0MkM0Ny4xMzMyIDQ4LjY5NTMgNDUuODY2OCA0OC42OTUzIDQ1LjA4NTggNDcuOTE0MkwzNiAzOC44Mjg0TDI2LjkxNDIgNDcuOTE0MkMyNi4xMzMyIDQ4LjY5NTMgMjQuODY2OCA0OC42OTUzIDI0LjA4NTggNDcuOTE0MkMyMy4zMDQ3IDQ3LjEzMzIgMjMuMzA0NyA0NS44NjY4IDI0LjA4NTggNDUuMDg1OEwzMy4xNzE2IDM2TDI0LjA4NTggMjYuOTE0MlpcIj48L3BhdGg+PC9zdmc+YCksIF90bXBsJDIkMyA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB3aWR0aD1cIjQ4XCIgaGVpZ2h0PVwiNDhcIiB2aWV3Qm94PVwiMCAwIDQ4IDQ4XCIgZmlsbD1cIm5vbmVcIj48Y2lyY2xlIGN4PVwiMjRcIiBjeT1cIjI0LjAwMVwiIHI9XCIyMlwiPjwvY2lyY2xlPjxwYXRoIGQ9XCJNMjQgMjQuMDAxTDMxLjUgMTYuNTAxTTI0IDI0LjAwMUwxNi41IDE2LjUwMU0yNCAyNC4wMDFMMTYuNSAzMS41MDFNMjQgMjQuMDAxTDMxLjUgMzEuNTAxXCIgc3Ryb2tlLXdpZHRoPVwiM1wiIHN0cm9rZS1saW5lY2FwPVwicm91bmRcIiBzdHJva2UtbGluZWpvaW49XCJyb3VuZFwiPjwvcGF0aD48L3N2Zz5gKSwgX3RtcGwkMyQxID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgd2lkdGg9XCIyNFwiIGhlaWdodD1cIjI0XCIgdmlld0JveD1cIjAgMCAyNCAyNFwiIGZpbGw9XCJub25lXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPjxjaXJjbGUgY3g9XCIxMlwiIGN5PVwiMTJcIiByPVwiMTFcIj48L2NpcmNsZT48cGF0aCBkPVwiTTcuODYzNjEgOS4xMzY0QzcuNTEyMTQgOC43ODQ5MyA3LjUxMjE0IDguMjE1MDggNy44NjM2MSA3Ljg2MzYxQzguMjE1MDggNy41MTIxNCA4Ljc4NDkzIDcuNTEyMTQgOS4xMzY0IDcuODYzNjFMMTIgMTAuNzI3MkwxNC44NjM2IDcuODYzNjFDMTUuMjE1MSA3LjUxMjE0IDE1Ljc4NDkgNy41MTIxNCAxNi4xMzY0IDcuODYzNjFDMTYuNDg3OSA4LjIxNTA4IDE2LjQ4NzkgOC43ODQ5MyAxNi4xMzY0IDkuMTM2NEwxMy4yNzI4IDEyTDE2LjEzNjQgMTQuODYzNkMxNi40ODc5IDE1LjIxNTEgMTYuNDg3OSAxNS43ODQ5IDE2LjEzNjQgMTYuMTM2NEMxNS43ODQ5IDE2LjQ4NzkgMTUuMjE1MSAxNi40ODc5IDE0Ljg2MzYgMTYuMTM2NEwxMiAxMy4yNzI4TDkuMTM2NCAxNi4xMzY0QzguNzg0OTMgMTYuNDg3OSA4LjIxNTA4IDE2LjQ4NzkgNy44NjM2MSAxNi4xMzY0QzcuNTEyMTQgMTUuNzg0OSA3LjUxMjE0IDE1LjIxNTEgNy44NjM2MSAxNC44NjM2TDEwLjcyNzIgMTJMNy44NjM2MSA5LjEzNjRaXCI+PC9wYXRoPjwvc3ZnPmApO1xuY29uc3QgRXJyb3JJY29uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3Qgc2l6ZSA9ICgpID0+IHByb3BzLnNpemUgfHwgXCJtXCI7XG4gIGNvbnN0IGZpbGwgPSAoKSA9PiBwcm9wcy5maWxsIHx8IHRoZW1lLmNvbG9ycy5pY29uLmVycm9yO1xuICByZXR1cm4gY3JlYXRlTWVtbygoKCkgPT4ge1xuICAgIGNvbnN0IF9jJCA9IGNyZWF0ZU1lbW8oKCkgPT4gc2l6ZSgpID09PSBcIm1cIik7XG4gICAgcmV0dXJuICgpID0+IF9jJCgpID8gKCgpID0+IHtcbiAgICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkby5jbG9uZU5vZGUodHJ1ZSksIF9lbCQyID0gX2VsJC5maXJzdENoaWxkLCBfZWwkMyA9IF9lbCQyLm5leHRTaWJsaW5nO1xuICAgICAgY3JlYXRlUmVuZGVyRWZmZWN0KChfcCQpID0+IHtcbiAgICAgICAgY29uc3QgX3YkID0gcHJvcHMuY2xhc3MsIF92JDIgPSBmaWxsKCksIF92JDMgPSB0aGVtZS5jb2xvcnMuY29uc3RhbnQud2hpdGU7XG4gICAgICAgIF92JCAhPT0gX3AkLl92JCAmJiBzZXRBdHRyaWJ1dGUoX2VsJCwgXCJjbGFzc1wiLCBfcCQuX3YkID0gX3YkKTtcbiAgICAgICAgX3YkMiAhPT0gX3AkLl92JDIgJiYgc2V0QXR0cmlidXRlKF9lbCQyLCBcImZpbGxcIiwgX3AkLl92JDIgPSBfdiQyKTtcbiAgICAgICAgX3YkMyAhPT0gX3AkLl92JDMgJiYgc2V0QXR0cmlidXRlKF9lbCQzLCBcImZpbGxcIiwgX3AkLl92JDMgPSBfdiQzKTtcbiAgICAgICAgcmV0dXJuIF9wJDtcbiAgICAgIH0sIHtcbiAgICAgICAgX3YkOiB2b2lkIDAsXG4gICAgICAgIF92JDI6IHZvaWQgMCxcbiAgICAgICAgX3YkMzogdm9pZCAwXG4gICAgICB9KTtcbiAgICAgIHJldHVybiBfZWwkO1xuICAgIH0pKCkgOiAoKCkgPT4ge1xuICAgICAgY29uc3QgX2MkMiA9IGNyZWF0ZU1lbW8oKCkgPT4gc2l6ZSgpID09PSBcInNcIik7XG4gICAgICByZXR1cm4gKCkgPT4gX2MkMigpID8gKCgpID0+IHtcbiAgICAgICAgY29uc3QgX2VsJDQgPSBfdG1wbCQyJDMuY2xvbmVOb2RlKHRydWUpLCBfZWwkNSA9IF9lbCQ0LmZpcnN0Q2hpbGQsIF9lbCQ2ID0gX2VsJDUubmV4dFNpYmxpbmc7XG4gICAgICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoX3AkKSA9PiB7XG4gICAgICAgICAgY29uc3QgX3YkNCA9IHByb3BzLmNsYXNzLCBfdiQ1ID0gZmlsbCgpLCBfdiQ2ID0gdGhlbWUuY29sb3JzLmNvbnN0YW50LndoaXRlO1xuICAgICAgICAgIF92JDQgIT09IF9wJC5fdiQ0ICYmIHNldEF0dHJpYnV0ZShfZWwkNCwgXCJjbGFzc1wiLCBfcCQuX3YkNCA9IF92JDQpO1xuICAgICAgICAgIF92JDUgIT09IF9wJC5fdiQ1ICYmIHNldEF0dHJpYnV0ZShfZWwkNSwgXCJmaWxsXCIsIF9wJC5fdiQ1ID0gX3YkNSk7XG4gICAgICAgICAgX3YkNiAhPT0gX3AkLl92JDYgJiYgc2V0QXR0cmlidXRlKF9lbCQ2LCBcInN0cm9rZVwiLCBfcCQuX3YkNiA9IF92JDYpO1xuICAgICAgICAgIHJldHVybiBfcCQ7XG4gICAgICAgIH0sIHtcbiAgICAgICAgICBfdiQ0OiB2b2lkIDAsXG4gICAgICAgICAgX3YkNTogdm9pZCAwLFxuICAgICAgICAgIF92JDY6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIF9lbCQ0O1xuICAgICAgfSkoKSA6ICgoKSA9PiB7XG4gICAgICAgIGNvbnN0IF9lbCQ3ID0gX3RtcGwkMyQxLmNsb25lTm9kZSh0cnVlKSwgX2VsJDggPSBfZWwkNy5maXJzdENoaWxkLCBfZWwkOSA9IF9lbCQ4Lm5leHRTaWJsaW5nO1xuICAgICAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKF9wJCkgPT4ge1xuICAgICAgICAgIGNvbnN0IF92JDcgPSBwcm9wcy5jbGFzcywgX3YkOCA9IGZpbGwoKSwgX3YkOSA9IHRoZW1lLmNvbG9ycy5jb25zdGFudC53aGl0ZTtcbiAgICAgICAgICBfdiQ3ICE9PSBfcCQuX3YkNyAmJiBzZXRBdHRyaWJ1dGUoX2VsJDcsIFwiY2xhc3NcIiwgX3AkLl92JDcgPSBfdiQ3KTtcbiAgICAgICAgICBfdiQ4ICE9PSBfcCQuX3YkOCAmJiBzZXRBdHRyaWJ1dGUoX2VsJDgsIFwiZmlsbFwiLCBfcCQuX3YkOCA9IF92JDgpO1xuICAgICAgICAgIF92JDkgIT09IF9wJC5fdiQ5ICYmIHNldEF0dHJpYnV0ZShfZWwkOSwgXCJmaWxsXCIsIF9wJC5fdiQ5ID0gX3YkOSk7XG4gICAgICAgICAgcmV0dXJuIF9wJDtcbiAgICAgICAgfSwge1xuICAgICAgICAgIF92JDc6IHZvaWQgMCxcbiAgICAgICAgICBfdiQ4OiB2b2lkIDAsXG4gICAgICAgICAgX3YkOTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gX2VsJDc7XG4gICAgICB9KSgpO1xuICAgIH0pKCk7XG4gIH0pKCkpO1xufTtcbmNvbnN0IF90bXBsJCRuID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgd2lkdGg9XCIyNFwiIGhlaWdodD1cIjI0XCIgdmlld0JveD1cIjAgMCAyNCAyNFwiIGZpbGw9XCJub25lXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPjxwYXRoIGQ9XCJNMTUuNTUgNS44NTEyM0MxOC45NDU5IDcuODExODQgMjAuMTA5NCAxMi4xNTQxIDE4LjE0ODggMTUuNTVDMTYuMTg4MiAxOC45NDU5IDExLjg0NTkgMjAuMTA5NCA4LjQ0OTk4IDE4LjE0ODhDOC4wMTk1MiAxNy45MDAzIDcuNDY5MDkgMTguMDQ3OCA3LjIyMDU2IDE4LjQ3ODJDNi45NzIwMyAxOC45MDg3IDcuMTE5NTIgMTkuNDU5MSA3LjU0OTk4IDE5LjcwNzZDMTEuODA2OCAyMi4xNjUzIDE3LjI0OTkgMjAuNzA2OCAxOS43MDc2IDE2LjQ1QzIyLjE2NTMgMTIuMTkzMiAyMC43MDY4IDYuNzUwMDUgMTYuNDUgNC4yOTIzOUMxMi4xOTMyIDEuODM0NzIgNi43NTAwMyAzLjI5MzIxIDQuMjkyMzYgNy41NTAwMUM0LjA0MzgzIDcuOTgwNDcgNC4xOTEzMiA4LjUzMDkxIDQuNjIxNzggOC43Nzk0M0M1LjA1MjI0IDkuMDI3OTYgNS42MDI2OCA4Ljg4MDQ4IDUuODUxMiA4LjQ1MDAxQzcuODExODEgNS4wNTQxMyAxMi4xNTQxIDMuODkwNjIgMTUuNTUgNS44NTEyM1pcIj48L3BhdGg+PC9zdmc+YCksIF90bXBsJDIkMiA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB3aWR0aD1cIjQ0XCIgaGVpZ2h0PVwiNDRcIiB2aWV3Qm94PVwiMCAwIDQ0IDQ0XCIgZmlsbD1cIm5vbmVcIj48cGF0aCBmaWxsLXJ1bGU9XCJldmVub2RkXCIgY2xpcC1ydWxlPVwiZXZlbm9kZFwiIGQ9XCJNMjIgMi45OTk1MUMxMS41MDY2IDIuOTk5NTEgMyAxMS41MDYxIDMgMjEuOTk5NUMzIDMyLjQ5MjkgMTEuNTA2NiA0MC45OTk1IDIyIDQwLjk5OTVDMjIuODI4NCA0MC45OTk1IDIzLjUgNDEuNjcxMSAyMy41IDQyLjQ5OTVDMjMuNSA0My4zMjc5IDIyLjgyODQgNDMuOTk5NSAyMiA0My45OTk1QzkuODQ5NzQgNDMuOTk5NSAwIDM0LjE0OTggMCAyMS45OTk1QzAgOS44NDkyNSA5Ljg0OTc0IC0wLjAwMDQ4ODI4MSAyMiAtMC4wMDA0ODgyODFDMzQuMTUwMyAtMC4wMDA0ODgyODEgNDQgOS44NDkyNSA0NCAyMS45OTk1QzQ0IDIyLjgyNzkgNDMuMzI4NCAyMy40OTk1IDQyLjUgMjMuNDk5NUM0MS42NzE2IDIzLjQ5OTUgNDEgMjIuODI3OSA0MSAyMS45OTk1QzQxIDExLjUwNjEgMzIuNDkzNCAyLjk5OTUxIDIyIDIuOTk5NTFaXCI+PC9wYXRoPjwvc3ZnPmApLCBfdG1wbCQzID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgd2lkdGg9XCI3MlwiIGhlaWdodD1cIjcyXCIgdmlld0JveD1cIjAgMCA3MiA3MlwiIGZpbGw9XCJub25lXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPjxwYXRoIGQ9XCJNMjQgNTYuNzg0NkMzNS40NzkgNjMuNDEyIDUwLjE1NzIgNTkuNDc5IDU2Ljc4NDYgNDcuOTk5OUM2My40MTIgMzYuNTIwOSA1OS40NzkgMjEuODQyNyA0OCAxNS4yMTUzQzM2LjUyMSA4LjU4NzkxIDIxLjg0MjggMTIuNTIwOSAxNS4yMTU0IDIzLjk5OTlcIiBzdHJva2Utd2lkdGg9XCI0XCIgc3Ryb2tlLWxpbmVjYXA9XCJyb3VuZFwiIHN0cm9rZS1saW5lam9pbj1cInJvdW5kXCI+PC9wYXRoPjwvc3ZnPmApO1xuY29uc3QgTG9hZGVySWNvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IHNpemUgPSAoKSA9PiBwcm9wcy5zaXplIHx8IFwieHNcIjtcbiAgY29uc3QgZmlsbCA9ICgpID0+IHByb3BzLmZpbGwgfHwgdGhlbWUuY29sb3JzLmljb24udGVydGlhcnk7XG4gIGNvbnN0IHJvdGF0ZUFuaW1hdGlvbiA9IGhgXG4gICAgICAgIDAlIHtcbiAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcbiAgICAgICAgfVxuICAgICAgICAxMDAlIHtcbiAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xuICAgICAgICB9XG4gICAgYDtcbiAgY29uc3Qgc3ZnQ2xhc3MgPSB1YFxuICAgICAgICBhbmltYXRpb246ICR7cm90YXRlQW5pbWF0aW9ufSAxcyBsaW5lYXIgaW5maW5pdGU7XG4gICAgYDtcbiAgcmV0dXJuIGNyZWF0ZU1lbW8oKCgpID0+IHtcbiAgICBjb25zdCBfYyQgPSBjcmVhdGVNZW1vKCgpID0+IHNpemUoKSA9PT0gXCJ4c1wiKTtcbiAgICByZXR1cm4gKCkgPT4gX2MkKCkgPyAoKCkgPT4ge1xuICAgICAgY29uc3QgX2VsJCA9IF90bXBsJCRuLmNsb25lTm9kZSh0cnVlKSwgX2VsJDIgPSBfZWwkLmZpcnN0Q2hpbGQ7XG4gICAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKF9wJCkgPT4ge1xuICAgICAgICBjb25zdCBfdiQgPSBjbihzdmdDbGFzcywgcHJvcHMuY2xhc3MpLCBfdiQyID0gZmlsbCgpO1xuICAgICAgICBfdiQgIT09IF9wJC5fdiQgJiYgc2V0QXR0cmlidXRlKF9lbCQsIFwiY2xhc3NcIiwgX3AkLl92JCA9IF92JCk7XG4gICAgICAgIF92JDIgIT09IF9wJC5fdiQyICYmIHNldEF0dHJpYnV0ZShfZWwkMiwgXCJmaWxsXCIsIF9wJC5fdiQyID0gX3YkMik7XG4gICAgICAgIHJldHVybiBfcCQ7XG4gICAgICB9LCB7XG4gICAgICAgIF92JDogdm9pZCAwLFxuICAgICAgICBfdiQyOiB2b2lkIDBcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIF9lbCQ7XG4gICAgfSkoKSA6ICgoKSA9PiB7XG4gICAgICBjb25zdCBfYyQyID0gY3JlYXRlTWVtbygoKSA9PiBzaXplKCkgPT09IFwic1wiKTtcbiAgICAgIHJldHVybiAoKSA9PiBfYyQyKCkgPyAoKCkgPT4ge1xuICAgICAgICBjb25zdCBfZWwkMyA9IF90bXBsJDIkMi5jbG9uZU5vZGUodHJ1ZSksIF9lbCQ0ID0gX2VsJDMuZmlyc3RDaGlsZDtcbiAgICAgICAgY3JlYXRlUmVuZGVyRWZmZWN0KChfcCQpID0+IHtcbiAgICAgICAgICBjb25zdCBfdiQzID0gY24oc3ZnQ2xhc3MsIHByb3BzLmNsYXNzKSwgX3YkNCA9IGZpbGwoKTtcbiAgICAgICAgICBfdiQzICE9PSBfcCQuX3YkMyAmJiBzZXRBdHRyaWJ1dGUoX2VsJDMsIFwiY2xhc3NcIiwgX3AkLl92JDMgPSBfdiQzKTtcbiAgICAgICAgICBfdiQ0ICE9PSBfcCQuX3YkNCAmJiBzZXRBdHRyaWJ1dGUoX2VsJDQsIFwiZmlsbFwiLCBfcCQuX3YkNCA9IF92JDQpO1xuICAgICAgICAgIHJldHVybiBfcCQ7XG4gICAgICAgIH0sIHtcbiAgICAgICAgICBfdiQzOiB2b2lkIDAsXG4gICAgICAgICAgX3YkNDogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gX2VsJDM7XG4gICAgICB9KSgpIDogKCgpID0+IHtcbiAgICAgICAgY29uc3QgX2VsJDUgPSBfdG1wbCQzLmNsb25lTm9kZSh0cnVlKSwgX2VsJDYgPSBfZWwkNS5maXJzdENoaWxkO1xuICAgICAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKF9wJCkgPT4ge1xuICAgICAgICAgIGNvbnN0IF92JDUgPSBjbihzdmdDbGFzcywgcHJvcHMuY2xhc3MpLCBfdiQ2ID0gZmlsbCgpO1xuICAgICAgICAgIF92JDUgIT09IF9wJC5fdiQ1ICYmIHNldEF0dHJpYnV0ZShfZWwkNSwgXCJjbGFzc1wiLCBfcCQuX3YkNSA9IF92JDUpO1xuICAgICAgICAgIF92JDYgIT09IF9wJC5fdiQ2ICYmIHNldEF0dHJpYnV0ZShfZWwkNiwgXCJzdHJva2VcIiwgX3AkLl92JDYgPSBfdiQ2KTtcbiAgICAgICAgICByZXR1cm4gX3AkO1xuICAgICAgICB9LCB7XG4gICAgICAgICAgX3YkNTogdm9pZCAwLFxuICAgICAgICAgIF92JDY6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIF9lbCQ1O1xuICAgICAgfSkoKTtcbiAgICB9KSgpO1xuICB9KSgpKTtcbn07XG5jb25zdCBfdG1wbCQkbSA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHdpZHRoPVwiMTU4XCIgaGVpZ2h0PVwiMjhcIiB2aWV3Qm94PVwiMCAwIDE1OCAyOFwiIGZpbGw9XCJub25lXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPjxwYXRoIGZpbGwtcnVsZT1cImV2ZW5vZGRcIiBjbGlwLXJ1bGU9XCJldmVub2RkXCIgZD1cIk0yOCAxNC4wMDFDMjggMjEuNzMzIDIxLjczMiAyOC4wMDEgMTQgMjguMDAxQzYuMjY4MDEgMjguMDAxIDAgMjEuNzMzIDAgMTQuMDAxQzAgNi4yNjg5OSA2LjI2ODAxIDAuMDAwOTc2NTYyIDE0IDAuMDAwOTc2NTYyQzIxLjczMiAwLjAwMDk3NjU2MiAyOCA2LjI2ODk5IDI4IDE0LjAwMVpNOS4yMTkzMSA4LjAwMDk4SDE4Ljc4MDFIMTguNzgxM0MyMC41MzggOC4wMDA5OCAyMS42NTIyIDkuODk5NjYgMjAuNzY5MSAxMS40MzAyTDE0Ljg2NzIgMjEuNjU3NkMxNC40ODIyIDIyLjMyNTQgMTMuNTE3MiAyMi4zMjU0IDEzLjEzMjIgMjEuNjU3Nkw3LjIzMTU4IDExLjQzMDJDNi4zNDcyMSA5Ljg5NzI2IDcuNDYxNCA4LjAwMDk4IDkuMjE5MzEgOC4wMDA5OFpNMTMuMTI2MiAxOC41ODgyVjkuNzQ4MDZIOS4yMTgxMUM4Ljc4OTc2IDkuNzQ4MDYgOC41MzcwOCAxMC4yMDI5IDguNzQxNjMgMTAuNTU3OEwxMS44NDIzIDE2LjEwMzVMMTMuMTI2MiAxOC41ODgyWk0xNi4xNTU5IDE2LjEwNDdMMTkuMjU1NCAxMC41NTY2QzE5LjQ1OTkgMTAuMjAxNyAxOS4yMDczIDkuNzQ2ODUgMTguNzc4OSA5Ljc0Njg1SDE0Ljg3MDlWMTguNTkwNkwxNi4xNTU5IDE2LjEwNDdaXCIgZmlsbD1cIiMwMDk4RUFcIj48L3BhdGg+PHBhdGggZD1cIk0xOC43ODAyIDguMDAwOThIOS4yMTkzNkM3LjQ2MTQ1IDguMDAwOTggNi4zNDcyNyA5Ljg5NzI2IDcuMjMxNjQgMTEuNDMwMkwxMy4xMzIyIDIxLjY1NzZDMTMuNTE3MyAyMi4zMjU0IDE0LjQ4MjMgMjIuMzI1NCAxNC44NjczIDIxLjY1NzZMMjAuNzY5MSAxMS40MzAyQzIxLjY1MjMgOS44OTk2NiAyMC41MzgxIDguMDAwOTggMTguNzgxNCA4LjAwMDk4SDE4Ljc4MDJaTTEzLjEyNzQgMTguNTkwNkwxMS44NDI0IDE2LjEwMzVMOC43NDE2OCAxMC41NTc4QzguNTM3MTQgMTAuMjAyOSA4Ljc4OTgxIDkuNzQ4MDYgOS4yMTgxNiA5Ljc0ODA2SDEzLjEyNjJWMTguNTkxOEwxMy4xMjc0IDE4LjU5MDZaTTE5LjI1NTUgMTAuNTU2NkwxNi4xNTYgMTYuMTA0N0wxNC44NzA5IDE4LjU5MDZWOS43NDY4NUgxOC43NzlDMTkuMjA3MyA5Ljc0Njg1IDE5LjQ2IDEwLjIwMTcgMTkuMjU1NSAxMC41NTY2WlwiIGZpbGw9XCJ3aGl0ZVwiPjwvcGF0aD48cGF0aCBmaWxsLXJ1bGU9XCJldmVub2RkXCIgY2xpcC1ydWxlPVwiZXZlbm9kZFwiIGQ9XCJNNTEuNzQ4MyAyMi4xOTY3QzU1LjcxODIgMjIuMTk2NyA1OC45NjA5IDE4Ljk1NCA1OC45NjA5IDE0Ljk4NDFDNTguOTYwOSAxMS4wMTQyIDU1LjcxODIgNy43NzE0OCA1MS43NDgzIDcuNzcxNDhDNDcuNzU4OCA3Ljc3MTQ4IDQ0LjUzNTcgMTEuMDE0MiA0NC41MzU3IDE0Ljk4NDFDNDQuNTM1NyAxOC45NTQgNDcuNzU4OCAyMi4xOTY3IDUxLjc0ODMgMjIuMTk2N1pNNTEuNzQ4MyAxOS4xNzAyQzQ5LjQ2ODYgMTkuMTcwMiA0Ny42ODAyIDE3LjI0NDIgNDcuNjgwMiAxNC45ODQxQzQ3LjY4MDIgMTIuNzI0IDQ5LjQ2ODYgMTAuNzk4IDUxLjc0ODMgMTAuNzk4QzU0LjAwODQgMTAuNzk4IDU1Ljc5NjggMTIuNzI0IDU1Ljc5NjggMTQuOTg0MUM1NS43OTY4IDE3LjI0NDIgNTQuMDA4NCAxOS4xNzAyIDUxLjc0ODMgMTkuMTcwMlpNMzcuMDY5OCAyMS45NjA5SDQwLjIxNDJWMTAuOTk0Nkg0NC4yODQzVjguMDA3MzJIMzNWMTAuOTk0NkgzNy4wNjk4VjIxLjk2MDlaTTY5LjkzNzkgOC4wMDczMkg3My4wODIzVjIxLjk2MDlINzAuMzg5OUw2My41OSAxMy4zMzMzVjIxLjk2MDlINjAuNDY1MlY4LjAwNzMySDYzLjE1NzZMNjkuOTM3OSAxNi42MTUzVjguMDA3MzJaTTc5LjIyNTkgMTQuOTg4N0M3OS4yMjU5IDEwLjkyMDIgODIuMzUxIDcuNzc1MzkgODYuNDk4MiA3Ljc3NTM5Qzg5Ljg1OTIgNy43NzUzOSA5Mi41NTE5IDkuOTU3MDkgOTMuMjIwMiAxMi42ODkxSDkwLjc0MzdDOTAuMTU0IDExLjA5NzEgODguNDYzNyA5Ljk5NjQgODYuNDk4MiA5Ljk5NjRDODMuNTg5MyA5Ljk5NjQgODEuNTQ1MiAxMi4xNzgxIDgxLjU0NTIgMTQuOTg4N0M4MS41NDUyIDE3Ljc5OTQgODMuNTg5MyAxOS45ODExIDg2LjQ5ODIgMTkuOTgxMUM4OC40NjM3IDE5Ljk4MTEgOTAuMTU0IDE4Ljg4MDQgOTAuNzQzNyAxNy4yODg0SDkzLjIyMDJDOTIuNTUxOSAyMC4wMjA0IDg5Ljg1OTIgMjIuMjAyMSA4Ni40OTgyIDIyLjIwMjFDODIuMzUxIDIyLjIwMjEgNzkuMjI1OSAxOS4wNTczIDc5LjIyNTkgMTQuOTg4N1pNMTA0LjU4NCAxNy4wNTI1QzEwNC41ODQgMTkuOTAyNSAxMDIuMzQzIDIyLjE2MjggOTkuNDM0MiAyMi4xNjI4Qzk2LjUyNTMgMjIuMTYyOCA5NC4yODQ2IDE5LjkwMjUgOTQuMjg0NiAxNy4wNTI1Qzk0LjI4NDYgMTQuMjAyNSA5Ni41MjUzIDExLjk0MjIgOTkuNDM0MiAxMS45NDIyQzEwMi4zNDMgMTEuOTQyMiAxMDQuNTg0IDE0LjIwMjUgMTA0LjU4NCAxNy4wNTI1Wk05Ni40NjYzIDE3LjA1MjVDOTYuNDY2MyAxOC44MDE4IDk3LjY4NDkgMjAuMTU4IDk5LjQzNDIgMjAuMTU4QzEwMS4xNjQgMjAuMTU4IDEwMi4zODIgMTguODAxOCAxMDIuMzgyIDE3LjA1MjVDMTAyLjM4MiAxNS4zMDMyIDEwMS4xNjQgMTMuOTQ3IDk5LjQzNDIgMTMuOTQ3Qzk3LjY4NDkgMTMuOTQ3IDk2LjQ2NjMgMTUuMzAzMiA5Ni40NjYzIDE3LjA1MjVaTTEwOC42MjYgMTIuMTM4OEgxMDYuNDYzVjIxLjk2NjJIMTA4LjYyNlYxNy4xMzExQzEwOC42MjYgMTUuMDI4MSAxMDkuNzI2IDEzLjkwNzcgMTExLjE2MSAxMy45MDc3QzExMi40MTkgMTMuOTA3NyAxMTMuMjA1IDE0Ljg1MTIgMTEzLjIwNSAxNi40MDM5VjIxLjk2NjJIMTE1LjM2N1YxNi4wNTAxQzExNS4zNjcgMTMuNTUzOSAxMTMuODkzIDExLjk0MjIgMTExLjYxMyAxMS45NDIyQzExMC4zMzUgMTEuOTQyMiAxMDkuMjE1IDEyLjQ5MjYgMTA4LjYyNiAxMy40NzUzVjEyLjEzODhaTTExNy44MzkgMTIuMTM4OEgxMjAuMDAxVjEzLjQ3NTNDMTIwLjU5IDEyLjQ5MjYgMTIxLjcxMSAxMS45NDIyIDEyMi45ODggMTEuOTQyMkMxMjUuMjY4IDExLjk0MjIgMTI2Ljc0MiAxMy41NTM5IDEyNi43NDIgMTYuMDUwMVYyMS45NjYySDEyNC41OFYxNi40MDM5QzEyNC41OCAxNC44NTEyIDEyMy43OTQgMTMuOTA3NyAxMjIuNTM2IDEzLjkwNzdDMTIxLjEwMSAxMy45MDc3IDEyMC4wMDEgMTUuMDI4MSAxMjAuMDAxIDE3LjEzMTFWMjEuOTY2MkgxMTcuODM5VjEyLjEzODhaTTEzMy41NTggMjIuMTYyOEMxMzYuMDU0IDIyLjE2MjggMTM3LjgyMyAyMC43MjggMTM4LjM3MyAxOC44ODA0SDEzNi4xMTNDMTM1LjY2MSAxOS44MjM4IDEzNC43MTcgMjAuMjU2MyAxMzMuNjM2IDIwLjI1NjNDMTMxLjg4NyAyMC4yNTYzIDEzMC43NDcgMTkuMDc3IDEzMC42NjggMTcuNTgzMkgxMzguNDkxQzEzOC42ODggMTQuMjQxOSAxMzYuNTg1IDExLjk0MjIgMTMzLjU3NyAxMS45NDIyQzEzMC41NTEgMTEuOTQyMiAxMjguNTI2IDE0LjE0MzYgMTI4LjUyNiAxNy4wNTI1QzEyOC41MjYgMjAuMDAwNyAxMzAuNjI5IDIyLjE2MjggMTMzLjU1OCAyMi4xNjI4Wk0xMzAuNzQ3IDE2LjA1MDFDMTMxLjA0MiAxNC41MzY3IDEzMi4xNjIgMTMuNzUwNSAxMzMuNTE4IDEzLjc1MDVDMTM0LjcxNyAxMy43NTA1IDEzNS44MzggMTQuNDU4MSAxMzYuMTcyIDE2LjA1MDFIMTMwLjc0N1pNMTQ5Ljg1MSAxOC4zNjk0QzE0OS4zMiAyMC41NTExIDE0Ny40NTMgMjIuMTYyOCAxNDQuODU5IDIyLjE2MjhDMTQxLjg3MSAyMi4xNjI4IDEzOS43MDkgMTkuODgyOCAxMzkuNzA5IDE3LjA1MjVDMTM5LjcwOSAxNC4yMjIyIDE0MS44NzEgMTEuOTQyMiAxNDQuODU5IDExLjk0MjJDMTQ3LjQ1MyAxMS45NDIyIDE0OS4zMiAxMy41NTM5IDE0OS44NTEgMTUuNzM1NkgxNDcuNTcxQzE0Ny4xNzggMTQuNjc0MyAxNDYuMjE1IDEzLjkwNzcgMTQ0Ljg1OSAxMy45MDc3QzE0My4xMDkgMTMuOTA3NyAxNDEuOTEgMTUuMjI0NiAxNDEuOTEgMTcuMDUyNUMxNDEuOTEgMTguODgwNCAxNDMuMTA5IDIwLjE5NzMgMTQ0Ljg1OSAyMC4xOTczQzE0Ni4yMTUgMjAuMTk3MyAxNDcuMTc4IDE5LjQzMDcgMTQ3LjU3MSAxOC4zNjk0SDE0OS44NTFaTTE1NS43NSAyMi4wNjQ1QzE1Ni40MTggMjIuMDY0NSAxNTYuOTI5IDIxLjk4NTkgMTU3LjM2MiAyMS44NDgzVjE5LjkyMjFDMTU3LjA0NyAyMC4wNDAxIDE1Ni42MTUgMjAuMTE4NyAxNTYuMjAyIDIwLjExODdDMTU1LjA4MiAyMC4xMTg3IDE1NC41NTEgMTkuNjY2NiAxNTQuNTUxIDE4LjQ0OFYxNC4wNjVIMTU3LjM2MlYxMi4xMzg4SDE1NC41NTFWOS40MDY3NUgxNTIuMzg5VjEyLjEzODhIMTUwLjM0NVYxNC4wNjVIMTUyLjM4OVYxOC44MDE4QzE1Mi4zODkgMjEuMDIyOCAxNTMuODYzIDIyLjA2NDUgMTU1Ljc1IDIyLjA2NDVaXCI+PC9wYXRoPjwvc3ZnPmApO1xuY29uc3QgVG9uQ29ubmVjdEJyYW5kID0gKCkgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGZpbGwgPSAoKSA9PiB0aGVtZS50aGVtZSA9PT0gVEhFTUUuREFSSyA/IHRoZW1lLmNvbG9ycy5jb25zdGFudC53aGl0ZSA6IHRoZW1lLmNvbG9ycy5jb25zdGFudC5ibGFjaztcbiAgcmV0dXJuICgoKSA9PiB7XG4gICAgY29uc3QgX2VsJCA9IF90bXBsJCRtLmNsb25lTm9kZSh0cnVlKSwgX2VsJDIgPSBfZWwkLmZpcnN0Q2hpbGQsIF9lbCQzID0gX2VsJDIubmV4dFNpYmxpbmcsIF9lbCQ0ID0gX2VsJDMubmV4dFNpYmxpbmc7XG4gICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IHNldEF0dHJpYnV0ZShfZWwkNCwgXCJmaWxsXCIsIGZpbGwoKSkpO1xuICAgIHJldHVybiBfZWwkO1xuICB9KSgpO1xufTtcbmNvbnN0IF90bXBsJCRsID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHdpZHRoPVwiMTZcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiBmaWxsPVwibm9uZVwiPjxwYXRoIGZpbGwtcnVsZT1cImV2ZW5vZGRcIiBjbGlwLXJ1bGU9XCJldmVub2RkXCIgZD1cIk01LjU2NjA4IDQuNDI1ODRDNS44MjUyNyAzLjMyMTU4IDYuODE3NiAyLjUgOC4wMDAwMSAyLjVDOS4zODA3MiAyLjUgMTAuNSAzLjYxOTI5IDEwLjUgNUMxMC41IDUuNjMwMjYgMTAuMzM5MSA2LjAzODYgMTAuMTI2NCA2LjM0NDU1QzkuOTAwMTggNi42Njk5MyA5LjU4NTYxIDYuOTI0NzggOS4xODg2NCA3LjIwODc3QzkuMTI1NzkgNy4yNTM3MiA5LjA1ODczIDcuMzAwMjUgOC45ODg3IDcuMzQ4ODNDOC4yNzM5MiA3Ljg0NDcyIDcuMjUwMDEgOC41NTUwNyA3LjI1MDAxIDEwVjEwLjI1QzcuMjUwMDEgMTAuNjY0MiA3LjU4NTggMTEgOC4wMDAwMSAxMUM4LjQxNDIyIDExIDguNzUwMDEgMTAuNjY0MiA4Ljc1MDAxIDEwLjI1VjEwQzguNzUwMDEgOS4zNjUwMiA5LjEwNzc3IDkuMTA5NiA5Ljk0NTU0IDguNTExNDlMMTAuMDYxNCA4LjQyODczQzEwLjQ3NjkgOC4xMzE0NyAxMC45NzQ4IDcuNzUxOTQgMTEuMzU4IDcuMjAwNzZDMTEuNzU0NyA2LjYzMDE1IDEyIDUuOTE5NzMgMTIgNUMxMiAyLjc5MDg2IDEwLjIwOTEgMSA4LjAwMDAxIDFDNi4xMDU2NCAxIDQuNTIwNSAyLjMxNjE1IDQuMTA1NzcgNC4wODMwOEM0LjAxMTEyIDQuNDg2MzQgNC4yNjEyOSA0Ljg4OTk3IDQuNjY0NTQgNC45ODQ2MkM1LjA2NzggNS4wNzkyNyA1LjQ3MTQzIDQuODI5MSA1LjU2NjA4IDQuNDI1ODRaTTguMDAwMDEgMTVDOC42MDc1MiAxNSA5LjEwMDAxIDE0LjUwNzUgOS4xMDAwMSAxMy45QzkuMTAwMDEgMTMuMjkyNSA4LjYwNzUyIDEyLjggOC4wMDAwMSAxMi44QzcuMzkyNDkgMTIuOCA2LjkwMDAxIDEzLjI5MjUgNi45MDAwMSAxMy45QzYuOTAwMDEgMTQuNTA3NSA3LjM5MjQ5IDE1IDguMDAwMDEgMTVaXCI+PC9wYXRoPjwvc3ZnPmApO1xuY29uc3QgUXVlc3Rpb25JY29uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3QgZmlsbCA9ICgpID0+IHByb3BzLmZpbGwgfHwgdGhlbWUuY29sb3JzLmljb24uc2Vjb25kYXJ5O1xuICByZXR1cm4gKCgpID0+IHtcbiAgICBjb25zdCBfZWwkID0gX3RtcGwkJGwuY2xvbmVOb2RlKHRydWUpLCBfZWwkMiA9IF9lbCQuZmlyc3RDaGlsZDtcbiAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKCkgPT4gc2V0QXR0cmlidXRlKF9lbCQyLCBcImZpbGxcIiwgZmlsbCgpKSk7XG4gICAgcmV0dXJuIF9lbCQ7XG4gIH0pKCk7XG59O1xuY29uc3QgX3RtcGwkJGsgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgd2lkdGg9XCIxNlwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIGZpbGw9XCJub25lXCI+PHBhdGggZmlsbC1ydWxlPVwiZXZlbm9kZFwiIGNsaXAtcnVsZT1cImV2ZW5vZGRcIiBkPVwiTTkuOTgxNTYgOC43NUM5Ljg0ODU0IDExLjQzMjggOS4wMTIwNiAxMy41IDggMTMuNUM2Ljk4Nzk0IDEzLjUgNi4xNTE0NiAxMS40MzI4IDYuMDE4NDQgOC43NUg5Ljk4MTU2Wk0xMS40ODMyIDguNzVDMTEuNDIxNyAxMC4xMTU1IDExLjE5MjkgMTEuMzg2OSAxMC44MjM5IDEyLjQwMTdDMTAuNzczNCAxMi41NDA1IDEwLjcxODggMTIuNjc4OSAxMC42NTk1IDEyLjgxNTRDMTIuMTQ1NCAxMS45OTMgMTMuMjEwMyAxMC41MDI5IDEzLjQ0OTMgOC43NUgxMS40ODMyWk0xMy40NDkzIDcuMjVIMTEuNDgzMkMxMS40MjE3IDUuODg0NTMgMTEuMTkyOSA0LjYxMzE0IDEwLjgyMzkgMy41OTgzQzEwLjc3MzQgMy40NTk1IDEwLjcxODggMy4zMjExMSAxMC42NTk1IDMuMTg0NTlDMTIuMTQ1NCA0LjAwNjk3IDEzLjIxMDMgNS40OTcwOSAxMy40NDkzIDcuMjVaTTkuOTgxNTYgNy4yNUg2LjAxODQ0QzYuMTUxNDQgNC41Njc2NCA2Ljk4NzY5IDIuNTAwNjIgNy45OTk1NSAyLjVIOEM5LjAxMjA2IDIuNSA5Ljg0ODU0IDQuNTY3MjQgOS45ODE1NiA3LjI1Wk00LjUxNjc4IDcuMjVDNC41NzgyNiA1Ljg4NDUzIDQuODA3MDYgNC42MTMxNCA1LjE3NjEgMy41OTgzQzUuMjI2NTcgMy40NTk1IDUuMjgxMjQgMy4zMjExMSA1LjM0MDUgMy4xODQ1OUMzLjg1NDYzIDQuMDA2OTcgMi43ODk3MiA1LjQ5NzA5IDIuNTUwNzEgNy4yNUg0LjUxNjc4Wk0yLjU1MDcxIDguNzVDMi43ODk3MiAxMC41MDI5IDMuODU0NjMgMTEuOTkzIDUuMzQwNSAxMi44MTU0QzUuMjgxMjQgMTIuNjc4OSA1LjIyNjU3IDEyLjU0MDUgNS4xNzYxIDEyLjQwMTdDNC44MDcwNiAxMS4zODY5IDQuNTc4MjYgMTAuMTE1NSA0LjUxNjc4IDguNzVIMi41NTA3MVpNMTUgOEMxNSAxMS44NjYgMTEuODY2IDE1IDggMTVDNC4xMzQwMSAxNSAxIDExLjg2NiAxIDhDMSA0LjEzNDAxIDQuMTM0MDEgMSA4IDFDMTEuODY2IDEgMTUgNC4xMzQwMSAxNSA4WlwiPjwvcGF0aD48L3N2Zz5gKTtcbmNvbnN0IEJyb3dzZXJJY29uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3QgZmlsbCA9ICgpID0+IHByb3BzLmZpbGwgfHwgdGhlbWUuY29sb3JzLmljb24ucHJpbWFyeTtcbiAgcmV0dXJuICgoKSA9PiB7XG4gICAgY29uc3QgX2VsJCA9IF90bXBsJCRrLmNsb25lTm9kZSh0cnVlKSwgX2VsJDIgPSBfZWwkLmZpcnN0Q2hpbGQ7XG4gICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IHNldEF0dHJpYnV0ZShfZWwkMiwgXCJmaWxsXCIsIGZpbGwoKSkpO1xuICAgIHJldHVybiBfZWwkO1xuICB9KSgpO1xufTtcbmNvbnN0IF90bXBsJCRqID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHdpZHRoPVwiMTZcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiBmaWxsPVwibm9uZVwiPjxwYXRoIGZpbGwtcnVsZT1cImV2ZW5vZGRcIiBjbGlwLXJ1bGU9XCJldmVub2RkXCIgZD1cIk0yLjUgNC44QzIuNSAzLjExOTg0IDIuNSAyLjI3OTc2IDIuODI2OTggMS42MzgwM0MzLjExNDYgMS4wNzM1NCAzLjU3MzU0IDAuNjE0NjAxIDQuMTM4MDMgMC4zMjY5OEM0Ljc3OTc2IDAgNS42MTk4NCAwIDcuMyAwSDguN0MxMC4zODAyIDAgMTEuMjIwMiAwIDExLjg2MiAwLjMyNjk4QzEyLjQyNjUgMC42MTQ2MDEgMTIuODg1NCAxLjA3MzU0IDEzLjE3MyAxLjYzODAzQzEzLjUgMi4yNzk3NiAxMy41IDMuMTE5ODQgMTMuNSA0LjhWMTEuMkMxMy41IDEyLjg4MDIgMTMuNSAxMy43MjAyIDEzLjE3MyAxNC4zNjJDMTIuODg1NCAxNC45MjY1IDEyLjQyNjUgMTUuMzg1NCAxMS44NjIgMTUuNjczQzExLjIyMDIgMTYgMTAuMzgwMiAxNiA4LjcgMTZINy4zQzUuNjE5ODQgMTYgNC43Nzk3NiAxNiA0LjEzODAzIDE1LjY3M0MzLjU3MzU0IDE1LjM4NTQgMy4xMTQ2IDE0LjkyNjUgMi44MjY5OCAxNC4zNjJDMi41IDEzLjcyMDIgMi41IDEyLjg4MDIgMi41IDExLjJWNC44Wk00IDMuOUM0IDMuMDU5OTIgNCAyLjYzOTg4IDQuMTYzNDkgMi4zMTkwMUM0LjMwNzMgMi4wMzY3NyA0LjUzNjc3IDEuODA3MyA0LjgxOTAxIDEuNjYzNDlDNS4xMzk4OCAxLjUgNS41NTk5MiAxLjUgNi40IDEuNUg5LjZDMTAuNDQwMSAxLjUgMTAuODYwMSAxLjUgMTEuMTgxIDEuNjYzNDlDMTEuNDYzMiAxLjgwNzMgMTEuNjkyNyAyLjAzNjc3IDExLjgzNjUgMi4zMTkwMUMxMiAyLjYzOTg4IDEyIDMuMDU5OTIgMTIgMy45VjEyLjFDMTIgMTIuOTQwMSAxMiAxMy4zNjAxIDExLjgzNjUgMTMuNjgxQzExLjY5MjcgMTMuOTYzMiAxMS40NjMyIDE0LjE5MjcgMTEuMTgxIDE0LjMzNjVDMTAuODYwMSAxNC41IDEwLjQ0MDEgMTQuNSA5LjYgMTQuNUg2LjRDNS41NTk5MiAxNC41IDUuMTM5ODggMTQuNSA0LjgxOTAxIDE0LjMzNjVDNC41MzY3NyAxNC4xOTI3IDQuMzA3MyAxMy45NjMyIDQuMTYzNDkgMTMuNjgxQzQgMTMuMzYwMSA0IDEyLjk0MDEgNCAxMi4xVjMuOVpNNyAyLjVDNi41ODU3OSAyLjUgNi4yNSAyLjgzNTc5IDYuMjUgMy4yNUM2LjI1IDMuNjY0MjEgNi41ODU3OSA0IDcgNEg5QzkuNDE0MjEgNCA5Ljc1IDMuNjY0MjEgOS43NSAzLjI1QzkuNzUgMi44MzU3OSA5LjQxNDIxIDIuNSA5IDIuNUg3WlwiPjwvcGF0aD48L3N2Zz5gKTtcbmNvbnN0IE1vYmlsZUljb24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBmaWxsID0gKCkgPT4gcHJvcHMuZmlsbCB8fCB0aGVtZS5jb2xvcnMuaWNvbi5wcmltYXJ5O1xuICByZXR1cm4gKCgpID0+IHtcbiAgICBjb25zdCBfZWwkID0gX3RtcGwkJGouY2xvbmVOb2RlKHRydWUpLCBfZWwkMiA9IF9lbCQuZmlyc3RDaGlsZDtcbiAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKCkgPT4gc2V0QXR0cmlidXRlKF9lbCQyLCBcImZpbGxcIiwgZmlsbCgpKSk7XG4gICAgcmV0dXJuIF9lbCQ7XG4gIH0pKCk7XG59O1xuY29uc3QgX3RtcGwkJGkgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgd2lkdGg9XCIxNlwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIGZpbGw9XCJub25lXCI+PHBhdGggZmlsbC1ydWxlPVwiZXZlbm9kZFwiIGNsaXAtcnVsZT1cImV2ZW5vZGRcIiBkPVwiTTEuNSA2LjhDMS41IDUuMTE5ODQgMS41IDQuMjc5NzYgMS44MjY5OCAzLjYzODAzQzIuMTE0NiAzLjA3MzU0IDIuNTczNTQgMi42MTQ2IDMuMTM4MDMgMi4zMjY5OEMzLjc3OTc2IDIgNC42MTk4NCAyIDYuMyAySDkuN0MxMS4zODAyIDIgMTIuMjIwMiAyIDEyLjg2MiAyLjMyNjk4QzEzLjQyNjUgMi42MTQ2IDEzLjg4NTQgMy4wNzM1NCAxNC4xNzMgMy42MzgwM0MxNC41IDQuMjc5NzYgMTQuNSA1LjExOTg0IDE0LjUgNi44VjExLjVIMTUuMjVDMTUuNjY0MiAxMS41IDE2IDExLjgzNTggMTYgMTIuMjVDMTYgMTIuNjY0MiAxNS42NjQyIDEzIDE1LjI1IDEzSDAuNzVDMC4zMzU3ODYgMTMgMCAxMi42NjQyIDAgMTIuMjVDMCAxMS44MzU4IDAuMzM1Nzg2IDExLjUgMC43NSAxMS41SDEuNVY2LjhaTTMgMTEuNUgxM1Y1LjlDMTMgNS4wNTk5MiAxMyA0LjYzOTg4IDEyLjgzNjUgNC4zMTkwMUMxMi42OTI3IDQuMDM2NzcgMTIuNDYzMiAzLjgwNzMgMTIuMTgxIDMuNjYzNDlDMTEuODYwMSAzLjUgMTEuNDQwMSAzLjUgMTAuNiAzLjVINS40QzQuNTU5OTIgMy41IDQuMTM5ODggMy41IDMuODE5MDEgMy42NjM0OUMzLjUzNjc3IDMuODA3MyAzLjMwNzMgNC4wMzY3NyAzLjE2MzQ5IDQuMzE5MDFDMyA0LjYzOTg4IDMgNS4wNTk5MiAzIDUuOVYxMS41WlwiPjwvcGF0aD48L3N2Zz5gKTtcbmNvbnN0IERlc2t0b3BJY29uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3QgZmlsbCA9ICgpID0+IHByb3BzLmZpbGwgfHwgdGhlbWUuY29sb3JzLmljb24ucHJpbWFyeTtcbiAgcmV0dXJuICgoKSA9PiB7XG4gICAgY29uc3QgX2VsJCA9IF90bXBsJCRpLmNsb25lTm9kZSh0cnVlKSwgX2VsJDIgPSBfZWwkLmZpcnN0Q2hpbGQ7XG4gICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IHNldEF0dHJpYnV0ZShfZWwkMiwgXCJmaWxsXCIsIGZpbGwoKSkpO1xuICAgIHJldHVybiBfZWwkO1xuICB9KSgpO1xufTtcbmNvbnN0IF90bXBsJCRoID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHdpZHRoPVwiMTdcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTcgMTZcIiBmaWxsPVwibm9uZVwiPjxnIGNsaXAtcGF0aD1cInVybCgjY2xpcDBfMzY3Nl8xNjAzKVwiPjxwYXRoIGZpbGwtcnVsZT1cImV2ZW5vZGRcIiBjbGlwLXJ1bGU9XCJldmVub2RkXCIgZD1cIk0xNS41IDEuMjUwNDlDMTUuNSAwLjgzNjI3NSAxNS4xNjQyIDAuNTAwNDg4IDE0Ljc1IDAuNTAwNDg4QzE0LjMzNTggMC41MDA0ODggMTQgMC44MzYyNzUgMTQgMS4yNTA0OVYzLjY3MDEyQzEyLjcxODcgMi4wNDQ4NyAxMC43MzE4IDEuMDAwNDkgOC41IDEuMDAwNDlDNC42MzQwMSAxLjAwMDQ5IDEuNSA0LjEzNDUgMS41IDguMDAwNDlDMS41IDExLjg2NjUgNC42MzQwMSAxNS4wMDA1IDguNSAxNS4wMDA1QzExLjY4NDQgMTUuMDAwNSAxNC4zNzAzIDEyLjg3NDggMTUuMjE5OSA5Ljk2NjYxQzE1LjMzNjEgOS41NjkwMiAxNS4xMDc5IDkuMTUyNTQgMTQuNzEwMyA5LjAzNjM4QzE0LjMxMjcgOC45MjAyMyAxMy44OTYyIDkuMTQ4MzggMTMuNzgwMSA5LjU0NTk3QzEzLjExMjMgMTEuODMxOSAxMSAxMy41MDA1IDguNSAxMy41MDA1QzUuNDYyNDMgMTMuNTAwNSAzIDExLjAzODEgMyA4LjAwMDQ5QzMgNC45NjI5MiA1LjQ2MjQzIDIuNTAwNDkgOC41IDIuNTAwNDlDMTAuMzIxIDIuNTAwNDkgMTEuOTM2MyAzLjM4NTUgMTIuOTM3NyA0Ljc1MDQ5SDEwLjVDMTAuMDg1OCA0Ljc1MDQ5IDkuNzUgNS4wODYyNyA5Ljc1IDUuNTAwNDlDOS43NSA1LjkxNDcgMTAuMDg1OCA2LjI1MDQ5IDEwLjUgNi4yNTA0OUgxNC43NUMxNS4xNjQyIDYuMjUwNDkgMTUuNSA1LjkxNDcgMTUuNSA1LjUwMDQ5VjEuMjUwNDlaXCI+PC9wYXRoPjwvZz48ZGVmcz48Y2xpcFBhdGggaWQ9XCJjbGlwMF8zNjc2XzE2MDNcIj48cmVjdCB3aWR0aD1cIjE2XCIgaGVpZ2h0PVwiMTZcIiBmaWxsPVwid2hpdGVcIiB0cmFuc2Zvcm09XCJ0cmFuc2xhdGUoMC41IDAuMDAwNDg4MjgxKVwiPjwvcmVjdD48L2NsaXBQYXRoPjwvZGVmcz48L3N2Zz5gKTtcbmNvbnN0IFJldHJ5SWNvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGZpbGwgPSAoKSA9PiBwcm9wcy5maWxsIHx8IHRoZW1lLmNvbG9ycy5hY2NlbnQ7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkaC5jbG9uZU5vZGUodHJ1ZSksIF9lbCQyID0gX2VsJC5maXJzdENoaWxkLCBfZWwkMyA9IF9lbCQyLmZpcnN0Q2hpbGQ7XG4gICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IHNldEF0dHJpYnV0ZShfZWwkMywgXCJmaWxsXCIsIGZpbGwoKSkpO1xuICAgIHJldHVybiBfZWwkO1xuICB9KSgpO1xufTtcbmNvbnN0IF90bXBsJCRnID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHdpZHRoPVwiMTZcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiBmaWxsPVwibm9uZVwiPjxwYXRoIGZpbGwtcnVsZT1cImV2ZW5vZGRcIiBjbGlwLXJ1bGU9XCJldmVub2RkXCIgZD1cIk0xMyA0LjA2MTE5VjYuNzUwNTNDMTMgNy4xNjQ3NCAxMy4zMzU4IDcuNTAwNTMgMTMuNzUgNy41MDA1M0MxNC4xNjQyIDcuNTAwNTMgMTQuNSA3LjE2NDc0IDE0LjUgNi43NTA1M1YyLjc1MDUzTDE0LjUgMi43MjgwN0MxNC41MDAxIDIuNjMxOTEgMTQuNTAwMyAyLjQ5NjI3IDE0LjQ4NDIgMi4zNzYyN0MxNC40NjM4IDIuMjI1MDMgMTQuNDA2MyAxLjk5MjYxIDE0LjIwNzEgMS43OTM0MkMxNC4wMDc5IDEuNTk0MjMgMTMuNzc1NSAxLjUzNjcgMTMuNjI0MyAxLjUxNjM3QzEzLjUwNDMgMS41MDAyMyAxMy4zNjg2IDEuNTAwMzkgMTMuMjcyNSAxLjUwMDUxTDEzLjI1IDEuNTAwNTNIOS4yNUM4LjgzNTc5IDEuNTAwNTMgOC41IDEuODM2MzEgOC41IDIuMjUwNTNDOC41IDIuNjY0NzQgOC44MzU3OSAzLjAwMDUzIDkuMjUgMy4wMDA1M0gxMS45MzkzTDcuMjE5NjcgNy43MjAyQzYuOTI2NzggOC4wMTMwOSA2LjkyNjc4IDguNDg3OTYgNy4yMTk2NyA4Ljc4MDg2QzcuNTEyNTYgOS4wNzM3NSA3Ljk4NzQ0IDkuMDczNzUgOC4yODAzMyA4Ljc4MDg2TDEzIDQuMDYxMTlaTTUuODUgMS41MDA1M0g1LjgxOTAzSDUuODE4OTlDNS4yMTUyOCAxLjUwMDUyIDQuNzE3MDIgMS41MDA1MSA0LjMxMTEzIDEuNTMzNjdDMy44ODk1NiAxLjU2ODEyIDMuNTAyMDMgMS42NDIwNCAzLjEzODAzIDEuODI3NTFDMi41NzM1NCAyLjExNTEzIDIuMTE0NiAyLjU3NDA3IDEuODI2OTggMy4xMzg1NkMxLjY0MTUxIDMuNTAyNTYgMS41Njc1OSAzLjg5MDA5IDEuNTMzMTUgNC4zMTE2NkMxLjQ5OTk4IDQuNzE3NTUgMS40OTk5OSA1LjIxNTgxIDEuNSA1LjgxOTUzVjUuODE5NTVWNS44NTA1M1YxMC4xNTA1VjEwLjE4MTVWMTAuMTgxNUMxLjQ5OTk5IDEwLjc4NTIgMS40OTk5OCAxMS4yODM1IDEuNTMzMTUgMTEuNjg5NEMxLjU2NzU5IDEyLjExMSAxLjY0MTUxIDEyLjQ5ODUgMS44MjY5OCAxMi44NjI1QzIuMTE0NiAxMy40MjcgMi41NzM1NCAxMy44ODU5IDMuMTM4MDMgMTQuMTczNUMzLjUwMjAzIDE0LjM1OSAzLjg4OTU2IDE0LjQzMjkgNC4zMTExMyAxNC40Njc0QzQuNzE3MDIgMTQuNTAwNSA1LjIxNTI3IDE0LjUwMDUgNS44MTg5NyAxNC41MDA1SDUuODE5MDFINS44NUgxMC4xNUgxMC4xODFIMTAuMTgxQzEwLjc4NDcgMTQuNTAwNSAxMS4yODMgMTQuNTAwNSAxMS42ODg5IDE0LjQ2NzRDMTIuMTEwNCAxNC40MzI5IDEyLjQ5OCAxNC4zNTkgMTIuODYyIDE0LjE3MzVDMTMuNDI2NSAxMy44ODU5IDEzLjg4NTQgMTMuNDI3IDE0LjE3MyAxMi44NjI1QzE0LjM1ODUgMTIuNDk4NSAxNC40MzI0IDEyLjExMSAxNC40NjY5IDExLjY4OTRDMTQuNSAxMS4yODM1IDE0LjUgMTAuNzg1MyAxNC41IDEwLjE4MTZWMTAuMTgxNVYxMC4xNTA1VjkuNzUwNTNDMTQuNSA5LjMzNjMxIDE0LjE2NDIgOS4wMDA1MyAxMy43NSA5LjAwMDUzQzEzLjMzNTggOS4wMDA1MyAxMyA5LjMzNjMxIDEzIDkuNzUwNTNWMTAuMTUwNUMxMyAxMC43OTMgMTIuOTk5NCAxMS4yMjk3IDEyLjk3MTggMTEuNTY3MkMxMi45NDUgMTEuODk2MSAxMi44OTYzIDEyLjA2NDIgMTIuODM2NSAxMi4xODE1QzEyLjY5MjcgMTIuNDYzOCAxMi40NjMyIDEyLjY5MzIgMTIuMTgxIDEyLjgzN0MxMi4wNjM3IDEyLjg5NjggMTEuODk1NSAxMi45NDU1IDExLjU2NjcgMTIuOTcyNEMxMS4yMjkyIDEyLjk5OTkgMTAuNzkyNCAxMy4wMDA1IDEwLjE1IDEzLjAwMDVINS44NUM1LjIwNzU3IDEzLjAwMDUgNC43NzA4NSAxMi45OTk5IDQuNDMzMjggMTIuOTcyNEM0LjEwNDQ3IDEyLjk0NTUgMy45MzYzMiAxMi44OTY4IDMuODE5MDIgMTIuODM3QzMuNTM2NzcgMTIuNjkzMiAzLjMwNzMgMTIuNDYzOCAzLjE2MzQ5IDEyLjE4MTVDMy4xMDM3MiAxMi4wNjQyIDMuMDU1MDMgMTEuODk2MSAzLjAyODE2IDExLjU2NzJDMy4wMDA1OCAxMS4yMjk3IDMgMTAuNzkzIDMgMTAuMTUwNVY1Ljg1MDUzQzMgNS4yMDgwOSAzLjAwMDU4IDQuNzcxMzcgMy4wMjgxNiA0LjQzMzgxQzMuMDU1MDMgNC4xMDQ5OSAzLjEwMzcyIDMuOTM2ODQgMy4xNjM0OSAzLjgxOTU0QzMuMzA3MyAzLjUzNzMgMy41MzY3NyAzLjMwNzgzIDMuODE5MDIgMy4xNjQwMkMzLjkzNjMyIDMuMTA0MjUgNC4xMDQ0NyAzLjA1NTU2IDQuNDMzMjggMy4wMjg2OUM0Ljc3MDg1IDMuMDAxMTEgNS4yMDc1NyAzLjAwMDUzIDUuODUgMy4wMDA1M0g2LjI1QzYuNjY0MjIgMy4wMDA1MyA3IDIuNjY0NzQgNyAyLjI1MDUzQzcgMS44MzYzMSA2LjY2NDIyIDEuNTAwNTMgNi4yNSAxLjUwMDUzSDUuODVaXCI+PC9wYXRoPjwvc3ZnPmApO1xuY29uc3QgTGlua0ljb24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBmaWxsID0gKCkgPT4gcHJvcHMuZmlsbCB8fCB0aGVtZS5jb2xvcnMuYWNjZW50O1xuICByZXR1cm4gKCgpID0+IHtcbiAgICBjb25zdCBfZWwkID0gX3RtcGwkJGcuY2xvbmVOb2RlKHRydWUpLCBfZWwkMiA9IF9lbCQuZmlyc3RDaGlsZDtcbiAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKCkgPT4gc2V0QXR0cmlidXRlKF9lbCQyLCBcImZpbGxcIiwgZmlsbCgpKSk7XG4gICAgcmV0dXJuIF9lbCQ7XG4gIH0pKCk7XG59O1xuY29uc3QgX3RtcGwkJGYgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgd2lkdGg9XCIxN1wiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNyAxNlwiIGZpbGw9XCJub25lXCI+PGcgY2xpcC1wYXRoPVwidXJsKCNjbGlwMF8zNjc2XzEyNzQpXCI+PHBhdGggZmlsbC1ydWxlPVwiZXZlbm9kZFwiIGNsaXAtcnVsZT1cImV2ZW5vZGRcIiBkPVwiTTEuODI2OTggMi42MzkwMUMxLjUgMy4yODA3NCAxLjUgNC4xMjA4MiAxLjUgNS44MDA5OFY4LjgwMDk4VjkuMDAwOThWMTAuMjAxQzEuNSAxMS44ODExIDEuNSAxMi43MjEyIDEuODI2OTggMTMuMzYyOUMyLjExNDYgMTMuOTI3NCAyLjU3MzU0IDE0LjM4NjQgMy4xMzgwMyAxNC42NzRDMy43Nzk3NiAxNS4wMDEgNC42MTk4NCAxNS4wMDEgNi4zIDE1LjAwMUgxMS43QzEzLjM4MDIgMTUuMDAxIDE0LjIyMDIgMTUuMDAxIDE0Ljg2MiAxNC42NzRDMTUuNDI2NSAxNC4zODY0IDE1Ljg4NTQgMTMuOTI3NCAxNi4xNzMgMTMuMzYyOUMxNi41IDEyLjcyMTIgMTYuNSAxMS44ODExIDE2LjUgMTAuMjAxVjguODAwOThDMTYuNSA3LjEyMDgyIDE2LjUgNi4yODA3NCAxNi4xNzMgNS42MzkwMUMxNS44ODU0IDUuMDc0NTIgMTUuNDI2NSA0LjYxNTU4IDE0Ljg2MiA0LjMyNzk2QzE0Ljc0MyA0LjI2NzMzIDE0LjYxNzIgNC4yMTc5NSAxNC40ODA1IDQuMTc3NzJDMTQuNDUwMSAzLjQ5NDQ5IDE0LjM3MjIgMy4wMjk5NCAxNC4xNzMgMi42MzkwMUMxMy44ODU0IDIuMDc0NTIgMTMuNDI2NSAxLjYxNTU4IDEyLjg2MiAxLjMyNzk2QzEyLjIyMDIgMS4wMDA5OCAxMS4zODAyIDEuMDAwOTggOS43IDEuMDAwOThINi4zQzQuNjE5ODQgMS4wMDA5OCAzLjc3OTc2IDEuMDAwOTggMy4xMzgwMyAxLjMyNzk2QzIuNTczNTQgMS42MTU1OCAyLjExNDYgMi4wNzQ1MiAxLjgyNjk4IDIuNjM5MDFaTTEyLjk4NjEgNC4wMDk0MkMxMi45Njg0IDMuNzEwOCAxMi45MjgxIDMuNDk5ODIgMTIuODM2NSAzLjMxOTk5QzEyLjY5MjcgMy4wMzc3NSAxMi40NjMyIDIuODA4MjggMTIuMTgxIDIuNjY0NDdDMTEuODYwMSAyLjUwMDk4IDExLjQ0MDEgMi41MDA5OCAxMC42IDIuNTAwOThINS40QzQuNTU5OTIgMi41MDA5OCA0LjEzOTg4IDIuNTAwOTggMy44MTkwMSAyLjY2NDQ3QzMuNTM2NzcgMi44MDgyOCAzLjMwNzMgMy4wMzc3NSAzLjE2MzQ5IDMuMzE5OTlDMy4wMzYxNSAzLjU2OTkxIDMuMDA3OTkgMy44OCAzLjAwMTc3IDQuNDAxODhDMy4wNDY0NiA0LjM3NjEyIDMuMDkxODkgNC4zNTE0NiAzLjEzODAzIDQuMzI3OTZDMy43Nzk3NiA0LjAwMDk4IDQuNjE5ODQgNC4wMDA5OCA2LjMgNC4wMDA5OEgxMS43QzEyLjE5NjYgNC4wMDA5OCAxMi42MTk3IDQuMDAwOTggMTIuOTg2MSA0LjAwOTQyWk0zIDcuOTAwOThWOC4xMDA5OEMzIDguNDc0NjggMyA4Ljc2NTI3IDMuMDE0MzkgOS4wMDA5OEgzVjExLjEwMUMzIDExLjk0MTEgMyAxMi4zNjExIDMuMTYzNDkgMTIuNjgyQzMuMzA3MyAxMi45NjQyIDMuNTM2NzcgMTMuMTkzNyAzLjgxOTAxIDEzLjMzNzVDNC4xMzk4OCAxMy41MDEgNC41NTk5MiAxMy41MDEgNS40IDEzLjUwMUgxMi42QzEzLjQ0MDEgMTMuNTAxIDEzLjg2MDEgMTMuNTAxIDE0LjE4MSAxMy4zMzc1QzE0LjQ2MzIgMTMuMTkzNyAxNC42OTI3IDEyLjk2NDIgMTQuODM2NSAxMi42ODJDMTUgMTIuMzYxMSAxNSAxMS45NDExIDE1IDExLjEwMVY3LjkwMDk4QzE1IDcuMDYwOSAxNSA2LjY0MDg2IDE0LjgzNjUgNi4zMTk5OUMxNC42OTI3IDYuMDM3NzUgMTQuNDYzMiA1LjgwODI4IDE0LjE4MSA1LjY2NDQ3QzEzLjg2MDEgNS41MDA5OCAxMy40NDAxIDUuNTAwOTggMTIuNiA1LjUwMDk4SDUuNEM0LjU1OTkyIDUuNTAwOTggNC4xMzk4OCA1LjUwMDk4IDMuODE5MDEgNS42NjQ0N0MzLjUzNjc3IDUuODA4MjggMy4zMDczIDYuMDM3NzUgMy4xNjM0OSA2LjMxOTk5QzMgNi42NDA4NiAzIDcuMDYwOSAzIDcuOTAwOThaTTEwLjUgOS43NTA5OEMxMC41IDkuMzM2NzYgMTAuODM1OCA5LjAwMDk4IDExLjI1IDkuMDAwOThIMTIuNzVDMTMuMTY0MiA5LjAwMDk4IDEzLjUgOS4zMzY3NiAxMy41IDkuNzUwOThDMTMuNSAxMC4xNjUyIDEzLjE2NDIgMTAuNTAxIDEyLjc1IDEwLjUwMUgxMS4yNUMxMC44MzU4IDEwLjUwMSAxMC41IDEwLjE2NTIgMTAuNSA5Ljc1MDk4WlwiPjwvcGF0aD48L2c+PGRlZnM+PGNsaXBQYXRoIGlkPVwiY2xpcDBfMzY3Nl8xMjc0XCI+PHJlY3Qgd2lkdGg9XCIxNlwiIGhlaWdodD1cIjE2XCIgZmlsbD1cIndoaXRlXCIgdHJhbnNmb3JtPVwidHJhbnNsYXRlKDAuNSAwLjAwMDk3NjU2MilcIj48L3JlY3Q+PC9jbGlwUGF0aD48L2RlZnM+PC9zdmc+YCk7XG5jb25zdCBXYWxsZXRJY29uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3QgZmlsbCA9ICgpID0+IHByb3BzLmZpbGwgfHwgdGhlbWUuY29sb3JzLmFjY2VudDtcbiAgcmV0dXJuICgoKSA9PiB7XG4gICAgY29uc3QgX2VsJCA9IF90bXBsJCRmLmNsb25lTm9kZSh0cnVlKSwgX2VsJDIgPSBfZWwkLmZpcnN0Q2hpbGQsIF9lbCQzID0gX2VsJDIuZmlyc3RDaGlsZDtcbiAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKCkgPT4gc2V0QXR0cmlidXRlKF9lbCQzLCBcImZpbGxcIiwgZmlsbCgpKSk7XG4gICAgcmV0dXJuIF9lbCQ7XG4gIH0pKCk7XG59O1xuY29uc3QgX3RtcGwkJGUgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgd2lkdGg9XCI0OFwiIGhlaWdodD1cIjQ4XCIgdmlld0JveD1cIjAgMCA0OCA0OFwiIGZpbGw9XCJub25lXCI+PHBhdGggZmlsbC1ydWxlPVwiZXZlbm9kZFwiIGNsaXAtcnVsZT1cImV2ZW5vZGRcIiBkPVwiTTM5LjYzMTkgMTYuODcxOUMzOC4zMjEyIDE2LjIwNDEgMzYuNzAwMiAxNi4wNDc4IDM0IDE2LjAxMTJWMTFDMzQgNS40NzcxNSAyOS41MjI4IDEgMjQgMUMxOC40NzcyIDEgMTQgNS40NzcxNSAxNCAxMVYxNi4wMTEyQzExLjI5OTggMTYuMDQ3OCA5LjY3ODggMTYuMjA0MSA4LjM2ODA4IDE2Ljg3MTlDNi44NjI3OCAxNy42Mzg5IDUuNjM4OTMgMTguODYyOCA0Ljg3MTk1IDIwLjM2ODFDNCAyMi4wNzk0IDQgMjQuMzE5NiA0IDI4LjhWMzIuMkM0IDM2LjY4MDQgNCAzOC45MjA2IDQuODcxOTUgNDAuNjMxOUM1LjYzODkzIDQyLjEzNzIgNi44NjI3OCA0My4zNjExIDguMzY4MDggNDQuMTI4MUMxMC4wNzk0IDQ1IDEyLjMxOTYgNDUgMTYuOCA0NUgzMS4yQzM1LjY4MDQgNDUgMzcuOTIwNiA0NSAzOS42MzE5IDQ0LjEyODFDNDEuMTM3MiA0My4zNjExIDQyLjM2MTEgNDIuMTM3MiA0My4xMjgxIDQwLjYzMTlDNDQgMzguOTIwNiA0NCAzNi42ODA0IDQ0IDMyLjJWMjguOEM0NCAyNC4zMTk2IDQ0IDIyLjA3OTQgNDMuMTI4MSAyMC4zNjgxQzQyLjM2MTEgMTguODYyOCA0MS4xMzcyIDE3LjYzODkgMzkuNjMxOSAxNi44NzE5Wk0zMSAxMVYxNkgxN1YxMUMxNyA3LjEzNDAxIDIwLjEzNCA0IDI0IDRDMjcuODY2IDQgMzEgNy4xMzQwMSAzMSAxMVpNNy41NDQ5NyAyMS43M0M3IDIyLjc5OTYgNyAyNC4xOTk3IDcgMjdWMzRDNyAzNi44MDAzIDcgMzguMjAwNCA3LjU0NDk3IDM5LjI3QzguMDI0MzMgNDAuMjEwOCA4Ljc4OTI0IDQwLjk3NTcgOS43MzAwNSA0MS40NTVDMTAuNzk5NiA0MiAxMi4xOTk3IDQyIDE1IDQySDMzQzM1LjgwMDMgNDIgMzcuMjAwNCA0MiAzOC4yNyA0MS40NTVDMzkuMjEwOCA0MC45NzU3IDM5Ljk3NTcgNDAuMjEwOCA0MC40NTUgMzkuMjdDNDEgMzguMjAwNCA0MSAzNi44MDAzIDQxIDM0VjI3QzQxIDI0LjE5OTcgNDEgMjIuNzk5NiA0MC40NTUgMjEuNzNDMzkuOTc1NyAyMC43ODkyIDM5LjIxMDggMjAuMDI0MyAzOC4yNyAxOS41NDVDMzcuMjAwNCAxOSAzNS44MDAzIDE5IDMzIDE5SDE1QzEyLjE5OTcgMTkgMTAuNzk5NiAxOSA5LjczMDA1IDE5LjU0NUM4Ljc4OTI0IDIwLjAyNDMgOC4wMjQzMyAyMC43ODkyIDcuNTQ0OTcgMjEuNzNaTTI0IDI0QzIzLjE3MTYgMjQgMjIuNSAyNC42NzE2IDIyLjUgMjUuNVYyOS41QzIyLjUgMzAuMzI4NCAyMy4xNzE2IDMxIDI0IDMxQzI0LjgyODQgMzEgMjUuNSAzMC4zMjg0IDI1LjUgMjkuNVYyNS41QzI1LjUgMjQuNjcxNiAyNC44Mjg0IDI0IDI0IDI0WlwiPjwvcGF0aD48L3N2Zz5gKTtcbmNvbnN0IFNlY3VyaXR5SWNvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGZpbGwgPSAoKSA9PiBwcm9wcy5maWxsIHx8IHRoZW1lLmNvbG9ycy5pY29uLnNlY29uZGFyeTtcbiAgcmV0dXJuICgoKSA9PiB7XG4gICAgY29uc3QgX2VsJCA9IF90bXBsJCRlLmNsb25lTm9kZSh0cnVlKSwgX2VsJDIgPSBfZWwkLmZpcnN0Q2hpbGQ7XG4gICAgY3JlYXRlUmVuZGVyRWZmZWN0KChfcCQpID0+IHtcbiAgICAgIGNvbnN0IF92JCA9IHByb3BzLmNsYXNzLCBfdiQyID0gZmlsbCgpO1xuICAgICAgX3YkICE9PSBfcCQuX3YkICYmIHNldEF0dHJpYnV0ZShfZWwkLCBcImNsYXNzXCIsIF9wJC5fdiQgPSBfdiQpO1xuICAgICAgX3YkMiAhPT0gX3AkLl92JDIgJiYgc2V0QXR0cmlidXRlKF9lbCQyLCBcImZpbGxcIiwgX3AkLl92JDIgPSBfdiQyKTtcbiAgICAgIHJldHVybiBfcCQ7XG4gICAgfSwge1xuICAgICAgX3YkOiB2b2lkIDAsXG4gICAgICBfdiQyOiB2b2lkIDBcbiAgICB9KTtcbiAgICByZXR1cm4gX2VsJDtcbiAgfSkoKTtcbn07XG5jb25zdCBfdG1wbCQkZCA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB3aWR0aD1cIjQ4XCIgaGVpZ2h0PVwiNDhcIiB2aWV3Qm94PVwiMCAwIDQ4IDQ4XCIgZmlsbD1cIm5vbmVcIj48cGF0aCBmaWxsLXJ1bGU9XCJldmVub2RkXCIgY2xpcC1ydWxlPVwiZXZlbm9kZFwiIGQ9XCJNMzcuNDg1IDM3LjM4NDlDNDAuODk0IDMzLjk1MDYgNDMgMjkuMjIxMiA0MyAyNEM0MyAxMy41MDY2IDM0LjQ5MzQgNSAyNCA1QzEzLjUwNjYgNSA1IDEzLjUwNjYgNSAyNEM1IDI5LjIyMTMgNy4xMDYxIDMzLjk1MDcgMTAuNTE1MSAzNy4zODVDMTMuMzU4MyAzMi45NDM4IDE4LjMzNTQgMzAgMjQuMDAwMSAzMEMyOS42NjQ3IDMwIDM0LjY0MTggMzIuOTQzNyAzNy40ODUgMzcuMzg0OVpNMzUuMTgwOSAzOS4zNjM1QzMyLjkxNDMgMzUuNTUzMiAyOC43NTU0IDMzIDI0LjAwMDEgMzNDMTkuMjQ0OCAzMyAxNS4wODU4IDM1LjU1MzMgMTIuODE5MyAzOS4zNjM2QzE1Ljk1NjQgNDEuNjUwNiAxOS44MjA2IDQzIDI0IDQzQzI4LjE3OTUgNDMgMzIuMDQzNyA0MS42NTA1IDM1LjE4MDkgMzkuMzYzNVpNMjQgNDZDMzYuMTUwMyA0NiA0NiAzNi4xNTAzIDQ2IDI0QzQ2IDExLjg0OTcgMzYuMTUwMyAyIDI0IDJDMTEuODQ5NyAyIDIgMTEuODQ5NyAyIDI0QzIgMzYuMTUwMyAxMS44NDk3IDQ2IDI0IDQ2Wk0yNCAyNEMyNi43NjE0IDI0IDI5IDIxLjc2MTQgMjkgMTlDMjkgMTYuMjM4NiAyNi43NjE0IDE0IDI0IDE0QzIxLjIzODYgMTQgMTkgMTYuMjM4NiAxOSAxOUMxOSAyMS43NjE0IDIxLjIzODYgMjQgMjQgMjRaTTI0IDI3QzI4LjQxODMgMjcgMzIgMjMuNDE4MyAzMiAxOUMzMiAxNC41ODE3IDI4LjQxODMgMTEgMjQgMTFDMTkuNTgxNyAxMSAxNiAxNC41ODE3IDE2IDE5QzE2IDIzLjQxODMgMTkuNTgxNyAyNyAyNCAyN1pcIj48L3BhdGg+PC9zdmc+YCk7XG5jb25zdCBQZXJzb25hbGl0eUljb24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBmaWxsID0gKCkgPT4gcHJvcHMuZmlsbCB8fCB0aGVtZS5jb2xvcnMuaWNvbi5zZWNvbmRhcnk7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkZC5jbG9uZU5vZGUodHJ1ZSksIF9lbCQyID0gX2VsJC5maXJzdENoaWxkO1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoX3AkKSA9PiB7XG4gICAgICBjb25zdCBfdiQgPSBwcm9wcy5jbGFzcywgX3YkMiA9IGZpbGwoKTtcbiAgICAgIF92JCAhPT0gX3AkLl92JCAmJiBzZXRBdHRyaWJ1dGUoX2VsJCwgXCJjbGFzc1wiLCBfcCQuX3YkID0gX3YkKTtcbiAgICAgIF92JDIgIT09IF9wJC5fdiQyICYmIHNldEF0dHJpYnV0ZShfZWwkMiwgXCJmaWxsXCIsIF9wJC5fdiQyID0gX3YkMik7XG4gICAgICByZXR1cm4gX3AkO1xuICAgIH0sIHtcbiAgICAgIF92JDogdm9pZCAwLFxuICAgICAgX3YkMjogdm9pZCAwXG4gICAgfSk7XG4gICAgcmV0dXJuIF9lbCQ7XG4gIH0pKCk7XG59O1xuY29uc3QgX3RtcGwkJGMgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgd2lkdGg9XCI0OFwiIGhlaWdodD1cIjQ4XCIgdmlld0JveD1cIjAgMCA0OCA0OFwiIGZpbGw9XCJub25lXCI+PHBhdGggZmlsbC1ydWxlPVwiZXZlbm9kZFwiIGNsaXAtcnVsZT1cImV2ZW5vZGRcIiBkPVwiTTM0LjU2MDcgNC40MzkzNEMzMy45NzQ5IDMuODUzNTUgMzMuMDI1MSAzLjg1MzU1IDMyLjQzOTMgNC40MzkzNEMzMS44NTM2IDUuMDI1MTMgMzEuODUzNiA1Ljk3NDg3IDMyLjQzOTMgNi41NjA2NkwzNy44Nzg3IDEySDEwLjVDOS42NzE1NyAxMiA5IDEyLjY3MTYgOSAxMy41QzkgMTQuMzI4NCA5LjY3MTU3IDE1IDEwLjUgMTVIMzcuODc4N0wzMi40MzkzIDIwLjQzOTNDMzEuODUzNiAyMS4wMjUxIDMxLjg1MzYgMjEuOTc0OSAzMi40MzkzIDIyLjU2MDdDMzMuMDI1MSAyMy4xNDY0IDMzLjk3NDkgMjMuMTQ2NCAzNC41NjA3IDIyLjU2MDdMNDIuNTYwNyAxNC41NjA3QzQzLjE0NjQgMTMuOTc0OSA0My4xNDY0IDEzLjAyNTEgNDIuNTYwNyAxMi40MzkzTDM0LjU2MDcgNC40MzkzNFpNMTMuNDM5MyAyNS40MzkzQzE0LjAyNTEgMjQuODUzNiAxNC45NzQ5IDI0Ljg1MzYgMTUuNTYwNyAyNS40MzkzQzE2LjE0NjQgMjYuMDI1MSAxNi4xNDY0IDI2Ljk3NDkgMTUuNTYwNyAyNy41NjA3TDEwLjEyMTMgMzNIMzcuNUMzOC4zMjg0IDMzIDM5IDMzLjY3MTYgMzkgMzQuNUMzOSAzNS4zMjg0IDM4LjMyODQgMzYgMzcuNSAzNkgxMC4xMjEzTDE1LjU2MDcgNDEuNDM5M0MxNi4xNDY0IDQyLjAyNTEgMTYuMTQ2NCA0Mi45NzQ5IDE1LjU2MDcgNDMuNTYwN0MxNC45NzQ5IDQ0LjE0NjQgMTQuMDI1MSA0NC4xNDY0IDEzLjQzOTMgNDMuNTYwN0w1LjQzOTM0IDM1LjU2MDdDNC44NTM1NSAzNC45NzQ5IDQuODUzNTUgMzQuMDI1MSA1LjQzOTM0IDMzLjQzOTNMMTMuNDM5MyAyNS40MzkzWlwiPjwvcGF0aD48L3N2Zz5gKTtcbmNvbnN0IFN3YXBJY29uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3QgZmlsbCA9ICgpID0+IHByb3BzLmZpbGwgfHwgdGhlbWUuY29sb3JzLmljb24uc2Vjb25kYXJ5O1xuICByZXR1cm4gKCgpID0+IHtcbiAgICBjb25zdCBfZWwkID0gX3RtcGwkJGMuY2xvbmVOb2RlKHRydWUpLCBfZWwkMiA9IF9lbCQuZmlyc3RDaGlsZDtcbiAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKF9wJCkgPT4ge1xuICAgICAgY29uc3QgX3YkID0gcHJvcHMuY2xhc3MsIF92JDIgPSBmaWxsKCk7XG4gICAgICBfdiQgIT09IF9wJC5fdiQgJiYgc2V0QXR0cmlidXRlKF9lbCQsIFwiY2xhc3NcIiwgX3AkLl92JCA9IF92JCk7XG4gICAgICBfdiQyICE9PSBfcCQuX3YkMiAmJiBzZXRBdHRyaWJ1dGUoX2VsJDIsIFwiZmlsbFwiLCBfcCQuX3YkMiA9IF92JDIpO1xuICAgICAgcmV0dXJuIF9wJDtcbiAgICB9LCB7XG4gICAgICBfdiQ6IHZvaWQgMCxcbiAgICAgIF92JDI6IHZvaWQgMFxuICAgIH0pO1xuICAgIHJldHVybiBfZWwkO1xuICB9KSgpO1xufTtcbmNvbnN0IF90bXBsJCRiID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHdpZHRoPVwiMjhcIiBoZWlnaHQ9XCIyOFwiIHZpZXdCb3g9XCIwIDAgMjggMjhcIiBmaWxsPVwibm9uZVwiPjxwYXRoIGZpbGwtcnVsZT1cImV2ZW5vZGRcIiBjbGlwLXJ1bGU9XCJldmVub2RkXCIgZD1cIk0xLjc1IDEyLjAwMkMxLjc1IDkuMjAxNjkgMS43NSA3LjgwMTU2IDIuMjk0OTcgNi43MzJDMi43NzQzMyA1Ljc5MTE5IDMuNTM5MjQgNS4wMjYyOSA0LjQ4MDA1IDQuNTQ2OTJDNS41NDk2MSA0LjAwMTk1IDYuOTQ5NzQgNC4wMDE5NSA5Ljc1IDQuMDAxOTVIMTcuMjVDMjAuMDUwMyA0LjAwMTk1IDIxLjQ1MDQgNC4wMDE5NSAyMi41MiA0LjU0NjkyQzIzLjQ2MDggNS4wMjYyOSAyNC4yMjU3IDUuNzkxMTkgMjQuNzA1IDYuNzMyQzI0LjgyNTYgNi45Njg2MSAyNC45MTk1IDcuMjIxNCAyNC45OTI2IDcuNTAxOTVIMjEuNUMxOS42Mzc3IDcuNTAxOTUgMTguNzA2NSA3LjUwMTk1IDE3Ljk2MDkgNy43NzMzNEMxNi43MTEgOC4yMjgyOCAxNS43MjYzIDkuMjEyOTEgMTUuMjcxNCAxMC40NjI5QzE1IDExLjIwODUgMTUgMTIuMTM5NiAxNSAxNC4wMDJDMTUgMTUuODY0MyAxNSAxNi43OTU0IDE1LjI3MTQgMTcuNTQxQzE1LjcyNjMgMTguNzkxIDE2LjcxMSAxOS43NzU2IDE3Ljk2MDkgMjAuMjMwNkMxOC43MDY1IDIwLjUwMiAxOS42Mzc3IDIwLjUwMiAyMS41IDIwLjUwMkgyNC45OTI2QzI0LjkxOTUgMjAuNzgyNSAyNC44MjU2IDIxLjAzNTMgMjQuNzA1IDIxLjI3MTlDMjQuMjI1NyAyMi4yMTI3IDIzLjQ2MDggMjIuOTc3NiAyMi41MiAyMy40NTdDMjEuNDUwNCAyNC4wMDIgMjAuMDUwMyAyNC4wMDIgMTcuMjUgMjQuMDAySDkuNzVDNi45NDk3NCAyNC4wMDIgNS41NDk2MSAyNC4wMDIgNC40ODAwNSAyMy40NTdDMy41MzkyNCAyMi45Nzc2IDIuNzc0MzMgMjIuMjEyNyAyLjI5NDk3IDIxLjI3MTlDMS43NSAyMC4yMDIzIDEuNzUgMTguODAyMiAxLjc1IDE2LjAwMlYxMi4wMDJaTTE2LjQ5OTkgMTMuODAyQzE2LjQ5OTkgMTIuMTIxOCAxNi40OTk5IDExLjI4MTcgMTYuODI2OSAxMC42NEMxNy4xMTQ1IDEwLjA3NTUgMTcuNTczNSA5LjYxNjU2IDE4LjEzOCA5LjMyODk0QzE4Ljc3OTcgOS4wMDE5NiAxOS42MTk4IDkuMDAxOTYgMjEuMjk5OSA5LjAwMTk2SDIzLjE5OTlDMjQuODgwMSA5LjAwMTk2IDI1LjcyMDIgOS4wMDE5NiAyNi4zNjE5IDkuMzI4OTRDMjYuOTI2NCA5LjYxNjU2IDI3LjM4NTMgMTAuMDc1NSAyNy42NzMgMTAuNjRDMjcuOTk5OSAxMS4yODE3IDI3Ljk5OTkgMTIuMTIxOCAyNy45OTk5IDEzLjgwMlYxNC4yMDJDMjcuOTk5OSAxNS44ODIxIDI3Ljk5OTkgMTYuNzIyMiAyNy42NzMgMTcuMzYzOUMyNy4zODUzIDE3LjkyODQgMjYuOTI2NCAxOC4zODc0IDI2LjM2MTkgMTguNjc1QzI1LjcyMDIgMTkuMDAyIDI0Ljg4MDEgMTkuMDAyIDIzLjE5OTkgMTkuMDAySDIxLjI5OTlDMTkuNjE5OCAxOS4wMDIgMTguNzc5NyAxOS4wMDIgMTguMTM4IDE4LjY3NUMxNy41NzM1IDE4LjM4NzQgMTcuMTE0NSAxNy45Mjg0IDE2LjgyNjkgMTcuMzYzOUMxNi40OTk5IDE2LjcyMjIgMTYuNDk5OSAxNS44ODIxIDE2LjQ5OTkgMTQuMjAyVjEzLjgwMlpNMjIuNDk5OSAxNC4wMDJDMjIuNDk5OSAxNC45Njg1IDIxLjcxNjQgMTUuNzUyIDIwLjc0OTkgMTUuNzUyQzE5Ljc4MzQgMTUuNzUyIDE4Ljk5OTkgMTQuOTY4NSAxOC45OTk5IDE0LjAwMkMxOC45OTk5IDEzLjAzNTUgMTkuNzgzNCAxMi4yNTIgMjAuNzQ5OSAxMi4yNTJDMjEuNzE2NCAxMi4yNTIgMjIuNDk5OSAxMy4wMzU1IDIyLjQ5OTkgMTQuMDAyWlwiPjwvcGF0aD48L3N2Zz5gKTtcbmNvbnN0IEF0V2FsbGV0SWNvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGZpbGwgPSAoKSA9PiBwcm9wcy5maWxsIHx8IHRoZW1lLmNvbG9ycy5jb25zdGFudC53aGl0ZTtcbiAgcmV0dXJuICgoKSA9PiB7XG4gICAgY29uc3QgX2VsJCA9IF90bXBsJCRiLmNsb25lTm9kZSh0cnVlKSwgX2VsJDIgPSBfZWwkLmZpcnN0Q2hpbGQ7XG4gICAgY3JlYXRlUmVuZGVyRWZmZWN0KChfcCQpID0+IHtcbiAgICAgIGNvbnN0IF92JCA9IHByb3BzLmNsYXNzLCBfdiQyID0gZmlsbCgpO1xuICAgICAgX3YkICE9PSBfcCQuX3YkICYmIHNldEF0dHJpYnV0ZShfZWwkLCBcImNsYXNzXCIsIF9wJC5fdiQgPSBfdiQpO1xuICAgICAgX3YkMiAhPT0gX3AkLl92JDIgJiYgc2V0QXR0cmlidXRlKF9lbCQyLCBcImZpbGxcIiwgX3AkLl92JDIgPSBfdiQyKTtcbiAgICAgIHJldHVybiBfcCQ7XG4gICAgfSwge1xuICAgICAgX3YkOiB2b2lkIDAsXG4gICAgICBfdiQyOiB2b2lkIDBcbiAgICB9KTtcbiAgICByZXR1cm4gX2VsJDtcbiAgfSkoKTtcbn07XG5jb25zdCBfdG1wbCQkYSA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB3aWR0aD1cIjI4XCIgaGVpZ2h0PVwiMjhcIiB2aWV3Qm94PVwiMCAwIDI4IDI4XCI+PHBhdGggZmlsbC1ydWxlPVwiZXZlbm9kZFwiIGNsaXAtcnVsZT1cImV2ZW5vZGRcIiBkPVwiTTEwLjAwMDEgMTAuMDAwMUMxMC4wMDE2IDguMDIzMzMgMTAuMDI2NyA2Ljk4NzE5IDEwLjQzNiA2LjE4NDA0QzEwLjgxOTUgNS40MzEzOSAxMS40MzE0IDQuODE5NDcgMTIuMTg0IDQuNDM1OTdDMTMuMDM5NyA0IDE0LjE1OTggNCAxNi40IDRIMTcuNkMxOS44NDAyIDQgMjAuOTYwMyA0IDIxLjgxNiA0LjQzNTk3QzIyLjU2ODYgNC44MTk0NyAyMy4xODA1IDUuNDMxMzkgMjMuNTY0IDYuMTg0MDRDMjQgNy4wMzk2OSAyNCA4LjE1OTc5IDI0IDEwLjRWMTEuNkMyNCAxMy44NDAyIDI0IDE0Ljk2MDMgMjMuNTY0IDE1LjgxNkMyMy4xODA1IDE2LjU2ODYgMjIuNTY4NiAxNy4xODA1IDIxLjgxNiAxNy41NjRDMjEuMDEyOCAxNy45NzMzIDE5Ljk3NjcgMTcuOTk4NCAxNy45OTk5IDE3Ljk5OTlDMTcuOTk4NCAxOS45NzY3IDE3Ljk3MzMgMjEuMDEyOCAxNy41NjQgMjEuODE2QzE3LjE4MDUgMjIuNTY4NiAxNi41Njg2IDIzLjE4MDUgMTUuODE2IDIzLjU2NEMxNC45NjAzIDI0IDEzLjg0MDIgMjQgMTEuNiAyNEgxMC40QzguMTU5NzkgMjQgNy4wMzk2OSAyNCA2LjE4NDA0IDIzLjU2NEM1LjQzMTM5IDIzLjE4MDUgNC44MTk0NyAyMi41Njg2IDQuNDM1OTcgMjEuODE2QzQgMjAuOTYwMyA0IDE5Ljg0MDIgNCAxNy42VjE2LjRDNCAxNC4xNTk4IDQgMTMuMDM5NyA0LjQzNTk3IDEyLjE4NEM0LjgxOTQ3IDExLjQzMTQgNS40MzEzOSAxMC44MTk1IDYuMTg0MDQgMTAuNDM2QzYuOTg3MTkgMTAuMDI2NyA4LjAyMzMzIDEwLjAwMTYgMTAuMDAwMSAxMC4wMDAxWk0xMCAxMS41SDkuNUM4LjA5OTg3IDExLjUgNy4zOTk4IDExLjUgNi44NjUwMiAxMS43NzI1QzYuMzk0NjIgMTIuMDEyMiA2LjAxMjE3IDEyLjM5NDYgNS43NzI0OCAxMi44NjVDNS41IDEzLjM5OTggNS41IDE0LjA5OTkgNS41IDE1LjVWMTguNUM1LjUgMTkuOTAwMSA1LjUgMjAuNjAwMiA1Ljc3MjQ4IDIxLjEzNUM2LjAxMjE3IDIxLjYwNTQgNi4zOTQ2MiAyMS45ODc4IDYuODY1MDIgMjIuMjI3NUM3LjM5OTggMjIuNSA4LjA5OTg3IDIyLjUgOS41IDIyLjVIMTIuNUMxMy45MDAxIDIyLjUgMTQuNjAwMiAyMi41IDE1LjEzNSAyMi4yMjc1QzE1LjYwNTQgMjEuOTg3OCAxNS45ODc4IDIxLjYwNTQgMTYuMjI3NSAyMS4xMzVDMTYuNSAyMC42MDAyIDE2LjUgMTkuOTAwMSAxNi41IDE4LjVWMThIMTYuNEMxNC4xNTk4IDE4IDEzLjAzOTcgMTggMTIuMTg0IDE3LjU2NEMxMS40MzE0IDE3LjE4MDUgMTAuODE5NSAxNi41Njg2IDEwLjQzNiAxNS44MTZDMTAgMTQuOTYwMyAxMCAxMy44NDAyIDEwIDExLjZWMTEuNVpNMTEuNSA5LjVDMTEuNSA4LjA5OTg3IDExLjUgNy4zOTk4IDExLjc3MjUgNi44NjUwMkMxMi4wMTIyIDYuMzk0NjIgMTIuMzk0NiA2LjAxMjE3IDEyLjg2NSA1Ljc3MjQ4QzEzLjM5OTggNS41IDE0LjA5OTkgNS41IDE1LjUgNS41SDE4LjVDMTkuOTAwMSA1LjUgMjAuNjAwMiA1LjUgMjEuMTM1IDUuNzcyNDhDMjEuNjA1NCA2LjAxMjE3IDIxLjk4NzggNi4zOTQ2MiAyMi4yMjc1IDYuODY1MDJDMjIuNSA3LjM5OTggMjIuNSA4LjA5OTg3IDIyLjUgOS41VjEyLjVDMjIuNSAxMy45MDAxIDIyLjUgMTQuNjAwMiAyMi4yMjc1IDE1LjEzNUMyMS45ODc4IDE1LjYwNTQgMjEuNjA1NCAxNS45ODc4IDIxLjEzNSAxNi4yMjc1QzIwLjYwMDIgMTYuNSAxOS45MDAxIDE2LjUgMTguNSAxNi41SDE1LjVDMTQuMDk5OSAxNi41IDEzLjM5OTggMTYuNSAxMi44NjUgMTYuMjI3NUMxMi4zOTQ2IDE1Ljk4NzggMTIuMDEyMiAxNS42MDU0IDExLjc3MjUgMTUuMTM1QzExLjUgMTQuNjAwMiAxMS41IDEzLjkwMDEgMTEuNSAxMi41VjkuNVpcIj48L3BhdGg+PC9zdmc+YCk7XG5jb25zdCBDb3B5TGlnaHRJY29uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3QgZmlsbCA9ICgpID0+IHByb3BzLmZpbGwgfHwgdGhlbWUuY29sb3JzLmljb24uc2Vjb25kYXJ5O1xuICByZXR1cm4gKCgpID0+IHtcbiAgICBjb25zdCBfZWwkID0gX3RtcGwkJGEuY2xvbmVOb2RlKHRydWUpLCBfZWwkMiA9IF9lbCQuZmlyc3RDaGlsZDtcbiAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKF9wJCkgPT4ge1xuICAgICAgY29uc3QgX3YkID0gZmlsbCgpLCBfdiQyID0gZmlsbCgpO1xuICAgICAgX3YkICE9PSBfcCQuX3YkICYmIHNldEF0dHJpYnV0ZShfZWwkLCBcImZpbGxcIiwgX3AkLl92JCA9IF92JCk7XG4gICAgICBfdiQyICE9PSBfcCQuX3YkMiAmJiBzZXRBdHRyaWJ1dGUoX2VsJDIsIFwiZmlsbFwiLCBfcCQuX3YkMiA9IF92JDIpO1xuICAgICAgcmV0dXJuIF9wJDtcbiAgICB9LCB7XG4gICAgICBfdiQ6IHZvaWQgMCxcbiAgICAgIF92JDI6IHZvaWQgMFxuICAgIH0pO1xuICAgIHJldHVybiBfZWwkO1xuICB9KSgpO1xufTtcbmNvbnN0IF90bXBsJCQ5ID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHdpZHRoPVwiMTZcIiBoZWlnaHQ9XCIxN1wiIHZpZXdCb3g9XCIwIDAgMTYgMTdcIiBmaWxsPVwibm9uZVwiPjxwYXRoIGZpbGwtcnVsZT1cImV2ZW5vZGRcIiBjbGlwLXJ1bGU9XCJldmVub2RkXCIgZD1cIk0xIDQuMTI2OTVDMSAzLjA3NzU0IDEgMi41NTI4NCAxLjE5MjAyIDIuMTQ2ODRDMS4zODk4NiAxLjcyODU2IDEuNzI2NiAxLjM5MTgxIDIuMTQ0ODkgMS4xOTM5N0MyLjU1MDg4IDEuMDAxOTUgMy4wNzU1OSAxLjAwMTk1IDQuMTI1IDEuMDAxOTVDNS4xNzQ0MSAxLjAwMTk1IDUuNjk5MTIgMS4wMDE5NSA2LjEwNTExIDEuMTkzOTdDNi41MjM0IDEuMzkxODEgNi44NjAxNCAxLjcyODU2IDcuMDU3OTggMi4xNDY4NEM3LjI1IDIuNTUyODQgNy4yNSAzLjA3NzU0IDcuMjUgNC4xMjY5NUM3LjI1IDUuMTc2MzYgNy4yNSA1LjcwMTA3IDcuMDU3OTggNi4xMDcwNkM2Ljg2MDE0IDYuNTI1MzUgNi41MjM0IDYuODYyMSA2LjEwNTExIDcuMDU5OTNDNS42OTkxMiA3LjI1MTk1IDUuMTc0NDEgNy4yNTE5NSA0LjEyNSA3LjI1MTk1QzMuMDc1NTkgNy4yNTE5NSAyLjU1MDg4IDcuMjUxOTUgMi4xNDQ4OSA3LjA1OTkzQzEuNzI2NiA2Ljg2MjEgMS4zODk4NiA2LjUyNTM1IDEuMTkyMDIgNi4xMDcwNkMxIDUuNzAxMDcgMSA1LjE3NjM2IDEgNC4xMjY5NVpNMi41IDMuMzAxOTVDMi41IDMuMDIxOTMgMi41IDIuODgxOTEgMi41NTQ1IDIuNzc0OTZDMi42MDI0MyAyLjY4MDg4IDIuNjc4OTIgMi42MDQzOSAyLjc3MyAyLjU1NjQ1QzIuODc5OTYgMi41MDE5NSAzLjAxOTk3IDIuNTAxOTUgMy4zIDIuNTAxOTVINC45NUM1LjIzMDAzIDIuNTAxOTUgNS4zNzAwNCAyLjUwMTk1IDUuNDc3IDIuNTU2NDVDNS41NzEwOCAyLjYwNDM5IDUuNjQ3NTcgMi42ODA4OCA1LjY5NTUgMi43NzQ5NkM1Ljc1IDIuODgxOTEgNS43NSAzLjAyMTkzIDUuNzUgMy4zMDE5NVY0Ljk1MTk1QzUuNzUgNS4yMzE5OCA1Ljc1IDUuMzcxOTkgNS42OTU1IDUuNDc4OTVDNS42NDc1NyA1LjU3MzAzIDUuNTcxMDggNS42NDk1MiA1LjQ3NyA1LjY5NzQ2QzUuMzcwMDQgNS43NTE5NSA1LjIzMDAzIDUuNzUxOTUgNC45NSA1Ljc1MTk1SDMuM0MzLjAxOTk3IDUuNzUxOTUgMi44Nzk5NiA1Ljc1MTk1IDIuNzczIDUuNjk3NDZDMi42Nzg5MiA1LjY0OTUyIDIuNjAyNDMgNS41NzMwMyAyLjU1NDUgNS40Nzg5NUMyLjUgNS4zNzE5OSAyLjUgNS4yMzE5OCAyLjUgNC45NTE5NVYzLjMwMTk1Wk0xIDExLjg3N0MxIDEwLjgyNzUgMSAxMC4zMDI4IDEuMTkyMDIgOS44OTY4NEMxLjM4OTg2IDkuNDc4NTYgMS43MjY2IDkuMTQxODEgMi4xNDQ4OSA4Ljk0Mzk3QzIuNTUwODggOC43NTE5NSAzLjA3NTU5IDguNzUxOTUgNC4xMjUgOC43NTE5NUM1LjE3NDQxIDguNzUxOTUgNS42OTkxMiA4Ljc1MTk1IDYuMTA1MTEgOC45NDM5N0M2LjUyMzQgOS4xNDE4MSA2Ljg2MDE0IDkuNDc4NTYgNy4wNTc5OCA5Ljg5Njg0QzcuMjUgMTAuMzAyOCA3LjI1IDEwLjgyNzUgNy4yNSAxMS44NzdDNy4yNSAxMi45MjY0IDcuMjUgMTMuNDUxMSA3LjA1Nzk4IDEzLjg1NzFDNi44NjAxNCAxNC4yNzUzIDYuNTIzNCAxNC42MTIxIDYuMTA1MTEgMTQuODA5OUM1LjY5OTEyIDE1LjAwMiA1LjE3NDQxIDE1LjAwMiA0LjEyNSAxNS4wMDJDMy4wNzU1OSAxNS4wMDIgMi41NTA4OCAxNS4wMDIgMi4xNDQ4OSAxNC44MDk5QzEuNzI2NiAxNC42MTIxIDEuMzg5ODYgMTQuMjc1MyAxLjE5MjAyIDEzLjg1NzFDMSAxMy40NTExIDEgMTIuOTI2NCAxIDExLjg3N1pNMi41IDExLjA1MkMyLjUgMTAuNzcxOSAyLjUgMTAuNjMxOSAyLjU1NDUgMTAuNTI1QzIuNjAyNDMgMTAuNDMwOSAyLjY3ODkyIDEwLjM1NDQgMi43NzMgMTAuMzA2NEMyLjg3OTk2IDEwLjI1MiAzLjAxOTk3IDEwLjI1MiAzLjMgMTAuMjUySDQuOTVDNS4yMzAwMyAxMC4yNTIgNS4zNzAwNCAxMC4yNTIgNS40NzcgMTAuMzA2NEM1LjU3MTA4IDEwLjM1NDQgNS42NDc1NyAxMC40MzA5IDUuNjk1NSAxMC41MjVDNS43NSAxMC42MzE5IDUuNzUgMTAuNzcxOSA1Ljc1IDExLjA1MlYxMi43MDJDNS43NSAxMi45ODIgNS43NSAxMy4xMjIgNS42OTU1IDEzLjIyODlDNS42NDc1NyAxMy4zMjMgNS41NzEwOCAxMy4zOTk1IDUuNDc3IDEzLjQ0NzVDNS4zNzAwNCAxMy41MDIgNS4yMzAwMyAxMy41MDIgNC45NSAxMy41MDJIMy4zQzMuMDE5OTcgMTMuNTAyIDIuODc5OTYgMTMuNTAyIDIuNzczIDEzLjQ0NzVDMi42Nzg5MiAxMy4zOTk1IDIuNjAyNDMgMTMuMzIzIDIuNTU0NSAxMy4yMjg5QzIuNSAxMy4xMjIgMi41IDEyLjk4MiAyLjUgMTIuNzAyVjExLjA1MlpNOC45NDIwMiAyLjE0Njg0QzguNzUgMi41NTI4NCA4Ljc1IDMuMDc3NTQgOC43NSA0LjEyNjk1QzguNzUgNS4xNzYzNiA4Ljc1IDUuNzAxMDcgOC45NDIwMiA2LjEwNzA2QzkuMTM5ODYgNi41MjUzNSA5LjQ3NjYgNi44NjIxIDkuODk0ODkgNy4wNTk5M0MxMC4zMDA5IDcuMjUxOTUgMTAuODI1NiA3LjI1MTk1IDExLjg3NSA3LjI1MTk1QzEyLjkyNDQgNy4yNTE5NSAxMy40NDkxIDcuMjUxOTUgMTMuODU1MSA3LjA1OTkzQzE0LjI3MzQgNi44NjIxIDE0LjYxMDEgNi41MjUzNSAxNC44MDggNi4xMDcwNkMxNSA1LjcwMTA3IDE1IDUuMTc2MzYgMTUgNC4xMjY5NUMxNSAzLjA3NzU0IDE1IDIuNTUyODQgMTQuODA4IDIuMTQ2ODRDMTQuNjEwMSAxLjcyODU2IDE0LjI3MzQgMS4zOTE4MSAxMy44NTUxIDEuMTkzOTdDMTMuNDQ5MSAxLjAwMTk1IDEyLjkyNDQgMS4wMDE5NSAxMS44NzUgMS4wMDE5NUMxMC44MjU2IDEuMDAxOTUgMTAuMzAwOSAxLjAwMTk1IDkuODk0ODkgMS4xOTM5N0M5LjQ3NjYgMS4zOTE4MSA5LjEzOTg2IDEuNzI4NTYgOC45NDIwMiAyLjE0Njg0Wk0xMC4zMDQ1IDIuNzc0OTZDMTAuMjUgMi44ODE5MSAxMC4yNSAzLjAyMTkzIDEwLjI1IDMuMzAxOTVWNC45NTE5NUMxMC4yNSA1LjIzMTk4IDEwLjI1IDUuMzcxOTkgMTAuMzA0NSA1LjQ3ODk1QzEwLjM1MjQgNS41NzMwMyAxMC40Mjg5IDUuNjQ5NTIgMTAuNTIzIDUuNjk3NDZDMTAuNjMgNS43NTE5NSAxMC43NyA1Ljc1MTk1IDExLjA1IDUuNzUxOTVIMTIuN0MxMi45OCA1Ljc1MTk1IDEzLjEyIDUuNzUxOTUgMTMuMjI3IDUuNjk3NDZDMTMuMzIxMSA1LjY0OTUyIDEzLjM5NzYgNS41NzMwMyAxMy40NDU1IDUuNDc4OTVDMTMuNSA1LjM3MTk5IDEzLjUgNS4yMzE5OCAxMy41IDQuOTUxOTVWMy4zMDE5NUMxMy41IDMuMDIxOTMgMTMuNSAyLjg4MTkxIDEzLjQ0NTUgMi43NzQ5NkMxMy4zOTc2IDIuNjgwODggMTMuMzIxMSAyLjYwNDM5IDEzLjIyNyAyLjU1NjQ1QzEzLjEyIDIuNTAxOTUgMTIuOTggMi41MDE5NSAxMi43IDIuNTAxOTVIMTEuMDVDMTAuNzcgMi41MDE5NSAxMC42MyAyLjUwMTk1IDEwLjUyMyAyLjU1NjQ1QzEwLjQyODkgMi42MDQzOSAxMC4zNTI0IDIuNjgwODggMTAuMzA0NSAyLjc3NDk2Wk04LjgwNzI3IDkuMTM1MThDOC43NSA5LjI2MjQyIDguNzUgOS40MjU2IDguNzUgOS43NTE5NUM4Ljc1IDEwLjA3ODMgOC43NSAxMC4yNDE1IDguODA3MjcgMTAuMzY4N0M4Ljg3MjQ1IDEwLjUxMzYgOC45ODg0IDEwLjYyOTUgOS4xMzMyMyAxMC42OTQ3QzkuMjYwNDcgMTAuNzUyIDkuNDIzNjUgMTAuNzUyIDkuNzUgMTAuNzUyQzEwLjA3NjQgMTAuNzUyIDEwLjIzOTUgMTAuNzUyIDEwLjM2NjggMTAuNjk0N0MxMC41MTE2IDEwLjYyOTUgMTAuNjI3NiAxMC41MTM2IDEwLjY5MjcgMTAuMzY4N0MxMC43NSAxMC4yNDE1IDEwLjc1IDEwLjA3ODMgMTAuNzUgOS43NTE5NUMxMC43NSA5LjQyNTYgMTAuNzUgOS4yNjI0MiAxMC42OTI3IDkuMTM1MThDMTAuNjI3NiA4Ljk5MDM1IDEwLjUxMTYgOC44NzQ0IDEwLjM2NjggOC44MDkyMkMxMC4yMzk1IDguNzUxOTUgMTAuMDc2NCA4Ljc1MTk1IDkuNzUgOC43NTE5NUM5LjQyMzY1IDguNzUxOTUgOS4yNjA0NyA4Ljc1MTk1IDkuMTMzMjMgOC44MDkyMkM4Ljk4ODQgOC44NzQ0IDguODcyNDUgOC45OTAzNSA4LjgwNzI3IDkuMTM1MThaTTEwLjg3IDExLjg3NzFDMTAuODcgMTEuNTQ2IDEwLjg3IDExLjM4MDUgMTAuOTI4OSAxMS4yNTE3QzEwLjk5MzggMTEuMTA5OCAxMS4xMDc3IDEwLjk5NTkgMTEuMjQ5NyAxMC45MzFDMTEuMzc4NCAxMC44NzIxIDExLjU0MzkgMTAuODcyMSAxMS44NzUgMTAuODcyMUMxMi4yMDYxIDEwLjg3MjEgMTIuMzcxNiAxMC44NzIxIDEyLjUwMDMgMTAuOTMxQzEyLjY0MjMgMTAuOTk1OSAxMi43NTYyIDExLjEwOTggMTIuODIxMSAxMS4yNTE3QzEyLjg4IDExLjM4MDUgMTIuODggMTEuNTQ2IDEyLjg4IDExLjg3NzFDMTIuODggMTIuMjA4MSAxMi44OCAxMi4zNzM3IDEyLjgyMTEgMTIuNTAyNEMxMi43NTYyIDEyLjY0NDQgMTIuNjQyMyAxMi43NTgzIDEyLjUwMDMgMTIuODIzMkMxMi4zNzE2IDEyLjg4MjEgMTIuMjA2MSAxMi44ODIxIDExLjg3NSAxMi44ODIxQzExLjU0MzkgMTIuODgyMSAxMS4zNzg0IDEyLjg4MjEgMTEuMjQ5NyAxMi44MjMyQzExLjEwNzcgMTIuNzU4MyAxMC45OTM4IDEyLjY0NDQgMTAuOTI4OSAxMi41MDI0QzEwLjg3IDEyLjM3MzcgMTAuODcgMTIuMjA4MSAxMC44NyAxMS44NzcxWk04LjgwNzI3IDEzLjM4NTJDOC43NSAxMy41MTI0IDguNzUgMTMuNjc1NiA4Ljc1IDE0LjAwMkM4Ljc1IDE0LjMyODMgOC43NSAxNC40OTE1IDguODA3MjcgMTQuNjE4N0M4Ljg3MjQ1IDE0Ljc2MzYgOC45ODg0IDE0Ljg3OTUgOS4xMzMyMyAxNC45NDQ3QzkuMjYwNDcgMTUuMDAyIDkuNDIzNjUgMTUuMDAyIDkuNzUgMTUuMDAyQzEwLjA3NjQgMTUuMDAyIDEwLjIzOTUgMTUuMDAyIDEwLjM2NjggMTQuOTQ0N0MxMC41MTE2IDE0Ljg3OTUgMTAuNjI3NiAxNC43NjM2IDEwLjY5MjcgMTQuNjE4N0MxMC43NSAxNC40OTE1IDEwLjc1IDE0LjMyODMgMTAuNzUgMTQuMDAyQzEwLjc1IDEzLjY3NTYgMTAuNzUgMTMuNTEyNCAxMC42OTI3IDEzLjM4NTJDMTAuNjI3NiAxMy4yNDA0IDEwLjUxMTYgMTMuMTI0NCAxMC4zNjY4IDEzLjA1OTJDMTAuMjM5NSAxMy4wMDIgMTAuMDc2NCAxMy4wMDIgOS43NSAxMy4wMDJDOS40MjM2NSAxMy4wMDIgOS4yNjA0NyAxMy4wMDIgOS4xMzMyMyAxMy4wNTkyQzguOTg4NCAxMy4xMjQ0IDguODcyNDUgMTMuMjQwNCA4LjgwNzI3IDEzLjM4NTJaTTEzIDkuNzUxOTVDMTMgOS40MjU2IDEzIDkuMjYyNDIgMTMuMDU3MyA5LjEzNTE4QzEzLjEyMjQgOC45OTAzNSAxMy4yMzg0IDguODc0NCAxMy4zODMyIDguODA5MjJDMTMuNTEwNSA4Ljc1MTk1IDEzLjY3MzYgOC43NTE5NSAxNCA4Ljc1MTk1QzE0LjMyNjQgOC43NTE5NSAxNC40ODk1IDguNzUxOTUgMTQuNjE2OCA4LjgwOTIyQzE0Ljc2MTYgOC44NzQ0IDE0Ljg3NzYgOC45OTAzNSAxNC45NDI3IDkuMTM1MThDMTUgOS4yNjI0MiAxNSA5LjQyNTYgMTUgOS43NTE5NUMxNSAxMC4wNzgzIDE1IDEwLjI0MTUgMTQuOTQyNyAxMC4zNjg3QzE0Ljg3NzYgMTAuNTEzNiAxNC43NjE2IDEwLjYyOTUgMTQuNjE2OCAxMC42OTQ3QzE0LjQ4OTUgMTAuNzUyIDE0LjMyNjQgMTAuNzUyIDE0IDEwLjc1MkMxMy42NzM2IDEwLjc1MiAxMy41MTA1IDEwLjc1MiAxMy4zODMyIDEwLjY5NDdDMTMuMjM4NCAxMC42Mjk1IDEzLjEyMjQgMTAuNTEzNiAxMy4wNTczIDEwLjM2ODdDMTMgMTAuMjQxNSAxMyAxMC4wNzgzIDEzIDkuNzUxOTVaTTEzLjA1NzMgMTMuMzg1MkMxMyAxMy41MTI0IDEzIDEzLjY3NTYgMTMgMTQuMDAyQzEzIDE0LjMyODMgMTMgMTQuNDkxNSAxMy4wNTczIDE0LjYxODdDMTMuMTIyNCAxNC43NjM2IDEzLjIzODQgMTQuODc5NSAxMy4zODMyIDE0Ljk0NDdDMTMuNTEwNSAxNS4wMDIgMTMuNjczNiAxNS4wMDIgMTQgMTUuMDAyQzE0LjMyNjQgMTUuMDAyIDE0LjQ4OTUgMTUuMDAyIDE0LjYxNjggMTQuOTQ0N0MxNC43NjE2IDE0Ljg3OTUgMTQuODc3NiAxNC43NjM2IDE0Ljk0MjcgMTQuNjE4N0MxNSAxNC40OTE1IDE1IDE0LjMyODMgMTUgMTQuMDAyQzE1IDEzLjY3NTYgMTUgMTMuNTEyNCAxNC45NDI3IDEzLjM4NTJDMTQuODc3NiAxMy4yNDA0IDE0Ljc2MTYgMTMuMTI0NCAxNC42MTY4IDEzLjA1OTJDMTQuNDg5NSAxMy4wMDIgMTQuMzI2NCAxMy4wMDIgMTQgMTMuMDAyQzEzLjY3MzYgMTMuMDAyIDEzLjUxMDUgMTMuMDAyIDEzLjM4MzIgMTMuMDU5MkMxMy4yMzg0IDEzLjEyNDQgMTMuMTIyNCAxMy4yNDA0IDEzLjA1NzMgMTMuMzg1MlpcIj48L3BhdGg+PC9zdmc+YCk7XG5jb25zdCBRUkljb24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBmaWxsID0gKCkgPT4gcHJvcHMuZmlsbCB8fCB0aGVtZS5jb2xvcnMuaWNvbi5zZWNvbmRhcnk7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkOS5jbG9uZU5vZGUodHJ1ZSksIF9lbCQyID0gX2VsJC5maXJzdENoaWxkO1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoKSA9PiBzZXRBdHRyaWJ1dGUoX2VsJDIsIFwiZmlsbFwiLCBmaWxsKCkpKTtcbiAgICByZXR1cm4gX2VsJDtcbiAgfSkoKTtcbn07XG5jb25zdCBjb250YWluZXJCb3JkZXJzID0ge1xuICBtOiBcIjE2cHhcIixcbiAgczogXCIxMnB4XCIsXG4gIG5vbmU6IFwiMFwiXG59O1xuY29uc3Qgd2FsbGV0Qm9yZGVycyA9IHtcbiAgbTogXCI2cHhcIixcbiAgczogXCI2cHhcIixcbiAgbm9uZTogXCIwXCJcbn07XG5jb25zdCBGb3VyV2FsbGV0c0NhcmQgPSBzdHlsZWQuZGl2YFxuICAgIHdpZHRoOiA2MHB4O1xuICAgIGhlaWdodDogNjBweDtcbiAgICBwYWRkaW5nOiA4cHg7XG4gICAgbWFyZ2luLWJvdHRvbTogOHB4O1xuICAgIGJvcmRlci1yYWRpdXM6ICR7KHByb3BzKSA9PiBjb250YWluZXJCb3JkZXJzW3Byb3BzLnRoZW1lLmJvcmRlclJhZGl1c119O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZC50aW50fTtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGdyaWQtdGVtcGxhdGU6IDFmciAxZnIgLyAxZnIgMWZyO1xuICAgIGdhcDogNHB4O1xuYDtcbmNvbnN0IEZvdXJXYWxsZXRzSW1hZ2UgPSBzdHlsZWQoV2FsbGV0SW1hZ2UpYFxuICAgIHdpZHRoOiAyMHB4O1xuICAgIGhlaWdodDogMjBweDtcbiAgICBib3JkZXItcmFkaXVzOiAkeyhwcm9wcykgPT4gd2FsbGV0Qm9yZGVyc1twcm9wcy50aGVtZS5ib3JkZXJSYWRpdXNdfTtcbmA7XG5jb25zdCBGb3VyV2FsbGV0c0l0ZW0gPSAocHJvcHMpID0+IHtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChXYWxsZXRJdGVtLCB7XG4gICAgZ2V0IG5hbWUoKSB7XG4gICAgICByZXR1cm4gcHJvcHMubGFiZWxMaW5lMTtcbiAgICB9LFxuICAgIGdldCBzZWNvbmRMaW5lKCkge1xuICAgICAgcmV0dXJuIHByb3BzLmxhYmVsTGluZTI7XG4gICAgfSxcbiAgICBnZXQgaWNvbigpIHtcbiAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoRm91cldhbGxldHNDYXJkLCB7XG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEZvciwge1xuICAgICAgICAgICAgZWFjaDogWzAsIDEsIDIsIDNdLFxuICAgICAgICAgICAgY2hpbGRyZW46IChpbmRleCkgPT4gY3JlYXRlQ29tcG9uZW50KEZvdXJXYWxsZXRzSW1hZ2UsIHtcbiAgICAgICAgICAgICAgZ2V0IHNyYygpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMuaW1hZ2VzW2luZGV4XTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBvbkNsaWNrOiAoKSA9PiBwcm9wcy5vbkNsaWNrKClcbiAgfSk7XG59O1xuY29uc3QgQVRfV0FMTEVUX0FQUF9OQU1FID0gXCJ0ZWxlZ3JhbS13YWxsZXRcIjtcbmNvbnN0IElNRyA9IHtcbiAgVE9OOiBcImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS90b24tY29ubmVjdC9zZGsvbWFpbi9hc3NldHMvdG9uLWljb24tNDgucG5nXCIsXG4gIFRHOiBcImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS90b24tY29ubmVjdC9zZGsvbWFpbi9hc3NldHMvdGcucG5nXCJcbn07XG5jb25zdCBXYWxsZXRMYWJlbGVkSXRlbSA9IChwcm9wcykgPT4ge1xuICBjb25zdCBbdDJdID0gdXNlSTE4bigpO1xuICBjb25zdCB3YWxsZXRzU2Vjb25kTGluZSA9ICgpID0+IHtcbiAgICBpZiAocHJvcHMud2FsbGV0LmFwcE5hbWUgPT09IEFUX1dBTExFVF9BUFBfTkFNRSkge1xuICAgICAgcmV0dXJuIHZvaWQgMDtcbiAgICB9XG4gICAgaWYgKFwiaXNQcmVmZXJyZWRcIiBpbiBwcm9wcy53YWxsZXQgJiYgcHJvcHMud2FsbGV0LmlzUHJlZmVycmVkKSB7XG4gICAgICByZXR1cm4gdDIoXCJ3YWxsZXRJdGVtLnJlY2VudFwiLCB7fSwgXCJSZWNlbnRcIik7XG4gICAgfVxuICAgIGlmIChpc1dhbGxldEluZm9DdXJyZW50bHlJbmplY3RlZChwcm9wcy53YWxsZXQpKSB7XG4gICAgICByZXR1cm4gdDIoXCJ3YWxsZXRJdGVtLmluc3RhbGxlZFwiLCB7fSwgXCJJbnN0YWxsZWRcIik7XG4gICAgfVxuICAgIGlmIChwcm9wcy53YWxsZXQubmFtZSA9PT0gXCJUb25rZWVwZXJcIikge1xuICAgICAgcmV0dXJuIHQyKFwid2FsbGV0SXRlbS5wb3B1bGFyXCIsIHt9LCBcIlBvcHVsYXJcIik7XG4gICAgfVxuICAgIHJldHVybiB2b2lkIDA7XG4gIH07XG4gIHJldHVybiBjcmVhdGVNZW1vKCgoKSA9PiB7XG4gICAgY29uc3QgX2MkID0gY3JlYXRlTWVtbygoKSA9PiBwcm9wcy53YWxsZXQuYXBwTmFtZSA9PT0gQVRfV0FMTEVUX0FQUF9OQU1FKTtcbiAgICByZXR1cm4gKCkgPT4gX2MkKCkgPyBjcmVhdGVDb21wb25lbnQoV2FsbGV0SXRlbSwge1xuICAgICAgZ2V0IGljb24oKSB7XG4gICAgICAgIHJldHVybiBwcm9wcy53YWxsZXQuaW1hZ2VVcmw7XG4gICAgICB9LFxuICAgICAgZ2V0IG5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0MihcIndhbGxldEl0ZW0ud2FsbGV0T25cIiwge30sIFwiV2FsbGV0IGluXCIpO1xuICAgICAgfSxcbiAgICAgIHNlY29uZExpbmU6IFwiVGVsZWdyYW1cIixcbiAgICAgIGdldCBiYWRnZVVybCgpIHtcbiAgICAgICAgcmV0dXJuIElNRy5URztcbiAgICAgIH0sXG4gICAgICBvbkNsaWNrOiAoKSA9PiBwcm9wcy5vbkNsaWNrKCksXG4gICAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICAgIHJldHVybiBwcm9wcy5jbGFzcztcbiAgICAgIH1cbiAgICB9KSA6IGNyZWF0ZUNvbXBvbmVudChXYWxsZXRJdGVtLCB7XG4gICAgICBnZXQgaWNvbigpIHtcbiAgICAgICAgcmV0dXJuIHByb3BzLndhbGxldC5pbWFnZVVybDtcbiAgICAgIH0sXG4gICAgICBnZXQgbmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIHByb3BzLndhbGxldC5uYW1lO1xuICAgICAgfSxcbiAgICAgIGdldCBzZWNvbmRMaW5lKCkge1xuICAgICAgICByZXR1cm4gd2FsbGV0c1NlY29uZExpbmUoKTtcbiAgICAgIH0sXG4gICAgICBzZWNvbmRMaW5lQ29sb3JQcmltYXJ5OiBmYWxzZSxcbiAgICAgIG9uQ2xpY2s6ICgpID0+IHByb3BzLm9uQ2xpY2soKSxcbiAgICAgIGdldCBbXCJjbGFzc1wiXSgpIHtcbiAgICAgICAgcmV0dXJuIHByb3BzLmNsYXNzO1xuICAgICAgfVxuICAgIH0pO1xuICB9KSgpKTtcbn07XG5jb25zdCBTY3JvbGxDb250YWluZXJTdHlsZWQgPSBzdHlsZWQuZGl2YFxuICAgIHdpZHRoOiAxMDAlO1xuICAgIG92ZXJmbG93LXk6IGF1dG87XG4gICAgbWF4LWhlaWdodDogJHsocHJvcHMpID0+IHByb3BzLm1heEhlaWdodH07XG5cbiAgICBzY3JvbGxiYXItd2lkdGg6IG5vbmU7XG4gICAgJiY6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG5cbiAgICAmJjo6LXdlYmtpdC1zY3JvbGxiYXItdHJhY2sge1xuICAgICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICB9XG5cbiAgICAmJjo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbmA7XG5jb25zdCBTY3JvbGxEaXZpZGVyID0gc3R5bGVkLmRpdmBcbiAgICBoZWlnaHQ6IDFweDtcbiAgICBtYXJnaW46IDAgLTI0cHg7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSArIDQ4cHgpO1xuICAgIG9wYWNpdHk6IDAuMDg7XG4gICAgYmFja2dyb3VuZDogJHsocHJvcHMpID0+IHByb3BzLmlzU2hvd24gPyBwcm9wcy50aGVtZS5jb2xvcnMuaWNvbi5zZWNvbmRhcnkgOiBcInRyYW5zcGFyZW50XCJ9O1xuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQgMC4xNXMgZWFzZS1pbi1vdXQ7XG5cbiAgICAke21lZGlhKFwibW9iaWxlXCIpfSB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgfVxuYDtcbmNvbnN0IFt3aW5kb3dIZWlnaHQsIHNldFdpbmRvd0hlaWdodF0gPSBjcmVhdGVTaWduYWwoKChfaCA9IGdldFdpbmRvdyQxKCkpID09IG51bGwgPyB2b2lkIDAgOiBfaC5pbm5lckhlaWdodCkgfHwgMCk7XG5pZiAoZ2V0V2luZG93JDEoKSkge1xuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLCAoKSA9PiBzZXRXaW5kb3dIZWlnaHQod2luZG93LmlubmVySGVpZ2h0KSk7XG59XG5jb25zdCBbaXNNb2JpbGUsIHNldElzTW9iaWxlXSA9IGNyZWF0ZVNpZ25hbChpc0RldmljZShcIm1vYmlsZVwiKSk7XG5jb25zdCB1cGRhdGVJc01vYmlsZSA9ICgpID0+IHNldElzTW9iaWxlKGlzRGV2aWNlKFwibW9iaWxlXCIpKTtcbmlmIChnZXRXaW5kb3ckMSgpKSB7XG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwicmVzaXplXCIsICgpID0+IHVwZGF0ZUlzTW9iaWxlKCkpO1xuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwgKCkgPT4gdXBkYXRlSXNNb2JpbGUoKSwgeyBvbmNlOiB0cnVlIH0pO1xufVxuY29uc3QgU2Nyb2xsQ29udGFpbmVyID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IFtzY3JvbGxlZCwgc2V0U2Nyb2xsZWRdID0gY3JlYXRlU2lnbmFsKGZhbHNlKTtcbiAgY29uc3Qgb25TY3JvbGwgPSAoZTIpID0+IHtcbiAgICBzZXRTY3JvbGxlZChlMi50YXJnZXQuc2Nyb2xsVG9wID4gMCk7XG4gIH07XG4gIGNvbnN0IG9mZnNldCA9ICgpID0+IGlzTW9iaWxlKCkgPyAxNTAgOiAyMDA7XG4gIGNvbnN0IG1heEhlaWdodCA9ICgpID0+IHByb3BzLm1heEhlaWdodCAhPT0gdm9pZCAwID8gYCR7cHJvcHMubWF4SGVpZ2h0fXB4YCA6IGAke3dpbmRvd0hlaWdodCgpIC0gb2Zmc2V0KCl9cHhgO1xuICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChTY3JvbGxEaXZpZGVyLCB7XG4gICAgZ2V0IGlzU2hvd24oKSB7XG4gICAgICByZXR1cm4gc2Nyb2xsZWQoKTtcbiAgICB9XG4gIH0pLCBjcmVhdGVDb21wb25lbnQoU2Nyb2xsQ29udGFpbmVyU3R5bGVkLCB7XG4gICAgZ2V0IG1heEhlaWdodCgpIHtcbiAgICAgIHJldHVybiBtYXhIZWlnaHQoKTtcbiAgICB9LFxuICAgIG9uU2Nyb2xsLFxuICAgIGdldCBbXCJjbGFzc1wiXSgpIHtcbiAgICAgIHJldHVybiBwcm9wcy5jbGFzcztcbiAgICB9LFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBwcm9wcy5jaGlsZHJlbjtcbiAgICB9XG4gIH0pXTtcbn07XG5jb25zdCBBU3R5bGVkID0gc3R5bGVkLmFgXG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bnNldDtcbmA7XG5jb25zdCBMaW5rID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IGF0dHJpYnV0ZXMgPSAoKSA9PiBwcm9wcy5ibGFuayA/IHtcbiAgICByZWw6IFwibm9yZWZlcnJlciBub29wZW5lclwiXG4gIH0gOiB7fTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChBU3R5bGVkLCBtZXJnZVByb3BzKHtcbiAgICBnZXQgaHJlZigpIHtcbiAgICAgIHJldHVybiBwcm9wcy5ocmVmO1xuICAgIH0sXG4gICAgZ2V0IHRhcmdldCgpIHtcbiAgICAgIHJldHVybiBwcm9wcy5ibGFuayA/IFwiX2JsYW5rXCIgOiBcIl9zZWxmXCI7XG4gICAgfSxcbiAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2xhc3M7XG4gICAgfVxuICB9LCBhdHRyaWJ1dGVzLCB7XG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIHByb3BzLmNoaWxkcmVuO1xuICAgIH1cbiAgfSkpO1xufTtcbmNvbnN0IFRvbkNvbm5lY3RVaUNvbnRleHQgPSBjcmVhdGVDb250ZXh0KCk7XG5jb25zdCBfdG1wbCQkOCA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHdpZHRoPVwiMjRcIiBoZWlnaHQ9XCIyNFwiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIiBmaWxsPVwibm9uZVwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj48cGF0aCBmaWxsLXJ1bGU9XCJldmVub2RkXCIgY2xpcC1ydWxlPVwiZXZlbm9kZFwiIGQ9XCJNNy43NjIyOCAyLjA5OTk4SDEwLjIzNzhDMTEuMDQ1OCAyLjA5OTk3IDExLjcwNjcgMi4wOTk5NiAxMi4yNDM4IDIuMTQzODRDMTIuNzk5NyAyLjE4OTI2IDEzLjMwMTcgMi4yODYxNCAxMy43NzA2IDIuNTI1MDVDMTQuNTA0NSAyLjg5ODk2IDE1LjEwMTEgMy40OTU1OCAxNS40NzUgNC4yMjk0MUMxNS43MTM5IDQuNjk4MyAxNS44MTA4IDUuMjAwMzggMTUuODU2MiA1Ljc1NjI5QzE1LjkwMDEgNi4yOTMzNyAxNS45MDAxIDYuOTU0MjIgMTUuOTAwMSA3Ljc2MjI3VjguMUgxNi4yMzc3QzE3LjA0NTcgOC4wOTk5OSAxNy43MDY2IDguMDk5OTggMTguMjQzNyA4LjE0Mzg2QzE4Ljc5OTYgOC4xODkyOCAxOS4zMDE3IDguMjg2MTYgMTkuNzcwNSA4LjUyNTA3QzIwLjUwNDQgOC44OTg5OCAyMS4xMDEgOS40OTU2IDIxLjQ3NDkgMTAuMjI5NEMyMS43MTM4IDEwLjY5ODMgMjEuODEwNyAxMS4yMDA0IDIxLjg1NjEgMTEuNzU2M0MyMS45IDEyLjI5MzQgMjEuOSAxMi45NTQyIDIxLjkgMTMuNzYyM1YxNi4yMzc3QzIxLjkgMTcuMDQ1OCAyMS45IDE3LjcwNjYgMjEuODU2MSAxOC4yNDM3QzIxLjgxMDcgMTguNzk5NiAyMS43MTM4IDE5LjMwMTcgMjEuNDc0OSAxOS43NzA2QzIxLjEwMSAyMC41MDQ0IDIwLjUwNDQgMjEuMTAxIDE5Ljc3MDUgMjEuNDc0OUMxOS4zMDE3IDIxLjcxMzggMTguNzk5NiAyMS44MTA3IDE4LjI0MzcgMjEuODU2MUMxNy43MDY2IDIxLjkgMTcuMDQ1OCAyMS45IDE2LjIzNzggMjEuOUgxMy43NjIzQzEyLjk1NDMgMjEuOSAxMi4yOTM0IDIxLjkgMTEuNzU2MyAyMS44NTYxQzExLjIwMDQgMjEuODEwNyAxMC42OTgzIDIxLjcxMzggMTAuMjI5NCAyMS40NzQ5QzkuNDk1NjEgMjEuMTAxIDguODk4OTggMjAuNTA0NCA4LjUyNTA4IDE5Ljc3MDZDOC4yODYxNiAxOS4zMDE3IDguMTg5MjggMTguNzk5NiA4LjE0Mzg2IDE4LjI0MzdDOC4wOTk5OCAxNy43MDY2IDguMDk5OTkgMTcuMDQ1OCA4LjEgMTYuMjM3N1YxNS45SDcuNzYyMjdDNi45NTQyNiAxNS45IDYuMjkzMzUgMTUuOSA1Ljc1NjI5IDE1Ljg1NjFDNS4yMDAzOCAxNS44MTA3IDQuNjk4MyAxNS43MTM4IDQuMjI5NDEgMTUuNDc0OUMzLjQ5NTU4IDE1LjEwMSAyLjg5ODk2IDE0LjUwNDQgMi41MjUwNSAxMy43NzA1QzIuMjg2MTQgMTMuMzAxNyAyLjE4OTI2IDEyLjc5OTYgMi4xNDM4NCAxMi4yNDM3QzIuMDk5OTYgMTEuNzA2NiAyLjA5OTk3IDExLjA0NTggMi4wOTk5OCAxMC4yMzc3VjcuNzYyMjhDMi4wOTk5NyA2Ljk1NDI0IDIuMDk5OTYgNi4yOTMzNiAyLjE0Mzg0IDUuNzU2MjlDMi4xODkyNiA1LjIwMDM4IDIuMjg2MTQgNC42OTgzIDIuNTI1MDUgNC4yMjk0MUMyLjg5ODk2IDMuNDk1NTggMy40OTU1OCAyLjg5ODk2IDQuMjI5NDEgMi41MjUwNUM0LjY5ODMgMi4yODYxNCA1LjIwMDM4IDIuMTg5MjYgNS43NTYyOSAyLjE0Mzg0QzYuMjkzMzYgMi4wOTk5NiA2Ljk1NDI1IDIuMDk5OTcgNy43NjIyOCAyLjA5OTk4Wk04LjEgMTQuMVYxMy43NjIzQzguMDk5OTkgMTIuOTU0MiA4LjA5OTk4IDEyLjI5MzQgOC4xNDM4NiAxMS43NTYzQzguMTg5MjggMTEuMjAwNCA4LjI4NjE2IDEwLjY5ODMgOC41MjUwOCAxMC4yMjk0QzguODk4OTggOS40OTU2IDkuNDk1NjEgOC44OTg5OCAxMC4yMjk0IDguNTI1MDdDMTAuNjk4MyA4LjI4NjE2IDExLjIwMDQgOC4xODkyOCAxMS43NTYzIDguMTQzODZDMTIuMjkzNCA4LjA5OTk4IDEyLjk1NDIgOC4wOTk5OSAxMy43NjIzIDguMUgxNC4xMDAxVjcuNzk5OThDMTQuMTAwMSA2Ljk0NTA1IDE0LjA5OTQgNi4zNTc5OCAxNC4wNjIyIDUuOTAyODdDMTQuMDI1OSA1LjQ1ODI3IDEzLjk1OTMgNS4yMTk0NCAxMy44NzEyIDUuMDQ2NkMxMy42Njk5IDQuNjUxNDYgMTMuMzQ4NiA0LjMzMDIgMTIuOTUzNSA0LjEyODg2QzEyLjc4MDYgNC4wNDA3OSAxMi41NDE4IDMuOTc0MTkgMTIuMDk3MiAzLjkzNzg2QzExLjY0MjEgMy45MDA2OCAxMS4wNTUgMy44OTk5OCAxMC4yMDAxIDMuODk5OThINy43OTk5OEM2Ljk0NTA1IDMuODk5OTggNi4zNTc5OCAzLjkwMDY4IDUuOTAyODcgMy45Mzc4NkM1LjQ1ODI3IDMuOTc0MTkgNS4yMTk0NCA0LjA0MDc5IDUuMDQ2NiA0LjEyODg2QzQuNjUxNDYgNC4zMzAyIDQuMzMwMiA0LjY1MTQ2IDQuMTI4ODYgNS4wNDY2QzQuMDQwNzkgNS4yMTk0NCAzLjk3NDE5IDUuNDU4MjcgMy45Mzc4NiA1LjkwMjg3QzMuOTAwNjggNi4zNTc5OCAzLjg5OTk4IDYuOTQ1MDUgMy44OTk5OCA3Ljc5OTk4VjEwLjJDMy44OTk5OCAxMS4wNTQ5IDMuOTAwNjggMTEuNjQyIDMuOTM3ODYgMTIuMDk3MUMzLjk3NDE5IDEyLjU0MTcgNC4wNDA3OSAxMi43ODA1IDQuMTI4ODYgMTIuOTUzNEM0LjMzMDIgMTMuMzQ4NSA0LjY1MTQ2IDEzLjY2OTggNS4wNDY2IDEzLjg3MTFDNS4yMTk0NCAxMy45NTkyIDUuNDU4MjcgMTQuMDI1OCA1LjkwMjg3IDE0LjA2MjFDNi4zNTc5OCAxNC4wOTkzIDYuOTQ1MDUgMTQuMSA3Ljc5OTk4IDE0LjFIOC4xWk0xMS4wNDY2IDEwLjEyODlDMTEuMjE5NSAxMC4wNDA4IDExLjQ1ODMgOS45NzQyMSAxMS45MDI5IDkuOTM3ODhDMTIuMzU4IDkuOTAwNyAxMi45NDUxIDkuOSAxMy44IDkuOUgxNi4yQzE3LjA1NDkgOS45IDE3LjY0MiA5LjkwMDcgMTguMDk3MSA5LjkzNzg4QzE4LjU0MTcgOS45NzQyMSAxOC43ODA1IDEwLjA0MDggMTguOTUzNCAxMC4xMjg5QzE5LjM0ODUgMTAuMzMwMiAxOS42Njk4IDEwLjY1MTUgMTkuODcxMSAxMS4wNDY2QzE5Ljk1OTIgMTEuMjE5NSAyMC4wMjU4IDExLjQ1ODMgMjAuMDYyMSAxMS45MDI5QzIwLjA5OTMgMTIuMzU4IDIwLjEgMTIuOTQ1MSAyMC4xIDEzLjhWMTYuMkMyMC4xIDE3LjA1NDkgMjAuMDk5MyAxNy42NDIgMjAuMDYyMSAxOC4wOTcxQzIwLjAyNTggMTguNTQxNyAxOS45NTkyIDE4Ljc4MDUgMTkuODcxMSAxOC45NTM0QzE5LjY2OTggMTkuMzQ4NSAxOS4zNDg1IDE5LjY2OTggMTguOTUzNCAxOS44NzExQzE4Ljc4MDUgMTkuOTU5MiAxOC41NDE3IDIwLjAyNTggMTguMDk3MSAyMC4wNjIxQzE3LjY0MiAyMC4wOTkzIDE3LjA1NDkgMjAuMSAxNi4yIDIwLjFIMTMuOEMxMi45NDUxIDIwLjEgMTIuMzU4IDIwLjA5OTMgMTEuOTAyOSAyMC4wNjIxQzExLjQ1ODMgMjAuMDI1OCAxMS4yMTk1IDE5Ljk1OTIgMTEuMDQ2NiAxOS44NzExQzEwLjY1MTUgMTkuNjY5OCAxMC4zMzAyIDE5LjM0ODUgMTAuMTI4OSAxOC45NTM0QzEwLjA0MDggMTguNzgwNSA5Ljk3NDIxIDE4LjU0MTcgOS45Mzc4OCAxOC4wOTcxQzkuOTAwNyAxNy42NDIgOS45IDE3LjA1NDkgOS45IDE2LjJWMTMuOEM5LjkgMTIuOTQ1MSA5LjkwMDcgMTIuMzU4IDkuOTM3ODggMTEuOTAyOUM5Ljk3NDIxIDExLjQ1ODMgMTAuMDQwOCAxMS4yMTk1IDEwLjEyODkgMTEuMDQ2NkMxMC4zMzAyIDEwLjY1MTUgMTAuNjUxNSAxMC4zMzAyIDExLjA0NjYgMTAuMTI4OVpcIj48L3BhdGg+PC9zdmc+YCk7XG5jb25zdCBDb3B5SWNvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGZpbGwgPSAoKSA9PiBwcm9wcy5maWxsIHx8IHRoZW1lLmNvbG9ycy5pY29uLnByaW1hcnk7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkOC5jbG9uZU5vZGUodHJ1ZSksIF9lbCQyID0gX2VsJC5maXJzdENoaWxkO1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoX3AkKSA9PiB7XG4gICAgICBjb25zdCBfdiQgPSBwcm9wcy5jbGFzcywgX3YkMiA9IGZpbGwoKTtcbiAgICAgIF92JCAhPT0gX3AkLl92JCAmJiBzZXRBdHRyaWJ1dGUoX2VsJCwgXCJjbGFzc1wiLCBfcCQuX3YkID0gX3YkKTtcbiAgICAgIF92JDIgIT09IF9wJC5fdiQyICYmIHNldEF0dHJpYnV0ZShfZWwkMiwgXCJmaWxsXCIsIF9wJC5fdiQyID0gX3YkMik7XG4gICAgICByZXR1cm4gX3AkO1xuICAgIH0sIHtcbiAgICAgIF92JDogdm9pZCAwLFxuICAgICAgX3YkMjogdm9pZCAwXG4gICAgfSk7XG4gICAgcmV0dXJuIF9lbCQ7XG4gIH0pKCk7XG59O1xuY29uc3QgX3RtcGwkJDcgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2ZyB3aWR0aD1cIjI0XCIgaGVpZ2h0PVwiMjRcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCIgZmlsbD1cIm5vbmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+PHBhdGggZD1cIk04Ljc2MjQgMy4xMDAwMUM3Ljk1NDM1IDMuMSA3LjI5MzQ5IDMuMDk5OTkgNi43NTY0MiAzLjE0Mzg3QzYuMjAwNSAzLjE4OTI5IDUuNjk4NDIgMy4yODYxNyA1LjIyOTU0IDMuNTI1MDhDNC40OTU3IDMuODk4OTkgMy44OTkwOCA0LjQ5NTYxIDMuNTI1MTcgNS4yMjk0NEMzLjI4NjI2IDUuNjk4MzMgMy4xODkzOCA2LjIwMDQxIDMuMTQzOTYgNi43NTYzMkMzLjEwMDA4IDcuMjkzNCAzLjEwMDA5IDcuOTU0MjQgMy4xMDAxIDguNzYyMjlWMTUuMjM3N0MzLjEwMDA5IDE2LjA0NTggMy4xMDAwOCAxNi43MDY2IDMuMTQzOTYgMTcuMjQzN0MzLjE4OTM4IDE3Ljc5OTYgMy4yODYyNiAxOC4zMDE3IDMuNTI1MTcgMTguNzcwNkMzLjg5OTA4IDE5LjUwNDQgNC40OTU3IDIwLjEwMSA1LjIyOTU0IDIwLjQ3NDlDNS42OTg0MiAyMC43MTM4IDYuMjAwNSAyMC44MTA3IDYuNzU2NDIgMjAuODU2MUM3LjI5MzQ5IDIwLjkgNy45NTQzNCAyMC45IDguNzYyMzkgMjAuOUgxMi4wMDAxQzEyLjQ5NzIgMjAuOSAxMi45MDAxIDIwLjQ5NzEgMTIuOTAwMSAyMEMxMi45MDAxIDE5LjUwMyAxMi40OTcyIDE5LjEgMTIuMDAwMSAxOS4xSDguODAwMUM3Ljk0NTE3IDE5LjEgNy4zNTgxIDE5LjA5OTMgNi45MDI5OSAxOS4wNjIxQzYuNDU4MzkgMTkuMDI1OCA2LjIxOTU2IDE4Ljk1OTIgNi4wNDY3MiAxOC44NzExQzUuNjUxNTggMTguNjY5OCA1LjMzMDMyIDE4LjM0ODUgNS4xMjg5OCAxNy45NTM0QzUuMDQwOTIgMTcuNzgwNSA0Ljk3NDMxIDE3LjU0MTcgNC45Mzc5OCAxNy4wOTcxQzQuOTAwOCAxNi42NDIgNC45MDAxIDE2LjA1NDkgNC45MDAxIDE1LjJWOC44MDAwMUM0LjkwMDEgNy45NDUwOCA0LjkwMDggNy4zNTgwMSA0LjkzNzk4IDYuOTAyOUM0Ljk3NDMxIDYuNDU4MyA1LjA0MDkyIDYuMjE5NDcgNS4xMjg5OCA2LjA0NjYzQzUuMzMwMzIgNS42NTE0OSA1LjY1MTU4IDUuMzMwMjMgNi4wNDY3MiA1LjEyODg5QzYuMjE5NTYgNS4wNDA4MiA2LjQ1ODM5IDQuOTc0MjIgNi45MDI5OSA0LjkzNzg5QzcuMzU4MSA0LjkwMDcxIDcuOTQ1MTcgNC45MDAwMSA4LjgwMDEgNC45MDAwMUgxMi4wMDAxQzEyLjQ5NzIgNC45MDAwMSAxMi45MDAxIDQuNDk3MDYgMTIuOTAwMSA0LjAwMDAxQzEyLjkwMDEgMy41MDI5NSAxMi40OTcyIDMuMTAwMDEgMTIuMDAwMSAzLjEwMDAxSDguNzYyNFpcIj48L3BhdGg+PHBhdGggZD1cIk0xNy42MzY0IDcuMzYzNkMxNy4yODQ5IDcuMDEyMTIgMTYuNzE1MSA3LjAxMjEyIDE2LjM2MzYgNy4zNjM2QzE2LjAxMjEgNy43MTUwNyAxNi4wMTIxIDguMjg0OTIgMTYuMzYzNiA4LjYzNjM5TDE4LjgyNzIgMTEuMUg5LjAwMDAxQzguNTAyOTUgMTEuMSA4LjEwMDAxIDExLjUwMjkgOC4xMDAwMSAxMkM4LjEwMDAxIDEyLjQ5NyA4LjUwMjk1IDEyLjkgOS4wMDAwMSAxMi45SDE4LjgyNzJMMTYuMzYzNiAxNS4zNjM2QzE2LjAxMjEgMTUuNzE1MSAxNi4wMTIxIDE2LjI4NDkgMTYuMzYzNiAxNi42MzY0QzE2LjcxNTEgMTYuOTg3OSAxNy4yODQ5IDE2Ljk4NzkgMTcuNjM2NCAxNi42MzY0TDIxLjYzNjQgMTIuNjM2NEMyMS45ODc5IDEyLjI4NDkgMjEuOTg3OSAxMS43MTUxIDIxLjYzNjQgMTEuMzYzNkwxNy42MzY0IDcuMzYzNlpcIj48L3BhdGg+PC9zdmc+YCk7XG5jb25zdCBEaXNjb25uZWN0SWNvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGZpbGwgPSAoKSA9PiBwcm9wcy5maWxsIHx8IHRoZW1lLmNvbG9ycy5pY29uLnByaW1hcnk7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkNy5jbG9uZU5vZGUodHJ1ZSksIF9lbCQyID0gX2VsJC5maXJzdENoaWxkLCBfZWwkMyA9IF9lbCQyLm5leHRTaWJsaW5nO1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoX3AkKSA9PiB7XG4gICAgICBjb25zdCBfdiQgPSBmaWxsKCksIF92JDIgPSBmaWxsKCk7XG4gICAgICBfdiQgIT09IF9wJC5fdiQgJiYgc2V0QXR0cmlidXRlKF9lbCQyLCBcImZpbGxcIiwgX3AkLl92JCA9IF92JCk7XG4gICAgICBfdiQyICE9PSBfcCQuX3YkMiAmJiBzZXRBdHRyaWJ1dGUoX2VsJDMsIFwiZmlsbFwiLCBfcCQuX3YkMiA9IF92JDIpO1xuICAgICAgcmV0dXJuIF9wJDtcbiAgICB9LCB7XG4gICAgICBfdiQ6IHZvaWQgMCxcbiAgICAgIF92JDI6IHZvaWQgMFxuICAgIH0pO1xuICAgIHJldHVybiBfZWwkO1xuICB9KSgpO1xufTtcbmNvbnN0IGhvdmVyQm9yZGVycyQxID0ge1xuICBtOiBcIjhweFwiLFxuICBzOiBcIjRweFwiLFxuICBub25lOiBcIjBcIlxufTtcbmNvbnN0IGRyb3Bkb3duQm9yZGVycyA9IHtcbiAgbTogXCIxNnB4XCIsXG4gIHM6IFwiOHB4XCIsXG4gIG5vbmU6IFwiMFwiXG59O1xuY29uc3QgQWNjb3VudEJ1dHRvbkRyb3Bkb3duU3R5bGVkID0gc3R5bGVkLmRpdmBcbiAgICB3aWR0aDogMjU2cHg7XG4gICAgYm94LXNoYWRvdzogMCA0cHggMjRweCByZ2JhKDAsIDAsIDAsIDAuMTYpO1xuICAgIGJvcmRlci1yYWRpdXM6ICR7KHByb3BzKSA9PiBkcm9wZG93bkJvcmRlcnNbcHJvcHMudGhlbWUuYm9yZGVyUmFkaXVzXX07XG5cbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmQucHJpbWFyeX1cbiAgICAgICAgICAgXG4gICAgY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dC5wcmltYXJ5fVxuYDtcbmNvbnN0IFVsU3R5bGVkID0gc3R5bGVkLnVsYFxuICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZC5wcmltYXJ5fTtcbiAgICBwYWRkaW5nOiA4cHg7XG5gO1xuY29uc3QgTWVudUJ1dHRvblN0eWxlZCA9IHN0eWxlZC5idXR0b25gXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGdhcDogOHB4O1xuICAgIGhlaWdodDogNDBweDtcbiAgICBwYWRkaW5nLWxlZnQ6IDhweDtcbiAgICB3aWR0aDogMTAwJTtcblxuICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZC5wcmltYXJ5fTtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYm9yZGVyLXJhZGl1czogJHsocHJvcHMpID0+IGhvdmVyQm9yZGVycyQxW3Byb3BzLnRoZW1lLmJvcmRlclJhZGl1c119O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IsIHRyYW5zZm9ybSAwLjFzIGVhc2UtaW4tb3V0O1xuXG4gICAgJjpob3ZlciB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZC5zZWNvbmRhcnl9O1xuICAgIH1cblxuICAgICY6YWN0aXZlIHtcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgwLjk2KTtcbiAgICB9XG5gO1xuY29uc3QgX3RtcGwkJDYgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPGxpPjwvbGk+YCk7XG5jb25zdCBNZW51SXRlbVRleHQgPSAocHJvcHMpID0+IGNyZWF0ZUNvbXBvbmVudChUZXh0LCB7XG4gIGdldCB0cmFuc2xhdGlvbktleSgpIHtcbiAgICByZXR1cm4gcHJvcHMudHJhbnNsYXRpb25LZXk7XG4gIH0sXG4gIGZvbnRTaXplOiBcIjE1cHhcIixcbiAgZm9udFdlaWdodDogXCI1OTBcIixcbiAgZ2V0IGNoaWxkcmVuKCkge1xuICAgIHJldHVybiBwcm9wcy5jaGlsZHJlbjtcbiAgfVxufSk7XG5jb25zdCBBY2NvdW50QnV0dG9uRHJvcGRvd24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdG9uQ29ubmVjdFVpID0gdXNlQ29udGV4dChUb25Db25uZWN0VWlDb250ZXh0KTtcbiAgY29uc3QgW2lzQ29waWVkU2hvd24sIHNldElzQ29waWVkU2hvd25dID0gY3JlYXRlU2lnbmFsKGZhbHNlKTtcbiAgY29uc3Qgb25Db3B5ID0gKCkgPT4gX19hc3luYyh2b2lkIDAsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgY29uc3QgdXNlckZyaWVuZGx5QWRkcmVzcyA9IHRvVXNlckZyaWVuZGx5QWRkcmVzcyh0b25Db25uZWN0VWkuYWNjb3VudC5hZGRyZXNzLCB0b25Db25uZWN0VWkuYWNjb3VudC5jaGFpbiA9PT0gQ0hBSU4uVEVTVE5FVCk7XG4gICAgeWllbGQgY29weVRvQ2xpcGJvYXJkKHVzZXJGcmllbmRseUFkZHJlc3MpO1xuICAgIHNldElzQ29waWVkU2hvd24odHJ1ZSk7XG4gICAgc2V0VGltZW91dCgoKSA9PiBzZXRJc0NvcGllZFNob3duKGZhbHNlKSwgMWUzKTtcbiAgfSk7XG4gIGNvbnN0IG9uRGlzY29ubmVjdCA9ICgpID0+IHtcbiAgICB0b25Db25uZWN0VWkuZGlzY29ubmVjdCgpO1xuICAgIHByb3BzLm9uQ2xvc2UoKTtcbiAgfTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChBY2NvdW50QnV0dG9uRHJvcGRvd25TdHlsZWQsIHtcbiAgICByZWYociQpIHtcbiAgICAgIGNvbnN0IF9yZWYkID0gcHJvcHMucmVmO1xuICAgICAgdHlwZW9mIF9yZWYkID09PSBcImZ1bmN0aW9uXCIgPyBfcmVmJChyJCkgOiBwcm9wcy5yZWYgPSByJDtcbiAgICB9LFxuICAgIGdldCBbXCJjbGFzc1wiXSgpIHtcbiAgICAgIHJldHVybiBwcm9wcy5jbGFzcztcbiAgICB9LFxuICAgIFwiZGF0YS10Yy1kcm9wZG93blwiOiBcInRydWVcIixcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFVsU3R5bGVkLCB7XG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gWygoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBfZWwkID0gX3RtcGwkJDYuY2xvbmVOb2RlKHRydWUpO1xuICAgICAgICAgICAgaW5zZXJ0KF9lbCQsIGNyZWF0ZUNvbXBvbmVudChNZW51QnV0dG9uU3R5bGVkLCB7XG4gICAgICAgICAgICAgIG9uQ2xpY2s6ICgpID0+IG9uQ29weSgpLFxuICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoQ29weUljb24sIHt9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gIWlzQ29waWVkU2hvd24oKTtcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTWVudUl0ZW1UZXh0LCB7XG4gICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwiYnV0dG9uLmRyb3Bkb3duLmNvcHlcIixcbiAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJDb3B5IGFkZHJlc3NcIlxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXNDb3BpZWRTaG93bigpO1xuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChNZW51SXRlbVRleHQsIHtcbiAgICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJidXR0b24uZHJvcGRvd24uY29waWVkXCIsXG4gICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiQWRkcmVzcyBjb3BpZWQhXCJcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICByZXR1cm4gX2VsJDtcbiAgICAgICAgICB9KSgpLCAoKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgX2VsJDIgPSBfdG1wbCQkNi5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgICAgICAgICBpbnNlcnQoX2VsJDIsIGNyZWF0ZUNvbXBvbmVudChNZW51QnV0dG9uU3R5bGVkLCB7XG4gICAgICAgICAgICAgIG9uQ2xpY2s6ICgpID0+IG9uRGlzY29ubmVjdCgpLFxuICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoRGlzY29ubmVjdEljb24sIHt9KSwgY3JlYXRlQ29tcG9uZW50KE1lbnVJdGVtVGV4dCwge1xuICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwiYnV0dG9uLmRyb3Bkb3duLmRpc2Nvbm5lY3RcIixcbiAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIkRpc2Nvbm5lY3RcIlxuICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgcmV0dXJuIF9lbCQyO1xuICAgICAgICAgIH0pKCldO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH0pO1xufTtcbmNvbnN0IGJvcmRlcnMkMyA9IHtcbiAgbTogXCIxNnB4XCIsXG4gIHM6IFwiOHB4XCIsXG4gIG5vbmU6IFwiMFwiXG59O1xuY29uc3QgTm90aWZpY2F0aW9uU3R5bGVkID0gc3R5bGVkLmRpdmBcbiAgICB3aWR0aDogMjU2cHg7XG4gICAgcGFkZGluZzogMTJweCAxNnB4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZ2FwOiA5cHg7XG5cbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmQucHJpbWFyeX07XG4gICAgYm94LXNoYWRvdzogMCA0cHggMjRweCByZ2JhKDAsIDAsIDAsIDAuMTYpO1xuICAgIGJvcmRlci1yYWRpdXM6ICR7KHByb3BzKSA9PiBib3JkZXJzJDNbcHJvcHMudGhlbWUuYm9yZGVyUmFkaXVzXX07XG5gO1xuY29uc3QgTm90aWZpY2F0aW9uQ29udGVudFN0eWxlZCA9IHN0eWxlZC5kaXZgXG4gICAgd2lkdGg6IDE5MnB4O1xuXG4gICAgPiBoMyB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTVweDtcbiAgICB9XG5gO1xuY29uc3QgVGV4dFN0eWxlZCQzID0gc3R5bGVkKFRleHQpYFxuICAgIG1hcmdpbi10b3A6IDRweDtcbiAgICBjb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0LnNlY29uZGFyeX07XG5gO1xuY29uc3QgTm90aWZpY2F0aW9uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IGRhdGFBdHRycyA9IHVzZURhdGFBdHRyaWJ1dGVzKHByb3BzKTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChOb3RpZmljYXRpb25TdHlsZWQsIG1lcmdlUHJvcHMoe1xuICAgIGdldCBbXCJjbGFzc1wiXSgpIHtcbiAgICAgIHJldHVybiBwcm9wcy5jbGFzcztcbiAgICB9LFxuICAgIFwiZGF0YS10Yy1ub3RpZmljYXRpb25cIjogXCJ0cnVlXCJcbiAgfSwgZGF0YUF0dHJzLCB7XG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoTm90aWZpY2F0aW9uQ29udGVudFN0eWxlZCwge1xuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoSDMsIHtcbiAgICAgICAgICAgIGdldCB0cmFuc2xhdGlvbktleSgpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLmhlYWRlci50cmFuc2xhdGlvbktleTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgdHJhbnNsYXRpb25WYWx1ZXMoKSB7XG4gICAgICAgICAgICAgIHJldHVybiBwcm9wcy5oZWFkZXIudHJhbnNsYXRpb25WYWx1ZXM7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gcHJvcHMuY2hpbGRyZW47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLnRleHQ7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRleHRTdHlsZWQkMywge1xuICAgICAgICAgICAgICAgIGdldCB0cmFuc2xhdGlvbktleSgpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9wcy50ZXh0LnRyYW5zbGF0aW9uS2V5O1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0IHRyYW5zbGF0aW9uVmFsdWVzKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLnRleHQudHJhbnNsYXRpb25WYWx1ZXM7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KV07XG4gICAgICAgIH1cbiAgICAgIH0pLCBjcmVhdGVNZW1vKCgpID0+IHByb3BzLmljb24pXTtcbiAgICB9XG4gIH0pKTtcbn07XG5jb25zdCBMb2FkZXJJY29uU3R5bGVkJDIgPSBzdHlsZWQoTG9hZGVySWNvbilgXG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xuYDtcbmNvbnN0IENvbmZpcm1PcGVyYXRpb25Ob3RpZmljYXRpb24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdG9uQ29ubmVjdFVJID0gdXNlQ29udGV4dChUb25Db25uZWN0VWlDb250ZXh0KTtcbiAgY29uc3QgW3QyXSA9IHVzZUkxOG4oKTtcbiAgY29uc3QgbmFtZSA9ICgpID0+IHRvbkNvbm5lY3RVSS53YWxsZXQgJiYgXCJuYW1lXCIgaW4gdG9uQ29ubmVjdFVJLndhbGxldCA/IHRvbkNvbm5lY3RVSS53YWxsZXQubmFtZSA6IHQyKFwiY29tbW9uLnlvdXJXYWxsZXRcIiwge30sIFwiWW91ciB3YWxsZXRcIik7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoTm90aWZpY2F0aW9uLCB7XG4gICAgZ2V0IGhlYWRlcigpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIm5vdGlmaWNhdGlvbnMuY29uZmlybS5oZWFkZXJcIixcbiAgICAgICAgdHJhbnNsYXRpb25WYWx1ZXM6IHtcbiAgICAgICAgICBuYW1lOiBuYW1lKClcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9LFxuICAgIGdldCBbXCJjbGFzc1wiXSgpIHtcbiAgICAgIHJldHVybiBwcm9wcy5jbGFzcztcbiAgICB9LFxuICAgIGdldCBpY29uKCkge1xuICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChMb2FkZXJJY29uU3R5bGVkJDIsIHt9KTtcbiAgICB9LFxuICAgIFwiZGF0YS10Yy1ub3RpZmljYXRpb24tY29uZmlybVwiOiBcInRydWVcIixcbiAgICBjaGlsZHJlbjogXCJDb25maXJtIG9wZXJhdGlvbiBpbiB5b3VyIHdhbGxldFwiXG4gIH0pO1xufTtcbmNvbnN0IEVycm9ySWNvblN0eWxlZCQ0ID0gc3R5bGVkKEVycm9ySWNvbilgXG4gICAgbWFyZ2luLXRvcDogMnB4O1xuYDtcbmNvbnN0IEVycm9yVHJhbnNhY3Rpb25Ob3RpZmljYXRpb24gPSAocHJvcHMpID0+IHtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChOb3RpZmljYXRpb24sIHtcbiAgICBoZWFkZXI6IHtcbiAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIm5vdGlmaWNhdGlvbnMudHJhbnNhY3Rpb25DYW5jZWxlZC5oZWFkZXJcIlxuICAgIH0sXG4gICAgdGV4dDoge1xuICAgICAgdHJhbnNsYXRpb25LZXk6IFwibm90aWZpY2F0aW9ucy50cmFuc2FjdGlvbkNhbmNlbGVkLnRleHRcIlxuICAgIH0sXG4gICAgZ2V0IGljb24oKSB7XG4gICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEVycm9ySWNvblN0eWxlZCQ0LCB7XG4gICAgICAgIHNpemU6IFwieHNcIlxuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2xhc3M7XG4gICAgfSxcbiAgICBcImRhdGEtdGMtbm90aWZpY2F0aW9uLXR4LWNhbmNlbGxlZFwiOiBcInRydWVcIixcbiAgICBjaGlsZHJlbjogXCJUcmFuc2FjdGlvbiBjYW5jZWxsZWRcIlxuICB9KTtcbn07XG5jb25zdCBTdWNjZXNzSWNvblN0eWxlZCA9IHN0eWxlZChTdWNjZXNzSWNvbilgXG4gICAgbWFyZ2luLXRvcDogMnB4O1xuYDtcbmNvbnN0IFN1Y2Nlc3NUcmFuc2FjdGlvbk5vdGlmaWNhdGlvbiA9IChwcm9wcykgPT4ge1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KE5vdGlmaWNhdGlvbiwge1xuICAgIGhlYWRlcjoge1xuICAgICAgdHJhbnNsYXRpb25LZXk6IFwibm90aWZpY2F0aW9ucy50cmFuc2FjdGlvblNlbnQuaGVhZGVyXCJcbiAgICB9LFxuICAgIHRleHQ6IHtcbiAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIm5vdGlmaWNhdGlvbnMudHJhbnNhY3Rpb25TZW50LnRleHRcIlxuICAgIH0sXG4gICAgZ2V0IGljb24oKSB7XG4gICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFN1Y2Nlc3NJY29uU3R5bGVkLCB7fSk7XG4gICAgfSxcbiAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2xhc3M7XG4gICAgfSxcbiAgICBcImRhdGEtdGMtbm90aWZpY2F0aW9uLXR4LXNlbnRcIjogXCJ0cnVlXCIsXG4gICAgY2hpbGRyZW46IFwiVHJhbnNhY3Rpb24gc2VudFwiXG4gIH0pO1xufTtcbmNvbnN0IE5vdGlmaWNhdGlvbkNsYXNzID0gdWBcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLThweCk7XG4gICAgbWFyZ2luLWJvdHRvbTogMTJweDtcbmA7XG5jb25zdCBkZWZhdWx0Q29uZmlnID0ge1xuICB0aW1lb3V0OiA0NTAwXG59O1xuY29uc3QgW2xhdGVzdEFjdGlvbiwgc2V0TGF0ZXN0QWN0aW9uXSA9IGNyZWF0ZVNpZ25hbChudWxsKTtcbmZ1bmN0aW9uIHVzZU9wZW5lZE5vdGlmaWNhdGlvbnMoY29uZmlnKSB7XG4gIGNvbnN0IHsgdGltZW91dCB9ID0gX19zcHJlYWRWYWx1ZXMoX19zcHJlYWRWYWx1ZXMoe30sIGRlZmF1bHRDb25maWcpLCBjb25maWcpO1xuICBjb25zdCBbb3BlbmVkTm90aWZpY2F0aW9ucywgc2V0T3BlbmVkTm90aWZpY2F0aW9uc10gPSBjcmVhdGVTaWduYWwoW10pO1xuICBjb25zdCBbdGltZW91dElkcywgc2V0VGltZW91dElkc10gPSBjcmVhdGVTaWduYWwoW10pO1xuICBjcmVhdGVFZmZlY3QoXG4gICAgb24oYWN0aW9uLCAoYWN0aW9uMikgPT4ge1xuICAgICAgdmFyIF9hMiwgX2IyO1xuICAgICAgaWYgKCFhY3Rpb24yIHx8ICFhY3Rpb24yLnNob3dOb3RpZmljYXRpb24pIHtcbiAgICAgICAgc2V0T3BlbmVkTm90aWZpY2F0aW9ucyhcbiAgICAgICAgICAob3BlbmVkTm90aWZpY2F0aW9uczIpID0+IG9wZW5lZE5vdGlmaWNhdGlvbnMyLmZpbHRlcigobjIpID0+IG4yLmFjdGlvbiAhPT0gXCJjb25maXJtLXRyYW5zYWN0aW9uXCIpXG4gICAgICAgICk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGlmIChsYXRlc3RBY3Rpb24oKSA9PT0gYWN0aW9uMikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBjb25zdCBpc0NvbmZpcm1UcmFuc2FjdGlvbkFjdGlvbiA9ICgoX2EyID0gbGF0ZXN0QWN0aW9uKCkpID09IG51bGwgPyB2b2lkIDAgOiBfYTIubmFtZSkgPT09IFwiY29uZmlybS10cmFuc2FjdGlvblwiICYmIGFjdGlvbjIubmFtZSA9PT0gXCJjb25maXJtLXRyYW5zYWN0aW9uXCI7XG4gICAgICBjb25zdCBpc0NvbmZpcm1TaWduRGF0YUFjdGlvbiA9ICgoX2IyID0gbGF0ZXN0QWN0aW9uKCkpID09IG51bGwgPyB2b2lkIDAgOiBfYjIubmFtZSkgPT09IFwiY29uZmlybS1zaWduLWRhdGFcIiAmJiBhY3Rpb24yLm5hbWUgPT09IFwiY29uZmlybS1zaWduLWRhdGFcIjtcbiAgICAgIGlmIChpc0NvbmZpcm1UcmFuc2FjdGlvbkFjdGlvbiB8fCBpc0NvbmZpcm1TaWduRGF0YUFjdGlvbikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBzZXRMYXRlc3RBY3Rpb24oYWN0aW9uMik7XG4gICAgICBzZXRPcGVuZWROb3RpZmljYXRpb25zKFxuICAgICAgICAob3BlbmVkTm90aWZpY2F0aW9uczIpID0+IG9wZW5lZE5vdGlmaWNhdGlvbnMyLmZpbHRlcihcbiAgICAgICAgICAobjIpID0+IG4yLmFjdGlvbiAhPT0gXCJjb25maXJtLXRyYW5zYWN0aW9uXCIgJiYgbjIuYWN0aW9uICE9PSBcImNvbmZpcm0tc2lnbi1kYXRhXCJcbiAgICAgICAgKVxuICAgICAgKTtcbiAgICAgIGNvbnN0IG5vdGlmaWNhdGlvbiA9IHsgYWN0aW9uOiBhY3Rpb24yLm5hbWUgfTtcbiAgICAgIHNldE9wZW5lZE5vdGlmaWNhdGlvbnMoKG9wZW5lZE5vdGlmaWNhdGlvbnMyKSA9PiBbLi4ub3BlbmVkTm90aWZpY2F0aW9uczIsIG5vdGlmaWNhdGlvbl0pO1xuICAgICAgY29uc3QgdGltZW91dElkID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHNldE9wZW5lZE5vdGlmaWNhdGlvbnMoXG4gICAgICAgICAgKG9wZW5lZE5vdGlmaWNhdGlvbnMyKSA9PiBvcGVuZWROb3RpZmljYXRpb25zMi5maWx0ZXIoKG4yKSA9PiBuMiAhPT0gbm90aWZpY2F0aW9uKVxuICAgICAgICApO1xuICAgICAgICBzZXRUaW1lb3V0SWRzKCh0aW1lb3V0SWRzMikgPT4gdGltZW91dElkczIuZmlsdGVyKChpZCkgPT4gaWQgIT09IHRpbWVvdXRJZCkpO1xuICAgICAgfSwgdGltZW91dCk7XG4gICAgICBzZXRUaW1lb3V0SWRzKCh0aW1lb3V0SWRzMikgPT4gWy4uLnRpbWVvdXRJZHMyLCB0aW1lb3V0SWRdKTtcbiAgICB9KVxuICApO1xuICBvbkNsZWFudXAoKCkgPT4ge1xuICAgIHRpbWVvdXRJZHMoKS5mb3JFYWNoKChpZCkgPT4gY2xlYXJUaW1lb3V0KGlkKSk7XG4gIH0pO1xuICByZXR1cm4gb3BlbmVkTm90aWZpY2F0aW9ucztcbn1cbmNvbnN0IEVycm9ySWNvblN0eWxlZCQzID0gc3R5bGVkKEVycm9ySWNvbilgXG4gICAgbWFyZ2luLXRvcDogMnB4O1xuYDtcbmNvbnN0IEVycm9yU2lnbkRhdGFOb3RpZmljYXRpb24gPSAocHJvcHMpID0+IHtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChOb3RpZmljYXRpb24sIHtcbiAgICBoZWFkZXI6IHtcbiAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIm5vdGlmaWNhdGlvbnMuc2lnbkRhdGFDYW5jZWxlZC5oZWFkZXJcIlxuICAgIH0sXG4gICAgZ2V0IGljb24oKSB7XG4gICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEVycm9ySWNvblN0eWxlZCQzLCB7XG4gICAgICAgIHNpemU6IFwieHNcIlxuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2xhc3M7XG4gICAgfSxcbiAgICBcImRhdGEtdGMtbm90aWZpY2F0aW9uLXNpZ24tZGF0YS1jYW5jZWxsZWRcIjogXCJ0cnVlXCIsXG4gICAgY2hpbGRyZW46IFwiU2lnbiBkYXRhIGNhbmNlbGVkXCJcbiAgfSk7XG59O1xuY29uc3QgU3VjY2Vzc1NpZ25EYXRhTm90aWZpY2F0aW9uID0gKHByb3BzKSA9PiB7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoTm90aWZpY2F0aW9uLCB7XG4gICAgaGVhZGVyOiB7XG4gICAgICB0cmFuc2xhdGlvbktleTogXCJub3RpZmljYXRpb25zLmRhdGFTaWduZWQuaGVhZGVyXCJcbiAgICB9LFxuICAgIGdldCBpY29uKCkge1xuICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChTdWNjZXNzSWNvblN0eWxlZCwge30pO1xuICAgIH0sXG4gICAgZ2V0IFtcImNsYXNzXCJdKCkge1xuICAgICAgcmV0dXJuIHByb3BzLmNsYXNzO1xuICAgIH0sXG4gICAgXCJkYXRhLXRjLW5vdGlmaWNhdGlvbi1kYXRhLXNpZ25lZFwiOiBcInRydWVcIixcbiAgICBjaGlsZHJlbjogXCJEYXRhIHNpZ25lZFwiXG4gIH0pO1xufTtcbmNvbnN0IF90bXBsJCQ1ID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxkaXYgZGF0YS10Yy1saXN0LW5vdGlmaWNhdGlvbnM9XCJ0cnVlXCI+PC9kaXY+YCk7XG5jb25zdCBOb3RpZmljYXRpb25zID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IG9wZW5lZE5vdGlmaWNhdGlvbnMgPSB1c2VPcGVuZWROb3RpZmljYXRpb25zKCk7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkNS5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgaW5zZXJ0KF9lbCQsIGNyZWF0ZUNvbXBvbmVudChUcmFuc2l0aW9uR3JvdXAsIHtcbiAgICAgIG9uQmVmb3JlRW50ZXI6IChlbCkgPT4ge1xuICAgICAgICBhbmltYXRlKGVsLCBbe1xuICAgICAgICAgIG9wYWNpdHk6IDAsXG4gICAgICAgICAgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZVkoMClcIlxuICAgICAgICB9LCB7XG4gICAgICAgICAgb3BhY2l0eTogMSxcbiAgICAgICAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlWSgtOHB4KVwiXG4gICAgICAgIH1dLCB7XG4gICAgICAgICAgZHVyYXRpb246IDIwMFxuICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgICBvbkV4aXQ6IChlbCwgZG9uZSkgPT4ge1xuICAgICAgICBjb25zdCBhMiA9IGFuaW1hdGUoZWwsIFt7XG4gICAgICAgICAgb3BhY2l0eTogMSxcbiAgICAgICAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlWSgtOHB4KVwiXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICAgIHRyYW5zZm9ybTogXCJ0cmFuc2xhdGVZKC0zMHB4KVwiXG4gICAgICAgIH1dLCB7XG4gICAgICAgICAgZHVyYXRpb246IDIwMFxuICAgICAgICB9KTtcbiAgICAgICAgYTIuZmluaXNoZWQudGhlbihkb25lKTtcbiAgICAgIH0sXG4gICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoRm9yLCB7XG4gICAgICAgICAgZ2V0IGVhY2goKSB7XG4gICAgICAgICAgICByZXR1cm4gb3BlbmVkTm90aWZpY2F0aW9ucygpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgY2hpbGRyZW46IChvcGVuZWROb3RpZmljYXRpb24pID0+IGNyZWF0ZUNvbXBvbmVudChTd2l0Y2gsIHtcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoTWF0Y2gsIHtcbiAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBvcGVuZWROb3RpZmljYXRpb24uYWN0aW9uID09PSBcInRyYW5zYWN0aW9uLXNlbnRcIjtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoU3VjY2Vzc1RyYW5zYWN0aW9uTm90aWZpY2F0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgIFwiY2xhc3NcIjogTm90aWZpY2F0aW9uQ2xhc3NcbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIG9wZW5lZE5vdGlmaWNhdGlvbi5hY3Rpb24gPT09IFwidHJhbnNhY3Rpb24tY2FuY2VsZWRcIjtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoRXJyb3JUcmFuc2FjdGlvbk5vdGlmaWNhdGlvbiwge1xuICAgICAgICAgICAgICAgICAgICBcImNsYXNzXCI6IE5vdGlmaWNhdGlvbkNsYXNzXG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoTWF0Y2gsIHtcbiAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBvcGVuZWROb3RpZmljYXRpb24uYWN0aW9uID09PSBcImRhdGEtc2lnbmVkXCI7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFN1Y2Nlc3NTaWduRGF0YU5vdGlmaWNhdGlvbiwge1xuICAgICAgICAgICAgICAgICAgICBcImNsYXNzXCI6IE5vdGlmaWNhdGlvbkNsYXNzXG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoTWF0Y2gsIHtcbiAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBvcGVuZWROb3RpZmljYXRpb24uYWN0aW9uID09PSBcInNpZ24tZGF0YS1jYW5jZWxlZFwiO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChFcnJvclNpZ25EYXRhTm90aWZpY2F0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgIFwiY2xhc3NcIjogTm90aWZpY2F0aW9uQ2xhc3NcbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIG9wZW5lZE5vdGlmaWNhdGlvbi5hY3Rpb24gPT09IFwiY29uZmlybS10cmFuc2FjdGlvblwiIHx8IG9wZW5lZE5vdGlmaWNhdGlvbi5hY3Rpb24gPT09IFwiY29uZmlybS1zaWduLWRhdGFcIjtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQ29uZmlybU9wZXJhdGlvbk5vdGlmaWNhdGlvbiwge1xuICAgICAgICAgICAgICAgICAgICBcImNsYXNzXCI6IE5vdGlmaWNhdGlvbkNsYXNzXG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KSk7XG4gICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IGNsYXNzTmFtZShfZWwkLCBwcm9wcy5jbGFzcykpO1xuICAgIHJldHVybiBfZWwkO1xuICB9KSgpO1xufTtcbmNvbnN0IEFjY291bnRCdXR0b25TdHlsZWQgPSBzdHlsZWQoQnV0dG9uKWBcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmNvbm5lY3RCdXR0b24uYmFja2dyb3VuZH07XG4gICAgY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuY29ubmVjdEJ1dHRvbi5mb3JlZ3JvdW5kfTtcbiAgICBib3gtc2hhZG93OiAkeyhwcm9wcykgPT4gYDAgNHB4IDI0cHggJHtyZ2JhKHByb3BzLnRoZW1lLmNvbG9ycy5jb25zdGFudC5ibGFjaywgMC4xNil9YH07XG4gICAgcGFkZGluZzogOHB4IDE2cHggOHB4IDEycHg7XG5cbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgZ2FwOiA0cHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuYDtcbmNvbnN0IERyb3Bkb3duQnV0dG9uU3R5bGVkID0gc3R5bGVkKEFjY291bnRCdXR0b25TdHlsZWQpYFxuICAgIHBhZGRpbmc6IDEycHggMTZweDtcbiAgICBtaW4td2lkdGg6IDE0OHB4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZC5wcmltYXJ5fTtcbmA7XG5jb25zdCBMb2FkZXJCdXR0b25TdHlsZWQkMSA9IHN0eWxlZChCdXR0b24pYFxuICAgIG1pbi13aWR0aDogMTQ4cHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kLnByaW1hcnl9O1xuICAgIGNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmNvbm5lY3RCdXR0b24uZm9yZWdyb3VuZH07XG4gICAgYm94LXNoYWRvdzogJHsocHJvcHMpID0+IGAwIDRweCAyNHB4ICR7cmdiYShwcm9wcy50aGVtZS5jb2xvcnMuY29uc3RhbnQuYmxhY2ssIDAuMTYpfWB9O1xuXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuYDtcbmNvbnN0IExvYWRlckljb25TdHlsZWQkMSA9IHN0eWxlZChMb2FkZXJJY29uKWBcbiAgICBoZWlnaHQ6IDE4cHg7XG4gICAgd2lkdGg6IDE4cHg7XG5gO1xuY29uc3QgRHJvcGRvd25Db250YWluZXJTdHlsZWQgPSBzdHlsZWQuZGl2YFxuICAgIHdpZHRoOiBmaXQtY29udGVudDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuYDtcbmNvbnN0IERyb3Bkb3duU3R5bGVkID0gc3R5bGVkKEFjY291bnRCdXR0b25Ecm9wZG93bilgXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIG1hcmdpbi10b3A6IDEycHg7XG5gO1xuY29uc3QgTm90aWZpY2F0aW9uc1N0eWxlZCA9IHN0eWxlZChOb3RpZmljYXRpb25zKWBcbiAgICA+IGRpdjpmaXJzdC1jaGlsZCB7XG4gICAgICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gICAgfVxuYDtcbmZ1bmN0aW9uIGdldFNpZGUocGxhY2VtZW50KSB7XG4gIHJldHVybiBwbGFjZW1lbnQuc3BsaXQoXCItXCIpWzBdO1xufVxuZnVuY3Rpb24gZ2V0QWxpZ25tZW50KHBsYWNlbWVudCkge1xuICByZXR1cm4gcGxhY2VtZW50LnNwbGl0KFwiLVwiKVsxXTtcbn1cbmZ1bmN0aW9uIGdldE1haW5BeGlzRnJvbVBsYWNlbWVudChwbGFjZW1lbnQpIHtcbiAgcmV0dXJuIFtcInRvcFwiLCBcImJvdHRvbVwiXS5pbmNsdWRlcyhnZXRTaWRlKHBsYWNlbWVudCkpID8gXCJ4XCIgOiBcInlcIjtcbn1cbmZ1bmN0aW9uIGdldExlbmd0aEZyb21BeGlzKGF4aXMpIHtcbiAgcmV0dXJuIGF4aXMgPT09IFwieVwiID8gXCJoZWlnaHRcIiA6IFwid2lkdGhcIjtcbn1cbmZ1bmN0aW9uIGNvbXB1dGVDb29yZHNGcm9tUGxhY2VtZW50KF9yZWYsIHBsYWNlbWVudCwgcnRsKSB7XG4gIGxldCB7XG4gICAgcmVmZXJlbmNlLFxuICAgIGZsb2F0aW5nXG4gIH0gPSBfcmVmO1xuICBjb25zdCBjb21tb25YID0gcmVmZXJlbmNlLnggKyByZWZlcmVuY2Uud2lkdGggLyAyIC0gZmxvYXRpbmcud2lkdGggLyAyO1xuICBjb25zdCBjb21tb25ZID0gcmVmZXJlbmNlLnkgKyByZWZlcmVuY2UuaGVpZ2h0IC8gMiAtIGZsb2F0aW5nLmhlaWdodCAvIDI7XG4gIGNvbnN0IG1haW5BeGlzID0gZ2V0TWFpbkF4aXNGcm9tUGxhY2VtZW50KHBsYWNlbWVudCk7XG4gIGNvbnN0IGxlbmd0aCA9IGdldExlbmd0aEZyb21BeGlzKG1haW5BeGlzKTtcbiAgY29uc3QgY29tbW9uQWxpZ24gPSByZWZlcmVuY2VbbGVuZ3RoXSAvIDIgLSBmbG9hdGluZ1tsZW5ndGhdIC8gMjtcbiAgY29uc3Qgc2lkZSA9IGdldFNpZGUocGxhY2VtZW50KTtcbiAgY29uc3QgaXNWZXJ0aWNhbCA9IG1haW5BeGlzID09PSBcInhcIjtcbiAgbGV0IGNvb3JkcztcbiAgc3dpdGNoIChzaWRlKSB7XG4gICAgY2FzZSBcInRvcFwiOlxuICAgICAgY29vcmRzID0ge1xuICAgICAgICB4OiBjb21tb25YLFxuICAgICAgICB5OiByZWZlcmVuY2UueSAtIGZsb2F0aW5nLmhlaWdodFxuICAgICAgfTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgXCJib3R0b21cIjpcbiAgICAgIGNvb3JkcyA9IHtcbiAgICAgICAgeDogY29tbW9uWCxcbiAgICAgICAgeTogcmVmZXJlbmNlLnkgKyByZWZlcmVuY2UuaGVpZ2h0XG4gICAgICB9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBcInJpZ2h0XCI6XG4gICAgICBjb29yZHMgPSB7XG4gICAgICAgIHg6IHJlZmVyZW5jZS54ICsgcmVmZXJlbmNlLndpZHRoLFxuICAgICAgICB5OiBjb21tb25ZXG4gICAgICB9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBcImxlZnRcIjpcbiAgICAgIGNvb3JkcyA9IHtcbiAgICAgICAgeDogcmVmZXJlbmNlLnggLSBmbG9hdGluZy53aWR0aCxcbiAgICAgICAgeTogY29tbW9uWVxuICAgICAgfTtcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICBjb29yZHMgPSB7XG4gICAgICAgIHg6IHJlZmVyZW5jZS54LFxuICAgICAgICB5OiByZWZlcmVuY2UueVxuICAgICAgfTtcbiAgfVxuICBzd2l0Y2ggKGdldEFsaWdubWVudChwbGFjZW1lbnQpKSB7XG4gICAgY2FzZSBcInN0YXJ0XCI6XG4gICAgICBjb29yZHNbbWFpbkF4aXNdIC09IGNvbW1vbkFsaWduICogKHJ0bCAmJiBpc1ZlcnRpY2FsID8gLTEgOiAxKTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgXCJlbmRcIjpcbiAgICAgIGNvb3Jkc1ttYWluQXhpc10gKz0gY29tbW9uQWxpZ24gKiAocnRsICYmIGlzVmVydGljYWwgPyAtMSA6IDEpO1xuICAgICAgYnJlYWs7XG4gIH1cbiAgcmV0dXJuIGNvb3Jkcztcbn1cbmNvbnN0IGNvbXB1dGVQb3NpdGlvbiQxID0gKHJlZmVyZW5jZSwgZmxvYXRpbmcsIGNvbmZpZykgPT4gX19hc3luYyh2b2lkIDAsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gIGNvbnN0IHtcbiAgICBwbGFjZW1lbnQgPSBcImJvdHRvbVwiLFxuICAgIHN0cmF0ZWd5ID0gXCJhYnNvbHV0ZVwiLFxuICAgIG1pZGRsZXdhcmUgPSBbXSxcbiAgICBwbGF0Zm9ybTogcGxhdGZvcm0yXG4gIH0gPSBjb25maWc7XG4gIGNvbnN0IHZhbGlkTWlkZGxld2FyZSA9IG1pZGRsZXdhcmUuZmlsdGVyKEJvb2xlYW4pO1xuICBjb25zdCBydGwgPSB5aWVsZCBwbGF0Zm9ybTIuaXNSVEwgPT0gbnVsbCA/IHZvaWQgMCA6IHBsYXRmb3JtMi5pc1JUTChmbG9hdGluZyk7XG4gIGlmICh7fS5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICBpZiAocGxhdGZvcm0yID09IG51bGwpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoW1wiRmxvYXRpbmcgVUk6IGBwbGF0Zm9ybWAgcHJvcGVydHkgd2FzIG5vdCBwYXNzZWQgdG8gY29uZmlnLiBJZiB5b3VcIiwgXCJ3YW50IHRvIHVzZSBGbG9hdGluZyBVSSBvbiB0aGUgd2ViLCBpbnN0YWxsIEBmbG9hdGluZy11aS9kb21cIiwgXCJpbnN0ZWFkIG9mIHRoZSAvY29yZSBwYWNrYWdlLiBPdGhlcndpc2UsIHlvdSBjYW4gY3JlYXRlIHlvdXIgb3duXCIsIFwiYHBsYXRmb3JtYDogaHR0cHM6Ly9mbG9hdGluZy11aS5jb20vZG9jcy9wbGF0Zm9ybVwiXS5qb2luKFwiIFwiKSk7XG4gICAgfVxuICAgIGlmICh2YWxpZE1pZGRsZXdhcmUuZmlsdGVyKChfcmVmKSA9PiB7XG4gICAgICBsZXQge1xuICAgICAgICBuYW1lXG4gICAgICB9ID0gX3JlZjtcbiAgICAgIHJldHVybiBuYW1lID09PSBcImF1dG9QbGFjZW1lbnRcIiB8fCBuYW1lID09PSBcImZsaXBcIjtcbiAgICB9KS5sZW5ndGggPiAxKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoW1wiRmxvYXRpbmcgVUk6IGR1cGxpY2F0ZSBgZmxpcGAgYW5kL29yIGBhdXRvUGxhY2VtZW50YCBtaWRkbGV3YXJlXCIsIFwiZGV0ZWN0ZWQuIFRoaXMgd2lsbCBsZWFkIHRvIGFuIGluZmluaXRlIGxvb3AuIEVuc3VyZSBvbmx5IG9uZSBvZlwiLCBcImVpdGhlciBoYXMgYmVlbiBwYXNzZWQgdG8gdGhlIGBtaWRkbGV3YXJlYCBhcnJheS5cIl0uam9pbihcIiBcIikpO1xuICAgIH1cbiAgICBpZiAoIXJlZmVyZW5jZSB8fCAhZmxvYXRpbmcpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoW1wiRmxvYXRpbmcgVUk6IFRoZSByZWZlcmVuY2UgYW5kL29yIGZsb2F0aW5nIGVsZW1lbnQgd2FzIG5vdCBkZWZpbmVkXCIsIFwid2hlbiBgY29tcHV0ZVBvc2l0aW9uKClgIHdhcyBjYWxsZWQuIEVuc3VyZSB0aGF0IGJvdGggZWxlbWVudHMgaGF2ZVwiLCBcImJlZW4gY3JlYXRlZCBhbmQgY2FuIGJlIG1lYXN1cmVkLlwiXS5qb2luKFwiIFwiKSk7XG4gICAgfVxuICB9XG4gIGxldCByZWN0cyA9IHlpZWxkIHBsYXRmb3JtMi5nZXRFbGVtZW50UmVjdHMoe1xuICAgIHJlZmVyZW5jZSxcbiAgICBmbG9hdGluZyxcbiAgICBzdHJhdGVneVxuICB9KTtcbiAgbGV0IHtcbiAgICB4LFxuICAgIHlcbiAgfSA9IGNvbXB1dGVDb29yZHNGcm9tUGxhY2VtZW50KHJlY3RzLCBwbGFjZW1lbnQsIHJ0bCk7XG4gIGxldCBzdGF0ZWZ1bFBsYWNlbWVudCA9IHBsYWNlbWVudDtcbiAgbGV0IG1pZGRsZXdhcmVEYXRhID0ge307XG4gIGxldCByZXNldENvdW50ID0gMDtcbiAgZm9yIChsZXQgaTIgPSAwOyBpMiA8IHZhbGlkTWlkZGxld2FyZS5sZW5ndGg7IGkyKyspIHtcbiAgICBjb25zdCB7XG4gICAgICBuYW1lLFxuICAgICAgZm5cbiAgICB9ID0gdmFsaWRNaWRkbGV3YXJlW2kyXTtcbiAgICBjb25zdCB7XG4gICAgICB4OiBuZXh0WCxcbiAgICAgIHk6IG5leHRZLFxuICAgICAgZGF0YSxcbiAgICAgIHJlc2V0XG4gICAgfSA9IHlpZWxkIGZuKHtcbiAgICAgIHgsXG4gICAgICB5LFxuICAgICAgaW5pdGlhbFBsYWNlbWVudDogcGxhY2VtZW50LFxuICAgICAgcGxhY2VtZW50OiBzdGF0ZWZ1bFBsYWNlbWVudCxcbiAgICAgIHN0cmF0ZWd5LFxuICAgICAgbWlkZGxld2FyZURhdGEsXG4gICAgICByZWN0cyxcbiAgICAgIHBsYXRmb3JtOiBwbGF0Zm9ybTIsXG4gICAgICBlbGVtZW50czoge1xuICAgICAgICByZWZlcmVuY2UsXG4gICAgICAgIGZsb2F0aW5nXG4gICAgICB9XG4gICAgfSk7XG4gICAgeCA9IG5leHRYICE9IG51bGwgPyBuZXh0WCA6IHg7XG4gICAgeSA9IG5leHRZICE9IG51bGwgPyBuZXh0WSA6IHk7XG4gICAgbWlkZGxld2FyZURhdGEgPSBfX3NwcmVhZFByb3BzKF9fc3ByZWFkVmFsdWVzKHt9LCBtaWRkbGV3YXJlRGF0YSksIHtcbiAgICAgIFtuYW1lXTogX19zcHJlYWRWYWx1ZXMoX19zcHJlYWRWYWx1ZXMoe30sIG1pZGRsZXdhcmVEYXRhW25hbWVdKSwgZGF0YSlcbiAgICB9KTtcbiAgICBpZiAoe30uTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICBpZiAocmVzZXRDb3VudCA+IDUwKSB7XG4gICAgICAgIGNvbnNvbGUud2FybihbXCJGbG9hdGluZyBVSTogVGhlIG1pZGRsZXdhcmUgbGlmZWN5Y2xlIGFwcGVhcnMgdG8gYmUgcnVubmluZyBpbiBhblwiLCBcImluZmluaXRlIGxvb3AuIFRoaXMgaXMgdXN1YWxseSBjYXVzZWQgYnkgYSBgcmVzZXRgIGNvbnRpbnVhbGx5XCIsIFwiYmVpbmcgcmV0dXJuZWQgd2l0aG91dCBhIGJyZWFrIGNvbmRpdGlvbi5cIl0uam9pbihcIiBcIikpO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAocmVzZXQgJiYgcmVzZXRDb3VudCA8PSA1MCkge1xuICAgICAgcmVzZXRDb3VudCsrO1xuICAgICAgaWYgKHR5cGVvZiByZXNldCA9PT0gXCJvYmplY3RcIikge1xuICAgICAgICBpZiAocmVzZXQucGxhY2VtZW50KSB7XG4gICAgICAgICAgc3RhdGVmdWxQbGFjZW1lbnQgPSByZXNldC5wbGFjZW1lbnQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJlc2V0LnJlY3RzKSB7XG4gICAgICAgICAgcmVjdHMgPSByZXNldC5yZWN0cyA9PT0gdHJ1ZSA/IHlpZWxkIHBsYXRmb3JtMi5nZXRFbGVtZW50UmVjdHMoe1xuICAgICAgICAgICAgcmVmZXJlbmNlLFxuICAgICAgICAgICAgZmxvYXRpbmcsXG4gICAgICAgICAgICBzdHJhdGVneVxuICAgICAgICAgIH0pIDogcmVzZXQucmVjdHM7XG4gICAgICAgIH1cbiAgICAgICAgKHtcbiAgICAgICAgICB4LFxuICAgICAgICAgIHlcbiAgICAgICAgfSA9IGNvbXB1dGVDb29yZHNGcm9tUGxhY2VtZW50KHJlY3RzLCBzdGF0ZWZ1bFBsYWNlbWVudCwgcnRsKSk7XG4gICAgICB9XG4gICAgICBpMiA9IC0xO1xuICAgICAgY29udGludWU7XG4gICAgfVxuICB9XG4gIHJldHVybiB7XG4gICAgeCxcbiAgICB5LFxuICAgIHBsYWNlbWVudDogc3RhdGVmdWxQbGFjZW1lbnQsXG4gICAgc3RyYXRlZ3ksXG4gICAgbWlkZGxld2FyZURhdGFcbiAgfTtcbn0pO1xuZnVuY3Rpb24gcmVjdFRvQ2xpZW50UmVjdChyZWN0KSB7XG4gIHJldHVybiBfX3NwcmVhZFByb3BzKF9fc3ByZWFkVmFsdWVzKHt9LCByZWN0KSwge1xuICAgIHRvcDogcmVjdC55LFxuICAgIGxlZnQ6IHJlY3QueCxcbiAgICByaWdodDogcmVjdC54ICsgcmVjdC53aWR0aCxcbiAgICBib3R0b206IHJlY3QueSArIHJlY3QuaGVpZ2h0XG4gIH0pO1xufVxuZnVuY3Rpb24gZ2V0V2luZG93KG5vZGUpIHtcbiAgdmFyIF9ub2RlJG93bmVyRG9jdW1lbnQ7XG4gIHJldHVybiAoKF9ub2RlJG93bmVyRG9jdW1lbnQgPSBub2RlLm93bmVyRG9jdW1lbnQpID09IG51bGwgPyB2b2lkIDAgOiBfbm9kZSRvd25lckRvY3VtZW50LmRlZmF1bHRWaWV3KSB8fCB3aW5kb3c7XG59XG5mdW5jdGlvbiBnZXRDb21wdXRlZFN0eWxlJDEoZWxlbWVudCkge1xuICByZXR1cm4gZ2V0V2luZG93KGVsZW1lbnQpLmdldENvbXB1dGVkU3R5bGUoZWxlbWVudCk7XG59XG5mdW5jdGlvbiBnZXROb2RlTmFtZShub2RlKSB7XG4gIHJldHVybiBpc05vZGUobm9kZSkgPyAobm9kZS5ub2RlTmFtZSB8fCBcIlwiKS50b0xvd2VyQ2FzZSgpIDogXCJcIjtcbn1cbmxldCB1YVN0cmluZztcbmZ1bmN0aW9uIGdldFVBU3RyaW5nKCkge1xuICBpZiAodWFTdHJpbmcpIHtcbiAgICByZXR1cm4gdWFTdHJpbmc7XG4gIH1cbiAgY29uc3QgdWFEYXRhID0gbmF2aWdhdG9yLnVzZXJBZ2VudERhdGE7XG4gIGlmICh1YURhdGEgJiYgQXJyYXkuaXNBcnJheSh1YURhdGEuYnJhbmRzKSkge1xuICAgIHVhU3RyaW5nID0gdWFEYXRhLmJyYW5kcy5tYXAoKGl0ZW0pID0+IGl0ZW0uYnJhbmQgKyBcIi9cIiArIGl0ZW0udmVyc2lvbikuam9pbihcIiBcIik7XG4gICAgcmV0dXJuIHVhU3RyaW5nO1xuICB9XG4gIHJldHVybiBuYXZpZ2F0b3IudXNlckFnZW50O1xufVxuZnVuY3Rpb24gaXNIVE1MRWxlbWVudCh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBnZXRXaW5kb3codmFsdWUpLkhUTUxFbGVtZW50O1xufVxuZnVuY3Rpb24gaXNFbGVtZW50KHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIGdldFdpbmRvdyh2YWx1ZSkuRWxlbWVudDtcbn1cbmZ1bmN0aW9uIGlzTm9kZSh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBnZXRXaW5kb3codmFsdWUpLk5vZGU7XG59XG5mdW5jdGlvbiBpc1NoYWRvd1Jvb3Qobm9kZSkge1xuICBpZiAodHlwZW9mIFNoYWRvd1Jvb3QgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgY29uc3QgT3duRWxlbWVudCA9IGdldFdpbmRvdyhub2RlKS5TaGFkb3dSb290O1xuICByZXR1cm4gbm9kZSBpbnN0YW5jZW9mIE93bkVsZW1lbnQgfHwgbm9kZSBpbnN0YW5jZW9mIFNoYWRvd1Jvb3Q7XG59XG5mdW5jdGlvbiBpc092ZXJmbG93RWxlbWVudChlbGVtZW50KSB7XG4gIGNvbnN0IHtcbiAgICBvdmVyZmxvdyxcbiAgICBvdmVyZmxvd1gsXG4gICAgb3ZlcmZsb3dZLFxuICAgIGRpc3BsYXlcbiAgfSA9IGdldENvbXB1dGVkU3R5bGUkMShlbGVtZW50KTtcbiAgcmV0dXJuIC9hdXRvfHNjcm9sbHxvdmVybGF5fGhpZGRlbi8udGVzdChvdmVyZmxvdyArIG92ZXJmbG93WSArIG92ZXJmbG93WCkgJiYgIVtcImlubGluZVwiLCBcImNvbnRlbnRzXCJdLmluY2x1ZGVzKGRpc3BsYXkpO1xufVxuZnVuY3Rpb24gaXNUYWJsZUVsZW1lbnQoZWxlbWVudCkge1xuICByZXR1cm4gW1widGFibGVcIiwgXCJ0ZFwiLCBcInRoXCJdLmluY2x1ZGVzKGdldE5vZGVOYW1lKGVsZW1lbnQpKTtcbn1cbmZ1bmN0aW9uIGlzQ29udGFpbmluZ0Jsb2NrKGVsZW1lbnQpIHtcbiAgY29uc3QgaXNGaXJlZm94ID0gL2ZpcmVmb3gvaS50ZXN0KGdldFVBU3RyaW5nKCkpO1xuICBjb25zdCBjc3MgPSBnZXRDb21wdXRlZFN0eWxlJDEoZWxlbWVudCk7XG4gIGNvbnN0IGJhY2tkcm9wRmlsdGVyID0gY3NzLmJhY2tkcm9wRmlsdGVyIHx8IGNzcy5XZWJraXRCYWNrZHJvcEZpbHRlcjtcbiAgcmV0dXJuIGNzcy50cmFuc2Zvcm0gIT09IFwibm9uZVwiIHx8IGNzcy5wZXJzcGVjdGl2ZSAhPT0gXCJub25lXCIgfHwgKGJhY2tkcm9wRmlsdGVyID8gYmFja2Ryb3BGaWx0ZXIgIT09IFwibm9uZVwiIDogZmFsc2UpIHx8IGlzRmlyZWZveCAmJiBjc3Mud2lsbENoYW5nZSA9PT0gXCJmaWx0ZXJcIiB8fCBpc0ZpcmVmb3ggJiYgKGNzcy5maWx0ZXIgPyBjc3MuZmlsdGVyICE9PSBcIm5vbmVcIiA6IGZhbHNlKSB8fCBbXCJ0cmFuc2Zvcm1cIiwgXCJwZXJzcGVjdGl2ZVwiXS5zb21lKCh2YWx1ZSkgPT4gY3NzLndpbGxDaGFuZ2UuaW5jbHVkZXModmFsdWUpKSB8fCBbXCJwYWludFwiLCBcImxheW91dFwiLCBcInN0cmljdFwiLCBcImNvbnRlbnRcIl0uc29tZShcbiAgICAodmFsdWUpID0+IHtcbiAgICAgIGNvbnN0IGNvbnRhaW4gPSBjc3MuY29udGFpbjtcbiAgICAgIHJldHVybiBjb250YWluICE9IG51bGwgPyBjb250YWluLmluY2x1ZGVzKHZhbHVlKSA6IGZhbHNlO1xuICAgIH1cbiAgKTtcbn1cbmZ1bmN0aW9uIGlzTGF5b3V0Vmlld3BvcnQoKSB7XG4gIHJldHVybiAhL14oKD8hY2hyb21lfGFuZHJvaWQpLikqc2FmYXJpL2kudGVzdChnZXRVQVN0cmluZygpKTtcbn1cbmZ1bmN0aW9uIGlzTGFzdFRyYXZlcnNhYmxlTm9kZShub2RlKSB7XG4gIHJldHVybiBbXCJodG1sXCIsIFwiYm9keVwiLCBcIiNkb2N1bWVudFwiXS5pbmNsdWRlcyhnZXROb2RlTmFtZShub2RlKSk7XG59XG5jb25zdCBtaW4gPSBNYXRoLm1pbjtcbmNvbnN0IG1heCA9IE1hdGgubWF4O1xuY29uc3Qgcm91bmQgPSBNYXRoLnJvdW5kO1xuY29uc3QgRkFMTEJBQ0tfU0NBTEUgPSB7XG4gIHg6IDEsXG4gIHk6IDFcbn07XG5mdW5jdGlvbiBnZXRTY2FsZShlbGVtZW50KSB7XG4gIGNvbnN0IGRvbUVsZW1lbnQgPSAhaXNFbGVtZW50KGVsZW1lbnQpICYmIGVsZW1lbnQuY29udGV4dEVsZW1lbnQgPyBlbGVtZW50LmNvbnRleHRFbGVtZW50IDogaXNFbGVtZW50KGVsZW1lbnQpID8gZWxlbWVudCA6IG51bGw7XG4gIGlmICghZG9tRWxlbWVudCkge1xuICAgIHJldHVybiBGQUxMQkFDS19TQ0FMRTtcbiAgfVxuICBjb25zdCByZWN0ID0gZG9tRWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgY29uc3QgY3NzID0gZ2V0Q29tcHV0ZWRTdHlsZSQxKGRvbUVsZW1lbnQpO1xuICBpZiAoY3NzLmJveFNpemluZyAhPT0gXCJib3JkZXItYm94XCIpIHtcbiAgICBpZiAoIWlzSFRNTEVsZW1lbnQoZG9tRWxlbWVudCkpIHtcbiAgICAgIHJldHVybiBGQUxMQkFDS19TQ0FMRTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgIHg6IGRvbUVsZW1lbnQub2Zmc2V0V2lkdGggPiAwID8gcm91bmQocmVjdC53aWR0aCkgLyBkb21FbGVtZW50Lm9mZnNldFdpZHRoIHx8IDEgOiAxLFxuICAgICAgeTogZG9tRWxlbWVudC5vZmZzZXRIZWlnaHQgPiAwID8gcm91bmQocmVjdC5oZWlnaHQpIC8gZG9tRWxlbWVudC5vZmZzZXRIZWlnaHQgfHwgMSA6IDFcbiAgICB9O1xuICB9XG4gIGxldCB4ID0gcmVjdC53aWR0aCAvIHBhcnNlRmxvYXQoY3NzLndpZHRoKTtcbiAgbGV0IHkgPSByZWN0LmhlaWdodCAvIHBhcnNlRmxvYXQoY3NzLmhlaWdodCk7XG4gIGlmICgheCB8fCAhTnVtYmVyLmlzRmluaXRlKHgpKSB7XG4gICAgeCA9IDE7XG4gIH1cbiAgaWYgKCF5IHx8ICFOdW1iZXIuaXNGaW5pdGUoeSkpIHtcbiAgICB5ID0gMTtcbiAgfVxuICByZXR1cm4ge1xuICAgIHgsXG4gICAgeVxuICB9O1xufVxuZnVuY3Rpb24gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KGVsZW1lbnQsIGluY2x1ZGVTY2FsZSwgaXNGaXhlZFN0cmF0ZWd5LCBvZmZzZXRQYXJlbnQpIHtcbiAgdmFyIF93aW4kdmlzdWFsVmlld3BvcnQkbywgX3dpbiR2aXN1YWxWaWV3cG9ydCwgX3dpbiR2aXN1YWxWaWV3cG9ydCRvMiwgX3dpbiR2aXN1YWxWaWV3cG9ydDI7XG4gIGlmIChpbmNsdWRlU2NhbGUgPT09IHZvaWQgMCkge1xuICAgIGluY2x1ZGVTY2FsZSA9IGZhbHNlO1xuICB9XG4gIGlmIChpc0ZpeGVkU3RyYXRlZ3kgPT09IHZvaWQgMCkge1xuICAgIGlzRml4ZWRTdHJhdGVneSA9IGZhbHNlO1xuICB9XG4gIGNvbnN0IGNsaWVudFJlY3QgPSBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICBsZXQgc2NhbGUgPSBGQUxMQkFDS19TQ0FMRTtcbiAgaWYgKGluY2x1ZGVTY2FsZSkge1xuICAgIGlmIChvZmZzZXRQYXJlbnQpIHtcbiAgICAgIGlmIChpc0VsZW1lbnQob2Zmc2V0UGFyZW50KSkge1xuICAgICAgICBzY2FsZSA9IGdldFNjYWxlKG9mZnNldFBhcmVudCk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHNjYWxlID0gZ2V0U2NhbGUoZWxlbWVudCk7XG4gICAgfVxuICB9XG4gIGNvbnN0IHdpbiA9IGlzRWxlbWVudChlbGVtZW50KSA/IGdldFdpbmRvdyhlbGVtZW50KSA6IHdpbmRvdztcbiAgY29uc3QgYWRkVmlzdWFsT2Zmc2V0cyA9ICFpc0xheW91dFZpZXdwb3J0KCkgJiYgaXNGaXhlZFN0cmF0ZWd5O1xuICBjb25zdCB4ID0gKGNsaWVudFJlY3QubGVmdCArIChhZGRWaXN1YWxPZmZzZXRzID8gKF93aW4kdmlzdWFsVmlld3BvcnQkbyA9IChfd2luJHZpc3VhbFZpZXdwb3J0ID0gd2luLnZpc3VhbFZpZXdwb3J0KSA9PSBudWxsID8gdm9pZCAwIDogX3dpbiR2aXN1YWxWaWV3cG9ydC5vZmZzZXRMZWZ0KSAhPSBudWxsID8gX3dpbiR2aXN1YWxWaWV3cG9ydCRvIDogMCA6IDApKSAvIHNjYWxlLng7XG4gIGNvbnN0IHkgPSAoY2xpZW50UmVjdC50b3AgKyAoYWRkVmlzdWFsT2Zmc2V0cyA/IChfd2luJHZpc3VhbFZpZXdwb3J0JG8yID0gKF93aW4kdmlzdWFsVmlld3BvcnQyID0gd2luLnZpc3VhbFZpZXdwb3J0KSA9PSBudWxsID8gdm9pZCAwIDogX3dpbiR2aXN1YWxWaWV3cG9ydDIub2Zmc2V0VG9wKSAhPSBudWxsID8gX3dpbiR2aXN1YWxWaWV3cG9ydCRvMiA6IDAgOiAwKSkgLyBzY2FsZS55O1xuICBjb25zdCB3aWR0aCA9IGNsaWVudFJlY3Qud2lkdGggLyBzY2FsZS54O1xuICBjb25zdCBoZWlnaHQgPSBjbGllbnRSZWN0LmhlaWdodCAvIHNjYWxlLnk7XG4gIHJldHVybiB7XG4gICAgd2lkdGgsXG4gICAgaGVpZ2h0LFxuICAgIHRvcDogeSxcbiAgICByaWdodDogeCArIHdpZHRoLFxuICAgIGJvdHRvbTogeSArIGhlaWdodCxcbiAgICBsZWZ0OiB4LFxuICAgIHgsXG4gICAgeVxuICB9O1xufVxuZnVuY3Rpb24gZ2V0RG9jdW1lbnRFbGVtZW50KG5vZGUpIHtcbiAgcmV0dXJuICgoaXNOb2RlKG5vZGUpID8gbm9kZS5vd25lckRvY3VtZW50IDogbm9kZS5kb2N1bWVudCkgfHwgd2luZG93LmRvY3VtZW50KS5kb2N1bWVudEVsZW1lbnQ7XG59XG5mdW5jdGlvbiBnZXROb2RlU2Nyb2xsKGVsZW1lbnQpIHtcbiAgaWYgKGlzRWxlbWVudChlbGVtZW50KSkge1xuICAgIHJldHVybiB7XG4gICAgICBzY3JvbGxMZWZ0OiBlbGVtZW50LnNjcm9sbExlZnQsXG4gICAgICBzY3JvbGxUb3A6IGVsZW1lbnQuc2Nyb2xsVG9wXG4gICAgfTtcbiAgfVxuICByZXR1cm4ge1xuICAgIHNjcm9sbExlZnQ6IGVsZW1lbnQucGFnZVhPZmZzZXQsXG4gICAgc2Nyb2xsVG9wOiBlbGVtZW50LnBhZ2VZT2Zmc2V0XG4gIH07XG59XG5mdW5jdGlvbiBnZXRXaW5kb3dTY3JvbGxCYXJYKGVsZW1lbnQpIHtcbiAgcmV0dXJuIGdldEJvdW5kaW5nQ2xpZW50UmVjdChnZXREb2N1bWVudEVsZW1lbnQoZWxlbWVudCkpLmxlZnQgKyBnZXROb2RlU2Nyb2xsKGVsZW1lbnQpLnNjcm9sbExlZnQ7XG59XG5mdW5jdGlvbiBnZXRSZWN0UmVsYXRpdmVUb09mZnNldFBhcmVudChlbGVtZW50LCBvZmZzZXRQYXJlbnQsIHN0cmF0ZWd5KSB7XG4gIGNvbnN0IGlzT2Zmc2V0UGFyZW50QW5FbGVtZW50ID0gaXNIVE1MRWxlbWVudChvZmZzZXRQYXJlbnQpO1xuICBjb25zdCBkb2N1bWVudEVsZW1lbnQgPSBnZXREb2N1bWVudEVsZW1lbnQob2Zmc2V0UGFyZW50KTtcbiAgY29uc3QgcmVjdCA9IGdldEJvdW5kaW5nQ2xpZW50UmVjdChlbGVtZW50LCB0cnVlLCBzdHJhdGVneSA9PT0gXCJmaXhlZFwiLCBvZmZzZXRQYXJlbnQpO1xuICBsZXQgc2Nyb2xsID0ge1xuICAgIHNjcm9sbExlZnQ6IDAsXG4gICAgc2Nyb2xsVG9wOiAwXG4gIH07XG4gIGNvbnN0IG9mZnNldHMgPSB7XG4gICAgeDogMCxcbiAgICB5OiAwXG4gIH07XG4gIGlmIChpc09mZnNldFBhcmVudEFuRWxlbWVudCB8fCAhaXNPZmZzZXRQYXJlbnRBbkVsZW1lbnQgJiYgc3RyYXRlZ3kgIT09IFwiZml4ZWRcIikge1xuICAgIGlmIChnZXROb2RlTmFtZShvZmZzZXRQYXJlbnQpICE9PSBcImJvZHlcIiB8fCBpc092ZXJmbG93RWxlbWVudChkb2N1bWVudEVsZW1lbnQpKSB7XG4gICAgICBzY3JvbGwgPSBnZXROb2RlU2Nyb2xsKG9mZnNldFBhcmVudCk7XG4gICAgfVxuICAgIGlmIChpc0hUTUxFbGVtZW50KG9mZnNldFBhcmVudCkpIHtcbiAgICAgIGNvbnN0IG9mZnNldFJlY3QgPSBnZXRCb3VuZGluZ0NsaWVudFJlY3Qob2Zmc2V0UGFyZW50LCB0cnVlKTtcbiAgICAgIG9mZnNldHMueCA9IG9mZnNldFJlY3QueCArIG9mZnNldFBhcmVudC5jbGllbnRMZWZ0O1xuICAgICAgb2Zmc2V0cy55ID0gb2Zmc2V0UmVjdC55ICsgb2Zmc2V0UGFyZW50LmNsaWVudFRvcDtcbiAgICB9IGVsc2UgaWYgKGRvY3VtZW50RWxlbWVudCkge1xuICAgICAgb2Zmc2V0cy54ID0gZ2V0V2luZG93U2Nyb2xsQmFyWChkb2N1bWVudEVsZW1lbnQpO1xuICAgIH1cbiAgfVxuICByZXR1cm4ge1xuICAgIHg6IHJlY3QubGVmdCArIHNjcm9sbC5zY3JvbGxMZWZ0IC0gb2Zmc2V0cy54LFxuICAgIHk6IHJlY3QudG9wICsgc2Nyb2xsLnNjcm9sbFRvcCAtIG9mZnNldHMueSxcbiAgICB3aWR0aDogcmVjdC53aWR0aCxcbiAgICBoZWlnaHQ6IHJlY3QuaGVpZ2h0XG4gIH07XG59XG5mdW5jdGlvbiBnZXRQYXJlbnROb2RlKG5vZGUpIHtcbiAgaWYgKGdldE5vZGVOYW1lKG5vZGUpID09PSBcImh0bWxcIikge1xuICAgIHJldHVybiBub2RlO1xuICB9XG4gIGNvbnN0IHJlc3VsdCA9IG5vZGUuYXNzaWduZWRTbG90IHx8IG5vZGUucGFyZW50Tm9kZSB8fCAoaXNTaGFkb3dSb290KG5vZGUpID8gbm9kZS5ob3N0IDogbnVsbCkgfHwgZ2V0RG9jdW1lbnRFbGVtZW50KG5vZGUpO1xuICByZXR1cm4gaXNTaGFkb3dSb290KHJlc3VsdCkgPyByZXN1bHQuaG9zdCA6IHJlc3VsdDtcbn1cbmZ1bmN0aW9uIGdldFRydWVPZmZzZXRQYXJlbnQoZWxlbWVudCkge1xuICBpZiAoIWlzSFRNTEVsZW1lbnQoZWxlbWVudCkgfHwgZ2V0Q29tcHV0ZWRTdHlsZSQxKGVsZW1lbnQpLnBvc2l0aW9uID09PSBcImZpeGVkXCIpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICByZXR1cm4gZWxlbWVudC5vZmZzZXRQYXJlbnQ7XG59XG5mdW5jdGlvbiBnZXRDb250YWluaW5nQmxvY2soZWxlbWVudCkge1xuICBsZXQgY3VycmVudE5vZGUgPSBnZXRQYXJlbnROb2RlKGVsZW1lbnQpO1xuICB3aGlsZSAoaXNIVE1MRWxlbWVudChjdXJyZW50Tm9kZSkgJiYgIWlzTGFzdFRyYXZlcnNhYmxlTm9kZShjdXJyZW50Tm9kZSkpIHtcbiAgICBpZiAoaXNDb250YWluaW5nQmxvY2soY3VycmVudE5vZGUpKSB7XG4gICAgICByZXR1cm4gY3VycmVudE5vZGU7XG4gICAgfSBlbHNlIHtcbiAgICAgIGN1cnJlbnROb2RlID0gZ2V0UGFyZW50Tm9kZShjdXJyZW50Tm9kZSk7XG4gICAgfVxuICB9XG4gIHJldHVybiBudWxsO1xufVxuZnVuY3Rpb24gZ2V0T2Zmc2V0UGFyZW50KGVsZW1lbnQpIHtcbiAgY29uc3Qgd2luZG93MiA9IGdldFdpbmRvdyhlbGVtZW50KTtcbiAgbGV0IG9mZnNldFBhcmVudCA9IGdldFRydWVPZmZzZXRQYXJlbnQoZWxlbWVudCk7XG4gIHdoaWxlIChvZmZzZXRQYXJlbnQgJiYgaXNUYWJsZUVsZW1lbnQob2Zmc2V0UGFyZW50KSAmJiBnZXRDb21wdXRlZFN0eWxlJDEob2Zmc2V0UGFyZW50KS5wb3NpdGlvbiA9PT0gXCJzdGF0aWNcIikge1xuICAgIG9mZnNldFBhcmVudCA9IGdldFRydWVPZmZzZXRQYXJlbnQob2Zmc2V0UGFyZW50KTtcbiAgfVxuICBpZiAob2Zmc2V0UGFyZW50ICYmIChnZXROb2RlTmFtZShvZmZzZXRQYXJlbnQpID09PSBcImh0bWxcIiB8fCBnZXROb2RlTmFtZShvZmZzZXRQYXJlbnQpID09PSBcImJvZHlcIiAmJiBnZXRDb21wdXRlZFN0eWxlJDEob2Zmc2V0UGFyZW50KS5wb3NpdGlvbiA9PT0gXCJzdGF0aWNcIiAmJiAhaXNDb250YWluaW5nQmxvY2sob2Zmc2V0UGFyZW50KSkpIHtcbiAgICByZXR1cm4gd2luZG93MjtcbiAgfVxuICByZXR1cm4gb2Zmc2V0UGFyZW50IHx8IGdldENvbnRhaW5pbmdCbG9jayhlbGVtZW50KSB8fCB3aW5kb3cyO1xufVxuZnVuY3Rpb24gZ2V0RGltZW5zaW9ucyhlbGVtZW50KSB7XG4gIGlmIChpc0hUTUxFbGVtZW50KGVsZW1lbnQpKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHdpZHRoOiBlbGVtZW50Lm9mZnNldFdpZHRoLFxuICAgICAgaGVpZ2h0OiBlbGVtZW50Lm9mZnNldEhlaWdodFxuICAgIH07XG4gIH1cbiAgY29uc3QgcmVjdCA9IGdldEJvdW5kaW5nQ2xpZW50UmVjdChlbGVtZW50KTtcbiAgcmV0dXJuIHtcbiAgICB3aWR0aDogcmVjdC53aWR0aCxcbiAgICBoZWlnaHQ6IHJlY3QuaGVpZ2h0XG4gIH07XG59XG5mdW5jdGlvbiBjb252ZXJ0T2Zmc2V0UGFyZW50UmVsYXRpdmVSZWN0VG9WaWV3cG9ydFJlbGF0aXZlUmVjdChfcmVmKSB7XG4gIGxldCB7XG4gICAgcmVjdCxcbiAgICBvZmZzZXRQYXJlbnQsXG4gICAgc3RyYXRlZ3lcbiAgfSA9IF9yZWY7XG4gIGNvbnN0IGlzT2Zmc2V0UGFyZW50QW5FbGVtZW50ID0gaXNIVE1MRWxlbWVudChvZmZzZXRQYXJlbnQpO1xuICBjb25zdCBkb2N1bWVudEVsZW1lbnQgPSBnZXREb2N1bWVudEVsZW1lbnQob2Zmc2V0UGFyZW50KTtcbiAgaWYgKG9mZnNldFBhcmVudCA9PT0gZG9jdW1lbnRFbGVtZW50KSB7XG4gICAgcmV0dXJuIHJlY3Q7XG4gIH1cbiAgbGV0IHNjcm9sbCA9IHtcbiAgICBzY3JvbGxMZWZ0OiAwLFxuICAgIHNjcm9sbFRvcDogMFxuICB9O1xuICBsZXQgc2NhbGUgPSB7XG4gICAgeDogMSxcbiAgICB5OiAxXG4gIH07XG4gIGNvbnN0IG9mZnNldHMgPSB7XG4gICAgeDogMCxcbiAgICB5OiAwXG4gIH07XG4gIGlmIChpc09mZnNldFBhcmVudEFuRWxlbWVudCB8fCAhaXNPZmZzZXRQYXJlbnRBbkVsZW1lbnQgJiYgc3RyYXRlZ3kgIT09IFwiZml4ZWRcIikge1xuICAgIGlmIChnZXROb2RlTmFtZShvZmZzZXRQYXJlbnQpICE9PSBcImJvZHlcIiB8fCBpc092ZXJmbG93RWxlbWVudChkb2N1bWVudEVsZW1lbnQpKSB7XG4gICAgICBzY3JvbGwgPSBnZXROb2RlU2Nyb2xsKG9mZnNldFBhcmVudCk7XG4gICAgfVxuICAgIGlmIChpc0hUTUxFbGVtZW50KG9mZnNldFBhcmVudCkpIHtcbiAgICAgIGNvbnN0IG9mZnNldFJlY3QgPSBnZXRCb3VuZGluZ0NsaWVudFJlY3Qob2Zmc2V0UGFyZW50KTtcbiAgICAgIHNjYWxlID0gZ2V0U2NhbGUob2Zmc2V0UGFyZW50KTtcbiAgICAgIG9mZnNldHMueCA9IG9mZnNldFJlY3QueCArIG9mZnNldFBhcmVudC5jbGllbnRMZWZ0O1xuICAgICAgb2Zmc2V0cy55ID0gb2Zmc2V0UmVjdC55ICsgb2Zmc2V0UGFyZW50LmNsaWVudFRvcDtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHtcbiAgICB3aWR0aDogcmVjdC53aWR0aCAqIHNjYWxlLngsXG4gICAgaGVpZ2h0OiByZWN0LmhlaWdodCAqIHNjYWxlLnksXG4gICAgeDogcmVjdC54ICogc2NhbGUueCAtIHNjcm9sbC5zY3JvbGxMZWZ0ICogc2NhbGUueCArIG9mZnNldHMueCxcbiAgICB5OiByZWN0LnkgKiBzY2FsZS55IC0gc2Nyb2xsLnNjcm9sbFRvcCAqIHNjYWxlLnkgKyBvZmZzZXRzLnlcbiAgfTtcbn1cbmZ1bmN0aW9uIGdldFZpZXdwb3J0UmVjdChlbGVtZW50LCBzdHJhdGVneSkge1xuICBjb25zdCB3aW4gPSBnZXRXaW5kb3coZWxlbWVudCk7XG4gIGNvbnN0IGh0bWwgPSBnZXREb2N1bWVudEVsZW1lbnQoZWxlbWVudCk7XG4gIGNvbnN0IHZpc3VhbFZpZXdwb3J0ID0gd2luLnZpc3VhbFZpZXdwb3J0O1xuICBsZXQgd2lkdGggPSBodG1sLmNsaWVudFdpZHRoO1xuICBsZXQgaGVpZ2h0ID0gaHRtbC5jbGllbnRIZWlnaHQ7XG4gIGxldCB4ID0gMDtcbiAgbGV0IHkgPSAwO1xuICBpZiAodmlzdWFsVmlld3BvcnQpIHtcbiAgICB3aWR0aCA9IHZpc3VhbFZpZXdwb3J0LndpZHRoO1xuICAgIGhlaWdodCA9IHZpc3VhbFZpZXdwb3J0LmhlaWdodDtcbiAgICBjb25zdCBsYXlvdXRWaWV3cG9ydCA9IGlzTGF5b3V0Vmlld3BvcnQoKTtcbiAgICBpZiAobGF5b3V0Vmlld3BvcnQgfHwgIWxheW91dFZpZXdwb3J0ICYmIHN0cmF0ZWd5ID09PSBcImZpeGVkXCIpIHtcbiAgICAgIHggPSB2aXN1YWxWaWV3cG9ydC5vZmZzZXRMZWZ0O1xuICAgICAgeSA9IHZpc3VhbFZpZXdwb3J0Lm9mZnNldFRvcDtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHtcbiAgICB3aWR0aCxcbiAgICBoZWlnaHQsXG4gICAgeCxcbiAgICB5XG4gIH07XG59XG5mdW5jdGlvbiBnZXREb2N1bWVudFJlY3QoZWxlbWVudCkge1xuICB2YXIgX2VsZW1lbnQkb3duZXJEb2N1bWVuO1xuICBjb25zdCBodG1sID0gZ2V0RG9jdW1lbnRFbGVtZW50KGVsZW1lbnQpO1xuICBjb25zdCBzY3JvbGwgPSBnZXROb2RlU2Nyb2xsKGVsZW1lbnQpO1xuICBjb25zdCBib2R5ID0gKF9lbGVtZW50JG93bmVyRG9jdW1lbiA9IGVsZW1lbnQub3duZXJEb2N1bWVudCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9lbGVtZW50JG93bmVyRG9jdW1lbi5ib2R5O1xuICBjb25zdCB3aWR0aCA9IG1heChodG1sLnNjcm9sbFdpZHRoLCBodG1sLmNsaWVudFdpZHRoLCBib2R5ID8gYm9keS5zY3JvbGxXaWR0aCA6IDAsIGJvZHkgPyBib2R5LmNsaWVudFdpZHRoIDogMCk7XG4gIGNvbnN0IGhlaWdodCA9IG1heChodG1sLnNjcm9sbEhlaWdodCwgaHRtbC5jbGllbnRIZWlnaHQsIGJvZHkgPyBib2R5LnNjcm9sbEhlaWdodCA6IDAsIGJvZHkgPyBib2R5LmNsaWVudEhlaWdodCA6IDApO1xuICBsZXQgeCA9IC1zY3JvbGwuc2Nyb2xsTGVmdCArIGdldFdpbmRvd1Njcm9sbEJhclgoZWxlbWVudCk7XG4gIGNvbnN0IHkgPSAtc2Nyb2xsLnNjcm9sbFRvcDtcbiAgaWYgKGdldENvbXB1dGVkU3R5bGUkMShib2R5IHx8IGh0bWwpLmRpcmVjdGlvbiA9PT0gXCJydGxcIikge1xuICAgIHggKz0gbWF4KGh0bWwuY2xpZW50V2lkdGgsIGJvZHkgPyBib2R5LmNsaWVudFdpZHRoIDogMCkgLSB3aWR0aDtcbiAgfVxuICByZXR1cm4ge1xuICAgIHdpZHRoLFxuICAgIGhlaWdodCxcbiAgICB4LFxuICAgIHlcbiAgfTtcbn1cbmZ1bmN0aW9uIGdldE5lYXJlc3RPdmVyZmxvd0FuY2VzdG9yKG5vZGUpIHtcbiAgY29uc3QgcGFyZW50Tm9kZSA9IGdldFBhcmVudE5vZGUobm9kZSk7XG4gIGlmIChpc0xhc3RUcmF2ZXJzYWJsZU5vZGUocGFyZW50Tm9kZSkpIHtcbiAgICByZXR1cm4gbm9kZS5vd25lckRvY3VtZW50LmJvZHk7XG4gIH1cbiAgaWYgKGlzSFRNTEVsZW1lbnQocGFyZW50Tm9kZSkgJiYgaXNPdmVyZmxvd0VsZW1lbnQocGFyZW50Tm9kZSkpIHtcbiAgICByZXR1cm4gcGFyZW50Tm9kZTtcbiAgfVxuICByZXR1cm4gZ2V0TmVhcmVzdE92ZXJmbG93QW5jZXN0b3IocGFyZW50Tm9kZSk7XG59XG5mdW5jdGlvbiBnZXRPdmVyZmxvd0FuY2VzdG9ycyhub2RlLCBsaXN0KSB7XG4gIHZhciBfbm9kZSRvd25lckRvY3VtZW50O1xuICBpZiAobGlzdCA9PT0gdm9pZCAwKSB7XG4gICAgbGlzdCA9IFtdO1xuICB9XG4gIGNvbnN0IHNjcm9sbGFibGVBbmNlc3RvciA9IGdldE5lYXJlc3RPdmVyZmxvd0FuY2VzdG9yKG5vZGUpO1xuICBjb25zdCBpc0JvZHkgPSBzY3JvbGxhYmxlQW5jZXN0b3IgPT09ICgoX25vZGUkb3duZXJEb2N1bWVudCA9IG5vZGUub3duZXJEb2N1bWVudCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9ub2RlJG93bmVyRG9jdW1lbnQuYm9keSk7XG4gIGNvbnN0IHdpbiA9IGdldFdpbmRvdyhzY3JvbGxhYmxlQW5jZXN0b3IpO1xuICBpZiAoaXNCb2R5KSB7XG4gICAgcmV0dXJuIGxpc3QuY29uY2F0KHdpbiwgd2luLnZpc3VhbFZpZXdwb3J0IHx8IFtdLCBpc092ZXJmbG93RWxlbWVudChzY3JvbGxhYmxlQW5jZXN0b3IpID8gc2Nyb2xsYWJsZUFuY2VzdG9yIDogW10pO1xuICB9XG4gIHJldHVybiBsaXN0LmNvbmNhdChzY3JvbGxhYmxlQW5jZXN0b3IsIGdldE92ZXJmbG93QW5jZXN0b3JzKHNjcm9sbGFibGVBbmNlc3RvcikpO1xufVxuZnVuY3Rpb24gZ2V0SW5uZXJCb3VuZGluZ0NsaWVudFJlY3QoZWxlbWVudCwgc3RyYXRlZ3kpIHtcbiAgY29uc3QgY2xpZW50UmVjdCA9IGdldEJvdW5kaW5nQ2xpZW50UmVjdChlbGVtZW50LCB0cnVlLCBzdHJhdGVneSA9PT0gXCJmaXhlZFwiKTtcbiAgY29uc3QgdG9wID0gY2xpZW50UmVjdC50b3AgKyBlbGVtZW50LmNsaWVudFRvcDtcbiAgY29uc3QgbGVmdCA9IGNsaWVudFJlY3QubGVmdCArIGVsZW1lbnQuY2xpZW50TGVmdDtcbiAgY29uc3Qgc2NhbGUgPSBpc0hUTUxFbGVtZW50KGVsZW1lbnQpID8gZ2V0U2NhbGUoZWxlbWVudCkgOiB7XG4gICAgeDogMSxcbiAgICB5OiAxXG4gIH07XG4gIGNvbnN0IHdpZHRoID0gZWxlbWVudC5jbGllbnRXaWR0aCAqIHNjYWxlLng7XG4gIGNvbnN0IGhlaWdodCA9IGVsZW1lbnQuY2xpZW50SGVpZ2h0ICogc2NhbGUueTtcbiAgY29uc3QgeCA9IGxlZnQgKiBzY2FsZS54O1xuICBjb25zdCB5ID0gdG9wICogc2NhbGUueTtcbiAgcmV0dXJuIHtcbiAgICB0b3A6IHksXG4gICAgbGVmdDogeCxcbiAgICByaWdodDogeCArIHdpZHRoLFxuICAgIGJvdHRvbTogeSArIGhlaWdodCxcbiAgICB4LFxuICAgIHksXG4gICAgd2lkdGgsXG4gICAgaGVpZ2h0XG4gIH07XG59XG5mdW5jdGlvbiBnZXRDbGllbnRSZWN0RnJvbUNsaXBwaW5nQW5jZXN0b3IoZWxlbWVudCwgY2xpcHBpbmdBbmNlc3Rvciwgc3RyYXRlZ3kpIHtcbiAgaWYgKGNsaXBwaW5nQW5jZXN0b3IgPT09IFwidmlld3BvcnRcIikge1xuICAgIHJldHVybiByZWN0VG9DbGllbnRSZWN0KGdldFZpZXdwb3J0UmVjdChlbGVtZW50LCBzdHJhdGVneSkpO1xuICB9XG4gIGlmIChpc0VsZW1lbnQoY2xpcHBpbmdBbmNlc3RvcikpIHtcbiAgICByZXR1cm4gZ2V0SW5uZXJCb3VuZGluZ0NsaWVudFJlY3QoY2xpcHBpbmdBbmNlc3Rvciwgc3RyYXRlZ3kpO1xuICB9XG4gIHJldHVybiByZWN0VG9DbGllbnRSZWN0KGdldERvY3VtZW50UmVjdChnZXREb2N1bWVudEVsZW1lbnQoZWxlbWVudCkpKTtcbn1cbmZ1bmN0aW9uIGdldENsaXBwaW5nRWxlbWVudEFuY2VzdG9ycyhlbGVtZW50LCBjYWNoZSkge1xuICBjb25zdCBjYWNoZWRSZXN1bHQgPSBjYWNoZS5nZXQoZWxlbWVudCk7XG4gIGlmIChjYWNoZWRSZXN1bHQpIHtcbiAgICByZXR1cm4gY2FjaGVkUmVzdWx0O1xuICB9XG4gIGxldCByZXN1bHQgPSBnZXRPdmVyZmxvd0FuY2VzdG9ycyhlbGVtZW50KS5maWx0ZXIoKGVsKSA9PiBpc0VsZW1lbnQoZWwpICYmIGdldE5vZGVOYW1lKGVsKSAhPT0gXCJib2R5XCIpO1xuICBsZXQgY3VycmVudENvbnRhaW5pbmdCbG9ja0NvbXB1dGVkU3R5bGUgPSBudWxsO1xuICBjb25zdCBlbGVtZW50SXNGaXhlZCA9IGdldENvbXB1dGVkU3R5bGUkMShlbGVtZW50KS5wb3NpdGlvbiA9PT0gXCJmaXhlZFwiO1xuICBsZXQgY3VycmVudE5vZGUgPSBlbGVtZW50SXNGaXhlZCA/IGdldFBhcmVudE5vZGUoZWxlbWVudCkgOiBlbGVtZW50O1xuICB3aGlsZSAoaXNFbGVtZW50KGN1cnJlbnROb2RlKSAmJiAhaXNMYXN0VHJhdmVyc2FibGVOb2RlKGN1cnJlbnROb2RlKSkge1xuICAgIGNvbnN0IGNvbXB1dGVkU3R5bGUgPSBnZXRDb21wdXRlZFN0eWxlJDEoY3VycmVudE5vZGUpO1xuICAgIGNvbnN0IGNvbnRhaW5pbmdCbG9jayA9IGlzQ29udGFpbmluZ0Jsb2NrKGN1cnJlbnROb2RlKTtcbiAgICBjb25zdCBzaG91bGREcm9wQ3VycmVudE5vZGUgPSBlbGVtZW50SXNGaXhlZCA/ICFjb250YWluaW5nQmxvY2sgJiYgIWN1cnJlbnRDb250YWluaW5nQmxvY2tDb21wdXRlZFN0eWxlIDogIWNvbnRhaW5pbmdCbG9jayAmJiBjb21wdXRlZFN0eWxlLnBvc2l0aW9uID09PSBcInN0YXRpY1wiICYmICEhY3VycmVudENvbnRhaW5pbmdCbG9ja0NvbXB1dGVkU3R5bGUgJiYgW1wiYWJzb2x1dGVcIiwgXCJmaXhlZFwiXS5pbmNsdWRlcyhjdXJyZW50Q29udGFpbmluZ0Jsb2NrQ29tcHV0ZWRTdHlsZS5wb3NpdGlvbik7XG4gICAgaWYgKHNob3VsZERyb3BDdXJyZW50Tm9kZSkge1xuICAgICAgcmVzdWx0ID0gcmVzdWx0LmZpbHRlcigoYW5jZXN0b3IpID0+IGFuY2VzdG9yICE9PSBjdXJyZW50Tm9kZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGN1cnJlbnRDb250YWluaW5nQmxvY2tDb21wdXRlZFN0eWxlID0gY29tcHV0ZWRTdHlsZTtcbiAgICB9XG4gICAgY3VycmVudE5vZGUgPSBnZXRQYXJlbnROb2RlKGN1cnJlbnROb2RlKTtcbiAgfVxuICBjYWNoZS5zZXQoZWxlbWVudCwgcmVzdWx0KTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIGdldENsaXBwaW5nUmVjdChfcmVmKSB7XG4gIGxldCB7XG4gICAgZWxlbWVudCxcbiAgICBib3VuZGFyeSxcbiAgICByb290Qm91bmRhcnksXG4gICAgc3RyYXRlZ3lcbiAgfSA9IF9yZWY7XG4gIGNvbnN0IGVsZW1lbnRDbGlwcGluZ0FuY2VzdG9ycyA9IGJvdW5kYXJ5ID09PSBcImNsaXBwaW5nQW5jZXN0b3JzXCIgPyBnZXRDbGlwcGluZ0VsZW1lbnRBbmNlc3RvcnMoZWxlbWVudCwgdGhpcy5fYykgOiBbXS5jb25jYXQoYm91bmRhcnkpO1xuICBjb25zdCBjbGlwcGluZ0FuY2VzdG9ycyA9IFsuLi5lbGVtZW50Q2xpcHBpbmdBbmNlc3RvcnMsIHJvb3RCb3VuZGFyeV07XG4gIGNvbnN0IGZpcnN0Q2xpcHBpbmdBbmNlc3RvciA9IGNsaXBwaW5nQW5jZXN0b3JzWzBdO1xuICBjb25zdCBjbGlwcGluZ1JlY3QgPSBjbGlwcGluZ0FuY2VzdG9ycy5yZWR1Y2UoKGFjY1JlY3QsIGNsaXBwaW5nQW5jZXN0b3IpID0+IHtcbiAgICBjb25zdCByZWN0ID0gZ2V0Q2xpZW50UmVjdEZyb21DbGlwcGluZ0FuY2VzdG9yKGVsZW1lbnQsIGNsaXBwaW5nQW5jZXN0b3IsIHN0cmF0ZWd5KTtcbiAgICBhY2NSZWN0LnRvcCA9IG1heChyZWN0LnRvcCwgYWNjUmVjdC50b3ApO1xuICAgIGFjY1JlY3QucmlnaHQgPSBtaW4ocmVjdC5yaWdodCwgYWNjUmVjdC5yaWdodCk7XG4gICAgYWNjUmVjdC5ib3R0b20gPSBtaW4ocmVjdC5ib3R0b20sIGFjY1JlY3QuYm90dG9tKTtcbiAgICBhY2NSZWN0LmxlZnQgPSBtYXgocmVjdC5sZWZ0LCBhY2NSZWN0LmxlZnQpO1xuICAgIHJldHVybiBhY2NSZWN0O1xuICB9LCBnZXRDbGllbnRSZWN0RnJvbUNsaXBwaW5nQW5jZXN0b3IoZWxlbWVudCwgZmlyc3RDbGlwcGluZ0FuY2VzdG9yLCBzdHJhdGVneSkpO1xuICByZXR1cm4ge1xuICAgIHdpZHRoOiBjbGlwcGluZ1JlY3QucmlnaHQgLSBjbGlwcGluZ1JlY3QubGVmdCxcbiAgICBoZWlnaHQ6IGNsaXBwaW5nUmVjdC5ib3R0b20gLSBjbGlwcGluZ1JlY3QudG9wLFxuICAgIHg6IGNsaXBwaW5nUmVjdC5sZWZ0LFxuICAgIHk6IGNsaXBwaW5nUmVjdC50b3BcbiAgfTtcbn1cbmNvbnN0IHBsYXRmb3JtID0ge1xuICBnZXRDbGlwcGluZ1JlY3QsXG4gIGNvbnZlcnRPZmZzZXRQYXJlbnRSZWxhdGl2ZVJlY3RUb1ZpZXdwb3J0UmVsYXRpdmVSZWN0LFxuICBpc0VsZW1lbnQsXG4gIGdldERpbWVuc2lvbnMsXG4gIGdldE9mZnNldFBhcmVudCxcbiAgZ2V0RG9jdW1lbnRFbGVtZW50LFxuICBnZXRTY2FsZSxcbiAgZ2V0RWxlbWVudFJlY3RzKF9yZWYpIHtcbiAgICByZXR1cm4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgICAgbGV0IHtcbiAgICAgICAgcmVmZXJlbmNlLFxuICAgICAgICBmbG9hdGluZyxcbiAgICAgICAgc3RyYXRlZ3lcbiAgICAgIH0gPSBfcmVmO1xuICAgICAgY29uc3QgZ2V0T2Zmc2V0UGFyZW50Rm4gPSB0aGlzLmdldE9mZnNldFBhcmVudCB8fCBnZXRPZmZzZXRQYXJlbnQ7XG4gICAgICBjb25zdCBnZXREaW1lbnNpb25zRm4gPSB0aGlzLmdldERpbWVuc2lvbnM7XG4gICAgICByZXR1cm4ge1xuICAgICAgICByZWZlcmVuY2U6IGdldFJlY3RSZWxhdGl2ZVRvT2Zmc2V0UGFyZW50KHJlZmVyZW5jZSwgeWllbGQgZ2V0T2Zmc2V0UGFyZW50Rm4oZmxvYXRpbmcpLCBzdHJhdGVneSksXG4gICAgICAgIGZsb2F0aW5nOiBfX3NwcmVhZFZhbHVlcyh7XG4gICAgICAgICAgeDogMCxcbiAgICAgICAgICB5OiAwXG4gICAgICAgIH0sIHlpZWxkIGdldERpbWVuc2lvbnNGbihmbG9hdGluZykpXG4gICAgICB9O1xuICAgIH0pO1xuICB9LFxuICBnZXRDbGllbnRSZWN0czogKGVsZW1lbnQpID0+IEFycmF5LmZyb20oZWxlbWVudC5nZXRDbGllbnRSZWN0cygpKSxcbiAgaXNSVEw6IChlbGVtZW50KSA9PiBnZXRDb21wdXRlZFN0eWxlJDEoZWxlbWVudCkuZGlyZWN0aW9uID09PSBcInJ0bFwiXG59O1xuZnVuY3Rpb24gYXV0b1VwZGF0ZShyZWZlcmVuY2UsIGZsb2F0aW5nLCB1cGRhdGUsIG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuICBjb25zdCB7XG4gICAgYW5jZXN0b3JTY3JvbGw6IF9hbmNlc3RvclNjcm9sbCA9IHRydWUsXG4gICAgYW5jZXN0b3JSZXNpemUgPSB0cnVlLFxuICAgIGVsZW1lbnRSZXNpemUgPSB0cnVlLFxuICAgIGFuaW1hdGlvbkZyYW1lID0gZmFsc2VcbiAgfSA9IG9wdGlvbnM7XG4gIGNvbnN0IGFuY2VzdG9yU2Nyb2xsID0gX2FuY2VzdG9yU2Nyb2xsICYmICFhbmltYXRpb25GcmFtZTtcbiAgY29uc3QgYW5jZXN0b3JzID0gYW5jZXN0b3JTY3JvbGwgfHwgYW5jZXN0b3JSZXNpemUgPyBbLi4uaXNFbGVtZW50KHJlZmVyZW5jZSkgPyBnZXRPdmVyZmxvd0FuY2VzdG9ycyhyZWZlcmVuY2UpIDogcmVmZXJlbmNlLmNvbnRleHRFbGVtZW50ID8gZ2V0T3ZlcmZsb3dBbmNlc3RvcnMocmVmZXJlbmNlLmNvbnRleHRFbGVtZW50KSA6IFtdLCAuLi5nZXRPdmVyZmxvd0FuY2VzdG9ycyhmbG9hdGluZyldIDogW107XG4gIGFuY2VzdG9ycy5mb3JFYWNoKChhbmNlc3RvcikgPT4ge1xuICAgIGFuY2VzdG9yU2Nyb2xsICYmIGFuY2VzdG9yLmFkZEV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIiwgdXBkYXRlLCB7XG4gICAgICBwYXNzaXZlOiB0cnVlXG4gICAgfSk7XG4gICAgYW5jZXN0b3JSZXNpemUgJiYgYW5jZXN0b3IuYWRkRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLCB1cGRhdGUpO1xuICB9KTtcbiAgbGV0IG9ic2VydmVyID0gbnVsbDtcbiAgaWYgKGVsZW1lbnRSZXNpemUpIHtcbiAgICBsZXQgaW5pdGlhbFVwZGF0ZSA9IHRydWU7XG4gICAgb2JzZXJ2ZXIgPSBuZXcgUmVzaXplT2JzZXJ2ZXIoKCkgPT4ge1xuICAgICAgaWYgKCFpbml0aWFsVXBkYXRlKSB7XG4gICAgICAgIHVwZGF0ZSgpO1xuICAgICAgfVxuICAgICAgaW5pdGlhbFVwZGF0ZSA9IGZhbHNlO1xuICAgIH0pO1xuICAgIGlzRWxlbWVudChyZWZlcmVuY2UpICYmICFhbmltYXRpb25GcmFtZSAmJiBvYnNlcnZlci5vYnNlcnZlKHJlZmVyZW5jZSk7XG4gICAgaWYgKCFpc0VsZW1lbnQocmVmZXJlbmNlKSAmJiByZWZlcmVuY2UuY29udGV4dEVsZW1lbnQgJiYgIWFuaW1hdGlvbkZyYW1lKSB7XG4gICAgICBvYnNlcnZlci5vYnNlcnZlKHJlZmVyZW5jZS5jb250ZXh0RWxlbWVudCk7XG4gICAgfVxuICAgIG9ic2VydmVyLm9ic2VydmUoZmxvYXRpbmcpO1xuICB9XG4gIGxldCBmcmFtZUlkO1xuICBsZXQgcHJldlJlZlJlY3QgPSBhbmltYXRpb25GcmFtZSA/IGdldEJvdW5kaW5nQ2xpZW50UmVjdChyZWZlcmVuY2UpIDogbnVsbDtcbiAgaWYgKGFuaW1hdGlvbkZyYW1lKSB7XG4gICAgZnJhbWVMb29wKCk7XG4gIH1cbiAgZnVuY3Rpb24gZnJhbWVMb29wKCkge1xuICAgIGNvbnN0IG5leHRSZWZSZWN0ID0gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KHJlZmVyZW5jZSk7XG4gICAgaWYgKHByZXZSZWZSZWN0ICYmIChuZXh0UmVmUmVjdC54ICE9PSBwcmV2UmVmUmVjdC54IHx8IG5leHRSZWZSZWN0LnkgIT09IHByZXZSZWZSZWN0LnkgfHwgbmV4dFJlZlJlY3Qud2lkdGggIT09IHByZXZSZWZSZWN0LndpZHRoIHx8IG5leHRSZWZSZWN0LmhlaWdodCAhPT0gcHJldlJlZlJlY3QuaGVpZ2h0KSkge1xuICAgICAgdXBkYXRlKCk7XG4gICAgfVxuICAgIHByZXZSZWZSZWN0ID0gbmV4dFJlZlJlY3Q7XG4gICAgZnJhbWVJZCA9IHJlcXVlc3RBbmltYXRpb25GcmFtZShmcmFtZUxvb3ApO1xuICB9XG4gIHVwZGF0ZSgpO1xuICByZXR1cm4gKCkgPT4ge1xuICAgIHZhciBfb2JzZXJ2ZXI7XG4gICAgYW5jZXN0b3JzLmZvckVhY2goKGFuY2VzdG9yKSA9PiB7XG4gICAgICBhbmNlc3RvclNjcm9sbCAmJiBhbmNlc3Rvci5yZW1vdmVFdmVudExpc3RlbmVyKFwic2Nyb2xsXCIsIHVwZGF0ZSk7XG4gICAgICBhbmNlc3RvclJlc2l6ZSAmJiBhbmNlc3Rvci5yZW1vdmVFdmVudExpc3RlbmVyKFwicmVzaXplXCIsIHVwZGF0ZSk7XG4gICAgfSk7XG4gICAgKF9vYnNlcnZlciA9IG9ic2VydmVyKSA9PSBudWxsID8gdm9pZCAwIDogX29ic2VydmVyLmRpc2Nvbm5lY3QoKTtcbiAgICBvYnNlcnZlciA9IG51bGw7XG4gICAgaWYgKGFuaW1hdGlvbkZyYW1lKSB7XG4gICAgICBjYW5jZWxBbmltYXRpb25GcmFtZShmcmFtZUlkKTtcbiAgICB9XG4gIH07XG59XG5jb25zdCBjb21wdXRlUG9zaXRpb24gPSAocmVmZXJlbmNlLCBmbG9hdGluZywgb3B0aW9ucykgPT4ge1xuICBjb25zdCBjYWNoZSA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7XG4gIGNvbnN0IG1lcmdlZE9wdGlvbnMgPSBfX3NwcmVhZFZhbHVlcyh7XG4gICAgcGxhdGZvcm1cbiAgfSwgb3B0aW9ucyk7XG4gIGNvbnN0IHBsYXRmb3JtV2l0aENhY2hlID0gX19zcHJlYWRQcm9wcyhfX3NwcmVhZFZhbHVlcyh7fSwgbWVyZ2VkT3B0aW9ucy5wbGF0Zm9ybSksIHtcbiAgICBfYzogY2FjaGVcbiAgfSk7XG4gIHJldHVybiBjb21wdXRlUG9zaXRpb24kMShyZWZlcmVuY2UsIGZsb2F0aW5nLCBfX3NwcmVhZFByb3BzKF9fc3ByZWFkVmFsdWVzKHt9LCBtZXJnZWRPcHRpb25zKSwge1xuICAgIHBsYXRmb3JtOiBwbGF0Zm9ybVdpdGhDYWNoZVxuICB9KSk7XG59O1xuZnVuY3Rpb24gUChsMiwgdTIsIGUyKSB7XG4gIGxldCBjMiA9ICgpID0+IHtcbiAgICB2YXIgdDI7XG4gICAgcmV0dXJuICh0MiA9IGUyID09IG51bGwgPyB2b2lkIDAgOiBlMi5wbGFjZW1lbnQpICE9IG51bGwgPyB0MiA6IFwiYm90dG9tXCI7XG4gIH0sIGQgPSAoKSA9PiB7XG4gICAgdmFyIHQyO1xuICAgIHJldHVybiAodDIgPSBlMiA9PSBudWxsID8gdm9pZCAwIDogZTIuc3RyYXRlZ3kpICE9IG51bGwgPyB0MiA6IFwiYWJzb2x1dGVcIjtcbiAgfSwgW24yLCBvMl0gPSBjcmVhdGVTaWduYWwoeyB4OiBudWxsLCB5OiBudWxsLCBwbGFjZW1lbnQ6IGMyKCksIHN0cmF0ZWd5OiBkKCksIG1pZGRsZXdhcmVEYXRhOiB7fSB9KSwgW3gsIEZdID0gY3JlYXRlU2lnbmFsKCk7XG4gIGNyZWF0ZUVmZmVjdCgoKSA9PiB7XG4gICAgbGV0IHQyID0geCgpO1xuICAgIGlmICh0MilcbiAgICAgIHRocm93IHQyLnZhbHVlO1xuICB9KTtcbiAgbGV0IHMyID0gY3JlYXRlTWVtbygoKSA9PiAobDIoKSwgdTIoKSwge30pKTtcbiAgZnVuY3Rpb24gaTIoKSB7XG4gICAgbGV0IHQyID0gbDIoKSwgciA9IHUyKCk7XG4gICAgaWYgKHQyICYmIHIpIHtcbiAgICAgIGxldCBhMiA9IHMyKCk7XG4gICAgICBjb21wdXRlUG9zaXRpb24odDIsIHIsIHsgbWlkZGxld2FyZTogZTIgPT0gbnVsbCA/IHZvaWQgMCA6IGUyLm1pZGRsZXdhcmUsIHBsYWNlbWVudDogYzIoKSwgc3RyYXRlZ3k6IGQoKSB9KS50aGVuKChtKSA9PiB7XG4gICAgICAgIGEyID09PSBzMigpICYmIG8yKG0pO1xuICAgICAgfSwgKG0pID0+IHtcbiAgICAgICAgRihtKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuICByZXR1cm4gY3JlYXRlRWZmZWN0KCgpID0+IHtcbiAgICBsZXQgdDIgPSBsMigpLCByID0gdTIoKTtcbiAgICBpZiAoZTIgPT0gbnVsbCB8fCBlMi5taWRkbGV3YXJlLCBjMigpLCBkKCksIHQyICYmIHIpXG4gICAgICBpZiAoZTIgIT0gbnVsbCAmJiBlMi53aGlsZUVsZW1lbnRzTW91bnRlZCkge1xuICAgICAgICBsZXQgYTIgPSBlMi53aGlsZUVsZW1lbnRzTW91bnRlZCh0MiwgciwgaTIpO1xuICAgICAgICBhMiAmJiBvbkNsZWFudXAoYTIpO1xuICAgICAgfSBlbHNlXG4gICAgICAgIGkyKCk7XG4gIH0pLCB7IGdldCB4KCkge1xuICAgIHJldHVybiBuMigpLng7XG4gIH0sIGdldCB5KCkge1xuICAgIHJldHVybiBuMigpLnk7XG4gIH0sIGdldCBwbGFjZW1lbnQoKSB7XG4gICAgcmV0dXJuIG4yKCkucGxhY2VtZW50O1xuICB9LCBnZXQgc3RyYXRlZ3koKSB7XG4gICAgcmV0dXJuIG4yKCkuc3RyYXRlZ3k7XG4gIH0sIGdldCBtaWRkbGV3YXJlRGF0YSgpIHtcbiAgICByZXR1cm4gbjIoKS5taWRkbGV3YXJlRGF0YTtcbiAgfSwgdXBkYXRlOiBpMiB9O1xufVxuY29uc3QgX3RtcGwkJDQgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHRjLXJvb3QgZGF0YS10Yy1kcm9wZG93bi1jb250YWluZXI9XCJ0cnVlXCI+PC90Yy1yb290PmApO1xuY29uc3QgQWNjb3VudEJ1dHRvbiA9ICgpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBjb25uZWN0b3IgPSB1c2VDb250ZXh0KENvbm5lY3RvckNvbnRleHQpO1xuICBjb25zdCB0b25Db25uZWN0VUkgPSB1c2VDb250ZXh0KFRvbkNvbm5lY3RVaUNvbnRleHQpO1xuICBjb25zdCBbaXNPcGVuZWQsIHNldElzT3BlbmVkXSA9IGNyZWF0ZVNpZ25hbChmYWxzZSk7XG4gIGNvbnN0IFthY2NvdW50LCBzZXRBY2NvdW50XSA9IGNyZWF0ZVNpZ25hbChjb25uZWN0b3IuYWNjb3VudCk7XG4gIGNvbnN0IFtyZXN0b3JpbmdQcm9jZXNzLCBzZXRSZXN0b3JpbmdQcm9jZXNzXSA9IGNyZWF0ZVNpZ25hbCghY29ubmVjdG9yLmFjY291bnQpO1xuICBsZXQgZHJvcERvd25SZWY7XG4gIGNvbnN0IFtmbG9hdGluZywgc2V0RmxvYXRpbmddID0gY3JlYXRlU2lnbmFsKCk7XG4gIGNvbnN0IFthbmNob3IsIHNldEFuY2hvcl0gPSBjcmVhdGVTaWduYWwoKTtcbiAgY29uc3QgcG9zaXRpb24gPSBQKGFuY2hvciwgZmxvYXRpbmcsIHtcbiAgICB3aGlsZUVsZW1lbnRzTW91bnRlZDogYXV0b1VwZGF0ZSxcbiAgICBwbGFjZW1lbnQ6IFwiYm90dG9tLWVuZFwiXG4gIH0pO1xuICBjb25zdCBub3JtYWxpemVkQWRkcmVzcyA9ICgpID0+IHtcbiAgICBjb25zdCBhY2MgPSBhY2NvdW50KCk7XG4gICAgaWYgKGFjYykge1xuICAgICAgY29uc3QgdXNlckZyaWVuZGx5QWRkcmVzcyA9IHRvVXNlckZyaWVuZGx5QWRkcmVzcyhhY2MuYWRkcmVzcywgYWNjLmNoYWluID09PSBDSEFJTi5URVNUTkVUKTtcbiAgICAgIHJldHVybiB1c2VyRnJpZW5kbHlBZGRyZXNzLnNsaWNlKDAsIDQpICsgXCJcXHUyMDI2XCIgKyB1c2VyRnJpZW5kbHlBZGRyZXNzLnNsaWNlKC00KTtcbiAgICB9XG4gICAgcmV0dXJuIFwiXCI7XG4gIH07XG4gIHRvbkNvbm5lY3RVSS5jb25uZWN0aW9uUmVzdG9yZWQudGhlbigoKSA9PiBzZXRSZXN0b3JpbmdQcm9jZXNzKGZhbHNlKSk7XG4gIGNvbnN0IHVuc3Vic2NyaWJlID0gY29ubmVjdG9yLm9uU3RhdHVzQ2hhbmdlKCh3YWxsZXQpID0+IHtcbiAgICBpZiAoIXdhbGxldCkge1xuICAgICAgc2V0SXNPcGVuZWQoZmFsc2UpO1xuICAgICAgc2V0QWNjb3VudChudWxsKTtcbiAgICAgIHNldFJlc3RvcmluZ1Byb2Nlc3MoZmFsc2UpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBzZXRBY2NvdW50KHdhbGxldC5hY2NvdW50KTtcbiAgICBzZXRSZXN0b3JpbmdQcm9jZXNzKGZhbHNlKTtcbiAgfSk7XG4gIGNvbnN0IG9uQ2xpY2sgPSAoZTIpID0+IHtcbiAgICBpZiAoIWFjY291bnQoKSB8fCAhaXNPcGVuZWQoKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBjbGlja1RvQnV0dG9uID0gYW5jaG9yKCkuY29udGFpbnMoZTIudGFyZ2V0KTtcbiAgICBjb25zdCBjbGlja1RvRHJvcGRvd24gPSBkcm9wRG93blJlZi5jb250YWlucyhlMi50YXJnZXQpO1xuICAgIGlmICghY2xpY2tUb0J1dHRvbiAmJiAhY2xpY2tUb0Ryb3Bkb3duKSB7XG4gICAgICBzZXRJc09wZW5lZChmYWxzZSk7XG4gICAgfVxuICB9O1xuICBvbk1vdW50KCgpID0+IHtcbiAgICBkb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBvbkNsaWNrKTtcbiAgfSk7XG4gIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgZG9jdW1lbnQuYm9keS5yZW1vdmVFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgb25DbGljayk7XG4gICAgdW5zdWJzY3JpYmUoKTtcbiAgfSk7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoRHluYW1pYywge1xuICAgIGNvbXBvbmVudDogZ2xvYmFsU3R5bGVzVGFnLFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIHJlc3RvcmluZ1Byb2Nlc3MoKTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTG9hZGVyQnV0dG9uU3R5bGVkJDEsIHtcbiAgICAgICAgICAgIGRpc2FibGVkOiB0cnVlLFxuICAgICAgICAgICAgXCJkYXRhLXRjLWNvbm5lY3QtYnV0dG9uLWxvYWRpbmdcIjogXCJ0cnVlXCIsXG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTG9hZGVySWNvblN0eWxlZCQxLCB7fSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICByZXR1cm4gIXJlc3RvcmluZ1Byb2Nlc3MoKTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gIWFjY291bnQoKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQWNjb3VudEJ1dHRvblN0eWxlZCwge1xuICAgICAgICAgICAgICAgIG9uQ2xpY2s6ICgpID0+IHRvbkNvbm5lY3RVSS5vcGVuTW9kYWwoKSxcbiAgICAgICAgICAgICAgICBcImRhdGEtdGMtY29ubmVjdC1idXR0b25cIjogXCJ0cnVlXCIsXG4gICAgICAgICAgICAgICAgc2NhbGU6IFwic1wiLFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFRvbkljb24sIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGZpbGwoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoZW1lLmNvbG9ycy5jb25uZWN0QnV0dG9uLmZvcmVncm91bmQ7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoVGV4dCwge1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJidXR0b24uY29ubmVjdFdhbGxldFwiLFxuICAgICAgICAgICAgICAgICAgICBmb250U2l6ZTogXCIxNXB4XCIsXG4gICAgICAgICAgICAgICAgICAgIGxpbmVIZWlnaHQ6IFwiMThweFwiLFxuICAgICAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiBcIjU5MFwiLFxuICAgICAgICAgICAgICAgICAgICBnZXQgY29sb3IoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoZW1lLmNvbG9ycy5jb25uZWN0QnV0dG9uLmZvcmVncm91bmQ7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIkNvbm5lY3Qgd2FsbGV0XCJcbiAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBhY2NvdW50KCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KERyb3Bkb3duQ29udGFpbmVyU3R5bGVkLCB7XG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoRHJvcGRvd25CdXR0b25TdHlsZWQsIHtcbiAgICAgICAgICAgICAgICAgICAgb25DbGljazogKCkgPT4gc2V0SXNPcGVuZWQoKHYpID0+ICF2KSxcbiAgICAgICAgICAgICAgICAgICAgcmVmOiBzZXRBbmNob3IsXG4gICAgICAgICAgICAgICAgICAgIFwiZGF0YS10Yy1kcm9wZG93bi1idXR0b25cIjogXCJ0cnVlXCIsXG4gICAgICAgICAgICAgICAgICAgIHNjYWxlOiBcInNcIixcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFRleHQsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnRTaXplOiBcIjE1cHhcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IFwiNTkwXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBsaW5lSGVpZ2h0OiBcIjE4cHhcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5vcm1hbGl6ZWRBZGRyZXNzKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChBcnJvd0ljb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdGlvbjogXCJib3R0b21cIlxuICAgICAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChQb3J0YWwsIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IF9lbCQgPSB1bnRyYWNrKCgpID0+IGRvY3VtZW50LmltcG9ydE5vZGUoX3RtcGwkJDQsIHRydWUpKTtcbiAgICAgICAgICAgICAgICAgICAgICB1c2Uoc2V0RmxvYXRpbmcsIF9lbCQpO1xuICAgICAgICAgICAgICAgICAgICAgIF9lbCQuc3R5bGUuc2V0UHJvcGVydHkoXCJ6LWluZGV4XCIsIFwiOTk5XCIpO1xuICAgICAgICAgICAgICAgICAgICAgIF9lbCQuXyRvd25lciA9IGdldE93bmVyKCk7XG4gICAgICAgICAgICAgICAgICAgICAgaW5zZXJ0KF9lbCQsIGNyZWF0ZUNvbXBvbmVudChUcmFuc2l0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkJlZm9yZUVudGVyOiAoZWwpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgYW5pbWF0ZShlbCwgW3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogXCJ0cmFuc2xhdGVZKC04cHgpXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZVkoMClcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICB9XSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAxNTBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgb25FeGl0OiAoZWwsIGRvbmUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgYTIgPSBhbmltYXRlKGVsLCBbe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZVkoMClcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlWSgtOHB4KVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1dLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZHVyYXRpb246IDE1MFxuICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgYTIuZmluaXNoZWQudGhlbihkb25lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGlzT3BlbmVkKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KERyb3Bkb3duU3R5bGVkLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBoaWRkZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICFpc09wZW5lZCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsb3NlOiAoKSA9PiBzZXRJc09wZW5lZChmYWxzZSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZihyJCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IF9yZWYkID0gZHJvcERvd25SZWY7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZW9mIF9yZWYkID09PSBcImZ1bmN0aW9uXCIgPyBfcmVmJChyJCkgOiBkcm9wRG93blJlZiA9IHIkO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIH0pLCBudWxsKTtcbiAgICAgICAgICAgICAgICAgICAgICBpbnNlcnQoX2VsJCwgY3JlYXRlQ29tcG9uZW50KE5vdGlmaWNhdGlvbnNTdHlsZWQsIHt9KSwgbnVsbCk7XG4gICAgICAgICAgICAgICAgICAgICAgY3JlYXRlUmVuZGVyRWZmZWN0KChfcCQpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBfYTIsIF9iMjtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IF92JCA9IHBvc2l0aW9uLnN0cmF0ZWd5LCBfdiQyID0gYCR7KF9hMiA9IHBvc2l0aW9uLnkpICE9IG51bGwgPyBfYTIgOiAwfXB4YCwgX3YkMyA9IGAkeyhfYjIgPSBwb3NpdGlvbi54KSAhPSBudWxsID8gX2IyIDogMH1weGA7XG4gICAgICAgICAgICAgICAgICAgICAgICBfdiQgIT09IF9wJC5fdiQgJiYgX2VsJC5zdHlsZS5zZXRQcm9wZXJ0eShcInBvc2l0aW9uXCIsIF9wJC5fdiQgPSBfdiQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgX3YkMiAhPT0gX3AkLl92JDIgJiYgX2VsJC5zdHlsZS5zZXRQcm9wZXJ0eShcInRvcFwiLCBfcCQuX3YkMiA9IF92JDIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgX3YkMyAhPT0gX3AkLl92JDMgJiYgX2VsJC5zdHlsZS5zZXRQcm9wZXJ0eShcImxlZnRcIiwgX3AkLl92JDMgPSBfdiQzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfcCQ7XG4gICAgICAgICAgICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgX3YkOiB2b2lkIDAsXG4gICAgICAgICAgICAgICAgICAgICAgICBfdiQyOiB2b2lkIDAsXG4gICAgICAgICAgICAgICAgICAgICAgICBfdiQzOiB2b2lkIDBcbiAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2VsJDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSldO1xuICAgICAgICB9XG4gICAgICB9KV07XG4gICAgfVxuICB9KTtcbn07XG5jb25zdCBTdHlsZWRNb2RhbCA9IHN0eWxlZChNb2RhbClgXG4gICAgcGFkZGluZy1sZWZ0OiAyNHB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDI0cHg7XG4gICAgcGFkZGluZy10b3A6IDE4cHg7XG4gICAgcGFkZGluZy1ib3R0b206IDA7XG5cbiAgICAke21lZGlhKFwibW9iaWxlXCIpfSB7XG4gICAgICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICAgICAgcGFkZGluZy1yaWdodDogMDtcbiAgICB9XG5gO1xuY29uc3QgSDFTdHlsZWQkYSA9IHN0eWxlZChIMSlgXG4gICAgbWFyZ2luLXRvcDogMTJweDtcblxuICAgICR7bWVkaWEoXCJtb2JpbGVcIil9IHtcbiAgICAgICAgcGFkZGluZzogMCAxMHB4O1xuICAgIH1cbmA7XG5jb25zdCBMb2FkZXJDb250YWluZXJTdHlsZWQgPSBzdHlsZWQuZGl2YFxuICAgIG1hcmdpbjogMzBweCAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cbiAgICAke21lZGlhKFwibW9iaWxlXCIpfSB7XG4gICAgICAgIGhlaWdodDogMTYwcHg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgfVxuYDtcbnN0eWxlZChUZXh0KWBcbiAgICBtaW4td2lkdGg6IDg0cHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGZvbnQtd2VpZ2h0OiA1OTA7XG5gO1xuc3R5bGVkKFRhYkJhcilgXG4gICAgbWFyZ2luOiAwIGF1dG8gMjJweDtcbmA7XG5jb25zdCBbYXBwU3RhdGUsIHNldEFwcFN0YXRlXSA9IGNyZWF0ZVN0b3JlKHtcbiAgYnV0dG9uUm9vdElkOiBudWxsLFxuICBsYW5ndWFnZTogXCJlblwiLFxuICByZXR1cm5TdHJhdGVneTogXCJiYWNrXCIsXG4gIHR3YVJldHVyblVybDogdm9pZCAwLFxuICB3YWxsZXRzTGlzdENvbmZpZ3VyYXRpb246IHt9LFxuICBlbmFibGVBbmRyb2lkQmFja0hhbmRsZXI6IHRydWVcbn0pO1xuZnVuY3Rpb24gdW5pcShhcnJheSkge1xuICByZXR1cm4gWy4uLm5ldyBTZXQoYXJyYXkpXTtcbn1cbmZ1bmN0aW9uIG1lcmdlQ29uY2F0KGlkS2V5LCBhcnJheTEsIGFycmF5Mikge1xuICByZXR1cm4gYXJyYXkxLm1hcCgoaXRlbTEpID0+IHtcbiAgICBjb25zdCBpdGVtMiA9IGFycmF5Mi5maW5kKChlbGVtKSA9PiBlbGVtW2lkS2V5XSA9PT0gaXRlbTFbaWRLZXldKTtcbiAgICBhcnJheTIgPSBhcnJheTIuZmlsdGVyKChlbGVtKSA9PiBlbGVtW2lkS2V5XSAhPT0gaXRlbTFbaWRLZXldKTtcbiAgICByZXR1cm4gaXRlbTIgPT09IHZvaWQgMCA/IGl0ZW0xIDogaXRlbTI7XG4gIH0pLmNvbmNhdChhcnJheTIpO1xufVxuZnVuY3Rpb24gdWlXYWxsZXRUb1dhbGxldEluZm8odWlXYWxsZXQpIHtcbiAgaWYgKFwianNCcmlkZ2VLZXlcIiBpbiB1aVdhbGxldCkge1xuICAgIHJldHVybiBfX3NwcmVhZFByb3BzKF9fc3ByZWFkVmFsdWVzKHt9LCB1aVdhbGxldCksIHtcbiAgICAgIGluamVjdGVkOiBUb25Db25uZWN0LmlzV2FsbGV0SW5qZWN0ZWQodWlXYWxsZXQuanNCcmlkZ2VLZXkpLFxuICAgICAgZW1iZWRkZWQ6IFRvbkNvbm5lY3QuaXNJbnNpZGVXYWxsZXRCcm93c2VyKHVpV2FsbGV0LmpzQnJpZGdlS2V5KVxuICAgIH0pO1xuICB9XG4gIHJldHVybiB1aVdhbGxldDtcbn1cbmZ1bmN0aW9uIGFwcGx5V2FsbGV0c0xpc3RDb25maWd1cmF0aW9uKHdhbGxldHNMaXN0LCBjb25maWd1cmF0aW9uKSB7XG4gIHZhciBfYTI7XG4gIGlmICghY29uZmlndXJhdGlvbikge1xuICAgIHJldHVybiB3YWxsZXRzTGlzdDtcbiAgfVxuICBpZiAoKF9hMiA9IGNvbmZpZ3VyYXRpb24uaW5jbHVkZVdhbGxldHMpID09IG51bGwgPyB2b2lkIDAgOiBfYTIubGVuZ3RoKSB7XG4gICAgd2FsbGV0c0xpc3QgPSBtZXJnZUNvbmNhdChcbiAgICAgIFwibmFtZVwiLFxuICAgICAgd2FsbGV0c0xpc3QsXG4gICAgICBjb25maWd1cmF0aW9uLmluY2x1ZGVXYWxsZXRzLm1hcCh1aVdhbGxldFRvV2FsbGV0SW5mbylcbiAgICApO1xuICB9XG4gIHJldHVybiB3YWxsZXRzTGlzdDtcbn1cbmZ1bmN0aW9uIHN1cHBvcnRzRGVza3RvcCh3YWxsZXRJbmZvKSB7XG4gIHJldHVybiB3YWxsZXRJbmZvLnBsYXRmb3Jtcy5zb21lKCh3KSA9PiBbXCJtYWNvc1wiLCBcImxpbnV4XCIsIFwid2luZG93c1wiXS5pbmNsdWRlcyh3KSk7XG59XG5mdW5jdGlvbiBzdXBwb3J0c01vYmlsZSh3YWxsZXRJbmZvKSB7XG4gIHJldHVybiB3YWxsZXRJbmZvLnBsYXRmb3Jtcy5zb21lKCh3KSA9PiBbXCJpb3NcIiwgXCJhbmRyb2lkXCJdLmluY2x1ZGVzKHcpKTtcbn1cbmZ1bmN0aW9uIHN1cHBvcnRzRXh0ZW5zaW9uKHdhbGxldEluZm8pIHtcbiAgcmV0dXJuIHdhbGxldEluZm8ucGxhdGZvcm1zLnNvbWUoKHcpID0+IFtcImNocm9tZVwiLCBcImZpcmVmb3hcIiwgXCJzYWZhcmlcIl0uaW5jbHVkZXModykpO1xufVxuZnVuY3Rpb24gZXFXYWxsZXROYW1lKHdhbGxldDEsIG5hbWUpIHtcbiAgaWYgKCFuYW1lKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiB3YWxsZXQxLm5hbWUudG9Mb3dlckNhc2UoKSA9PT0gbmFtZS50b0xvd2VyQ2FzZSgpIHx8IHdhbGxldDEuYXBwTmFtZS50b0xvd2VyQ2FzZSgpID09PSBuYW1lLnRvTG93ZXJDYXNlKCk7XG59XG5jb25zdCBEZXNrdG9wU2VsZWN0V2FsbGV0TW9kYWxTdHlsZWQgPSBzdHlsZWQuZGl2YFxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuYDtcbmNvbnN0IEgxU3R5bGVkJDkgPSBzdHlsZWQoSDEpYFxuICAgIG1hcmdpbi1ib3R0b206IDE4cHg7XG5gO1xuc3R5bGVkLmRpdmBcbiAgICBoZWlnaHQ6IDFweDtcbiAgICBtYXJnaW46IDAgLTI0cHg7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSArIDQ4cHgpO1xuICAgIG9wYWNpdHk6IDAuMTI7XG4gICAgYmFja2dyb3VuZDogJHsocHJvcHMpID0+IHByb3BzLmlzU2hvd24gPyBwcm9wcy50aGVtZS5jb2xvcnMuaWNvbi5zZWNvbmRhcnkgOiBcInRyYW5zcGFyZW50XCJ9O1xuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQgMC4xNXMgZWFzZS1pbi1vdXQ7XG5cbiAgICAke21lZGlhKFwibW9iaWxlXCIpfSB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cbmA7XG5jb25zdCBXYWxsZXRzVWwgPSBzdHlsZWQudWxgXG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpdCwgOTJweCk7XG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvO1xuICAgIGFsaWduLWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgcm93LWdhcDogOHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDAgMCAxNnB4O1xuICAgIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XG4gICAgbWF4LXdpZHRoOiA0MDBweDtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuXG4gICAgPiBsaSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBoZWlnaHQ6IGZpdC1jb250ZW50O1xuICAgIH1cblxuICAgICR7bWVkaWEoXCJtb2JpbGVcIil9IHtcbiAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoNCwgMWZyKTtcbiAgICAgICAgZ2FwOiAwO1xuICAgICAgICBwYWRkaW5nOiA4cHggMTJweCAxNnB4O1xuICAgICAgICBtYXgtd2lkdGg6IG5vbmU7XG5cbiAgICAgICAgPiBsaSB7XG4gICAgICAgICAgICBtaW4td2lkdGg6IDc4cHg7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICB9XG5cbiAgICAgICAgPiBsaSA+ICoge1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIH1cbiAgICB9XG5gO1xuc3R5bGVkKEJ1dHRvbilgXG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luOiAwIGF1dG8gMXB4O1xuICAgIGZvbnQtc2l6ZTogMTVweDtcbmA7XG5jb25zdCBTdHlsZWRJY29uQnV0dG9uJDUgPSBzdHlsZWQoSWNvbkJ1dHRvbilgXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMTZweDtcbiAgICBsZWZ0OiAxNnB4O1xuYDtcbmNvbnN0IFdhbGxldExhYmVsZWRJdGVtU3R5bGVkID0gc3R5bGVkKFdhbGxldExhYmVsZWRJdGVtKWBcbiAgICBvcGFjaXR5OiAkeyhwcm9wcykgPT4gcHJvcHMud2l0aE9wYWNpdHkgPyBcIjAuNFwiIDogXCIxXCJ9O1xuYDtcbmNvbnN0IFdhbGxldHNOb3RTdXBwb3J0ZWROb3RpZmllciA9IHN0eWxlZC5kaXZgXG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IGF1dG8gMjhweDtcbiAgICBnYXA6IDE2cHg7XG4gICAgcGFkZGluZzogMTZweDtcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDE2cHg7XG4gICAgY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dC5zZWNvbmRhcnl9O1xuICAgIGJhY2tncm91bmQ6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZC50aW50fTtcblxuICAgICR7bWVkaWEoXCJtb2JpbGVcIil9IHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDE2cHg7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMTZweDtcbiAgICB9XG5gO1xuY29uc3QgV2FsbGV0c05vdFN1cHBvcnRlZE5vdGlmaWVyVGV4dCA9IHN0eWxlZChIMilgXG4gICAgY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dC5zZWNvbmRhcnl9O1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgbWFyZ2luOiAwO1xuYDtcbmNvbnN0IEVycm9yQm94U3R5bGVkID0gc3R5bGVkLmRpdmBcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm90dG9tOiAxNHB4O1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAwKTtcblxuICAgIHRleHQtd3JhcDogbm93cmFwO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZ2FwOiA2cHg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBib3JkZXItcmFkaXVzOiAxOHB4O1xuICAgIG1pbi13aWR0aDogMTI2cHg7XG4gICAgcGFkZGluZzogOXB4IDE2cHggOXB4IDEwcHg7XG5cbiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDBweCAycHggOHB4IHJnYmEoMCwgMCwgMCwgMC4wOCkpO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZC5zZWdtZW50fTtcbmA7XG5jb25zdCBfdG1wbCQkMyA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHdpZHRoPVwiMTZcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiBmaWxsPVwibm9uZVwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj48ZyBjbGlwLXBhdGg9XCJ1cmwoI2NsaXAwXzUxMjJfMTAzNTUpXCI+PGNpcmNsZSBjeD1cIjhcIiBjeT1cIjhcIiByPVwiOFwiPjwvY2lyY2xlPjxjaXJjbGUgY3g9XCI4XCIgY3k9XCIxMVwiIHI9XCIxXCI+PC9jaXJjbGU+PHBhdGggZD1cIk03LjA0OTk0IDQuOTk4NzVDNy4wMjI3NyA0LjQ1NTQyIDcuNDU1OTggNCA4IDRDOC41NDQwMiA0IDguOTc3MjMgNC40NTU0MSA4Ljk1MDA2IDQuOTk4NzVMOC43ODc0NSA4LjI1MDk0QzguNzY2NDcgOC42NzA1NSA4LjQyMDE0IDkgOCA5QzcuNTc5ODYgOSA3LjIzMzUzIDguNjcwNTUgNy4yMTI1NSA4LjI1MDk0TDcuMDQ5OTQgNC45OTg3NVpcIj48L3BhdGg+PC9nPjxkZWZzPjxjbGlwUGF0aCBpZD1cImNsaXAwXzUxMjJfMTAzNTVcIj48cmVjdCB3aWR0aD1cIjE2XCIgaGVpZ2h0PVwiMTZcIj48L3JlY3Q+PC9jbGlwUGF0aD48L2RlZnM+PC9zdmc+YCksIF90bXBsJDIkMSA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB3aWR0aD1cIjI4XCIgaGVpZ2h0PVwiMjhcIiB2aWV3Qm94PVwiMCAwIDI4IDI4XCIgZmlsbD1cIm5vbmVcIj48Y2lyY2xlIGN4PVwiMTRcIiBjeT1cIjE0XCIgcj1cIjEyXCI+PC9jaXJjbGU+PGNpcmNsZSBjeD1cIjE0XCIgY3k9XCIxOC45XCIgcj1cIjEuNFwiPjwvY2lyY2xlPjxwYXRoIGQ9XCJNMTIuNjY1OCA4Ljg5ODQ1QzEyLjYzIDguMTM2OTggMTMuMjM3NyA3LjUgMTQgNy41QzE0Ljc2MjMgNy41IDE1LjM3IDguMTM2OTggMTUuMzM0MiA4Ljg5ODQ1TDE1LjA0NyAxNS4wMDEzQzE1LjAyMDcgMTUuNTYwNCAxNC41NTk3IDE2LjAwMDIgMTQgMTYuMDAwMkMxMy40NDAzIDE2LjAwMDIgMTIuOTc5MyAxNS41NjA0IDEyLjk1MyAxNS4wMDEzTDEyLjY2NTggOC44OTg0NVpcIj48L3BhdGg+PC9zdmc+YCk7XG5jb25zdCBFeGNsYW1hdGlvbkljb24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBzaXplID0gKCkgPT4gcHJvcHMuc2l6ZTtcbiAgY29uc3QgZmlsbCA9ICgpID0+IHByb3BzLmZpbGwgfHwgdGhlbWUuY29sb3JzLmljb24uZXJyb3I7XG4gIHJldHVybiBjcmVhdGVNZW1vKCgoKSA9PiB7XG4gICAgY29uc3QgX2MkID0gY3JlYXRlTWVtbygoKSA9PiBzaXplKCkgPT09IFwiMTZcIik7XG4gICAgcmV0dXJuICgpID0+IF9jJCgpID8gKCgpID0+IHtcbiAgICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkMy5jbG9uZU5vZGUodHJ1ZSksIF9lbCQyID0gX2VsJC5maXJzdENoaWxkLCBfZWwkMyA9IF9lbCQyLmZpcnN0Q2hpbGQsIF9lbCQ0ID0gX2VsJDMubmV4dFNpYmxpbmcsIF9lbCQ1ID0gX2VsJDQubmV4dFNpYmxpbmcsIF9lbCQ2ID0gX2VsJDIubmV4dFNpYmxpbmcsIF9lbCQ3ID0gX2VsJDYuZmlyc3RDaGlsZCwgX2VsJDggPSBfZWwkNy5maXJzdENoaWxkO1xuICAgICAgY3JlYXRlUmVuZGVyRWZmZWN0KChfcCQpID0+IHtcbiAgICAgICAgY29uc3QgX3YkID0gZmlsbCgpLCBfdiQyID0gdGhlbWUuY29sb3JzLmNvbnN0YW50LndoaXRlLCBfdiQzID0gdGhlbWUuY29sb3JzLmNvbnN0YW50LndoaXRlLCBfdiQ0ID0gdGhlbWUuY29sb3JzLmNvbnN0YW50LndoaXRlO1xuICAgICAgICBfdiQgIT09IF9wJC5fdiQgJiYgc2V0QXR0cmlidXRlKF9lbCQzLCBcImZpbGxcIiwgX3AkLl92JCA9IF92JCk7XG4gICAgICAgIF92JDIgIT09IF9wJC5fdiQyICYmIHNldEF0dHJpYnV0ZShfZWwkNCwgXCJmaWxsXCIsIF9wJC5fdiQyID0gX3YkMik7XG4gICAgICAgIF92JDMgIT09IF9wJC5fdiQzICYmIHNldEF0dHJpYnV0ZShfZWwkNSwgXCJmaWxsXCIsIF9wJC5fdiQzID0gX3YkMyk7XG4gICAgICAgIF92JDQgIT09IF9wJC5fdiQ0ICYmIHNldEF0dHJpYnV0ZShfZWwkOCwgXCJmaWxsXCIsIF9wJC5fdiQ0ID0gX3YkNCk7XG4gICAgICAgIHJldHVybiBfcCQ7XG4gICAgICB9LCB7XG4gICAgICAgIF92JDogdm9pZCAwLFxuICAgICAgICBfdiQyOiB2b2lkIDAsXG4gICAgICAgIF92JDM6IHZvaWQgMCxcbiAgICAgICAgX3YkNDogdm9pZCAwXG4gICAgICB9KTtcbiAgICAgIHJldHVybiBfZWwkO1xuICAgIH0pKCkgOiAoKCkgPT4ge1xuICAgICAgY29uc3QgX2MkMiA9IGNyZWF0ZU1lbW8oKCkgPT4gc2l6ZSgpID09PSBcIjI4XCIpO1xuICAgICAgcmV0dXJuICgpID0+IF9jJDIoKSA/ICgoKSA9PiB7XG4gICAgICAgIGNvbnN0IF9lbCQ5ID0gX3RtcGwkMiQxLmNsb25lTm9kZSh0cnVlKSwgX2VsJDEwID0gX2VsJDkuZmlyc3RDaGlsZCwgX2VsJDExID0gX2VsJDEwLm5leHRTaWJsaW5nLCBfZWwkMTIgPSBfZWwkMTEubmV4dFNpYmxpbmc7XG4gICAgICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoX3AkKSA9PiB7XG4gICAgICAgICAgY29uc3QgX3YkNSA9IHByb3BzLmNsYXNzLCBfdiQ2ID0gZmlsbCgpLCBfdiQ3ID0gdGhlbWUuY29sb3JzLmNvbnN0YW50LndoaXRlLCBfdiQ4ID0gdGhlbWUuY29sb3JzLmNvbnN0YW50LndoaXRlO1xuICAgICAgICAgIF92JDUgIT09IF9wJC5fdiQ1ICYmIHNldEF0dHJpYnV0ZShfZWwkOSwgXCJjbGFzc1wiLCBfcCQuX3YkNSA9IF92JDUpO1xuICAgICAgICAgIF92JDYgIT09IF9wJC5fdiQ2ICYmIHNldEF0dHJpYnV0ZShfZWwkMTAsIFwiZmlsbFwiLCBfcCQuX3YkNiA9IF92JDYpO1xuICAgICAgICAgIF92JDcgIT09IF9wJC5fdiQ3ICYmIHNldEF0dHJpYnV0ZShfZWwkMTEsIFwiZmlsbFwiLCBfcCQuX3YkNyA9IF92JDcpO1xuICAgICAgICAgIF92JDggIT09IF9wJC5fdiQ4ICYmIHNldEF0dHJpYnV0ZShfZWwkMTIsIFwiZmlsbFwiLCBfcCQuX3YkOCA9IF92JDgpO1xuICAgICAgICAgIHJldHVybiBfcCQ7XG4gICAgICAgIH0sIHtcbiAgICAgICAgICBfdiQ1OiB2b2lkIDAsXG4gICAgICAgICAgX3YkNjogdm9pZCAwLFxuICAgICAgICAgIF92JDc6IHZvaWQgMCxcbiAgICAgICAgICBfdiQ4OiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBfZWwkOTtcbiAgICAgIH0pKCkgOiBudWxsO1xuICAgIH0pKCk7XG4gIH0pKCkpO1xufTtcbmNvbnN0IF90bXBsJCQyID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxsaT48L2xpPmApO1xuY29uc3QgQWxsV2FsbGV0c0xpc3RNb2RhbCA9IChwcm9wcykgPT4ge1xuICBjb25zdCBtYXhIZWlnaHQgPSAoKSA9PiBpc01vYmlsZSgpID8gdm9pZCAwIDogNTEwO1xuICBjb25zdCBbZXJyb3JTdXBwb3J0T3BlbmVkLCBzZXRFcnJvclN1cHBvcnRPcGVuZWRdID0gY3JlYXRlU2lnbmFsKG51bGwpO1xuICBsZXQgdGltZW91dElkID0gbnVsbDtcbiAgY29uc3Qgb25FcnJvckNsaWNrID0gKHdhbGxldCkgPT4ge1xuICAgIHNldEVycm9yU3VwcG9ydE9wZW5lZCh3YWxsZXQpO1xuICAgIGlmICh0aW1lb3V0SWQgIT0gbnVsbCkge1xuICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXRJZCk7XG4gICAgfVxuICAgIHRpbWVvdXRJZCA9IHNldFRpbWVvdXQoKCkgPT4gc2V0RXJyb3JTdXBwb3J0T3BlbmVkKG51bGwpLCAxNTAwKTtcbiAgfTtcbiAgY29uc3QgaGFuZGxlU2VsZWN0V2FsbGV0ID0gKHdhbGxldCkgPT4ge1xuICAgIGlmICghd2FsbGV0LmlzU3VwcG9ydFJlcXVpcmVkRmVhdHVyZXMgJiYgcHJvcHMuZmVhdHVyZUNoZWNrTW9kZSA9PT0gXCJzdHJpY3RcIikge1xuICAgICAgb25FcnJvckNsaWNrKHdhbGxldCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHByb3BzLm9uU2VsZWN0KHdhbGxldCk7XG4gIH07XG4gIGNvbnN0IHdhbGxldHNMaXN0ID0gKCkgPT4gaXNNb2JpbGUoKSA/IHByb3BzLndhbGxldHNMaXN0LmZpbHRlcihzdXBwb3J0c01vYmlsZSkgOiBwcm9wcy53YWxsZXRzTGlzdDtcbiAgY29uc3Qgc3VwcG9ydGVkV2FsbGV0cyA9ICgpID0+IHdhbGxldHNMaXN0KCkuZmlsdGVyKCh3YWxsZXQpID0+IHdhbGxldC5pc1N1cHBvcnRSZXF1aXJlZEZlYXR1cmVzKTtcbiAgY29uc3QgdW5zdXBwb3J0ZWRXYWxsZXRzID0gKCkgPT4gd2FsbGV0c0xpc3QoKS5maWx0ZXIoKHdhbGxldCkgPT4gIXdhbGxldC5pc1N1cHBvcnRSZXF1aXJlZEZlYXR1cmVzKTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChEZXNrdG9wU2VsZWN0V2FsbGV0TW9kYWxTdHlsZWQsIHtcbiAgICBcImRhdGEtdGMtd2FsbGV0cy1tb2RhbC1saXN0XCI6IFwidHJ1ZVwiLFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFN0eWxlZEljb25CdXR0b24kNSwge1xuICAgICAgICBpY29uOiBcImFycm93XCIsXG4gICAgICAgIG9uQ2xpY2s6ICgpID0+IHByb3BzLm9uQmFjaygpXG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEgxU3R5bGVkJDksIHtcbiAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwud2FsbGV0c1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJXYWxsZXRzXCJcbiAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2Nyb2xsQ29udGFpbmVyLCB7XG4gICAgICAgIGdldCBtYXhIZWlnaHQoKSB7XG4gICAgICAgICAgcmV0dXJuIG1heEhlaWdodCgpO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoV2FsbGV0c1VsLCB7XG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoRm9yLCB7XG4gICAgICAgICAgICAgICAgZ2V0IGVhY2goKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gc3VwcG9ydGVkV2FsbGV0cygpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46ICh3YWxsZXQpID0+ICgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICBjb25zdCBfZWwkID0gX3RtcGwkJDIuY2xvbmVOb2RlKHRydWUpO1xuICAgICAgICAgICAgICAgICAgaW5zZXJ0KF9lbCQsIGNyZWF0ZUNvbXBvbmVudChXYWxsZXRMYWJlbGVkSXRlbVN0eWxlZCwge1xuICAgICAgICAgICAgICAgICAgICB3YWxsZXQsXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6ICgpID0+IHByb3BzLm9uU2VsZWN0KHdhbGxldClcbiAgICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBfZWwkO1xuICAgICAgICAgICAgICAgIH0pKClcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHVuc3VwcG9ydGVkV2FsbGV0cygpLmxlbmd0aCA+IDAgJiYgcHJvcHMuZmVhdHVyZUNoZWNrTW9kZSAhPT0gXCJoaWRlXCI7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChXYWxsZXRzTm90U3VwcG9ydGVkTm90aWZpZXIsIHtcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChXYWxsZXRzTm90U3VwcG9ydGVkTm90aWZpZXJUZXh0LCB7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLmFsbFdhbGxldHMud2FsbGV0c0JlbG93Tm90U3VwcG9ydGVkXCIsXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIlRoZSB3YWxsZXRzIGJlbG93IGRvblxcdTIwMTl0IHN1cHBvcnQgYWxsIGZlYXR1cmVzIG9mIHRoZSBjb25uZWN0ZWQgc2VydmljZS4gWW91IGNhbiB1c2UgeW91ciByZWNvdmVyeSBwaHJhc2UgaW4gb25lIG9mIHRoZSBzdXBwb3J0ZWQgd2FsbGV0cyBhYm92ZS5cIlxuICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChFeGNsYW1hdGlvbkljb24sIHtcbiAgICAgICAgICAgICAgICAgICAgc2l6ZTogXCIyOFwiXG4gICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFdhbGxldHNVbCwge1xuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoRm9yLCB7XG4gICAgICAgICAgICAgICAgICAgIGdldCBlYWNoKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB1bnN1cHBvcnRlZFdhbGxldHMoKTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46ICh3YWxsZXQpID0+ICgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgY29uc3QgX2VsJDIgPSBfdG1wbCQkMi5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgaW5zZXJ0KF9lbCQyLCBjcmVhdGVDb21wb25lbnQoV2FsbGV0TGFiZWxlZEl0ZW1TdHlsZWQsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdhbGxldCxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6ICgpID0+IGhhbmRsZVNlbGVjdFdhbGxldCh3YWxsZXQpLFxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IHdpdGhPcGFjaXR5KCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMuZmVhdHVyZUNoZWNrTW9kZSA9PT0gXCJzdHJpY3RcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9lbCQyO1xuICAgICAgICAgICAgICAgICAgICB9KSgpXG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoVHJhbnNpdGlvbiwge1xuICAgICAgICAgICAgICAgIG9uQmVmb3JlRW50ZXI6IChlbCkgPT4ge1xuICAgICAgICAgICAgICAgICAgYW5pbWF0ZShlbCwgW3tcbiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMCxcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZSgtNTAlLCA0NHB4KVwiXG4gICAgICAgICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDEsXG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogXCJ0cmFuc2xhdGUoLTUwJSwgMClcIlxuICAgICAgICAgICAgICAgICAgfV0sIHtcbiAgICAgICAgICAgICAgICAgICAgZHVyYXRpb246IDE1MCxcbiAgICAgICAgICAgICAgICAgICAgZWFzaW5nOiBcImVhc2Utb3V0XCJcbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgb25FeGl0OiAoZWwsIGRvbmUpID0+IHtcbiAgICAgICAgICAgICAgICAgIGFuaW1hdGUoZWwsIFt7XG4gICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDEsXG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogXCJ0cmFuc2xhdGUoLTUwJSwgMClcIlxuICAgICAgICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlKC01MCUsIDQ0cHgpXCJcbiAgICAgICAgICAgICAgICAgIH1dLCB7XG4gICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAxNTAsXG4gICAgICAgICAgICAgICAgICAgIGVhc2luZzogXCJlYXNlLW91dFwiXG4gICAgICAgICAgICAgICAgICB9KS5maW5pc2hlZC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgZG9uZSgpO1xuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVycm9yU3VwcG9ydE9wZW5lZCgpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChFcnJvckJveFN0eWxlZCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChFcnJvckljb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaXplOiBcInhzXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChUZXh0LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuYWxsV2FsbGV0cy53YWxsZXROb3RTdXBwb3J0U2VydmljZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCB0cmFuc2xhdGlvblZhbHVlcygpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IGVycm9yU3VwcG9ydE9wZW5lZCgpLm5hbWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZU1lbW8oKCkgPT4gZXJyb3JTdXBwb3J0T3BlbmVkKCkubmFtZSksIFwiIGRvZXNuXFx1MjAxOXQgc3VwcG9ydCBjb25uZWN0ZWQgc2VydmljZVwiXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSldO1xuICAgICAgICB9XG4gICAgICB9KV07XG4gICAgfVxuICB9KTtcbn07XG5jb25zdCB0Z0J1dHRvbkJvcmRlcnMgPSB7XG4gIG06IFwiMTZweFwiLFxuICBzOiBcIjEycHhcIixcbiAgbm9uZTogXCIwXCJcbn07XG5jb25zdCB0Z0ljb25Cb3JkZXJzID0ge1xuICBtOiBcIjZweFwiLFxuICBzOiBcIjZweFwiLFxuICBub25lOiBcIjBcIlxufTtcbmNvbnN0IERlc2t0b3BDb25uZWN0aW9uTW9kYWxTdHlsZWQgPSBzdHlsZWQuZGl2YFxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbmA7XG5jb25zdCBCb2R5U3R5bGVkJDEgPSBzdHlsZWQuZGl2YFxuICAgIGZsZXg6IDE7XG4gICAgbWFyZ2luLXRvcDogJHsocHJvcHMpID0+IHByb3BzLnFyID8gXCIwXCIgOiBcIjE4cHhcIn07XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgbWluLWhlaWdodDogMjMycHg7XG5gO1xuY29uc3QgUVJDb2RlU3R5bGVkJDEgPSBzdHlsZWQoUVJDb2RlKWBcbiAgICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuYDtcbmNvbnN0IEgxU3R5bGVkJDggPSBzdHlsZWQoSDEpYFxuICAgIG1heC13aWR0aDogMjg4cHg7XG4gICAgbWFyZ2luOiAwIGF1dG8gMnB4O1xuYDtcbmNvbnN0IEgyU3R5bGVkJDQgPSBzdHlsZWQoSDIpYFxuICAgIG1heC13aWR0aDogMjg4cHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbjogMCBhdXRvIDIwcHg7XG5gO1xuY29uc3QgU3R5bGVkSWNvbkJ1dHRvbiQ0ID0gc3R5bGVkKEljb25CdXR0b24pYFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDE2cHg7XG4gICAgbGVmdDogMTZweDtcbmA7XG5jb25zdCBCdXR0b25zQ29udGFpbmVyU3R5bGVkJDIgPSBzdHlsZWQuZGl2YFxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgZ2FwOiA4cHg7XG4gICAgcGFkZGluZy1ib3R0b206IDE2cHg7XG5gO1xuY29uc3QgQm90dG9tQnV0dG9uc0NvbnRhaW5lclN0eWxlZCA9IHN0eWxlZChCdXR0b25zQ29udGFpbmVyU3R5bGVkJDIpYFxuICAgIHBhZGRpbmctYm90dG9tOiAwO1xuYDtcbmNvbnN0IEZvb3RlckJ1dHRvbiQxID0gc3R5bGVkKEJ1dHRvbilgXG4gICAgbWFyZ2luLWJvdHRvbTogMjRweDtcbmA7XG5jb25zdCBMb2FkZXJTdHlsZWQkMSA9IHN0eWxlZChMb2FkZXJJY29uKWBcbiAgICBtYXJnaW4tYm90dG9tOiAxOHB4O1xuICAgIG1hcmdpbi10b3A6IDJweDtcbmA7XG5jb25zdCBFcnJvckljb25TdHlsZWQkMiA9IHN0eWxlZChFcnJvckljb24pYFxuICAgIG1hcmdpbi1ib3R0b206IDE2cHg7XG5gO1xuY29uc3QgQm9keVRleHRTdHlsZWQkMiA9IHN0eWxlZChIMilgXG4gICAgY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dC5zZWNvbmRhcnl9O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuYDtcbmNvbnN0IFRnQnV0dG9uU3R5bGVkID0gc3R5bGVkKEJ1dHRvbilgXG4gICAgbWFyZ2luLXRvcDogLThweDtcbiAgICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDEycHggMTJweCAxMnB4IDIwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogJHsocHJvcHMpID0+IHRnQnV0dG9uQm9yZGVyc1twcm9wcy50aGVtZS5ib3JkZXJSYWRpdXNdfTtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgbGluZS1oZWlnaHQ6IDIwcHg7XG5gO1xuY29uc3QgVGdJbWFnZVN0eWxlZCA9IHN0eWxlZChJbWFnZSlgXG4gICAgd2lkdGg6IDMycHg7XG4gICAgaGVpZ2h0OiAzMnB4O1xuICAgIGJvcmRlci1yYWRpdXM6ICR7KHByb3BzKSA9PiB0Z0ljb25Cb3JkZXJzW3Byb3BzLnRoZW1lLmJvcmRlclJhZGl1c119O1xuYDtcbmNvbnN0IFRyYW5zbGF0aW9uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IFt0Ml0gPSB1c2VJMThuKCk7XG4gIHJldHVybiBjcmVhdGVNZW1vKCgpID0+IHtcbiAgICB2YXIgX2EyO1xuICAgIHJldHVybiB0Mihwcm9wcy50cmFuc2xhdGlvbktleSwgcHJvcHMudHJhbnNsYXRpb25WYWx1ZXMsIChfYTIgPSBwcm9wcy5jaGlsZHJlbikgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi50b1N0cmluZygpKTtcbiAgfSk7XG59O1xuZnVuY3Rpb24gYWRkUmV0dXJuU3RyYXRlZ3kodXJsLCBzdHJhdGVneSkge1xuICBsZXQgcmV0dXJuU3RyYXRlZ3k7XG4gIGlmICh0eXBlb2Ygc3RyYXRlZ3kgPT09IFwic3RyaW5nXCIpIHtcbiAgICByZXR1cm5TdHJhdGVneSA9IHN0cmF0ZWd5O1xuICB9IGVsc2Uge1xuICAgIHJldHVyblN0cmF0ZWd5ID0gaXNJblRNQSgpID8gc3RyYXRlZ3kudHdhUmV0dXJuVXJsIHx8IHN0cmF0ZWd5LnJldHVyblN0cmF0ZWd5IDogXCJub25lXCI7XG4gIH1cbiAgY29uc3QgbmV3VXJsID0gYWRkUXVlcnlQYXJhbWV0ZXIodXJsLCBcInJldFwiLCByZXR1cm5TdHJhdGVneSk7XG4gIGlmICghaXNUZWxlZ3JhbVVybCh1cmwpKSB7XG4gICAgcmV0dXJuIG5ld1VybDtcbiAgfVxuICBjb25zdCBsYXN0UGFyYW0gPSBuZXdVcmwuc2xpY2UobmV3VXJsLmxhc3RJbmRleE9mKFwiJlwiKSArIDEpO1xuICByZXR1cm4gbmV3VXJsLnNsaWNlKDAsIG5ld1VybC5sYXN0SW5kZXhPZihcIiZcIikpICsgXCItXCIgKyBlbmNvZGVUZWxlZ3JhbVVybFBhcmFtZXRlcnMobGFzdFBhcmFtKTtcbn1cbmZ1bmN0aW9uIHJlZGlyZWN0VG9UZWxlZ3JhbSh1bml2ZXJzYWxMaW5rLCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBfX3NwcmVhZFZhbHVlcyh7fSwgb3B0aW9ucyk7XG4gIGNvbnN0IGRpcmVjdExpbmsgPSBjb252ZXJ0VG9UR0RpcmVjdExpbmsodW5pdmVyc2FsTGluayk7XG4gIGNvbnN0IGRpcmVjdExpbmtVcmwgPSBuZXcgVVJMKGRpcmVjdExpbmspO1xuICBpZiAoIWRpcmVjdExpbmtVcmwuc2VhcmNoUGFyYW1zLmhhcyhcInN0YXJ0YXBwXCIpKSB7XG4gICAgZGlyZWN0TGlua1VybC5zZWFyY2hQYXJhbXMuYXBwZW5kKFwic3RhcnRhcHBcIiwgXCJ0b25jb25uZWN0XCIpO1xuICB9XG4gIGlmIChpc0luVGVsZWdyYW1Ccm93c2VyKCkpIHtcbiAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJiYWNrXCI7XG4gICAgY29uc3QgbGlua1dpdFN0cmF0ZWd5ID0gYWRkUmV0dXJuU3RyYXRlZ3koZGlyZWN0TGlua1VybC50b1N0cmluZygpLCBvcHRpb25zLnJldHVyblN0cmF0ZWd5KTtcbiAgICBvcGVuTGlua0JsYW5rKGxpbmtXaXRTdHJhdGVneSk7XG4gIH0gZWxzZSBpZiAoaXNJblRNQSgpKSB7XG4gICAgaWYgKGlzVG1hUGxhdGZvcm0oXCJpb3NcIiwgXCJhbmRyb2lkXCIsIFwibWFjb3NcIiwgXCJ0ZGVza3RvcFwiLCBcIndlYlwiKSkge1xuICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwiYmFja1wiO1xuICAgICAgY29uc3QgbGlua1dpdFN0cmF0ZWd5ID0gYWRkUmV0dXJuU3RyYXRlZ3koXG4gICAgICAgIGRpcmVjdExpbmtVcmwudG9TdHJpbmcoKSxcbiAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneVxuICAgICAgKTtcbiAgICAgIHNlbmRPcGVuVGVsZWdyYW1MaW5rKGxpbmtXaXRTdHJhdGVneSk7XG4gICAgfSBlbHNlIGlmIChpc1RtYVBsYXRmb3JtKFwid2ViYVwiKSkge1xuICAgICAgc2VuZE9wZW5UZWxlZ3JhbUxpbmsoYWRkUmV0dXJuU3RyYXRlZ3koZGlyZWN0TGlua1VybC50b1N0cmluZygpLCBvcHRpb25zKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIG9wZW5MaW5rQmxhbmsoYWRkUmV0dXJuU3RyYXRlZ3koZGlyZWN0TGlua1VybC50b1N0cmluZygpLCBvcHRpb25zKSk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGlmIChpc09TKFwiaW9zXCIpKSB7XG4gICAgICBpZiAob3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9PT0gXCJiYWNrXCIpIHtcbiAgICAgICAgaWYgKGlzQnJvd3NlcihcInNhZmFyaVwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcImJhY2tcIjtcbiAgICAgICAgfSBlbHNlIGlmIChpc0Jyb3dzZXIoXCJjaHJvbWVcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJnb29nbGVjaHJvbWU6Ly9cIjtcbiAgICAgICAgfSBlbHNlIGlmIChpc0Jyb3dzZXIoXCJmaXJlZm94XCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwiZmlyZWZveDovL1wiO1xuICAgICAgICB9IGVsc2UgaWYgKGlzQnJvd3NlcihcIm9wZXJhXCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwib3BlcmEtaHR0cDovL1wiO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBsb2NhdGlvbi5ocmVmO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBjb25zdCBpc0Nocm9tZSA9IGlzQnJvd3NlcihcImNocm9tZVwiKTtcbiAgICAgIGNvbnN0IGlzRmlyZWZveCA9IGlzQnJvd3NlcihcImZpcmVmb3hcIik7XG4gICAgICBjb25zdCB1c2VEZWVwTGluayA9IChpc0Nocm9tZSB8fCBpc0ZpcmVmb3gpICYmICFvcHRpb25zLmZvcmNlUmVkaXJlY3Q7XG4gICAgICBpZiAodXNlRGVlcExpbmspIHtcbiAgICAgICAgY29uc3QgbGlua1dpdGhTdHJhdGVneSA9IGFkZFJldHVyblN0cmF0ZWd5KFxuICAgICAgICAgIGRpcmVjdExpbmtVcmwudG9TdHJpbmcoKSxcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5XG4gICAgICAgICk7XG4gICAgICAgIGNvbnN0IGRlZXBMaW5rID0gY29udmVydFRvVEdEZWVwTGluayhsaW5rV2l0aFN0cmF0ZWd5KTtcbiAgICAgICAgb3BlbkRlZXBsaW5rV2l0aEZhbGxiYWNrKGRlZXBMaW5rLCAoKSA9PiBvcGVuTGlua0JsYW5rKGxpbmtXaXRoU3RyYXRlZ3kpKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnN0IGxpbmtXaXRoU3RyYXRlZ3kgPSBhZGRSZXR1cm5TdHJhdGVneShcbiAgICAgICAgICBkaXJlY3RMaW5rVXJsLnRvU3RyaW5nKCksXG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneVxuICAgICAgICApO1xuICAgICAgICBvcGVuTGlua0JsYW5rKGxpbmtXaXRoU3RyYXRlZ3kpO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoaXNPUyhcImFuZHJvaWRcIikpIHtcbiAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcImJhY2tcIjtcbiAgICAgIGNvbnN0IGlzQ2hyb21lID0gaXNCcm93c2VyKFwiY2hyb21lXCIpO1xuICAgICAgY29uc3QgaXNGaXJlZm94ID0gaXNCcm93c2VyKFwiZmlyZWZveFwiKTtcbiAgICAgIGNvbnN0IHVzZURlZXBMaW5rID0gKGlzQ2hyb21lIHx8IGlzRmlyZWZveCkgJiYgIW9wdGlvbnMuZm9yY2VSZWRpcmVjdDtcbiAgICAgIGlmICh1c2VEZWVwTGluaykge1xuICAgICAgICBjb25zdCBsaW5rV2l0aFN0cmF0ZWd5ID0gYWRkUmV0dXJuU3RyYXRlZ3koXG4gICAgICAgICAgZGlyZWN0TGlua1VybC50b1N0cmluZygpLFxuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3lcbiAgICAgICAgKTtcbiAgICAgICAgY29uc3QgZGVlcExpbmsgPSBjb252ZXJ0VG9UR0RlZXBMaW5rKGxpbmtXaXRoU3RyYXRlZ3kpO1xuICAgICAgICBvcGVuRGVlcGxpbmtXaXRoRmFsbGJhY2soZGVlcExpbmssICgpID0+IG9wZW5MaW5rQmxhbmsobGlua1dpdGhTdHJhdGVneSkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc3QgbGlua1dpdGhTdHJhdGVneSA9IGFkZFJldHVyblN0cmF0ZWd5KFxuICAgICAgICAgIGRpcmVjdExpbmtVcmwudG9TdHJpbmcoKSxcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5XG4gICAgICAgICk7XG4gICAgICAgIG9wZW5MaW5rQmxhbmsobGlua1dpdGhTdHJhdGVneSk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChpc09TKFwiaXBhZFwiKSkge1xuICAgICAgaWYgKG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPT09IFwiYmFja1wiKSB7XG4gICAgICAgIGlmIChpc0Jyb3dzZXIoXCJzYWZhcmlcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJiYWNrXCI7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNCcm93c2VyKFwiY2hyb21lXCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwiZ29vZ2xlY2hyb21lOi8vXCI7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNCcm93c2VyKFwiZmlyZWZveFwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcImZpcmVmb3g6Ly9cIjtcbiAgICAgICAgfSBlbHNlIGlmIChpc0Jyb3dzZXIoXCJvcGVyYVwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcIm9wZXJhLWh0dHA6Ly9cIjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gbG9jYXRpb24uaHJlZjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgY29uc3QgaXNDaHJvbWUgPSBpc0Jyb3dzZXIoXCJjaHJvbWVcIik7XG4gICAgICBjb25zdCBpc0ZpcmVmb3ggPSBpc0Jyb3dzZXIoXCJmaXJlZm94XCIpO1xuICAgICAgY29uc3QgdXNlRGVlcExpbmsgPSAoaXNDaHJvbWUgfHwgaXNGaXJlZm94KSAmJiAhb3B0aW9ucy5mb3JjZVJlZGlyZWN0O1xuICAgICAgY29uc3QgbGlua1dpdGhTdHJhdGVneSA9IGFkZFJldHVyblN0cmF0ZWd5KFxuICAgICAgICBkaXJlY3RMaW5rVXJsLnRvU3RyaW5nKCksXG4gICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3lcbiAgICAgICk7XG4gICAgICBpZiAodXNlRGVlcExpbmspIHtcbiAgICAgICAgY29uc3QgZGVlcExpbmsgPSBjb252ZXJ0VG9UR0RlZXBMaW5rKGxpbmtXaXRoU3RyYXRlZ3kpO1xuICAgICAgICBvcGVuRGVlcGxpbmtXaXRoRmFsbGJhY2soZGVlcExpbmssICgpID0+IG9wZW5MaW5rQmxhbmsobGlua1dpdGhTdHJhdGVneSkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgb3BlbkxpbmtCbGFuayhsaW5rV2l0aFN0cmF0ZWd5KTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGlzT1MoXCJtYWNvc1wiLCBcIndpbmRvd3NcIiwgXCJsaW51eFwiKSkge1xuICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwiYmFja1wiO1xuICAgICAgb3B0aW9ucy50d2FSZXR1cm5VcmwgPSB2b2lkIDA7XG4gICAgICBjb25zdCBsaW5rV2l0aFN0cmF0ZWd5ID0gYWRkUmV0dXJuU3RyYXRlZ3koXG4gICAgICAgIGRpcmVjdExpbmtVcmwudG9TdHJpbmcoKSxcbiAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneVxuICAgICAgKTtcbiAgICAgIGlmIChvcHRpb25zLmZvcmNlUmVkaXJlY3QpIHtcbiAgICAgICAgb3BlbkxpbmtCbGFuayhsaW5rV2l0aFN0cmF0ZWd5KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnN0IGRlZXBMaW5rID0gY29udmVydFRvVEdEZWVwTGluayhsaW5rV2l0aFN0cmF0ZWd5KTtcbiAgICAgICAgb3BlbkRlZXBsaW5rV2l0aEZhbGxiYWNrKGRlZXBMaW5rLCAoKSA9PiBvcGVuTGlua0JsYW5rKGxpbmtXaXRoU3RyYXRlZ3kpKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgb3BlbkxpbmtCbGFuayhhZGRSZXR1cm5TdHJhdGVneShkaXJlY3RMaW5rVXJsLnRvU3RyaW5nKCksIG9wdGlvbnMpKTtcbiAgICB9XG4gIH1cbn1cbmZ1bmN0aW9uIHJlZGlyZWN0VG9XYWxsZXQodW5pdmVyc2FsTGluaywgZGVlcExpbmssIG9wdGlvbnMsIHNldE9wZW5NZXRob2QpIHtcbiAgb3B0aW9ucyA9IF9fc3ByZWFkVmFsdWVzKHt9LCBvcHRpb25zKTtcbiAgaWYgKGlzSW5UZWxlZ3JhbUJyb3dzZXIoKSkge1xuICAgIGlmIChpc09TKFwiaW9zXCIsIFwiYW5kcm9pZFwiKSkge1xuICAgICAgaWYgKG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPT09IFwiYmFja1wiKSB7XG4gICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcInRnOi8vcmVzb2x2ZVwiO1xuICAgICAgfVxuICAgICAgc2V0T3Blbk1ldGhvZChcInVuaXZlcnNhbC1saW5rXCIpO1xuICAgICAgb3BlbkxpbmsoYWRkUmV0dXJuU3RyYXRlZ3kodW5pdmVyc2FsTGluaywgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSksIFwiX3NlbGZcIik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHNldE9wZW5NZXRob2QoXCJ1bml2ZXJzYWwtbGlua1wiKTtcbiAgICAgIGNvbnN0IGxpbmtXaXRTdHJhdGVneSA9IGFkZFJldHVyblN0cmF0ZWd5KHVuaXZlcnNhbExpbmssIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kpO1xuICAgICAgb3BlbkxpbmtCbGFuayhsaW5rV2l0U3RyYXRlZ3kpO1xuICAgIH1cbiAgfSBlbHNlIGlmIChpc0luVE1BKCkpIHtcbiAgICBpZiAoaXNUbWFQbGF0Zm9ybShcImlvc1wiLCBcImFuZHJvaWRcIikpIHtcbiAgICAgIGlmIChvcHRpb25zLnJldHVyblN0cmF0ZWd5ID09PSBcImJhY2tcIikge1xuICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJ0ZzovL3Jlc29sdmVcIjtcbiAgICAgIH1cbiAgICAgIHNldE9wZW5NZXRob2QoXCJ1bml2ZXJzYWwtbGlua1wiKTtcbiAgICAgIGNvbnN0IGxpbmtXaXRTdHJhdGVneSA9IGFkZFJldHVyblN0cmF0ZWd5KHVuaXZlcnNhbExpbmssIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kpO1xuICAgICAgc2VuZE9wZW5UZWxlZ3JhbUxpbmsobGlua1dpdFN0cmF0ZWd5LCAoKSA9PiB7XG4gICAgICAgIHNldE9wZW5NZXRob2QoXCJ1bml2ZXJzYWwtbGlua1wiKTtcbiAgICAgICAgb3BlbkxpbmtCbGFuayhsaW5rV2l0U3RyYXRlZ3kpO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmIChpc1RtYVBsYXRmb3JtKFwibWFjb3NcIiwgXCJ0ZGVza3RvcFwiKSkge1xuICAgICAgaWYgKG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPT09IFwiYmFja1wiKSB7XG4gICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcInRnOi8vcmVzb2x2ZVwiO1xuICAgICAgfVxuICAgICAgY29uc3QgbGlua1dpdFN0cmF0ZWd5ID0gYWRkUmV0dXJuU3RyYXRlZ3kodW5pdmVyc2FsTGluaywgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSk7XG4gICAgICBjb25zdCB1c2VEZWVwTGluayA9ICEhZGVlcExpbmsgJiYgIW9wdGlvbnMuZm9yY2VSZWRpcmVjdDtcbiAgICAgIGlmICh1c2VEZWVwTGluaykge1xuICAgICAgICBzZXRPcGVuTWV0aG9kKFwiY3VzdG9tLWRlZXBsaW5rXCIpO1xuICAgICAgICBvcGVuRGVlcGxpbmtXaXRoRmFsbGJhY2sodG9EZWVwbGluayhsaW5rV2l0U3RyYXRlZ3ksIGRlZXBMaW5rKSwgKCkgPT4ge1xuICAgICAgICAgIHNldE9wZW5NZXRob2QoXCJ1bml2ZXJzYWwtbGlua1wiKTtcbiAgICAgICAgICBvcGVuTGlua0JsYW5rKGxpbmtXaXRTdHJhdGVneSk7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2V0T3Blbk1ldGhvZChcInVuaXZlcnNhbC1saW5rXCIpO1xuICAgICAgICBvcGVuTGlua0JsYW5rKGxpbmtXaXRTdHJhdGVneSk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChpc1RtYVBsYXRmb3JtKFwid2ViYVwiKSkge1xuICAgICAgaWYgKG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPT09IFwiYmFja1wiKSB7XG4gICAgICAgIGlmIChpc0Jyb3dzZXIoXCJzYWZhcmlcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gbG9jYXRpb24uaHJlZjtcbiAgICAgICAgfSBlbHNlIGlmIChpc0Jyb3dzZXIoXCJjaHJvbWVcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJnb29nbGVjaHJvbWU6Ly9cIjtcbiAgICAgICAgfSBlbHNlIGlmIChpc0Jyb3dzZXIoXCJmaXJlZm94XCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwiZmlyZWZveDovL1wiO1xuICAgICAgICB9IGVsc2UgaWYgKGlzQnJvd3NlcihcIm9wZXJhXCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwib3BlcmEtaHR0cDovL1wiO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBsb2NhdGlvbi5ocmVmO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBjb25zdCBsaW5rV2l0U3RyYXRlZ3kgPSBhZGRSZXR1cm5TdHJhdGVneSh1bml2ZXJzYWxMaW5rLCBvcHRpb25zLnJldHVyblN0cmF0ZWd5KTtcbiAgICAgIGNvbnN0IHVzZURlZXBMaW5rID0gISFkZWVwTGluayAmJiAhb3B0aW9ucy5mb3JjZVJlZGlyZWN0O1xuICAgICAgaWYgKHVzZURlZXBMaW5rKSB7XG4gICAgICAgIHNldE9wZW5NZXRob2QoXCJjdXN0b20tZGVlcGxpbmtcIik7XG4gICAgICAgIG9wZW5EZWVwbGlua1dpdGhGYWxsYmFjayh0b0RlZXBsaW5rKGxpbmtXaXRTdHJhdGVneSwgZGVlcExpbmspLCAoKSA9PiB7XG4gICAgICAgICAgc2V0T3Blbk1ldGhvZChcInVuaXZlcnNhbC1saW5rXCIpO1xuICAgICAgICAgIG9wZW5MaW5rQmxhbmsobGlua1dpdFN0cmF0ZWd5KTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZXRPcGVuTWV0aG9kKFwidW5pdmVyc2FsLWxpbmtcIik7XG4gICAgICAgIG9wZW5MaW5rQmxhbmsobGlua1dpdFN0cmF0ZWd5KTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGlzVG1hUGxhdGZvcm0oXCJ3ZWJcIikpIHtcbiAgICAgIGlmIChvcHRpb25zLnJldHVyblN0cmF0ZWd5ID09PSBcImJhY2tcIikge1xuICAgICAgICBpZiAoaXNCcm93c2VyKFwic2FmYXJpXCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IGxvY2F0aW9uLmhyZWY7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNCcm93c2VyKFwiY2hyb21lXCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwiZ29vZ2xlY2hyb21lOi8vXCI7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNCcm93c2VyKFwiZmlyZWZveFwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcImZpcmVmb3g6Ly9cIjtcbiAgICAgICAgfSBlbHNlIGlmIChpc0Jyb3dzZXIoXCJvcGVyYVwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcIm9wZXJhLWh0dHA6Ly9cIjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gbG9jYXRpb24uaHJlZjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgY29uc3QgbGlua1dpdFN0cmF0ZWd5ID0gYWRkUmV0dXJuU3RyYXRlZ3kodW5pdmVyc2FsTGluaywgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSk7XG4gICAgICBjb25zdCB1c2VEZWVwTGluayA9ICEhZGVlcExpbmsgJiYgIW9wdGlvbnMuZm9yY2VSZWRpcmVjdDtcbiAgICAgIGlmICh1c2VEZWVwTGluaykge1xuICAgICAgICBzZXRPcGVuTWV0aG9kKFwiY3VzdG9tLWRlZXBsaW5rXCIpO1xuICAgICAgICBvcGVuRGVlcGxpbmtXaXRoRmFsbGJhY2sodG9EZWVwbGluayhsaW5rV2l0U3RyYXRlZ3ksIGRlZXBMaW5rKSwgKCkgPT4ge1xuICAgICAgICAgIHNldE9wZW5NZXRob2QoXCJ1bml2ZXJzYWwtbGlua1wiKTtcbiAgICAgICAgICBvcGVuTGlua0JsYW5rKGxpbmtXaXRTdHJhdGVneSk7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2V0T3Blbk1ldGhvZChcInVuaXZlcnNhbC1saW5rXCIpO1xuICAgICAgICBvcGVuTGlua0JsYW5rKGxpbmtXaXRTdHJhdGVneSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHNldE9wZW5NZXRob2QoXCJ1bml2ZXJzYWwtbGlua1wiKTtcbiAgICAgIGNvbnN0IGxpbmtXaXRTdHJhdGVneSA9IGFkZFJldHVyblN0cmF0ZWd5KHVuaXZlcnNhbExpbmssIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kpO1xuICAgICAgb3BlbkxpbmtCbGFuayhsaW5rV2l0U3RyYXRlZ3kpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBpZiAoaXNPUyhcImlvc1wiKSkge1xuICAgICAgaWYgKG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPT09IFwiYmFja1wiKSB7XG4gICAgICAgIGlmIChpc0Jyb3dzZXIoXCJzYWZhcmlcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJub25lXCI7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNCcm93c2VyKFwiY2hyb21lXCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwiZ29vZ2xlY2hyb21lOi8vXCI7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNCcm93c2VyKFwiZmlyZWZveFwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcImZpcmVmb3g6Ly9cIjtcbiAgICAgICAgfSBlbHNlIGlmIChpc0Jyb3dzZXIoXCJvcGVyYVwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcIm9wZXJhLWh0dHA6Ly9cIjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gbG9jYXRpb24uaHJlZjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKGlzQnJvd3NlcihcImNocm9tZVwiKSkge1xuICAgICAgICBzZXRPcGVuTWV0aG9kKFwidW5pdmVyc2FsLWxpbmtcIik7XG4gICAgICAgIG9wZW5MaW5rKGFkZFJldHVyblN0cmF0ZWd5KHVuaXZlcnNhbExpbmssIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kpLCBcIl9zZWxmXCIpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2V0T3Blbk1ldGhvZChcInVuaXZlcnNhbC1saW5rXCIpO1xuICAgICAgICBvcGVuTGlua0JsYW5rKGFkZFJldHVyblN0cmF0ZWd5KHVuaXZlcnNhbExpbmssIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kpKTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGlzT1MoXCJhbmRyb2lkXCIpKSB7XG4gICAgICBpZiAob3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9PT0gXCJiYWNrXCIpIHtcbiAgICAgICAgaWYgKGlzQnJvd3NlcihcImNocm9tZVwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcImdvb2dsZWNocm9tZTovL1wiO1xuICAgICAgICB9IGVsc2UgaWYgKGlzQnJvd3NlcihcImZpcmVmb3hcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJmaXJlZm94Oi8vXCI7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNCcm93c2VyKFwib3BlcmFcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJvcGVyYS1odHRwOi8vXCI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IGxvY2F0aW9uLmhyZWY7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHNldE9wZW5NZXRob2QoXCJ1bml2ZXJzYWwtbGlua1wiKTtcbiAgICAgIG9wZW5MaW5rQmxhbmsoYWRkUmV0dXJuU3RyYXRlZ3kodW5pdmVyc2FsTGluaywgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSkpO1xuICAgIH0gZWxzZSBpZiAoaXNPUyhcImlwYWRcIikpIHtcbiAgICAgIGlmIChvcHRpb25zLnJldHVyblN0cmF0ZWd5ID09PSBcImJhY2tcIikge1xuICAgICAgICBpZiAoaXNCcm93c2VyKFwic2FmYXJpXCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwibm9uZVwiO1xuICAgICAgICB9IGVsc2UgaWYgKGlzQnJvd3NlcihcImNocm9tZVwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcImdvb2dsZWNocm9tZTovL1wiO1xuICAgICAgICB9IGVsc2UgaWYgKGlzQnJvd3NlcihcImZpcmVmb3hcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJmaXJlZm94Oi8vXCI7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNCcm93c2VyKFwib3BlcmFcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJvcGVyYS1odHRwOi8vXCI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IGxvY2F0aW9uLmhyZWY7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChpc0Jyb3dzZXIoXCJjaHJvbWVcIikpIHtcbiAgICAgICAgc2V0T3Blbk1ldGhvZChcInVuaXZlcnNhbC1saW5rXCIpO1xuICAgICAgICBvcGVuTGluayhhZGRSZXR1cm5TdHJhdGVneSh1bml2ZXJzYWxMaW5rLCBvcHRpb25zLnJldHVyblN0cmF0ZWd5KSwgXCJfc2VsZlwiKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNldE9wZW5NZXRob2QoXCJ1bml2ZXJzYWwtbGlua1wiKTtcbiAgICAgICAgb3BlbkxpbmtCbGFuayhhZGRSZXR1cm5TdHJhdGVneSh1bml2ZXJzYWxMaW5rLCBvcHRpb25zLnJldHVyblN0cmF0ZWd5KSk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChpc09TKFwibWFjb3NcIiwgXCJ3aW5kb3dzXCIsIFwibGludXhcIikpIHtcbiAgICAgIGlmIChvcHRpb25zLnJldHVyblN0cmF0ZWd5ID09PSBcImJhY2tcIikge1xuICAgICAgICBpZiAoaXNCcm93c2VyKFwic2FmYXJpXCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwibm9uZVwiO1xuICAgICAgICB9IGVsc2UgaWYgKGlzQnJvd3NlcihcImNocm9tZVwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcImdvb2dsZWNocm9tZTovL1wiO1xuICAgICAgICB9IGVsc2UgaWYgKGlzQnJvd3NlcihcImZpcmVmb3hcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJmaXJlZm94Oi8vXCI7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNCcm93c2VyKFwib3BlcmFcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJvcGVyYS1odHRwOi8vXCI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwibm9uZVwiO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBjb25zdCBsaW5rV2l0U3RyYXRlZ3kgPSBhZGRSZXR1cm5TdHJhdGVneSh1bml2ZXJzYWxMaW5rLCBvcHRpb25zLnJldHVyblN0cmF0ZWd5KTtcbiAgICAgIGNvbnN0IHVzZURlZXBMaW5rID0gISFkZWVwTGluayAmJiAhb3B0aW9ucy5mb3JjZVJlZGlyZWN0O1xuICAgICAgaWYgKHVzZURlZXBMaW5rKSB7XG4gICAgICAgIHNldE9wZW5NZXRob2QoXCJjdXN0b20tZGVlcGxpbmtcIik7XG4gICAgICAgIG9wZW5EZWVwbGlua1dpdGhGYWxsYmFjayh0b0RlZXBsaW5rKGxpbmtXaXRTdHJhdGVneSwgZGVlcExpbmspLCAoKSA9PiB7XG4gICAgICAgICAgc2V0T3Blbk1ldGhvZChcInVuaXZlcnNhbC1saW5rXCIpO1xuICAgICAgICAgIG9wZW5MaW5rQmxhbmsobGlua1dpdFN0cmF0ZWd5KTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZXRPcGVuTWV0aG9kKFwidW5pdmVyc2FsLWxpbmtcIik7XG4gICAgICAgIG9wZW5MaW5rQmxhbmsobGlua1dpdFN0cmF0ZWd5KTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgc2V0T3Blbk1ldGhvZChcInVuaXZlcnNhbC1saW5rXCIpO1xuICAgICAgb3BlbkxpbmtCbGFuayhhZGRSZXR1cm5TdHJhdGVneSh1bml2ZXJzYWxMaW5rLCBvcHRpb25zLnJldHVyblN0cmF0ZWd5KSk7XG4gICAgfVxuICB9XG59XG5mdW5jdGlvbiBhZGRRdWVyeVBhcmFtZXRlcih1cmwsIGtleSwgdmFsdWUpIHtcbiAgY29uc3QgcGFyc2VkID0gbmV3IFVSTCh1cmwpO1xuICBwYXJzZWQuc2VhcmNoUGFyYW1zLmFwcGVuZChrZXksIHZhbHVlKTtcbiAgcmV0dXJuIHBhcnNlZC50b1N0cmluZygpO1xufVxuZnVuY3Rpb24gY29udmVydFRvVEdEaXJlY3RMaW5rKHVuaXZlcnNhbExpbmspIHtcbiAgY29uc3QgdXJsID0gbmV3IFVSTCh1bml2ZXJzYWxMaW5rKTtcbiAgaWYgKHVybC5zZWFyY2hQYXJhbXMuaGFzKFwiYXR0YWNoXCIpKSB7XG4gICAgdXJsLnNlYXJjaFBhcmFtcy5kZWxldGUoXCJhdHRhY2hcIik7XG4gICAgdXJsLnBhdGhuYW1lICs9IFwiL3N0YXJ0XCI7XG4gIH1cbiAgcmV0dXJuIHVybC50b1N0cmluZygpO1xufVxuZnVuY3Rpb24gY29udmVydFRvVEdEZWVwTGluayhkaXJlY3RMaW5rKSB7XG4gIGNvbnN0IHBhcnNlZCA9IG5ldyBVUkwoZGlyZWN0TGluayk7XG4gIGNvbnN0IFssIGRvbWFpbiwgYXBwbmFtZV0gPSBwYXJzZWQucGF0aG5hbWUuc3BsaXQoXCIvXCIpO1xuICBjb25zdCBzdGFydGFwcCA9IHBhcnNlZC5zZWFyY2hQYXJhbXMuZ2V0KFwic3RhcnRhcHBcIik7XG4gIHJldHVybiBgdGc6Ly9yZXNvbHZlP2RvbWFpbj0ke2RvbWFpbn0mYXBwbmFtZT0ke2FwcG5hbWV9JnN0YXJ0YXBwPSR7c3RhcnRhcHB9YDtcbn1cbmNvbnN0IERlc2t0b3BDb25uZWN0aW9uTW9kYWwgPSAocHJvcHMpID0+IHtcbiAgY29uc3QgW21vZGUsIHNldE1vZGVdID0gY3JlYXRlU2lnbmFsKFwibW9iaWxlXCIpO1xuICBjb25zdCBbY29ubmVjdGlvbkVycm9yZWQsIHNldENvbm5lY3Rpb25FcnJvcmVkXSA9IGNyZWF0ZVNpZ25hbChudWxsKTtcbiAgY3JlYXRlRWZmZWN0KCgpID0+IHtcbiAgICB2YXIgX2EyO1xuICAgIHNldENvbm5lY3Rpb25FcnJvcmVkKChfYTIgPSBwcm9wcy5kZWZhdWx0RXJyb3IpICE9IG51bGwgPyBfYTIgOiBudWxsKTtcbiAgfSk7XG4gIGNvbnN0IFt1bml2ZXJzYWxMaW5rLCBzZXRVbml2ZXJzYWxMaW5rXSA9IGNyZWF0ZVNpZ25hbCgpO1xuICBjb25zdCBbZmlyc3RDbGljaywgc2V0Rmlyc3RDbGlja10gPSBjcmVhdGVTaWduYWwodHJ1ZSk7XG4gIGNvbnN0IGNvbm5lY3RvciA9IHVzZUNvbnRleHQoQ29ubmVjdG9yQ29udGV4dCk7XG4gIGNvbnN0IHVuc3Vic2NyaWJlID0gY29ubmVjdG9yLm9uU3RhdHVzQ2hhbmdlKCgpID0+IHtcbiAgfSwgKGVycm9yKSA9PiB7XG4gICAgaWYgKGVycm9yIGluc3RhbmNlb2YgV2FsbGV0TWlzc2luZ1JlcXVpcmVkRmVhdHVyZXNFcnJvcikge1xuICAgICAgc2V0Q29ubmVjdGlvbkVycm9yZWQoXCJtaXNzaW5nLWZlYXR1cmVzXCIpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAocHJvcHMud2FsbGV0LmFwcE5hbWUgIT09IEFUX1dBTExFVF9BUFBfTkFNRSkge1xuICAgICAgc2V0Q29ubmVjdGlvbkVycm9yZWQoXCJjb25uZWN0aW9uLWRlY2xpbmVkXCIpO1xuICAgIH1cbiAgfSk7XG4gIG9uQ2xlYW51cCh1bnN1YnNjcmliZSk7XG4gIGNvbnN0IGdlbmVyYXRlVW5pdmVyc2FsTGluayA9ICgpID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgdW5pdmVyc2FsTGluazIgPSBjb25uZWN0b3IuY29ubmVjdCh7XG4gICAgICAgIHVuaXZlcnNhbExpbms6IHByb3BzLndhbGxldC51bml2ZXJzYWxMaW5rLFxuICAgICAgICBicmlkZ2VVcmw6IHByb3BzLndhbGxldC5icmlkZ2VVcmxcbiAgICAgIH0sIHByb3BzLmFkZGl0aW9uYWxSZXF1ZXN0KTtcbiAgICAgIHNldFVuaXZlcnNhbExpbmsodW5pdmVyc2FsTGluazIpO1xuICAgIH0gY2F0Y2ggKGUyKSB7XG4gICAgfVxuICB9O1xuICBjcmVhdGVFZmZlY3QoKCkgPT4ge1xuICAgIGlmICh1bnRyYWNrKG1vZGUpICE9PSBcImV4dGVuc2lvblwiICYmIChzdXBwb3J0c01vYmlsZShwcm9wcy53YWxsZXQpIHx8IHN1cHBvcnRzRGVza3RvcChwcm9wcy53YWxsZXQpKSkge1xuICAgICAgZ2VuZXJhdGVVbml2ZXJzYWxMaW5rKCk7XG4gICAgfVxuICB9KTtcbiAgY29uc3Qgb25DbGlja01vYmlsZSA9ICgpID0+IHtcbiAgICBzZXRDb25uZWN0aW9uRXJyb3JlZChudWxsKTtcbiAgICBpZiAobW9kZSgpID09PSBcImV4dGVuc2lvblwiKSB7XG4gICAgICBnZW5lcmF0ZVVuaXZlcnNhbExpbmsoKTtcbiAgICB9XG4gICAgc2V0TW9kZShcIm1vYmlsZVwiKTtcbiAgICBzZXRMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvKF9fc3ByZWFkUHJvcHMoX19zcHJlYWRWYWx1ZXMoe30sIHByb3BzLndhbGxldCksIHtcbiAgICAgIG9wZW5NZXRob2Q6IFwicXJjb2RlXCJcbiAgICB9KSk7XG4gIH07XG4gIGNvbnN0IG9uQ2xpY2tEZXNrdG9wID0gKCkgPT4ge1xuICAgIHNldENvbm5lY3Rpb25FcnJvcmVkKG51bGwpO1xuICAgIGlmIChtb2RlKCkgPT09IFwiZXh0ZW5zaW9uXCIpIHtcbiAgICAgIGdlbmVyYXRlVW5pdmVyc2FsTGluaygpO1xuICAgIH1cbiAgICBzZXRNb2RlKFwiZGVza3RvcFwiKTtcbiAgICBpZiAoaXNUZWxlZ3JhbVVybCh1bml2ZXJzYWxMaW5rKCkpKSB7XG4gICAgICBvbkNsaWNrVGVsZWdyYW0oKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3QgZm9yY2VSZWRpcmVjdCA9ICFmaXJzdENsaWNrKCk7XG4gICAgICBzZXRGaXJzdENsaWNrKGZhbHNlKTtcbiAgICAgIHJlZGlyZWN0VG9XYWxsZXQodW5pdmVyc2FsTGluaygpLCBwcm9wcy53YWxsZXQuZGVlcExpbmssIHtcbiAgICAgICAgcmV0dXJuU3RyYXRlZ3k6IGFwcFN0YXRlLnJldHVyblN0cmF0ZWd5LFxuICAgICAgICBmb3JjZVJlZGlyZWN0XG4gICAgICB9LCAobWV0aG9kKSA9PiB7XG4gICAgICAgIHNldExhc3RTZWxlY3RlZFdhbGxldEluZm8oX19zcHJlYWRQcm9wcyhfX3NwcmVhZFZhbHVlcyh7fSwgcHJvcHMud2FsbGV0KSwge1xuICAgICAgICAgIG9wZW5NZXRob2Q6IG1ldGhvZFxuICAgICAgICB9KSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG4gIGNvbnN0IG9uQ2xpY2tUZWxlZ3JhbSA9ICgpID0+IHtcbiAgICBjb25zdCBmb3JjZVJlZGlyZWN0ID0gIWZpcnN0Q2xpY2soKTtcbiAgICBzZXRGaXJzdENsaWNrKGZhbHNlKTtcbiAgICBzZXRMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvKF9fc3ByZWFkUHJvcHMoX19zcHJlYWRWYWx1ZXMoe30sIHByb3BzLndhbGxldCksIHtcbiAgICAgIG9wZW5NZXRob2Q6IFwidW5pdmVyc2FsLWxpbmtcIlxuICAgIH0pKTtcbiAgICByZWRpcmVjdFRvVGVsZWdyYW0odW5pdmVyc2FsTGluaygpLCB7XG4gICAgICByZXR1cm5TdHJhdGVneTogYXBwU3RhdGUucmV0dXJuU3RyYXRlZ3ksXG4gICAgICB0d2FSZXR1cm5Vcmw6IGFwcFN0YXRlLnR3YVJldHVyblVybCxcbiAgICAgIGZvcmNlUmVkaXJlY3RcbiAgICB9KTtcbiAgfTtcbiAgY29uc3Qgb25DbGlja0V4dGVuc2lvbiA9ICgpID0+IHtcbiAgICBzZXRDb25uZWN0aW9uRXJyb3JlZChudWxsKTtcbiAgICBzZXRNb2RlKFwiZXh0ZW5zaW9uXCIpO1xuICAgIGlmIChpc1dhbGxldEluZm9DdXJyZW50bHlJbmplY3RlZChwcm9wcy53YWxsZXQpKSB7XG4gICAgICBzZXRMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvKHByb3BzLndhbGxldCk7XG4gICAgICBjb25uZWN0b3IuY29ubmVjdCh7XG4gICAgICAgIGpzQnJpZGdlS2V5OiBwcm9wcy53YWxsZXQuanNCcmlkZ2VLZXlcbiAgICAgIH0sIHByb3BzLmFkZGl0aW9uYWxSZXF1ZXN0KTtcbiAgICB9XG4gIH07XG4gIGlmIChzdXBwb3J0c01vYmlsZShwcm9wcy53YWxsZXQpKSB7XG4gICAgb25DbGlja01vYmlsZSgpO1xuICB9IGVsc2UgaWYgKHN1cHBvcnRzRXh0ZW5zaW9uKHByb3BzLndhbGxldCkpIHtcbiAgICBvbkNsaWNrRXh0ZW5zaW9uKCk7XG4gIH0gZWxzZSB7XG4gICAgb25DbGlja0Rlc2t0b3AoKTtcbiAgfVxuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KERlc2t0b3BDb25uZWN0aW9uTW9kYWxTdHlsZWQsIHtcbiAgICBcImRhdGEtdGMtd2FsbGV0cy1tb2RhbC1jb25uZWN0aW9uLWRlc2t0b3BcIjogXCJ0cnVlXCIsXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICByZXR1cm4gIXByb3BzLmJhY2tEaXNhYmxlZDtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoU3R5bGVkSWNvbkJ1dHRvbiQ0LCB7XG4gICAgICAgICAgICBpY29uOiBcImFycm93XCIsXG4gICAgICAgICAgICBvbkNsaWNrOiAoKSA9PiBwcm9wcy5vbkJhY2tDbGljaygpXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoSDFTdHlsZWQkOCwge1xuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIHByb3BzLndhbGxldC5uYW1lO1xuICAgICAgICB9XG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZU1lbW8oKCkgPT4gbW9kZSgpID09PSBcIm1vYmlsZVwiKSgpICYmICFjb25uZWN0aW9uRXJyb3JlZCgpO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChIMlN0eWxlZCQ0LCB7XG4gICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5kZXNrdG9wQ29ubmVjdGlvbk1vZGFsLnNjYW5RUlwiLFxuICAgICAgICAgICAgZ2V0IHRyYW5zbGF0aW9uVmFsdWVzKCkge1xuICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIG5hbWU6IHByb3BzLndhbGxldC5uYW1lXG4gICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gW1wiU2NhbiB0aGUgUVIgY29kZSBiZWxvdyB3aXRoIHlvdXIgcGhvbmVcXHUyMDE5cyBvciBcIiwgY3JlYXRlTWVtbygoKSA9PiBwcm9wcy53YWxsZXQubmFtZSksIFwiXFx1MjAxOXMgY2FtZXJhXCJdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEJvZHlTdHlsZWQkMSwge1xuICAgICAgICBnZXQgcXIoKSB7XG4gICAgICAgICAgcmV0dXJuIG1vZGUoKSA9PT0gXCJtb2JpbGVcIjtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoU3dpdGNoLCB7XG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KE1hdGNoLCB7XG4gICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gY29ubmVjdGlvbkVycm9yZWQoKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KEVycm9ySWNvblN0eWxlZCQyLCB7XG4gICAgICAgICAgICAgICAgICAgIHNpemU6IFwic1wiXG4gICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFN3aXRjaCwge1xuICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoTWF0Y2gsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY29ubmVjdGlvbkVycm9yZWQoKSA9PT0gXCJtaXNzaW5nLWZlYXR1cmVzXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEJvZHlUZXh0U3R5bGVkJDIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5kZXNrdG9wQ29ubmVjdGlvbk1vZGFsLm1pc3NpbmdGZWF0dXJlc1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCB0cmFuc2xhdGlvblZhbHVlcygpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IHByb3BzLndhbGxldC5uYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiUGxlYXNlIHVwZGF0ZSBXYWxsZXQsIHlvdXIgdmVyc2lvbiBkb2VzIG5vdCBzdXBwb3J0IHJlcXVpcmVkIGZlYXR1cmVzIGZvciB0aGlzIGRBcHBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KE1hdGNoLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNvbm5lY3Rpb25FcnJvcmVkKCkgPT09IFwiY29ubmVjdGlvbi1kZWNsaW5lZFwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChCb2R5VGV4dFN0eWxlZCQyLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuZGVza3RvcENvbm5lY3Rpb25Nb2RhbC5jb25uZWN0aW9uRGVjbGluZWRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJDb25uZWN0aW9uIGRlY2xpbmVkXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjb25uZWN0aW9uRXJyb3JlZCgpID09PSBcIm5vdC1zdXBwb3J0ZWRcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQm9keVRleHRTdHlsZWQkMiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLmRlc2t0b3BDb25uZWN0aW9uTW9kYWwubm90U3VwcG9ydGVkV2FsbGV0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IHRyYW5zbGF0aW9uVmFsdWVzKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogcHJvcHMud2FsbGV0Lm5hbWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZU1lbW8oKCkgPT4gcHJvcHMud2FsbGV0Lm5hbWUpLCBcIiBkb2VzblxcdTIwMTl0IHN1cHBvcnQgdGhlIHJlcXVlc3RlZCBhY3Rpb24uIFBsZWFzZSBjb25uZWN0IGFub3RoZXIgd2FsbGV0IHRoYXQgc3VwcG9ydHMgaXQuXCJdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEJ1dHRvbnNDb250YWluZXJTdHlsZWQkMiwge1xuICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjb25uZWN0aW9uRXJyb3JlZCgpICE9PSBcIm5vdC1zdXBwb3J0ZWRcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQnV0dG9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGxlZnRJY29uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChSZXRyeUljb24sIHt9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBvbkNsaWNrKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG1vZGUoKSA9PT0gXCJleHRlbnNpb25cIiA/IG9uQ2xpY2tFeHRlbnNpb24gOiBvbkNsaWNrRGVza3RvcDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwiY29tbW9uLnJldHJ5XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIlJldHJ5XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNvbm5lY3Rpb25FcnJvcmVkKCkgPT09IFwibWlzc2luZy1mZWF0dXJlc1wiO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChMaW5rLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGhyZWYoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMud2FsbGV0LmFib3V0VXJsO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYmxhbms6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChCdXR0b24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGxlZnRJY29uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTGlua0ljb24sIHt9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLmRlc2t0b3BDb25uZWN0aW9uTW9kYWwudXBkYXRlV2FsbGV0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgdHJhbnNsYXRpb25WYWx1ZXMoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogcHJvcHMud2FsbGV0Lm5hbWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbXCJVcGRhdGUgXCIsIGNyZWF0ZU1lbW8oKCkgPT4gcHJvcHMud2FsbGV0Lm5hbWUpXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY29ubmVjdGlvbkVycm9yZWQoKSA9PT0gXCJub3Qtc3VwcG9ydGVkXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEJ1dHRvbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6ICgpID0+IHByb3BzLm9uQmFja0NsaWNrKCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUcmFuc2xhdGlvbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5kZXNrdG9wQ29ubmVjdGlvbk1vZGFsLmNob29zZUFub3RoZXJXYWxsZXRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiQ2hvb3NlIEFub3RoZXIgV2FsbGV0XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KE1hdGNoLCB7XG4gICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gbW9kZSgpID09PSBcIm1vYmlsZVwiO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChRUkNvZGVTdHlsZWQkMSwge1xuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlQ29weTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIGdldCBzb3VyY2VVcmwoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFkZFJldHVyblN0cmF0ZWd5KHVuaXZlcnNhbExpbmsoKSwgXCJub25lXCIpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBnZXQgaW1hZ2VVcmwoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLndhbGxldC5pbWFnZVVybDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KE1hdGNoLCB7XG4gICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gbW9kZSgpID09PSBcImV4dGVuc2lvblwiO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXNXYWxsZXRJbmZvQ3VycmVudGx5SW5qZWN0ZWQocHJvcHMud2FsbGV0KTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KExvYWRlclN0eWxlZCQxLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzaXplOiBcInNcIlxuICAgICAgICAgICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoQm9keVRleHRTdHlsZWQkMiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuZGVza3RvcENvbm5lY3Rpb25Nb2RhbC5jb250aW51ZUluRXh0ZW5zaW9uXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgdHJhbnNsYXRpb25WYWx1ZXMoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogcHJvcHMud2FsbGV0Lm5hbWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbXCJDb250aW51ZSBpbiBcIiwgY3JlYXRlTWVtbygoKSA9PiBwcm9wcy53YWxsZXQubmFtZSksIFwiIGJyb3dzZXIgZXh0ZW5zaW9uXFx1MjAyNlwiXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEJ1dHRvbnNDb250YWluZXJTdHlsZWQkMiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEJ1dHRvbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBsZWZ0SWNvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoUmV0cnlJY29uLCB7fSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiBvbkNsaWNrRXh0ZW5zaW9uLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwiY29tbW9uLnJldHJ5XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIlJldHJ5XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICFpc1dhbGxldEluZm9DdXJyZW50bHlJbmplY3RlZChwcm9wcy53YWxsZXQpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoQm9keVRleHRTdHlsZWQkMiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuZGVza3RvcENvbm5lY3Rpb25Nb2RhbC5kb250SGF2ZUV4dGVuc2lvblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IHRyYW5zbGF0aW9uVmFsdWVzKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IHByb3BzLndhbGxldC5uYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW1wiU2VlbXMgeW91IGRvbid0IGhhdmUgaW5zdGFsbGVkIFwiLCBjcmVhdGVNZW1vKCgpID0+IHByb3BzLndhbGxldC5uYW1lKSwgXCIgYnJvd3NlciBleHRlbnNpb25cIl07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChCdXR0b25zQ29udGFpbmVyU3R5bGVkJDIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChMaW5rLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGhyZWYoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMud2FsbGV0LmFib3V0VXJsO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYmxhbms6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChCdXR0b24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IHJpZ2h0SWNvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KExpbmtJY29uLCB7fSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6IG9uQ2xpY2tFeHRlbnNpb24sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRyYW5zbGF0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5kZXNrdG9wQ29ubmVjdGlvbk1vZGFsLmdldFdhbGxldFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IHRyYW5zbGF0aW9uVmFsdWVzKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IHByb3BzLndhbGxldC5uYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW1wiR2V0IFwiLCBjcmVhdGVNZW1vKCgpID0+IHByb3BzLndhbGxldC5uYW1lKV07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KE1hdGNoLCB7XG4gICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gbW9kZSgpID09PSBcImRlc2t0b3BcIjtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KExvYWRlckljb24sIHtcbiAgICAgICAgICAgICAgICAgICAgc2l6ZTogXCJtXCJcbiAgICAgICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoQm9keVRleHRTdHlsZWQkMiwge1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5kZXNrdG9wQ29ubmVjdGlvbk1vZGFsLmNvbnRpbnVlT25EZXNrdG9wXCIsXG4gICAgICAgICAgICAgICAgICAgIGdldCB0cmFuc2xhdGlvblZhbHVlcygpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogcHJvcHMud2FsbGV0Lm5hbWVcbiAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtcIkNvbnRpbnVlIGluIFwiLCBjcmVhdGVNZW1vKCgpID0+IHByb3BzLndhbGxldC5uYW1lKSwgXCIgb24gZGVza3RvcFxcdTIwMjZcIl07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoQnV0dG9uc0NvbnRhaW5lclN0eWxlZCQyLCB7XG4gICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChCdXR0b24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBsZWZ0SWNvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChSZXRyeUljb24sIHt9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiBvbkNsaWNrRGVza3RvcCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUcmFuc2xhdGlvbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcImNvbW1vbi5yZXRyeVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIlJldHJ5XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChMaW5rLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgaHJlZigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLndhbGxldC5hYm91dFVybDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBibGFuazogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChCdXR0b24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgcmlnaHRJY29uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChMaW5rSWNvbiwge30pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUcmFuc2xhdGlvbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5kZXNrdG9wQ29ubmVjdGlvbk1vZGFsLmdldFdhbGxldFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgdHJhbnNsYXRpb25WYWx1ZXMoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IHByb3BzLndhbGxldC5uYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbXCJHZXQgXCIsIGNyZWF0ZU1lbW8oKCkgPT4gcHJvcHMud2FsbGV0Lm5hbWUpXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgIHJldHVybiBwcm9wcy53YWxsZXQuYXBwTmFtZSA9PT0gQVRfV0FMTEVUX0FQUF9OQU1FO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUZ0J1dHRvblN0eWxlZCwge1xuICAgICAgICAgICAgZ2V0IHJpZ2h0SWNvbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUZ0ltYWdlU3R5bGVkLCB7XG4gICAgICAgICAgICAgICAgZ2V0IHNyYygpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBJTUcuVEc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzY2FsZTogXCJzXCIsXG4gICAgICAgICAgICBvbkNsaWNrOiBvbkNsaWNrVGVsZWdyYW0sXG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5kZXNrdG9wQ29ubmVjdGlvbk1vZGFsLm9wZW5XYWxsZXRPblRlbGVncmFtXCIsXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiT3BlbiBXYWxsZXQgaW4gVGVsZWdyYW0gb24gZGVza3RvcFwiXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIHByb3BzLndhbGxldC5hcHBOYW1lICE9PSBBVF9XQUxMRVRfQVBQX05BTUU7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEJvdHRvbUJ1dHRvbnNDb250YWluZXJTdHlsZWQsIHtcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZU1lbW8oKCkgPT4gbW9kZSgpICE9PSBcIm1vYmlsZVwiKSgpICYmIHN1cHBvcnRzTW9iaWxlKHByb3BzLndhbGxldCk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEZvb3RlckJ1dHRvbiQxLCB7XG4gICAgICAgICAgICAgICAgICAgIGFwcGVhcmFuY2U6IFwic2Vjb25kYXJ5XCIsXG4gICAgICAgICAgICAgICAgICAgIGdldCBsZWZ0SWNvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KE1vYmlsZUljb24sIHt9KTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgb25DbGljazogb25DbGlja01vYmlsZSxcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcImNvbW1vbi5tb2JpbGVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIk1vYmlsZVwiXG4gICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlTWVtbygoKSA9PiBtb2RlKCkgIT09IFwiZXh0ZW5zaW9uXCIpKCkgJiYgc3VwcG9ydHNFeHRlbnNpb24ocHJvcHMud2FsbGV0KTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoRm9vdGVyQnV0dG9uJDEsIHtcbiAgICAgICAgICAgICAgICAgICAgYXBwZWFyYW5jZTogXCJzZWNvbmRhcnlcIixcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGxlZnRJY29uKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQnJvd3Nlckljb24sIHt9KTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgb25DbGljazogb25DbGlja0V4dGVuc2lvbixcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcImNvbW1vbi5icm93c2VyRXh0ZW5zaW9uXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJCcm93c2VyIEV4dGVuc2lvblwiXG4gICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlTWVtbygoKSA9PiBtb2RlKCkgIT09IFwiZGVza3RvcFwiKSgpICYmIHN1cHBvcnRzRGVza3RvcChwcm9wcy53YWxsZXQpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChGb290ZXJCdXR0b24kMSwge1xuICAgICAgICAgICAgICAgICAgICBhcHBlYXJhbmNlOiBcInNlY29uZGFyeVwiLFxuICAgICAgICAgICAgICAgICAgICBnZXQgbGVmdEljb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChEZXNrdG9wSWNvbiwge30pO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiBvbkNsaWNrRGVza3RvcCxcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcImNvbW1vbi5kZXNrdG9wXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJEZXNrdG9wXCJcbiAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pXTtcbiAgICB9XG4gIH0pO1xufTtcbmNvbnN0IEluZm9Nb2RhbFN0eWxlZCA9IHN0eWxlZC5kaXZgYDtcbmNvbnN0IFN0eWxlZEljb25CdXR0b24kMyA9IHN0eWxlZChJY29uQnV0dG9uKWBcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAxNnB4O1xuICAgIGxlZnQ6IDE2cHg7XG5gO1xuY29uc3QgSDFTdHlsZWQkNyA9IHN0eWxlZChIMSlgXG4gICAgbWFyZ2luLWJvdHRvbTogMThweDtcbmA7XG5jb25zdCBJbmZvQmxvY2sgPSBzdHlsZWQuZGl2YFxuICAgIHBhZGRpbmc6IDE2cHggMDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbmA7XG5jb25zdCBJbmZvQmxvY2tJY29uQ2xhc3MgPSB1YFxuICAgIG1hcmdpbi1ib3R0b206IDEycHg7XG5gO1xuY29uc3QgSDNTdHlsZWQkMSA9IHN0eWxlZChIMylgXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbi1ib3R0b206IDRweDtcbmA7XG5jb25zdCBUZXh0U3R5bGVkJDIgPSBzdHlsZWQoVGV4dClgXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1heC13aWR0aDogMzUycHg7XG4gICAgY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dC5zZWNvbmRhcnl9O1xuYDtcbmNvbnN0IEJ1dHRvbnNCbG9jayA9IHN0eWxlZC5kaXZgXG4gICAgcGFkZGluZzogMTZweCAyNHB4IDI0cHg7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGdhcDogOHB4O1xuYDtcbmNvbnN0IExJTktTID0ge1xuICBHRVRfQV9XQUxMRVQ6IFwiaHR0cHM6Ly90b24ub3JnL3dhbGxldHM/ZmlsdGVyc1t3YWxsZXRfZmVhdHVyZXNdW3NsdWddWyRpbl09ZGFwcC1hdXRoJnBhZ2luYXRpb25bbGltaXRdPS0xXCJcbn07XG5jb25zdCBJbmZvTW9kYWwgPSAocHJvcHMpID0+IHtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChJbmZvTW9kYWxTdHlsZWQsIHtcbiAgICBcImRhdGEtdGMtd2FsbGV0cy1tb2RhbC1pbmZvXCI6IFwidHJ1ZVwiLFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFN0eWxlZEljb25CdXR0b24kMywge1xuICAgICAgICBpY29uOiBcImFycm93XCIsXG4gICAgICAgIG9uQ2xpY2s6ICgpID0+IHByb3BzLm9uQmFja0NsaWNrKClcbiAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoSDFTdHlsZWQkNywge1xuICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5pbmZvTW9kYWwud2hhdElzQVdhbGxldFwiLFxuICAgICAgICBjaGlsZHJlbjogXCJXaGF0IGlzIGEgd2FsbGV0XCJcbiAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2Nyb2xsQ29udGFpbmVyLCB7XG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChJbmZvQmxvY2ssIHtcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoU2VjdXJpdHlJY29uLCB7XG4gICAgICAgICAgICAgICAgXCJjbGFzc1wiOiBJbmZvQmxvY2tJY29uQ2xhc3NcbiAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChIM1N0eWxlZCQxLCB7XG4gICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuaW5mb01vZGFsLnNlY3VyZURpZ2l0YWxBc3NldHNcIixcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJTZWN1cmUgZGlnaXRhbCBhc3NldHMgc3RvcmFnZVwiXG4gICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoVGV4dFN0eWxlZCQyLCB7XG4gICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuaW5mb01vZGFsLndhbGxldFByb3RlY3RzXCIsXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiQSB3YWxsZXQgcHJvdGVjdHMgYW5kIG1hbmFnZXMgeW91ciBkaWdpdGFsIGFzc2V0cyBpbmNsdWRpbmcgVE9OLCB0b2tlbnMgYW5kIGNvbGxlY3RhYmxlcy5cIlxuICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChJbmZvQmxvY2ssIHtcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoUGVyc29uYWxpdHlJY29uLCB7XG4gICAgICAgICAgICAgICAgXCJjbGFzc1wiOiBJbmZvQmxvY2tJY29uQ2xhc3NcbiAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChIM1N0eWxlZCQxLCB7XG4gICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuaW5mb01vZGFsLmNvbnRyb2xJZGVudGl0eVwiLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIkNvbnRyb2wgeW91ciBXZWIzIGlkZW50aXR5XCJcbiAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChUZXh0U3R5bGVkJDIsIHtcbiAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5pbmZvTW9kYWwubWFuYWdlSWRlbnRpdHlcIixcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJNYW5hZ2UgeW91ciBkaWdpdGFsIGlkZW50aXR5IGFuZCBhY2Nlc3MgZGVjZW50cmFsaXplZCBhcHBsaWNhdGlvbnMgd2l0aCBlYXNlLiBNYWludGFpbiBjb250cm9sIG92ZXIgeW91ciBkYXRhIGFuZCBlbmdhZ2Ugc2VjdXJlbHkgaW4gdGhlIGJsb2NrY2hhaW4gZWNvc3lzdGVtLlwiXG4gICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEluZm9CbG9jaywge1xuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChTd2FwSWNvbiwge1xuICAgICAgICAgICAgICAgIFwiY2xhc3NcIjogSW5mb0Jsb2NrSWNvbkNsYXNzXG4gICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoSDNTdHlsZWQkMSwge1xuICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLmluZm9Nb2RhbC5lZmZvcnRsZXNzQ3J5cHRvVHJhbnNhY3Rpb25zXCIsXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiRWZmb3J0bGVzcyBjcnlwdG8gdHJhbnNhY3Rpb25zXCJcbiAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChUZXh0U3R5bGVkJDIsIHtcbiAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5pbmZvTW9kYWwuZWFzaWx5U2VuZFwiLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIkVhc2lseSBzZW5kLCByZWNlaXZlLCBtb25pdG9yIHlvdXIgY3J5cHRvY3VycmVuY2llcy4gU3RyZWFtbGluZSB5b3VyIG9wZXJhdGlvbnMgd2l0aCBkZWNlbnRyYWxpemVkIGFwcGxpY2F0aW9ucy5cIlxuICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChCdXR0b25zQmxvY2ssIHtcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChMaW5rLCB7XG4gICAgICAgICAgICAgICAgZ2V0IGhyZWYoKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gTElOS1MuR0VUX0FfV0FMTEVUO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgYmxhbms6IHRydWUsXG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChCdXR0b24sIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0IHJpZ2h0SWNvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFdhbGxldEljb24sIHt9KTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLmluZm9Nb2RhbC5nZXRBV2FsbGV0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJHZXQgYSBXYWxsZXRcIlxuICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pXTtcbiAgICAgICAgfVxuICAgICAgfSldO1xuICAgIH1cbiAgfSk7XG59O1xuY29uc3QgTW9iaWxlQ29ubmVjdGlvbk1vZGFsU3R5bGVkID0gc3R5bGVkLmRpdmBgO1xuY29uc3QgQm9keVN0eWxlZCA9IHN0eWxlZC5kaXZgXG4gICAgZmxleDogMTtcbiAgICBtYXJnaW4tdG9wOiAxOHB4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIG1pbi1oZWlnaHQ6IDIzMnB4O1xuYDtcbmNvbnN0IEgxU3R5bGVkJDYgPSBzdHlsZWQoSDEpYFxuICAgIG1heC13aWR0aDogMjYycHg7XG4gICAgbWFyZ2luOiAwIGF1dG8gOHB4O1xuYDtcbmNvbnN0IFN0eWxlZEljb25CdXR0b24kMiA9IHN0eWxlZChJY29uQnV0dG9uKWBcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAxNnB4O1xuICAgIGxlZnQ6IDE2cHg7XG5gO1xuY29uc3QgRm9vdGVyU3R5bGVkID0gc3R5bGVkLmRpdmBcbiAgICBwYWRkaW5nOiAxNnB4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBnYXA6IDEycHg7XG4gICAgYm9yZGVyLXRvcDogMC41cHggc29saWQgJHsocHJvcHMpID0+IHJnYmEocHJvcHMudGhlbWUuY29sb3JzLmljb24uc2Vjb25kYXJ5LCAwLjIpfTtcbmA7XG5jb25zdCBJbWFnZVN0eWxlZCA9IHN0eWxlZChJbWFnZSlgXG4gICAgd2lkdGg6IDM2cHg7XG4gICAgaGVpZ2h0OiAzNnB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG5gO1xuY29uc3QgRm9vdGVyQnV0dG9uID0gc3R5bGVkKExpbmspYFxuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuYDtcbmNvbnN0IExvYWRlclN0eWxlZCA9IHN0eWxlZChMb2FkZXJJY29uKWBcbiAgICBtYXJnaW4tYm90dG9tOiAxOHB4O1xuICAgIG1hcmdpbi10b3A6IDJweDtcbmA7XG5jb25zdCBFcnJvckljb25TdHlsZWQkMSA9IHN0eWxlZChFcnJvckljb24pYFxuICAgIG1hcmdpbi1ib3R0b206IDE2cHg7XG5gO1xuY29uc3QgQm9keVRleHRTdHlsZWQkMSA9IHN0eWxlZChIMilgXG4gICAgY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dC5zZWNvbmRhcnl9O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuYDtcbmNvbnN0IEJ1dHRvbnNDb250YWluZXJTdHlsZWQkMSA9IHN0eWxlZC5kaXZgXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBnYXA6IDhweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTZweDtcbmA7XG5jb25zdCBhY3Rpb25CdXR0b25Cb3JkZXJSYWRpdXMkMSA9IHtcbiAgbTogXCIxNnB4XCIsXG4gIHM6IFwiOHB4XCIsXG4gIG5vbmU6IFwiMFwiXG59O1xuY29uc3QgSDFTdHlsZWQkNSA9IHN0eWxlZChIMSlgXG4gICAgbWFyZ2luLWJvdHRvbTogMnB4O1xuICAgIHBhZGRpbmc6IDAgNTJweDtcbmA7XG5jb25zdCBIMlN0eWxlZCQzID0gc3R5bGVkKEgyKWBcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICAgIHBhZGRpbmc6IDAgNjRweDtcbmA7XG5jb25zdCBRckNvZGVXcmFwcGVyJDEgPSBzdHlsZWQuZGl2YFxuICAgIHBhZGRpbmc6IDAgMjRweCAxNnB4O1xuYDtcbmNvbnN0IEJ1dHRvbnNXcmFwcGVyJDEgPSBzdHlsZWQuZGl2YFxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBnYXA6IDE2cHg7XG4gICAgcGFkZGluZzogMCAyNHB4IDI0cHg7XG4gICAgbWFyZ2luLXRvcDogMDtcbmA7XG5jb25zdCBBY3Rpb25CdXR0b24kMSA9IHN0eWxlZChCdXR0b24pYFxuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogNTZweDtcbiAgICBib3JkZXItcmFkaXVzOiAkeyhwcm9wcykgPT4gYWN0aW9uQnV0dG9uQm9yZGVyUmFkaXVzJDFbcHJvcHMudGhlbWUuYm9yZGVyUmFkaXVzXX07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+IHJnYmEocHJvcHMudGhlbWUuY29sb3JzLmFjY2VudCwgMC4xMil9O1xuICAgIGNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmFjY2VudH07XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgcGFkZGluZzogMTdweCAyMHB4IDE5cHggMjBweDtcbmA7XG5jb25zdCBNb2JpbGVDb25uZWN0aW9uUVIgPSAocHJvcHMpID0+IHtcbiAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoSDFTdHlsZWQkNSwge1xuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBwcm9wcy53YWxsZXRJbmZvLm5hbWU7XG4gICAgfVxuICB9KSwgY3JlYXRlQ29tcG9uZW50KEgyU3R5bGVkJDMsIHtcbiAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5tb2JpbGVDb25uZWN0aW9uTW9kYWwuc2NhblFSXCIsXG4gICAgZ2V0IHRyYW5zbGF0aW9uVmFsdWVzKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogcHJvcHMud2FsbGV0SW5mby5uYW1lXG4gICAgICB9O1xuICAgIH0sXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIFtcIlNjYW4gdGhlIFFSIGNvZGUgYmVsb3cgd2l0aCB5b3VyIHBob25lXFx1MjAxOXMgb3IgXCIsIGNyZWF0ZU1lbW8oKCkgPT4gcHJvcHMud2FsbGV0SW5mby5uYW1lKSwgXCJcXHUyMDE5cyBjYW1lcmFcIl07XG4gICAgfVxuICB9KSwgY3JlYXRlQ29tcG9uZW50KFFyQ29kZVdyYXBwZXIkMSwge1xuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoUVJDb2RlLCB7XG4gICAgICAgIGdldCBpbWFnZVVybCgpIHtcbiAgICAgICAgICByZXR1cm4gcHJvcHMud2FsbGV0SW5mby5pbWFnZVVybDtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IHNvdXJjZVVybCgpIHtcbiAgICAgICAgICByZXR1cm4gYWRkUmV0dXJuU3RyYXRlZ3kocHJvcHMudW5pdmVyc2FsTGluaywgXCJub25lXCIpO1xuICAgICAgICB9LFxuICAgICAgICBkaXNhYmxlQ29weTogdHJ1ZVxuICAgICAgfSk7XG4gICAgfVxuICB9KSwgY3JlYXRlQ29tcG9uZW50KEJ1dHRvbnNXcmFwcGVyJDEsIHtcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChBY3Rpb25CdXR0b24kMSwge1xuICAgICAgICBhcHBlYXJhbmNlOiBcInNlY29uZGFyeVwiLFxuICAgICAgICBvbkNsaWNrOiAoKSA9PiB7XG4gICAgICAgICAgdmFyIF9hMjtcbiAgICAgICAgICByZXR1cm4gKF9hMiA9IHByb3BzLm9uT3BlbkxpbmspID09IG51bGwgPyB2b2lkIDAgOiBfYTIuY2FsbChwcm9wcyk7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRyYW5zbGF0aW9uLCB7XG4gICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5tb2JpbGVVbml2ZXJzYWxNb2RhbC5vcGVuTGlua1wiLFxuICAgICAgICAgICAgY2hpbGRyZW46IFwiT3BlbiBMaW5rXCJcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChBY3Rpb25CdXR0b24kMSwge1xuICAgICAgICBhcHBlYXJhbmNlOiBcInNlY29uZGFyeVwiLFxuICAgICAgICBvbkNsaWNrOiAoKSA9PiB7XG4gICAgICAgICAgdmFyIF9hMjtcbiAgICAgICAgICByZXR1cm4gKF9hMiA9IHByb3BzLm9uQ29weSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi5jYWxsKHByb3BzKTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgIGdldCB0cmFuc2xhdGlvbktleSgpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLmlzQ29waWVkU2hvd24gIT09IHZvaWQgMCA/IFwiY29tbW9uLmNvcGllZFwiIDogXCJjb21tb24uY29weUxpbmtcIjtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBwcm9wcy5pc0NvcGllZFNob3duICE9PSB2b2lkIDAgPyBcIkNvcGllZFwiIDogXCJDb3B5IExpbmtcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSldO1xuICAgIH1cbiAgfSldO1xufTtcbmNvbnN0IE1vYmlsZUNvbm5lY3Rpb25Nb2RhbCA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IFtmaXJzdENsaWNrLCBzZXRGaXJzdENsaWNrXSA9IGNyZWF0ZVNpZ25hbCh0cnVlKTtcbiAgY29uc3QgW3Nob3dRUiwgc2V0U2hvd1FSXSA9IGNyZWF0ZVNpZ25hbChmYWxzZSk7XG4gIGNvbnN0IFtjb25uZWN0aW9uRXJyb3JlZCwgc2V0Q29ubmVjdGlvbkVycm9yZWRdID0gY3JlYXRlU2lnbmFsKG51bGwpO1xuICBjcmVhdGVFZmZlY3QoKCkgPT4ge1xuICAgIHZhciBfYTI7XG4gICAgc2V0Q29ubmVjdGlvbkVycm9yZWQoKF9hMiA9IHByb3BzLmRlZmF1bHRFcnJvcikgIT0gbnVsbCA/IF9hMiA6IG51bGwpO1xuICB9KTtcbiAgY29uc3QgY29ubmVjdG9yID0gdXNlQ29udGV4dChDb25uZWN0b3JDb250ZXh0KTtcbiAgY29uc3QgdW5zdWJzY3JpYmUgPSBjb25uZWN0b3Iub25TdGF0dXNDaGFuZ2UoKCkgPT4ge1xuICB9LCAoKSA9PiB7XG4gICAgc2V0Q29ubmVjdGlvbkVycm9yZWQobnVsbCk7XG4gIH0pO1xuICBjb25zdCB1bml2ZXJzYWxMaW5rID0gY3JlYXRlTWVtbygoKSA9PiBjb25uZWN0b3IuY29ubmVjdCh7XG4gICAgdW5pdmVyc2FsTGluazogcHJvcHMud2FsbGV0LnVuaXZlcnNhbExpbmssXG4gICAgYnJpZGdlVXJsOiBwcm9wcy53YWxsZXQuYnJpZGdlVXJsXG4gIH0sIHByb3BzLmFkZGl0aW9uYWxSZXF1ZXN0KSk7XG4gIGNvbnN0IG9uQ2xpY2tUZWxlZ3JhbSA9ICgpID0+IHtcbiAgICBjb25zdCBhbHdheXNGb3JjZVJlZGlyZWN0ID0gdHJ1ZTtcbiAgICBzZXRMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvKF9fc3ByZWFkUHJvcHMoX19zcHJlYWRWYWx1ZXMoe30sIHByb3BzLndhbGxldCksIHtcbiAgICAgIG9wZW5NZXRob2Q6IFwidW5pdmVyc2FsLWxpbmtcIlxuICAgIH0pKTtcbiAgICByZWRpcmVjdFRvVGVsZWdyYW0odW5pdmVyc2FsTGluaygpLCB7XG4gICAgICByZXR1cm5TdHJhdGVneTogYXBwU3RhdGUucmV0dXJuU3RyYXRlZ3ksXG4gICAgICB0d2FSZXR1cm5Vcmw6IGFwcFN0YXRlLnR3YVJldHVyblVybCxcbiAgICAgIGZvcmNlUmVkaXJlY3Q6IGFsd2F5c0ZvcmNlUmVkaXJlY3RcbiAgICB9KTtcbiAgfTtcbiAgY29uc3Qgb25SZXRyeSA9ICgpID0+IHtcbiAgICBjb25zdCBjdXJyZW50VW5pdmVyc2FsTGluayA9IHVuaXZlcnNhbExpbmsoKTtcbiAgICBpZiAoaXNUZWxlZ3JhbVVybChjdXJyZW50VW5pdmVyc2FsTGluaykpIHtcbiAgICAgIHJldHVybiBvbkNsaWNrVGVsZWdyYW0oKTtcbiAgICB9XG4gICAgc2V0Q29ubmVjdGlvbkVycm9yZWQobnVsbCk7XG4gICAgY29uc3QgZm9yY2VSZWRpcmVjdCA9ICFmaXJzdENsaWNrKCk7XG4gICAgc2V0Rmlyc3RDbGljayhmYWxzZSk7XG4gICAgcmVkaXJlY3RUb1dhbGxldCh1bml2ZXJzYWxMaW5rKCksIHByb3BzLndhbGxldC5kZWVwTGluaywge1xuICAgICAgcmV0dXJuU3RyYXRlZ3k6IGFwcFN0YXRlLnJldHVyblN0cmF0ZWd5LFxuICAgICAgZm9yY2VSZWRpcmVjdFxuICAgIH0sIChtZXRob2QpID0+IHtcbiAgICAgIHNldExhc3RTZWxlY3RlZFdhbGxldEluZm8oX19zcHJlYWRQcm9wcyhfX3NwcmVhZFZhbHVlcyh7fSwgcHJvcHMud2FsbGV0KSwge1xuICAgICAgICBvcGVuTWV0aG9kOiBtZXRob2RcbiAgICAgIH0pKTtcbiAgICB9KTtcbiAgfTtcbiAgY29uc3QgW2lzQ29waWVkU2hvd24sIHNldElzQ29waWVkU2hvd25dID0gY3JlYXRlU2lnbmFsKHZvaWQgMCk7XG4gIGNvbnN0IG9uQ29weSA9ICgpID0+IF9fYXN5bmModm9pZCAwLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgIGlmIChpc0NvcGllZFNob3duKCkgIT09IHZvaWQgMCkge1xuICAgICAgY2xlYXJUaW1lb3V0KGlzQ29waWVkU2hvd24oKSk7XG4gICAgfVxuICAgIHlpZWxkIGNvcHlUb0NsaXBib2FyZCh1bml2ZXJzYWxMaW5rKCkpO1xuICAgIGNvbnN0IHRpbWVvdXRJZCA9IHNldFRpbWVvdXQoKCkgPT4gc2V0SXNDb3BpZWRTaG93bih2b2lkIDApLCAxNTAwKTtcbiAgICBzZXRJc0NvcGllZFNob3duKHRpbWVvdXRJZCk7XG4gIH0pO1xuICBjb25zdCBvbk9wZW5RUiA9ICgpID0+IHtcbiAgICBzZXRDb25uZWN0aW9uRXJyb3JlZChudWxsKTtcbiAgICBzZXRTaG93UVIodHJ1ZSk7XG4gICAgc2V0TGFzdFNlbGVjdGVkV2FsbGV0SW5mbyhfX3NwcmVhZFByb3BzKF9fc3ByZWFkVmFsdWVzKHt9LCBwcm9wcy53YWxsZXQpLCB7XG4gICAgICBvcGVuTWV0aG9kOiBcInFyY29kZVwiXG4gICAgfSkpO1xuICB9O1xuICBjb25zdCBvbkNsb3NlUVIgPSAoKSA9PiB7XG4gICAgc2V0U2hvd1FSKGZhbHNlKTtcbiAgICBzZXRMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvKF9fc3ByZWFkUHJvcHMoX19zcHJlYWRWYWx1ZXMoe30sIHByb3BzLndhbGxldCksIHtcbiAgICAgIG9wZW5NZXRob2Q6IFwidW5pdmVyc2FsLWxpbmtcIlxuICAgIH0pKTtcbiAgfTtcbiAgY29uc3Qgb25CYWNrID0gKCkgPT4ge1xuICAgIGlmIChzaG93UVIoKSkge1xuICAgICAgb25DbG9zZVFSKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHByb3BzLm9uQmFja0NsaWNrKCk7XG4gICAgfVxuICB9O1xuICBvbkNsZWFudXAodW5zdWJzY3JpYmUpO1xuICBvblJldHJ5KCk7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoTW9iaWxlQ29ubmVjdGlvbk1vZGFsU3R5bGVkLCB7XG4gICAgXCJkYXRhLXRjLXdhbGxldHMtbW9kYWwtY29ubmVjdGlvbi1tb2JpbGVcIjogXCJ0cnVlXCIsXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICByZXR1cm4gIXByb3BzLmJhY2tEaXNhYmxlZCB8fCBzaG93UVIoKTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoU3R5bGVkSWNvbkJ1dHRvbiQyLCB7XG4gICAgICAgICAgICBpY29uOiBcImFycm93XCIsXG4gICAgICAgICAgICBvbkNsaWNrOiBvbkJhY2tcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgIHJldHVybiBzaG93UVIoKTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTW9iaWxlQ29ubmVjdGlvblFSLCB7XG4gICAgICAgICAgICBnZXQgdW5pdmVyc2FsTGluaygpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHVuaXZlcnNhbExpbmsoKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgd2FsbGV0SW5mbygpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLndhbGxldDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvbk9wZW5MaW5rOiBvblJldHJ5LFxuICAgICAgICAgICAgb25Db3B5LFxuICAgICAgICAgICAgZ2V0IGlzQ29waWVkU2hvd24oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBpc0NvcGllZFNob3duKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICByZXR1cm4gIXNob3dRUigpO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoSDFTdHlsZWQkNiwge1xuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gcHJvcHMud2FsbGV0Lm5hbWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChCb2R5U3R5bGVkLCB7XG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjb25uZWN0aW9uRXJyb3JlZCgpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoRXJyb3JJY29uU3R5bGVkJDEsIHtcbiAgICAgICAgICAgICAgICAgICAgc2l6ZTogXCJzXCJcbiAgICAgICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU3dpdGNoLCB7XG4gICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjb25uZWN0aW9uRXJyb3JlZCgpID09PSBcIm1pc3NpbmctZmVhdHVyZXNcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQm9keVRleHRTdHlsZWQkMSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLm1vYmlsZUNvbm5lY3Rpb25Nb2RhbC5taXNzaW5nRmVhdHVyZXNcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgdHJhbnNsYXRpb25WYWx1ZXMoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBwcm9wcy53YWxsZXQubmFtZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIlBsZWFzZSB1cGRhdGUgV2FsbGV0LCB5b3VyIHZlcnNpb24gZG9lcyBub3Qgc3VwcG9ydCByZXF1aXJlZCBmZWF0dXJlcyBmb3IgdGhpcyBkQXBwXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjb25uZWN0aW9uRXJyb3JlZCgpID09PSBcImNvbm5lY3Rpb24tZGVjbGluZWRcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQm9keVRleHRTdHlsZWQkMSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLm1vYmlsZUNvbm5lY3Rpb25Nb2RhbC5jb25uZWN0aW9uRGVjbGluZWRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJDb25uZWN0aW9uIGRlY2xpbmVkXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjb25uZWN0aW9uRXJyb3JlZCgpID09PSBcIm5vdC1zdXBwb3J0ZWRcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQm9keVRleHRTdHlsZWQkMSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLm1vYmlsZUNvbm5lY3Rpb25Nb2RhbC5ub3RTdXBwb3J0ZWRXYWxsZXRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgdHJhbnNsYXRpb25WYWx1ZXMoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBwcm9wcy53YWxsZXQubmFtZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlTWVtbygoKSA9PiBwcm9wcy53YWxsZXQubmFtZSksIFwiIGRvZXNuXFx1MjAxOXQgc3VwcG9ydCB0aGUgcmVxdWVzdGVkIGFjdGlvbi4gUGxlYXNlIGNvbm5lY3QgYW5vdGhlciB3YWxsZXQgdGhhdCBzdXBwb3J0cyBpdC5cIl07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoQnV0dG9uc0NvbnRhaW5lclN0eWxlZCQxLCB7XG4gICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFN3aXRjaCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNvbm5lY3Rpb25FcnJvcmVkKCkgPT09IFwibWlzc2luZy1mZWF0dXJlc1wiO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoQnV0dG9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBsZWZ0SWNvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFJldHJ5SWNvbiwge30pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiBvblJldHJ5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUcmFuc2xhdGlvbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwiY29tbW9uLnJldHJ5XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJSZXRyeVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoTGluaywge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgaHJlZigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMud2FsbGV0LmFib3V0VXJsO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBibGFuazogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQnV0dG9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgbGVmdEljb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTGlua0ljb24sIHt9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5tb2JpbGVDb25uZWN0aW9uTW9kYWwudXBkYXRlV2FsbGV0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IHRyYW5zbGF0aW9uVmFsdWVzKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogcHJvcHMud2FsbGV0Lm5hbWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW1wiVXBkYXRlIFwiLCBjcmVhdGVNZW1vKCgpID0+IHByb3BzLndhbGxldC5uYW1lKV07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNvbm5lY3Rpb25FcnJvcmVkKCkgPT09IFwibm90LXN1cHBvcnRlZFwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChCdXR0b24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljazogKCkgPT4gcHJvcHMub25CYWNrQ2xpY2soKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLm1vYmlsZUNvbm5lY3Rpb25Nb2RhbC5jaG9vc2VBbm90aGVyV2FsbGV0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJDaG9vc2UgQW5vdGhlciBXYWxsZXRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoTWF0Y2gsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjb25uZWN0aW9uRXJyb3JlZCgpID09PSBcImNvbm5lY3Rpb24tZGVjbGluZWRcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KEJ1dHRvbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgbGVmdEljb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChSZXRyeUljb24sIHt9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljazogb25SZXRyeSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcImNvbW1vbi5yZXRyeVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiUmV0cnlcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEJ1dHRvbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgbGVmdEljb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChRUkljb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBmaWxsKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhlbWUuY29sb3JzLmFjY2VudDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljazogb25PcGVuUVIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRyYW5zbGF0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5tb2JpbGVDb25uZWN0aW9uTW9kYWwuc2hvd1FSXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJTaG93IFFSIENvZGVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuICFjb25uZWN0aW9uRXJyb3JlZCgpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoTG9hZGVyU3R5bGVkLCB7XG4gICAgICAgICAgICAgICAgICAgIHNpemU6IFwic1wiXG4gICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEJvZHlUZXh0U3R5bGVkJDEsIHtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwubW9iaWxlQ29ubmVjdGlvbk1vZGFsLmNvbnRpbnVlSW5cIixcbiAgICAgICAgICAgICAgICAgICAgZ2V0IHRyYW5zbGF0aW9uVmFsdWVzKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBwcm9wcy53YWxsZXQubmFtZVxuICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW1wiQ29udGludWUgaW4gXCIsIGNyZWF0ZU1lbW8oKCkgPT4gcHJvcHMud2FsbGV0Lm5hbWUpLCBcIlxcdTIwMjZcIl07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoQnV0dG9uc0NvbnRhaW5lclN0eWxlZCQxLCB7XG4gICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChCdXR0b24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBsZWZ0SWNvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChSZXRyeUljb24sIHt9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiBvblJldHJ5LFxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRyYW5zbGF0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwiY29tbW9uLnJldHJ5XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiUmV0cnlcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEJ1dHRvbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGxlZnRJY29uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFFSSWNvbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBmaWxsKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoZW1lLmNvbG9ycy5hY2NlbnQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiBvbk9wZW5RUixcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUcmFuc2xhdGlvbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLm1vYmlsZUNvbm5lY3Rpb25Nb2RhbC5zaG93UVJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJTaG93IFFSIENvZGVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEZvb3RlclN0eWxlZCwge1xuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChJbWFnZVN0eWxlZCwge1xuICAgICAgICAgICAgICAgIGdldCBzcmMoKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMud2FsbGV0LmltYWdlVXJsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChIMywge1xuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9wcy53YWxsZXQubmFtZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoRm9vdGVyQnV0dG9uLCB7XG4gICAgICAgICAgICAgICAgZ2V0IGhyZWYoKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMud2FsbGV0LmFib3V0VXJsO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgYmxhbms6IHRydWUsXG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChCdXR0b24sIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcImNvbW1vbi5nZXRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIkdFVFwiXG4gICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pXTtcbiAgICAgICAgfVxuICAgICAgfSldO1xuICAgIH1cbiAgfSk7XG59O1xuY29uc3QgYm9yZGVycyQyID0ge1xuICBtOiBcIjE2cHhcIixcbiAgczogXCIxMnB4XCIsXG4gIG5vbmU6IFwiMFwiXG59O1xuY29uc3QgdGdCb3JkZXJzID0ge1xuICBtOiBcIjZweFwiLFxuICBzOiBcIjZweFwiLFxuICBub25lOiBcIjBcIlxufTtcbnN0eWxlZC5saWBcbiAgICB3aWR0aDogODJweDtcbiAgICBtaW4td2lkdGg6IDgycHg7XG4gICAgaGVpZ2h0OiAxMjRweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nOiA4cHggNHB4O1xuXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjFzIGVhc2UtaW4tb3V0O1xuXG4gICAgJHttZWRpYU5vdFRvdWNofSB7XG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjA0KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICY6YWN0aXZlIHtcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgwLjk2KTtcbiAgICB9XG5cbiAgICAke21lZGlhVG91Y2h9IHtcbiAgICAgICAgJjphY3RpdmUge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgwLjkyKTtcbiAgICAgICAgfVxuICAgIH1cbmA7XG5jb25zdCBIMVN0eWxlZCQ0ID0gc3R5bGVkKEgxKWBcbiAgICBtYXJnaW4tdG9wOiAzOHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDRweDtcbiAgICBwYWRkaW5nOiAwIDI0cHg7XG5gO1xuY29uc3QgSDJTdHlsZWQkMiA9IHN0eWxlZChIMilgXG4gICAgbWFyZ2luOiAkeyhwcm9wcykgPT4ge1xuICB2YXIgX2EyO1xuICByZXR1cm4gKF9hMiA9IHByb3BzLm1hcmdpbikgIT0gbnVsbCA/IF9hMiA6IFwiMCAwIDI4cHggMFwiO1xufX07XG4gICAgcGFkZGluZzogJHsocHJvcHMpID0+IHtcbiAgdmFyIF9hMjtcbiAgcmV0dXJuIChfYTIgPSBwcm9wcy5wYWRkaW5nKSAhPSBudWxsID8gX2EyIDogXCIwIDI0cHhcIjtcbn19O1xuICAgIG1pbi1oZWlnaHQ6ICR7KHByb3BzKSA9PiB7XG4gIHZhciBfYTI7XG4gIHJldHVybiAoX2EyID0gcHJvcHMucGFkZGluZykgIT0gbnVsbCA/IF9hMiA6IFwiNDRweFwiO1xufX07XG4gICAgbWF4LXdpZHRoOiAkeyhwcm9wcykgPT4gcHJvcHMubWF4V2lkdGh9cHg7XG4gICAgbWFyZ2luLWxlZnQ6ICR7KHByb3BzKSA9PiBwcm9wcy5tYXhXaWR0aCA/IFwiYXV0b1wiIDogXCIwcHhcIn07XG4gICAgbWFyZ2luLXJpZ2h0OiAkeyhwcm9wcykgPT4gcHJvcHMubWF4V2lkdGggPyBcImF1dG9cIiA6IFwiMHB4XCJ9O1xuYDtcbnN0eWxlZChCdXR0b24pYFxuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuYDtcbmNvbnN0IFRlbGVncmFtQnV0dG9uU3R5bGVkID0gc3R5bGVkKEJ1dHRvbilgXG4gICAgbWFyZ2luOiAwIDI4cHggMjRweDtcbiAgICB3aWR0aDogY2FsYygxMDAlIC0gNTZweCk7XG4gICAgYm9yZGVyLXJhZGl1czogJHsocHJvcHMpID0+IGJvcmRlcnMkMltwcm9wcy50aGVtZS5ib3JkZXJSYWRpdXNdfTtcbiAgICBwYWRkaW5nOiAxNHB4IDE2cHggMTRweCAxNHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMudGVsZWdyYW1CdXR0b259O1xuXG4gICAgY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuY29uc3RhbnQud2hpdGV9O1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMHB4O1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDM3NXB4KSB7XG4gICAgICAgIG1hcmdpbjogMCAxNnB4IDI0cHg7XG4gICAgICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAzMnB4KTtcbiAgICB9XG5gO1xuY29uc3QgVEdJbWFnZVN0eWxlZCA9IHN0eWxlZChJbWFnZSlgXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLXJhZGl1czogJHsocHJvcHMpID0+IHRnQm9yZGVyc1twcm9wcy50aGVtZS5ib3JkZXJSYWRpdXNdfTtcbiAgICB3aWR0aDogMjRweDtcbiAgICBoZWlnaHQ6IDI0cHg7XG5gO1xuY29uc3QgU3R5bGVkTGVmdEFjdGlvbkJ1dHRvbiA9IHN0eWxlZChJY29uQnV0dG9uKWBcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAxNnB4O1xuICAgIGxlZnQ6IDE2cHg7XG5gO1xuY29uc3QgYWN0aW9uQnV0dG9uQm9yZGVyUmFkaXVzID0ge1xuICBtOiBcIjE2cHhcIixcbiAgczogXCI4cHhcIixcbiAgbm9uZTogXCIwXCJcbn07XG5jb25zdCBIMVN0eWxlZCQzID0gc3R5bGVkKEgxKWBcbiAgICBtYXJnaW4tYm90dG9tOiAycHg7XG4gICAgcGFkZGluZzogMCA1MnB4O1xuYDtcbmNvbnN0IEgyU3R5bGVkJDEgPSBzdHlsZWQoSDIpYFxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgcGFkZGluZzogMCA2NHB4O1xuYDtcbmNvbnN0IFFyQ29kZVdyYXBwZXIgPSBzdHlsZWQuZGl2YFxuICAgIHBhZGRpbmc6IDAgMjRweCAxNnB4O1xuYDtcbmNvbnN0IEJ1dHRvbnNXcmFwcGVyID0gc3R5bGVkLmRpdmBcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgZ2FwOiAxNnB4O1xuICAgIHBhZGRpbmc6IDAgMjRweCAyNHB4O1xuICAgIG1hcmdpbi10b3A6IDA7XG5gO1xuY29uc3QgQWN0aW9uQnV0dG9uID0gc3R5bGVkKEJ1dHRvbilgXG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiA1NnB4O1xuICAgIGJvcmRlci1yYWRpdXM6ICR7KHByb3BzKSA9PiBhY3Rpb25CdXR0b25Cb3JkZXJSYWRpdXNbcHJvcHMudGhlbWUuYm9yZGVyUmFkaXVzXX07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+IHJnYmEocHJvcHMudGhlbWUuY29sb3JzLmFjY2VudCwgMC4xMil9O1xuICAgIGNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmFjY2VudH07XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgcGFkZGluZzogMTdweCAyMHB4IDE5cHggMjBweDtcbmA7XG5jb25zdCBNb2JpbGVVbml2ZXJzYWxRUiA9IChwcm9wcykgPT4ge1xuICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChIMVN0eWxlZCQzLCB7XG4gICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwubW9iaWxlVW5pdmVyc2FsTW9kYWwuY29ubmVjdFlvdXJXYWxsZXRcIixcbiAgICBjaGlsZHJlbjogXCJDb25uZWN0IHlvdXIgVE9OIHdhbGxldFwiXG4gIH0pLCBjcmVhdGVDb21wb25lbnQoSDJTdHlsZWQkMSwge1xuICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLm1vYmlsZVVuaXZlcnNhbE1vZGFsLnNjYW5cIixcbiAgICBjaGlsZHJlbjogXCJTY2FuIHdpdGggeW91ciBtb2JpbGUgd2FsbGV0XCJcbiAgfSksIGNyZWF0ZUNvbXBvbmVudChRckNvZGVXcmFwcGVyLCB7XG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChRUkNvZGUsIHtcbiAgICAgICAgZ2V0IGltYWdlVXJsKCkge1xuICAgICAgICAgIHJldHVybiBJTUcuVE9OO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgc291cmNlVXJsKCkge1xuICAgICAgICAgIHJldHVybiBhZGRSZXR1cm5TdHJhdGVneShwcm9wcy51bml2ZXJzYWxMaW5rLCBcIm5vbmVcIik7XG4gICAgICAgIH0sXG4gICAgICAgIGRpc2FibGVDb3B5OiB0cnVlXG4gICAgICB9KTtcbiAgICB9XG4gIH0pLCBjcmVhdGVDb21wb25lbnQoQnV0dG9uc1dyYXBwZXIsIHtcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChBY3Rpb25CdXR0b24sIHtcbiAgICAgICAgYXBwZWFyYW5jZTogXCJzZWNvbmRhcnlcIixcbiAgICAgICAgb25DbGljazogKCkgPT4gcHJvcHMub25PcGVuTGluaygpLFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUcmFuc2xhdGlvbiwge1xuICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwubW9iaWxlVW5pdmVyc2FsTW9kYWwub3BlbkxpbmtcIixcbiAgICAgICAgICAgIGNoaWxkcmVuOiBcIk9wZW4gTGlua1wiXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoQWN0aW9uQnV0dG9uLCB7XG4gICAgICAgIGFwcGVhcmFuY2U6IFwic2Vjb25kYXJ5XCIsXG4gICAgICAgIG9uQ2xpY2s6ICgpID0+IHByb3BzLm9uQ29weSgpLFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUcmFuc2xhdGlvbiwge1xuICAgICAgICAgICAgZ2V0IHRyYW5zbGF0aW9uS2V5KCkge1xuICAgICAgICAgICAgICByZXR1cm4gcHJvcHMuaXNDb3BpZWRTaG93biAhPT0gdm9pZCAwID8gXCJjb21tb24uY29waWVkXCIgOiBcImNvbW1vbi5jb3B5TGlua1wiO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLmlzQ29waWVkU2hvd24gIT09IHZvaWQgMCA/IFwiQ29waWVkXCIgOiBcIkNvcHkgTGlua1wiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KV07XG4gICAgfVxuICB9KV07XG59O1xuZnVuY3Rpb24gZ2V0VW5pcXVlQnJpZGdlcyh3YWxsZXRzTGlzdCkge1xuICBjb25zdCB1bmlxdWVCcmlkZ2VzID0gbmV3IFNldChcbiAgICB3YWxsZXRzTGlzdC5maWx0ZXIoaXNXYWxsZXRJbmZvUmVtb3RlKS5tYXAoKGl0ZW0pID0+IGl0ZW0uYnJpZGdlVXJsKVxuICApO1xuICByZXR1cm4gQXJyYXkuZnJvbSh1bmlxdWVCcmlkZ2VzKS5tYXAoKGJyaWRnZVVybCkgPT4gKHsgYnJpZGdlVXJsIH0pKTtcbn1cbmZ1bmN0aW9uIGJyaWRnZXNJc0VxdWFsKGxlZnQsIHJpZ2h0KSB7XG4gIGNvbnN0IGxlZnRTZXQgPSBuZXcgU2V0KGxlZnQgPT0gbnVsbCA/IHZvaWQgMCA6IGxlZnQubWFwKChpMikgPT4gaTIuYnJpZGdlVXJsKSk7XG4gIGNvbnN0IHJpZ2h0U2V0ID0gbmV3IFNldChyaWdodCA9PSBudWxsID8gdm9pZCAwIDogcmlnaHQubWFwKChpMikgPT4gaTIuYnJpZGdlVXJsKSk7XG4gIHJldHVybiBsZWZ0U2V0LnNpemUgPT09IHJpZ2h0U2V0LnNpemUgJiYgWy4uLmxlZnRTZXRdLmV2ZXJ5KCh2YWx1ZSkgPT4gcmlnaHRTZXQuaGFzKHZhbHVlKSk7XG59XG5jb25zdCBfdG1wbCQkMSA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8bGk+PC9saT5gKSwgX3RtcGwkMiA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8ZGl2IGRhdGEtdGMtd2FsbGV0cy1tb2RhbC11bml2ZXJzYWwtbW9iaWxlPVwidHJ1ZVwiPjwvZGl2PmApO1xuY29uc3QgTW9iaWxlVW5pdmVyc2FsTW9kYWwgPSAocHJvcHMpID0+IHtcbiAgY29uc3QgW3Nob3dRUiwgc2V0U2hvd1FSXSA9IGNyZWF0ZVNpZ25hbChmYWxzZSk7XG4gIGNvbnN0IFtmaXJzdENsaWNrLCBzZXRGaXJzdENsaWNrXSA9IGNyZWF0ZVNpZ25hbCh0cnVlKTtcbiAgY29uc3QgW3VuaXZlcnNhbExpbmssIHNldFVuaXZlcnNhbExpbmtdID0gY3JlYXRlU2lnbmFsKG51bGwpO1xuICBjb25zdCBjb25uZWN0b3IgPSBhcHBTdGF0ZS5jb25uZWN0b3I7XG4gIGNvbnN0IHdhbGxldHNMaXN0ID0gKCkgPT4gcHJvcHMud2FsbGV0c0xpc3QuZmlsdGVyKCh3KSA9PiBzdXBwb3J0c01vYmlsZSh3KSAmJiB3LmFwcE5hbWUgIT09IEFUX1dBTExFVF9BUFBfTkFNRSk7XG4gIGNvbnN0IHNob3VsZFNob3dNb3JlQnV0dG9uID0gKCkgPT4gd2FsbGV0c0xpc3QoKS5sZW5ndGggPiA3O1xuICBjb25zdCB3YWxsZXRzQnJpZGdlcyA9IGNyZWF0ZU1lbW8oKCkgPT4gZ2V0VW5pcXVlQnJpZGdlcyhwcm9wcy53YWxsZXRzTGlzdCksIG51bGwsIHtcbiAgICBlcXVhbHM6IGJyaWRnZXNJc0VxdWFsXG4gIH0pO1xuICBjb25zdCBhdFdhbGxldFN1cHBvcnRGZWF0dXJlcyA9IGNyZWF0ZU1lbW8oKCkgPT4ge1xuICAgIHZhciBfYTIsIF9iMjtcbiAgICByZXR1cm4gKF9iMiA9IChfYTIgPSBwcm9wcy53YWxsZXRzTGlzdC5maW5kKCh3YWxsZXQpID0+IHdhbGxldC5hcHBOYW1lID09PSBBVF9XQUxMRVRfQVBQX05BTUUpKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLmlzU3VwcG9ydFJlcXVpcmVkRmVhdHVyZXMpICE9IG51bGwgPyBfYjIgOiBmYWxzZTtcbiAgfSwgbnVsbCk7XG4gIGNvbnN0IGdldFVuaXZlcnNhbExpbmsgPSAoKSA9PiB7XG4gICAgaWYgKCF1bml2ZXJzYWxMaW5rKCkpIHtcbiAgICAgIHNldFVuaXZlcnNhbExpbmsoY29ubmVjdG9yLmNvbm5lY3Qod2FsbGV0c0JyaWRnZXMoKSwgcHJvcHMuYWRkaXRpb25hbFJlcXVlc3QpKTtcbiAgICB9XG4gICAgcmV0dXJuIHVuaXZlcnNhbExpbmsoKTtcbiAgfTtcbiAgc2V0TGFzdFNlbGVjdGVkV2FsbGV0SW5mbyh7XG4gICAgb3Blbk1ldGhvZDogXCJ1bml2ZXJzYWwtbGlua1wiXG4gIH0pO1xuICBjb25zdCBbaXNDb3BpZWRTaG93biwgc2V0SXNDb3BpZWRTaG93bl0gPSBjcmVhdGVTaWduYWwodm9pZCAwKTtcbiAgY29uc3Qgb25Db3B5ID0gKCkgPT4gX19hc3luYyh2b2lkIDAsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgaWYgKGlzQ29waWVkU2hvd24oKSAhPT0gdm9pZCAwKSB7XG4gICAgICBjbGVhclRpbWVvdXQoaXNDb3BpZWRTaG93bigpKTtcbiAgICB9XG4gICAgeWllbGQgY29weVRvQ2xpcGJvYXJkKGdldFVuaXZlcnNhbExpbmsoKSk7XG4gICAgY29uc3QgdGltZW91dElkID0gc2V0VGltZW91dCgoKSA9PiBzZXRJc0NvcGllZFNob3duKHZvaWQgMCksIDE1MDApO1xuICAgIHNldElzQ29waWVkU2hvd24odGltZW91dElkKTtcbiAgfSk7XG4gIGNvbnN0IG9uU2VsZWN0VW5pdmVyc2FsID0gKCkgPT4ge1xuICAgIGNvbnN0IGZvcmNlUmVkaXJlY3QgPSAhZmlyc3RDbGljaygpO1xuICAgIHNldEZpcnN0Q2xpY2soZmFsc2UpO1xuICAgIHJlZGlyZWN0VG9XYWxsZXQoZ2V0VW5pdmVyc2FsTGluaygpLCB2b2lkIDAsIHtcbiAgICAgIHJldHVyblN0cmF0ZWd5OiBhcHBTdGF0ZS5yZXR1cm5TdHJhdGVneSxcbiAgICAgIGZvcmNlUmVkaXJlY3RcbiAgICB9LCAobWV0aG9kKSA9PiB7XG4gICAgICBzZXRMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvKHtcbiAgICAgICAgb3Blbk1ldGhvZDogbWV0aG9kXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfTtcbiAgY29uc3Qgb25TZWxlY3RUZWxlZ3JhbSA9ICgpID0+IHtcbiAgICBzZXRVbml2ZXJzYWxMaW5rKG51bGwpO1xuICAgIGNvbnN0IGF0V2FsbGV0ID0gcHJvcHMud2FsbGV0c0xpc3QuZmluZCgod2FsbGV0KSA9PiB3YWxsZXQuYXBwTmFtZSA9PT0gQVRfV0FMTEVUX0FQUF9OQU1FKTtcbiAgICBpZiAoIWF0V2FsbGV0IHx8ICFpc1dhbGxldEluZm9SZW1vdGUoYXRXYWxsZXQpKSB7XG4gICAgICB0aHJvdyBuZXcgVG9uQ29ubmVjdFVJRXJyb3IoXCJAd2FsbGV0IGJvdCBub3QgZm91bmQgaW4gdGhlIHdhbGxldHMgbGlzdFwiKTtcbiAgICB9XG4gICAgY29uc3Qgd2FsbGV0TGluayA9IGNvbm5lY3Rvci5jb25uZWN0KHtcbiAgICAgIGJyaWRnZVVybDogYXRXYWxsZXQuYnJpZGdlVXJsLFxuICAgICAgdW5pdmVyc2FsTGluazogYXRXYWxsZXQudW5pdmVyc2FsTGlua1xuICAgIH0sIHByb3BzLmFkZGl0aW9uYWxSZXF1ZXN0KTtcbiAgICBjb25zdCBmb3JjZVJlZGlyZWN0ID0gIWZpcnN0Q2xpY2soKTtcbiAgICBzZXRGaXJzdENsaWNrKGZhbHNlKTtcbiAgICByZWRpcmVjdFRvVGVsZWdyYW0od2FsbGV0TGluaywge1xuICAgICAgcmV0dXJuU3RyYXRlZ3k6IGFwcFN0YXRlLnJldHVyblN0cmF0ZWd5LFxuICAgICAgdHdhUmV0dXJuVXJsOiBhcHBTdGF0ZS50d2FSZXR1cm5VcmwsXG4gICAgICBmb3JjZVJlZGlyZWN0XG4gICAgfSk7XG4gIH07XG4gIGNvbnN0IG9uT3BlblFSID0gKCkgPT4ge1xuICAgIHNldFNob3dRUih0cnVlKTtcbiAgICBzZXRMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvKHtcbiAgICAgIG9wZW5NZXRob2Q6IFwicXJjb2RlXCJcbiAgICB9KTtcbiAgfTtcbiAgY29uc3Qgb25DbG9zZVFSID0gKCkgPT4ge1xuICAgIHNldFNob3dRUihmYWxzZSk7XG4gICAgc2V0TGFzdFNlbGVjdGVkV2FsbGV0SW5mbyh7XG4gICAgICBvcGVuTWV0aG9kOiBcInVuaXZlcnNhbC1saW5rXCJcbiAgICB9KTtcbiAgfTtcbiAgY29uc3Qgc3VwcG9ydGVkV2FsbGV0cyA9IGNyZWF0ZU1lbW8oKCkgPT4gd2FsbGV0c0xpc3QoKS5maWx0ZXIoKHdhbGxldCkgPT4gd2FsbGV0LmlzU3VwcG9ydFJlcXVpcmVkRmVhdHVyZXMpLCBudWxsKTtcbiAgY29uc3QgdmlzaWJsZVdhbGxldHMgPSBjcmVhdGVNZW1vKCgpID0+IHN1cHBvcnRlZFdhbGxldHMoKS5zbGljZSgwLCAzKSwgbnVsbCk7XG4gIGNvbnN0IGZvdXJXYWxsZXRzSXRlbSA9IGNyZWF0ZU1lbW8oKCkgPT4gd2FsbGV0c0xpc3QoKS5maWx0ZXIoKHdhbGxldCkgPT4gIXZpc2libGVXYWxsZXRzKCkuZmluZCgodykgPT4gdy5hcHBOYW1lID09PSB3YWxsZXQuYXBwTmFtZSkpLnNsaWNlKDAsIDQpLCBudWxsKTtcbiAgcmV0dXJuICgoKSA9PiB7XG4gICAgY29uc3QgX2VsJCA9IF90bXBsJDIuY2xvbmVOb2RlKHRydWUpO1xuICAgIGluc2VydChfZWwkLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgIHJldHVybiBzaG93UVIoKTtcbiAgICAgIH0sXG4gICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFN0eWxlZExlZnRBY3Rpb25CdXR0b24sIHtcbiAgICAgICAgICBpY29uOiBcImFycm93XCIsXG4gICAgICAgICAgb25DbGljazogb25DbG9zZVFSXG4gICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoTW9iaWxlVW5pdmVyc2FsUVIsIHtcbiAgICAgICAgICBnZXQgdW5pdmVyc2FsTGluaygpIHtcbiAgICAgICAgICAgIHJldHVybiBnZXRVbml2ZXJzYWxMaW5rKCk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBnZXQgaXNDb3BpZWRTaG93bigpIHtcbiAgICAgICAgICAgIHJldHVybiBpc0NvcGllZFNob3duKCk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBvbk9wZW5MaW5rOiBvblNlbGVjdFVuaXZlcnNhbCxcbiAgICAgICAgICBvbkNvcHlcbiAgICAgICAgfSldO1xuICAgICAgfVxuICAgIH0pLCBudWxsKTtcbiAgICBpbnNlcnQoX2VsJCwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICByZXR1cm4gIXNob3dRUigpO1xuICAgICAgfSxcbiAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoU3R5bGVkTGVmdEFjdGlvbkJ1dHRvbiwge1xuICAgICAgICAgIGdldCBpY29uKCkge1xuICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChRUkljb24sIHt9KTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIG9uQ2xpY2s6IG9uT3BlblFSXG4gICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoSDFTdHlsZWQkNCwge1xuICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLm1vYmlsZVVuaXZlcnNhbE1vZGFsLmNvbm5lY3RZb3VyV2FsbGV0XCIsXG4gICAgICAgICAgY2hpbGRyZW46IFwiQ29ubmVjdCB5b3VyIFRPTiB3YWxsZXRcIlxuICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgIHJldHVybiBhdFdhbGxldFN1cHBvcnRGZWF0dXJlcygpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoSDJTdHlsZWQkMiwge1xuICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5tb2JpbGVVbml2ZXJzYWxNb2RhbC5vcGVuV2FsbGV0T25UZWxlZ3JhbU9yU2VsZWN0XCIsXG4gICAgICAgICAgICAgIG1heFdpZHRoOiAzMjAsXG4gICAgICAgICAgICAgIGNoaWxkcmVuOiBcIlVzZSBXYWxsZXQgaW4gVGVsZWdyYW0gb3IgY2hvb3NlIG90aGVyIGFwcGxpY2F0aW9uXCJcbiAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoVGVsZWdyYW1CdXR0b25TdHlsZWQsIHtcbiAgICAgICAgICAgICAgZ2V0IGxlZnRJY29uKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQXRXYWxsZXRJY29uLCB7fSk7XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIGdldCByaWdodEljb24oKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUR0ltYWdlU3R5bGVkLCB7XG4gICAgICAgICAgICAgICAgICBnZXQgc3JjKCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gSU1HLlRHO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBvbkNsaWNrOiBvblNlbGVjdFRlbGVncmFtLFxuICAgICAgICAgICAgICBzY2FsZTogXCJzXCIsXG4gICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRyYW5zbGF0aW9uLCB7XG4gICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5tb2JpbGVVbml2ZXJzYWxNb2RhbC5vcGVuV2FsbGV0T25UZWxlZ3JhbVwiLFxuICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiQ29ubmVjdCBXYWxsZXQgaW4gVGVsZWdyYW1cIlxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KV07XG4gICAgICAgICAgfVxuICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEgyU3R5bGVkJDIsIHtcbiAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5tb2JpbGVVbml2ZXJzYWxNb2RhbC5jaG9vc2VPdGhlckFwcGxpY2F0aW9uXCIsXG4gICAgICAgICAgbWF4V2lkdGg6IDM0MixcbiAgICAgICAgICBwYWRkaW5nOiBcIjAgMjRweCA4cHggMjRweFwiLFxuICAgICAgICAgIG1hcmdpbjogXCIwXCIsXG4gICAgICAgICAgY2hpbGRyZW46IFwiQ2hvb3NlIG90aGVyIGFwcGxpY2F0aW9uXCJcbiAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChXYWxsZXRVbENvbnRhaW5lciwge1xuICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KEZvciwge1xuICAgICAgICAgICAgICBnZXQgZWFjaCgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlTWVtbygoKSA9PiAhIXNob3VsZFNob3dNb3JlQnV0dG9uKCkpKCkgPyB2aXNpYmxlV2FsbGV0cygpIDogc3VwcG9ydGVkV2FsbGV0cygpO1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBjaGlsZHJlbjogKHdhbGxldCkgPT4gKCgpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBfZWwkMyA9IF90bXBsJCQxLmNsb25lTm9kZSh0cnVlKTtcbiAgICAgICAgICAgICAgICBpbnNlcnQoX2VsJDMsIGNyZWF0ZUNvbXBvbmVudChXYWxsZXRJdGVtLCB7XG4gICAgICAgICAgICAgICAgICBnZXQgaWNvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHdhbGxldC5pbWFnZVVybDtcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICBnZXQgbmFtZSgpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHdhbGxldC5uYW1lO1xuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6ICgpID0+IHByb3BzLm9uU2VsZWN0KHdhbGxldClcbiAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIF9lbCQzO1xuICAgICAgICAgICAgICB9KSgpXG4gICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHNob3VsZFNob3dNb3JlQnV0dG9uKCk7XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBfZWwkMiA9IF90bXBsJCQxLmNsb25lTm9kZSh0cnVlKTtcbiAgICAgICAgICAgICAgICBpbnNlcnQoX2VsJDIsIGNyZWF0ZUNvbXBvbmVudChGb3VyV2FsbGV0c0l0ZW0sIHtcbiAgICAgICAgICAgICAgICAgIGxhYmVsTGluZTE6IFwiVmlldyBhbGxcIixcbiAgICAgICAgICAgICAgICAgIGxhYmVsTGluZTI6IFwid2FsbGV0c1wiLFxuICAgICAgICAgICAgICAgICAgZ2V0IGltYWdlcygpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZvdXJXYWxsZXRzSXRlbSgpLm1hcCgoaTIpID0+IGkyLmltYWdlVXJsKTtcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICBvbkNsaWNrOiAoKSA9PiBwcm9wcy5vblNlbGVjdEFsbFdhbGxldHMoKVxuICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gX2VsJDI7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pXTtcbiAgICAgIH1cbiAgICB9KSwgbnVsbCk7XG4gICAgcmV0dXJuIF9lbCQ7XG4gIH0pKCk7XG59O1xuY29uc3QgYm9yZGVycyQxID0ge1xuICBtOiBcIjE2cHhcIixcbiAgczogXCI4cHhcIixcbiAgbm9uZTogXCIwXCJcbn07XG5jb25zdCBob3ZlckJvcmRlcnMgPSB7XG4gIG06IFwiOHB4XCIsXG4gIHM6IFwiNHB4XCIsXG4gIG5vbmU6IFwiMFwiXG59O1xuY29uc3QgRGVza3RvcFVuaXZlcnNhbE1vZGFsU3R5bGVkID0gc3R5bGVkLmRpdmBcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTZweDtcbmA7XG5jb25zdCBIMlN0eWxlZCA9IHN0eWxlZChIMilgXG4gICAgbWF4LXdpZHRoOiAzMjBweDtcbiAgICBtYXJnaW4tdG9wOiAycHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbmA7XG5jb25zdCBIMkF2YWlsYWJsZVdhbGxldHNTdHlsZWQgPSBzdHlsZWQoSDIpYFxuICAgIG1hcmdpbi1ib3R0b206IDE2cHg7XG5gO1xuY29uc3QgUVJDb2RlU3R5bGVkID0gc3R5bGVkKFFSQ29kZSlgXG4gICAgbWFyZ2luLWJvdHRvbTogMjRweDtcbmA7XG5jb25zdCBXYWxsZXRzQ29udGFpbmVyU3R5bGVkID0gc3R5bGVkLnVsYFxuICAgIGRpc3BsYXk6IGZsZXg7XG5gO1xuc3R5bGVkLmRpdmBcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGdhcDogMTZweDtcbiAgICB3aWR0aDogMTAwJTtcbmA7XG5zdHlsZWQoQnV0dG9uKWBcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDAgMTZweDtcbiAgICBoZWlnaHQ6IDU2cHg7XG4gICAgYm9yZGVyLXJhZGl1czogJHsocHJvcHMpID0+IGJvcmRlcnMkMVtwcm9wcy50aGVtZS5ib3JkZXJSYWRpdXNdfTtcblxuICAgICY6aG92ZXIge1xuICAgICAgICAkeyhwcm9wcykgPT4gcHJvcHMuZGlzYWJsZUV2ZW50c0FuaW1hdGlvbiA/IFwidHJhbnNmb3JtOiB1bnNldDtcIiA6IFwiXCJ9XG4gICAgfVxuXG4gICAgJjphY3RpdmUge1xuICAgICAgICAkeyhwcm9wcykgPT4gcHJvcHMuZGlzYWJsZUV2ZW50c0FuaW1hdGlvbiA/IFwidHJhbnNmb3JtOiB1bnNldDtcIiA6IFwiXCJ9XG4gICAgfVxuYDtcbnN0eWxlZC51bGBcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm90dG9tOiAxMDAlO1xuICAgIGxlZnQ6IDA7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDhweDtcbiAgICB3aWR0aDogMTg4cHg7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xNnB4KTtcblxuICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZC5wcmltYXJ5fTtcbiAgICBib3JkZXItcmFkaXVzOiAkeyhwcm9wcykgPT4gYm9yZGVycyQxW3Byb3BzLnRoZW1lLmJvcmRlclJhZGl1c119O1xuICAgIGJveC1zaGFkb3c6IDAgNHB4IDI0cHggcmdiYSgwLCAwLCAwLCAwLjE2KTtcbmA7XG5zdHlsZWQubGlgXG4gICAgcGFkZGluZzogOHB4O1xuXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGdhcDogOHB4O1xuXG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGJvcmRlci1yYWRpdXM6ICR7KHByb3BzKSA9PiBob3ZlckJvcmRlcnNbcHJvcHMudGhlbWUuYm9yZGVyUmFkaXVzXX07XG5cbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yLCB0cmFuc2Zvcm0gMC4xcyBlYXNlLWluLW91dDtcblxuICAgICY6aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmQuc2Vjb25kYXJ5fTtcbiAgICB9XG5cbiAgICAmOmFjdGl2ZSB7XG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMC45Nik7XG4gICAgfVxuYDtcbnN0eWxlZChJbWFnZSlgXG4gICAgd2lkdGg6IDI0cHg7XG4gICAgaGVpZ2h0OiAyNHB4O1xuXG4gICAgYm9yZGVyLXJhZGl1czogNnB4O1xuYDtcbnN0eWxlZC5kaXZgXG4gICAgbWFyZ2luLXRvcDogMjNweDtcbiAgICBtYXJnaW4tYm90dG9tOiAxcHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuYDtcbnN0eWxlZChUZXh0KWBcbiAgICBjb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0LnNlY29uZGFyeX07XG4gICAgZm9udC1zaXplOiAxNnB4O1xuYDtcbmNvbnN0IF90bXBsJCA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8bGk+PC9saT5gKTtcbmNvbnN0IERlc2t0b3BVbml2ZXJzYWxNb2RhbCA9IChwcm9wcykgPT4ge1xuICBjb25zdCBbcG9wdXBPcGVuZWQsIHNldFBvcHVwT3BlbmVkXSA9IGNyZWF0ZVNpZ25hbChmYWxzZSk7XG4gIGNvbnN0IGNvbm5lY3RvciA9IGFwcFN0YXRlLmNvbm5lY3RvcjtcbiAgY29uc3Qgd2FsbGV0c0JyaWRnZXMgPSBjcmVhdGVNZW1vKCgpID0+IGdldFVuaXF1ZUJyaWRnZXMocHJvcHMud2FsbGV0c0xpc3QpLCBudWxsLCB7XG4gICAgZXF1YWxzOiBicmlkZ2VzSXNFcXVhbFxuICB9KTtcbiAgc2V0TGFzdFNlbGVjdGVkV2FsbGV0SW5mbyh7XG4gICAgb3Blbk1ldGhvZDogXCJxcmNvZGVcIlxuICB9KTtcbiAgY29uc3QgcmVxdWVzdCA9IGNyZWF0ZU1lbW8oKCkgPT4gY29ubmVjdG9yLmNvbm5lY3Qod2FsbGV0c0JyaWRnZXMoKSwgcHJvcHMuYWRkaXRpb25hbFJlcXVlc3QpKTtcbiAgY29uc3Qgc3VwcG9ydGVkV2FsbGV0cyA9IGNyZWF0ZU1lbW8oKCkgPT4gcHJvcHMud2FsbGV0c0xpc3QuZmlsdGVyKCh3YWxsZXQpID0+IHdhbGxldC5pc1N1cHBvcnRSZXF1aXJlZEZlYXR1cmVzKSwgbnVsbCk7XG4gIGNvbnN0IHZpc2libGVXYWxsZXRzID0gY3JlYXRlTWVtbygoKSA9PiBzdXBwb3J0ZWRXYWxsZXRzKCkuc2xpY2UoMCwgMyksIG51bGwpO1xuICBjb25zdCBmb3VyV2FsbGV0c0l0ZW0gPSBjcmVhdGVNZW1vKCgpID0+IHByb3BzLndhbGxldHNMaXN0LmZpbHRlcigod2FsbGV0KSA9PiAhdmlzaWJsZVdhbGxldHMoKS5maW5kKCh3KSA9PiB3LmFwcE5hbWUgPT09IHdhbGxldC5hcHBOYW1lKSkuc2xpY2UoMCwgNCksIG51bGwpO1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KERlc2t0b3BVbml2ZXJzYWxNb2RhbFN0eWxlZCwge1xuICAgIG9uQ2xpY2s6ICgpID0+IHNldFBvcHVwT3BlbmVkKGZhbHNlKSxcbiAgICBcImRhdGEtdGMtd2FsbGV0cy1tb2RhbC11bml2ZXJzYWwtZGVza3RvcFwiOiBcInRydWVcIixcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChIMSwge1xuICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5kZXNrdG9wVW5pdmVyc2FsTW9kYWwuY29ubmVjdFlvdXJXYWxsZXRcIixcbiAgICAgICAgY2hpbGRyZW46IFwiQ29ubmVjdCB5b3VyIHdhbGxldFwiXG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEgyU3R5bGVkLCB7XG4gICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLmRlc2t0b3BVbml2ZXJzYWxNb2RhbC5zY2FuXCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIlNjYW4gd2l0aCB5b3VyIG1vYmlsZSB3YWxsZXRcIlxuICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChRUkNvZGVTdHlsZWQsIHtcbiAgICAgICAgZ2V0IHNvdXJjZVVybCgpIHtcbiAgICAgICAgICByZXR1cm4gYWRkUmV0dXJuU3RyYXRlZ3kocmVxdWVzdCgpLCBcIm5vbmVcIik7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBkaXNhYmxlQ29weSgpIHtcbiAgICAgICAgICByZXR1cm4gcG9wdXBPcGVuZWQoKTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGltYWdlVXJsKCkge1xuICAgICAgICAgIHJldHVybiBJTUcuVE9OO1xuICAgICAgICB9XG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEgyQXZhaWxhYmxlV2FsbGV0c1N0eWxlZCwge1xuICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5kZXNrdG9wVW5pdmVyc2FsTW9kYWwuYXZhaWxhYmxlV2FsbGV0c1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJBdmFpbGFibGUgd2FsbGV0c1wiXG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFdhbGxldHNDb250YWluZXJTdHlsZWQsIHtcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KEZvciwge1xuICAgICAgICAgICAgZ2V0IGVhY2goKSB7XG4gICAgICAgICAgICAgIHJldHVybiB2aXNpYmxlV2FsbGV0cygpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNoaWxkcmVuOiAod2FsbGV0KSA9PiAoKCkgPT4ge1xuICAgICAgICAgICAgICBjb25zdCBfZWwkID0gX3RtcGwkLmNsb25lTm9kZSh0cnVlKTtcbiAgICAgICAgICAgICAgaW5zZXJ0KF9lbCQsIGNyZWF0ZUNvbXBvbmVudChXYWxsZXRMYWJlbGVkSXRlbSwge1xuICAgICAgICAgICAgICAgIHdhbGxldCxcbiAgICAgICAgICAgICAgICBvbkNsaWNrOiAoKSA9PiBwcm9wcy5vblNlbGVjdCh3YWxsZXQpXG4gICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgcmV0dXJuIF9lbCQ7XG4gICAgICAgICAgICB9KSgpXG4gICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChGb3VyV2FsbGV0c0l0ZW0sIHtcbiAgICAgICAgICAgIGxhYmVsTGluZTE6IFwiVmlldyBhbGxcIixcbiAgICAgICAgICAgIGxhYmVsTGluZTI6IFwid2FsbGV0c1wiLFxuICAgICAgICAgICAgZ2V0IGltYWdlcygpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGZvdXJXYWxsZXRzSXRlbSgpLm1hcCgoaTIpID0+IGkyLmltYWdlVXJsKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvbkNsaWNrOiAoKSA9PiBwcm9wcy5vblNlbGVjdEFsbFdhbGxldHMoKVxuICAgICAgICAgIH0pXTtcbiAgICAgICAgfVxuICAgICAgfSldO1xuICAgIH1cbiAgfSk7XG59O1xuY29uc3QgYm9yZGVycyA9IHtcbiAgbTogXCIxNnB4XCIsXG4gIHM6IFwiOHB4XCIsXG4gIG5vbmU6IFwiMFwiXG59O1xuY29uc3QgSDFTdHlsZWQkMiA9IHN0eWxlZChIMSlgXG4gICAgbWF4LXdpZHRoOiAyODhweDtcbiAgICBtYXJnaW46IDAgYXV0byAzOHB4O1xuYDtcbmNvbnN0IERlc2t0b3BGZWF0dXJlTm90U3VwcG9ydE1vZGFsU3R5bGVkID0gc3R5bGVkLmRpdmBcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbmA7XG5jb25zdCBTdHlsZWRJY29uQnV0dG9uJDEgPSBzdHlsZWQoSWNvbkJ1dHRvbilgXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMTZweDtcbiAgICBsZWZ0OiAxNnB4O1xuYDtcbmNvbnN0IFRpdGxlU3R5bGVkID0gc3R5bGVkKEgxKWBcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyOHB4O1xuYDtcbmNvbnN0IERlc2NyaXB0aW9uU3R5bGVkID0gc3R5bGVkKFRleHQpYFxuICAgIG1hcmdpbi10b3A6IDEycHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMjRweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWF4LXdpZHRoOiAzNjBweDtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLnRleHQuc2Vjb25kYXJ5fTtcbmA7XG5zdHlsZWQuYnV0dG9uYFxuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBwYWRkaW5nOiAwO1xuICAgIG1hcmdpbjogMDtcbiAgICBjb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy5hY2NlbnR9O1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBmb250OiBpbmhlcml0O1xuYDtcbmNvbnN0IFNwYWNlciA9IHN0eWxlZC5kaXZgXG4gICAgbWFyZ2luLWJvdHRvbTogNDZweDtcbmA7XG5jb25zdCBFcnJvckljb25TdHlsZWQgPSBzdHlsZWQoRXJyb3JJY29uKWBcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuYDtcbnN0eWxlZC51bGBcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGdhcDogOHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDI0cHg7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICBwYWRkaW5nOiAwO1xuYDtcbmNvbnN0IERpc2Nvbm5lY3RCdXR0b25TdHlsZWQgPSBzdHlsZWQoQnV0dG9uKWBcbiAgICBtYXgtd2lkdGg6IDMyMHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogNDhweDtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogJHsocHJvcHMpID0+IGJvcmRlcnNbcHJvcHMudGhlbWUuYm9yZGVyUmFkaXVzXX07XG4gICAgbWFyZ2luLWJvdHRvbTogMjhweDtcbmA7XG5jb25zdCBCb2R5VGV4dFN0eWxlZCA9IHN0eWxlZChIMilgXG4gICAgY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dC5zZWNvbmRhcnl9O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuYDtcbmNvbnN0IEJ1dHRvbnNDb250YWluZXJTdHlsZWQgPSBzdHlsZWQuZGl2YFxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgZ2FwOiA4cHg7XG4gICAgcGFkZGluZy1ib3R0b206IDMxcHg7XG5gO1xuY29uc3QgUmVzdG9yZUluZm9Nb2RhbFN0eWxlZCA9IHN0eWxlZC5kaXZgXG4gICAgbWFyZ2luOiAwIDhweCAxNnB4IDhweDtcbmA7XG5jb25zdCBTdHlsZWRJY29uQnV0dG9uID0gc3R5bGVkKEljb25CdXR0b24pYFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDE2cHg7XG4gICAgbGVmdDogMTZweDtcbmA7XG5jb25zdCBIMVN0eWxlZCQxID0gc3R5bGVkKEgxKWBcbiAgICBtYXJnaW4tYm90dG9tOiAxOHB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbmA7XG5jb25zdCBTdGVwQmxvY2sgPSBzdHlsZWQuZGl2YFxuICAgIHBhZGRpbmc6IDE2cHggMDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbmA7XG5zdHlsZWQuZGl2YFxuICAgIG1hcmdpbi1ib3R0b206IDEycHg7XG5gO1xuY29uc3QgSDNTdHlsZWQgPSBzdHlsZWQoSDMpYFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW4tYm90dG9tOiA0cHg7XG5gO1xuY29uc3QgVGV4dFN0eWxlZCQxID0gc3R5bGVkKFRleHQpYFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXgtd2lkdGg6IDM1MnB4O1xuICAgIGNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLnRleHQuc2Vjb25kYXJ5fTtcbmA7XG5jb25zdCBDaXJjbGVOdW1iZXIgPSBzdHlsZWQuZGl2YFxuICAgIHdpZHRoOiA0NHB4O1xuICAgIGhlaWdodDogNDRweDtcbiAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiB7XG4gIHZhciBfYTI7XG4gIHJldHVybiAoX2EyID0gcHJvcHMudGhlbWUpID09IG51bGwgPyB2b2lkIDAgOiBfYTIuY29sb3JzLmljb24uc2Vjb25kYXJ5O1xufX07XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIG1hcmdpbi1ib3R0b206IDEycHg7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBmb250LXNpemU6IDIycHg7XG4gICAgY29sb3I6ICR7KHByb3BzKSA9PiB7XG4gIHZhciBfYTI7XG4gIHJldHVybiAoX2EyID0gcHJvcHMudGhlbWUpID09IG51bGwgPyB2b2lkIDAgOiBfYTIuY29sb3JzLnRleHQucHJpbWFyeTtcbn19O1xuYDtcbmNvbnN0IFJlc3RvcmVJbmZvTW9kYWwgPSAocHJvcHMpID0+IHtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChSZXN0b3JlSW5mb01vZGFsU3R5bGVkLCB7XG4gICAgXCJkYXRhLXRjLXdhbGxldHMtbW9kYWwtcmVzdG9yZVwiOiBcInRydWVcIixcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChTdHlsZWRJY29uQnV0dG9uLCB7XG4gICAgICAgIGljb246IFwiYXJyb3dcIixcbiAgICAgICAgZ2V0IG9uQ2xpY2soKSB7XG4gICAgICAgICAgcmV0dXJuIHByb3BzLm9uQmFja0NsaWNrO1xuICAgICAgICB9XG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEgxU3R5bGVkJDEsIHtcbiAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwucmVzdG9yZUluZm9Nb2RhbC50aXRsZVwiLFxuICAgICAgICBjaGlsZHJlbjogXCJSZXN0b3JlXCJcbiAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2Nyb2xsQ29udGFpbmVyLCB7XG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChTdGVwQmxvY2ssIHtcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoQ2lyY2xlTnVtYmVyLCB7XG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiMVwiXG4gICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoSDNTdHlsZWQsIHtcbiAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5yZXN0b3JlTW9kYWwuc3RlcDEudGl0bGVcIixcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJGaW5kIHlvdXIgY3VycmVudCByZWNvdmVyeSBwaHJhc2VcIlxuICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFRleHRTdHlsZWQkMSwge1xuICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLnJlc3RvcmVNb2RhbC5zdGVwMS50ZXh0XCIsXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiT3BlbiB5b3VyIHdhbGxldCBzZXR0aW5ncyBhbmQgbG9jYXRlIHRoZVxceEEwcmVjb3ZlcnlcXHhBMHBocmFzZVwiXG4gICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFN0ZXBCbG9jaywge1xuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChDaXJjbGVOdW1iZXIsIHtcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCIyXCJcbiAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChIM1N0eWxlZCwge1xuICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLnJlc3RvcmVNb2RhbC5zdGVwMi50aXRsZVwiLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIkNvcHkgeW91ciByZWNvdmVyeSBwaHJhc2VcIlxuICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFRleHRTdHlsZWQkMSwge1xuICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLnJlc3RvcmVNb2RhbC5zdGVwMi50ZXh0XCIsXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiV3JpdGUgaXQgZG93biBvciBjb3B5IGl0IHRvIGEgc2FmZSBwbGFjZVwiXG4gICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFN0ZXBCbG9jaywge1xuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChDaXJjbGVOdW1iZXIsIHtcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCIzXCJcbiAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChIM1N0eWxlZCwge1xuICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLnJlc3RvcmVNb2RhbC5zdGVwMy50aXRsZVwiLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIlJlc3RvcmUgaW4gYSBzdXBwb3J0ZWQgd2FsbGV0IGZyb21cXHhBMHRoZVxceEEwbGlzdFxceEEwYmVsb3dcIlxuICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFRleHRTdHlsZWQkMSwge1xuICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLnJlc3RvcmVNb2RhbC5zdGVwMy50ZXh0XCIsXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiRW50ZXIgdGhlIHJlY292ZXJ5IHBocmFzZSB0byBhY2Nlc3MgeW91ciB3YWxsZXRcIlxuICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSldO1xuICAgICAgICB9XG4gICAgICB9KV07XG4gICAgfVxuICB9KTtcbn07XG5jb25zdCBEZXNrdG9wRmVhdHVyZU5vdFN1cHBvcnRNb2RhbCA9IChwcm9wcykgPT4ge1xuICBjb25zdCBbc2VsZWN0ZWRXYWxsZXQsIHNldFNlbGVjdGVkV2FsbGV0XSA9IGNyZWF0ZVNpZ25hbChudWxsKTtcbiAgY29uc3QgW2luZm9Nb2RhbE9wZW4sIHNldEluZm9Nb2RhbE9wZW5dID0gY3JlYXRlU2lnbmFsKGZhbHNlKTtcbiAgY29uc3QgY3VycmVudFdhbGxldFVJID0gY3JlYXRlTWVtbygoKSA9PiBwcm9wcy53YWxsZXRzTGlzdC5maW5kKCh3YWxsZXQpID0+IHdhbGxldC5hcHBOYW1lID09PSBwcm9wcy5jdXJyZW50V2FsbGV0LmRldmljZS5hcHBOYW1lIHx8IHdhbGxldC5uYW1lID09PSBwcm9wcy5jdXJyZW50V2FsbGV0LmRldmljZS5hcHBOYW1lKSk7XG4gIGNvbnN0IGN1cnJlbnRXYWxsZXROYW1lID0gY3JlYXRlTWVtbygoKSA9PiB7XG4gICAgdmFyIF9hMiwgX2IyLCBfYzIsIF9kMjtcbiAgICBjb25zdCBhcHBOYW1lID0gKF9iMiA9IChfYTIgPSBjdXJyZW50V2FsbGV0VUkoKSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi5hcHBOYW1lKSAhPSBudWxsID8gX2IyIDogcHJvcHMuY3VycmVudFdhbGxldC5kZXZpY2UuYXBwTmFtZTtcbiAgICBpZiAoYXBwTmFtZSA9PT0gQVRfV0FMTEVUX0FQUF9OQU1FKSB7XG4gICAgICByZXR1cm4gXCJXYWxsZXQgaW4gVGVsZWdyYW1cIjtcbiAgICB9XG4gICAgcmV0dXJuIChfZDIgPSAoX2MyID0gY3VycmVudFdhbGxldFVJKCkpID09IG51bGwgPyB2b2lkIDAgOiBfYzIubmFtZSkgIT0gbnVsbCA/IF9kMiA6IHByb3BzLmN1cnJlbnRXYWxsZXQuZGV2aWNlLmFwcE5hbWU7XG4gIH0pO1xuICBjb25zdCBjdXJyZW50V2FsbGV0VmVyc2lvbk5vdFN1cHBvcnRlZCA9IGNyZWF0ZU1lbW8oKCkgPT4ge1xuICAgIGNvbnN0IGN1cnJlbnRXYWxsZXRVSVZhciA9IGN1cnJlbnRXYWxsZXRVSSgpO1xuICAgIGlmICghKGN1cnJlbnRXYWxsZXRVSVZhciA9PSBudWxsID8gdm9pZCAwIDogY3VycmVudFdhbGxldFVJVmFyLmZlYXR1cmVzKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBjb25zdCByZXF1aXJlZEZlYXR1cmUgPSBwcm9wcy53YWxsZXRzTW9kYWxTdGF0ZS5yZXF1aXJlZEZlYXR1cmU7XG4gICAgY29uc3QgcmVxdWlyZWRGZWF0dXJlcyA9IHJlcXVpcmVkRmVhdHVyZSA/IHtcbiAgICAgIFtyZXF1aXJlZEZlYXR1cmUuZmVhdHVyZU5hbWVdOiByZXF1aXJlZEZlYXR1cmUudmFsdWVcbiAgICB9IDoge307XG4gICAgY29uc3QgdmFsaWRJbkxpc3QgPSBjaGVja1JlcXVpcmVkV2FsbGV0RmVhdHVyZXMoY3VycmVudFdhbGxldFVJVmFyLmZlYXR1cmVzLCByZXF1aXJlZEZlYXR1cmVzKTtcbiAgICBjb25zdCB2YWxpZEN1cnJlbnRXYWxsZXQgPSBjaGVja1JlcXVpcmVkV2FsbGV0RmVhdHVyZXMocHJvcHMuY3VycmVudFdhbGxldC5kZXZpY2UuZmVhdHVyZXMsIHJlcXVpcmVkRmVhdHVyZXMpO1xuICAgIHJldHVybiB2YWxpZEluTGlzdCAmJiAhdmFsaWRDdXJyZW50V2FsbGV0O1xuICB9KTtcbiAgY29uc3QgaGFuZGxlRGlzY29ubmVjdCA9ICgpID0+IF9fYXN5bmModm9pZCAwLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgIHlpZWxkIHByb3BzLm9uRGlzY29ubmVjdCgpO1xuICAgIHByb3BzLm9uU2VsZWN0KHNlbGVjdGVkV2FsbGV0KCkpO1xuICB9KTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChEZXNrdG9wRmVhdHVyZU5vdFN1cHBvcnRNb2RhbFN0eWxlZCwge1xuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoU3dpdGNoLCB7XG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBpbmZvTW9kYWxPcGVuKCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFJlc3RvcmVJbmZvTW9kYWwsIHtcbiAgICAgICAgICAgICAgICBvbkJhY2tDbGljazogKCkgPT4gc2V0SW5mb01vZGFsT3BlbihmYWxzZSlcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBzZWxlY3RlZFdhbGxldCgpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoU3BhY2VyLCB7fSksIGNyZWF0ZUNvbXBvbmVudChEZXNrdG9wRmVhdHVyZU5vdFN1cHBvcnRNb2RhbFN0eWxlZCwge1xuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFN0eWxlZEljb25CdXR0b24kMSwge1xuICAgICAgICAgICAgICAgICAgICBpY29uOiBcImFycm93XCIsXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6ICgpID0+IHNldFNlbGVjdGVkV2FsbGV0KG51bGwpXG4gICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFRpdGxlU3R5bGVkLCB7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLmZlYXR1cmVOb3RTdXBwb3J0ZWQuZGlzY29ubmVjdC50aXRsZVwiLFxuICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJDb25maXJtIERpc2Nvbm5lY3RcIlxuICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChEZXNjcmlwdGlvblN0eWxlZCwge1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5mZWF0dXJlTm90U3VwcG9ydGVkLmRpc2Nvbm5lY3QuZGVzY3JpcHRpb25cIixcbiAgICAgICAgICAgICAgICAgICAgZ2V0IHRyYW5zbGF0aW9uVmFsdWVzKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBzZWxlY3RlZFdhbGxldCgpLm5hbWVcbiAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtcIllvdSB3aWxsIGJlIGRpc2Nvbm5lY3RlZCBmcm9tIHlvdXIgY3VycmVudCB3YWxsZXQgYW5kIHJlZGlyZWN0ZWQgdG8gY29ubmVjdCBcIiwgY3JlYXRlTWVtbygoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgX2EyO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChfYTIgPSBzZWxlY3RlZFdhbGxldCgpKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLm5hbWU7XG4gICAgICAgICAgICAgICAgICAgICAgfSksIFwiLlwiXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChEaXNjb25uZWN0QnV0dG9uU3R5bGVkLCB7XG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6ICgpID0+IGhhbmRsZURpc2Nvbm5lY3QoKSxcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLmZlYXR1cmVOb3RTdXBwb3J0ZWQuZGlzY29ubmVjdC5idXR0b25cIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIkRpc2Nvbm5lY3RcIlxuICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBjdXJyZW50V2FsbGV0VmVyc2lvbk5vdFN1cHBvcnRlZCgpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoSDFTdHlsZWQkMiwge1xuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjdXJyZW50V2FsbGV0TmFtZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChFcnJvckljb25TdHlsZWQsIHtcbiAgICAgICAgICAgICAgICBzaXplOiBcInNcIlxuICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEJvZHlUZXh0U3R5bGVkLCB7XG4gICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuZmVhdHVyZU5vdFN1cHBvcnRlZC52ZXJzaW9uLmRlc2NyaXB0aW9uXCIsXG4gICAgICAgICAgICAgICAgZ2V0IHRyYW5zbGF0aW9uVmFsdWVzKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogY3VycmVudFdhbGxldE5hbWUoKVxuICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBbXCJZb3VyIGN1cnJlbnQgdmVyc2lvbiBvZiBcIiwgY3JlYXRlTWVtbygoKSA9PiBjdXJyZW50V2FsbGV0TmFtZSgpKSwgXCIgb3Igd2FsbGV0IGNvbnRyYWN0IHR5cGUgZG9lc24ndCBzdXBwb3J0IHRoZSByZXF1aXJlZCBmZWF0dXJlcy4gUGxlYXNlIHVwZGF0ZSBpdCB0byBjb250aW51ZS5cIl07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEJ1dHRvbnNDb250YWluZXJTdHlsZWQsIHtcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChMaW5rLCB7XG4gICAgICAgICAgICAgICAgICAgIGdldCBocmVmKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjdXJyZW50V2FsbGV0VUkoKS5hYm91dFVybDtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgYmxhbms6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEJ1dHRvbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGxlZnRJY29uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KExpbmtJY29uLCB7fSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRyYW5zbGF0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuZmVhdHVyZU5vdFN1cHBvcnRlZC52ZXJzaW9uLnVwZGF0ZUJ1dHRvblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCB0cmFuc2xhdGlvblZhbHVlcygpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IGN1cnJlbnRXYWxsZXROYW1lKClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW1wiVXBkYXRlIFwiLCBjcmVhdGVNZW1vKCgpID0+IGN1cnJlbnRXYWxsZXROYW1lKCkpXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KExpbmssIHtcbiAgICAgICAgICAgICAgICAgICAgaHJlZjogXCJodHRwczovL3RvbmtlZXBlci5oZWxwc2NvdXRkb2NzLmNvbS9hcnRpY2xlLzEwMi13NVwiLFxuICAgICAgICAgICAgICAgICAgICBibGFuazogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQnV0dG9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgbGVmdEljb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTGlua0ljb24sIHt9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5mZWF0dXJlTm90U3VwcG9ydGVkLnZlcnNpb24uYWJvdXRXNVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIkFib3V0IFc1XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KE1hdGNoLCB7XG4gICAgICAgICAgICB3aGVuOiB0cnVlLFxuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChTcGFjZXIsIHt9KSwgY3JlYXRlQ29tcG9uZW50KEVycm9ySWNvblN0eWxlZCwge1xuICAgICAgICAgICAgICAgIHNpemU6IFwic1wiXG4gICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoVGl0bGVTdHlsZWQsIHtcbiAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5mZWF0dXJlTm90U3VwcG9ydGVkLndhbGxldC50aXRsZVwiLFxuICAgICAgICAgICAgICAgIGdldCB0cmFuc2xhdGlvblZhbHVlcygpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IGN1cnJlbnRXYWxsZXROYW1lKClcbiAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZU1lbW8oKCkgPT4gY3VycmVudFdhbGxldE5hbWUoKSksIFwiIGRvZXNuXFx1MjAxOXQgc3VwcG9ydCB0aGUgcmVxdWVzdGVkXFx4QTBhY3Rpb25cIl07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFNwYWNlciwge30pXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KV07XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfSk7XG59O1xuY29uc3QgV2FsbGV0c01vZGFsID0gKCkgPT4ge1xuICBjb25zdCB7XG4gICAgbG9jYWxlXG4gIH0gPSB1c2VJMThuKClbMV07XG4gIGNyZWF0ZUVmZmVjdCgoKSA9PiBsb2NhbGUoYXBwU3RhdGUubGFuZ3VhZ2UpKTtcbiAgY3JlYXRlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoZ2V0V2FsbGV0c01vZGFsSXNPcGVuZWQoKSkge1xuICAgICAgdXBkYXRlSXNNb2JpbGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2V0U2VsZWN0ZWRXYWxsZXRJbmZvKG51bGwpO1xuICAgICAgc2V0U2VsZWN0ZWRUYWIoXCJ1bml2ZXJzYWxcIik7XG4gICAgICBzZXRJbmZvVGFiKGZhbHNlKTtcbiAgICB9XG4gIH0pO1xuICBjb25zdCBjb25uZWN0b3IgPSB1c2VDb250ZXh0KENvbm5lY3RvckNvbnRleHQpO1xuICBjb25zdCB0b25Db25uZWN0VUkgPSB1c2VDb250ZXh0KFRvbkNvbm5lY3RVaUNvbnRleHQpO1xuICBjb25zdCBbZmV0Y2hlZFdhbGxldHNMaXN0XSA9IGNyZWF0ZVJlc291cmNlKCgpID0+IHRvbkNvbm5lY3RVSS5nZXRXYWxsZXRzKCkpO1xuICBjb25zdCBbc2VsZWN0ZWRXYWxsZXRJbmZvLCBzZXRTZWxlY3RlZFdhbGxldEluZm9dID0gY3JlYXRlU2lnbmFsKG51bGwpO1xuICBjb25zdCBbc2VsZWN0ZWRXYWxsZXRFcnJvciwgc2V0U2VsZWN0ZWRXYWxsZXRFcnJvcl0gPSBjcmVhdGVTaWduYWwobnVsbCk7XG4gIGNvbnN0IFtzZWxlY3RlZFRhYiwgc2V0U2VsZWN0ZWRUYWJdID0gY3JlYXRlU2lnbmFsKFwidW5pdmVyc2FsXCIpO1xuICBjb25zdCBbaW5mb1RhYiwgc2V0SW5mb1RhYl0gPSBjcmVhdGVTaWduYWwoZmFsc2UpO1xuICBjb25zdCB3YWxsZXRzTW9kYWxJc1dhbGxldE5vdFN1cHBvcnRGZWF0dXJlID0gY3JlYXRlTWVtbygoKSA9PiB7XG4gICAgY29uc3Qgc3RhdGUgPSB3YWxsZXRzTW9kYWxTdGF0ZSgpO1xuICAgIHJldHVybiBcInR5cGVcIiBpbiBzdGF0ZSAmJiBzdGF0ZS50eXBlID09PSBcIndhbGxldC1ub3Qtc3VwcG9ydC1mZWF0dXJlXCI7XG4gIH0pO1xuICBjb25zdCB3YWxsZXRzTGlzdCA9IGNyZWF0ZU1lbW8oKCkgPT4ge1xuICAgIHZhciBfYTI7XG4gICAgaWYgKGZldGNoZWRXYWxsZXRzTGlzdC5zdGF0ZSAhPT0gXCJyZWFkeVwiKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgbGV0IHdhbGxldHNMaXN0MiA9IGFwcGx5V2FsbGV0c0xpc3RDb25maWd1cmF0aW9uKGZldGNoZWRXYWxsZXRzTGlzdCgpLCBhcHBTdGF0ZS53YWxsZXRzTGlzdENvbmZpZ3VyYXRpb24pO1xuICAgIGNvbnN0IGluamVjdGVkV2FsbGV0cyA9IHdhbGxldHNMaXN0Mi5maWx0ZXIoaXNXYWxsZXRJbmZvQ3VycmVudGx5SW5qZWN0ZWQpO1xuICAgIGNvbnN0IG5vdEluamVjdGVkV2FsbGV0cyA9IHdhbGxldHNMaXN0Mi5maWx0ZXIoKHcpID0+ICFpc1dhbGxldEluZm9DdXJyZW50bHlJbmplY3RlZCh3KSk7XG4gICAgd2FsbGV0c0xpc3QyID0gKGluamVjdGVkV2FsbGV0cyB8fCBbXSkuY29uY2F0KG5vdEluamVjdGVkV2FsbGV0cyk7XG4gICAgY29uc3QgcHJlZmVycmVkV2FsbGV0QXBwTmFtZSA9IGFwcFN0YXRlLnByZWZlcnJlZFdhbGxldEFwcE5hbWU7XG4gICAgY29uc3QgcHJlZmVycmVkV2FsbGV0ID0gd2FsbGV0c0xpc3QyLmZpbmQoKGl0ZW0pID0+IGVxV2FsbGV0TmFtZShpdGVtLCBwcmVmZXJyZWRXYWxsZXRBcHBOYW1lKSk7XG4gICAgY29uc3Qgc29tZVdhbGxldHNXaXRoU2FtZU5hbWUgPSB3YWxsZXRzTGlzdDIuZmlsdGVyKChpdGVtKSA9PiBlcVdhbGxldE5hbWUoaXRlbSwgcHJlZmVycmVkV2FsbGV0QXBwTmFtZSkpLmxlbmd0aCA+PSAyO1xuICAgIGlmIChwcmVmZXJyZWRXYWxsZXRBcHBOYW1lICYmIHByZWZlcnJlZFdhbGxldCAmJiAhc29tZVdhbGxldHNXaXRoU2FtZU5hbWUpIHtcbiAgICAgIHdhbGxldHNMaXN0MiA9IFtfX3NwcmVhZFByb3BzKF9fc3ByZWFkVmFsdWVzKHt9LCBwcmVmZXJyZWRXYWxsZXQpLCB7XG4gICAgICAgIGlzUHJlZmVycmVkOiB0cnVlXG4gICAgICB9KV0uY29uY2F0KHdhbGxldHNMaXN0Mi5maWx0ZXIoKGl0ZW0pID0+ICFlcVdhbGxldE5hbWUoaXRlbSwgcHJlZmVycmVkV2FsbGV0QXBwTmFtZSkpKTtcbiAgICB9XG4gICAgY29uc3QgYXRXYWxsZXQgPSB3YWxsZXRzTGlzdDIuZmluZCgoaXRlbSkgPT4gZXFXYWxsZXROYW1lKGl0ZW0sIEFUX1dBTExFVF9BUFBfTkFNRSkpO1xuICAgIGlmIChhdFdhbGxldCkge1xuICAgICAgd2FsbGV0c0xpc3QyID0gW2F0V2FsbGV0XS5jb25jYXQod2FsbGV0c0xpc3QyLmZpbHRlcigoaXRlbSkgPT4gIWVxV2FsbGV0TmFtZShpdGVtLCBBVF9XQUxMRVRfQVBQX05BTUUpKSk7XG4gICAgfVxuICAgIGNvbnN0IHdhbGxldHNGZWF0dXJlc1JlcXVlc3RlZCA9IChfYTIgPSB0b25Db25uZWN0VUkgPT0gbnVsbCA/IHZvaWQgMCA6IHRvbkNvbm5lY3RVSS53YWxsZXRzUmVxdWlyZWRGZWF0dXJlcykgIT0gbnVsbCA/IF9hMiA6IHRvbkNvbm5lY3RVSSA9PSBudWxsID8gdm9pZCAwIDogdG9uQ29ubmVjdFVJLndhbGxldHNQcmVmZXJyZWRGZWF0dXJlcztcbiAgICBjb25zdCB1aVdhbGxldHMgPSB3YWxsZXRzTGlzdDIubWFwKCh3YWxsZXQpID0+IHtcbiAgICAgIHZhciBfYTM7XG4gICAgICByZXR1cm4gX19zcHJlYWRQcm9wcyhfX3NwcmVhZFZhbHVlcyh7fSwgd2FsbGV0KSwge1xuICAgICAgICBpc1N1cHBvcnRSZXF1aXJlZEZlYXR1cmVzOiB3YWxsZXRzRmVhdHVyZXNSZXF1ZXN0ZWQgPyBjaGVja1JlcXVpcmVkV2FsbGV0RmVhdHVyZXMoKF9hMyA9IHdhbGxldC5mZWF0dXJlcykgIT0gbnVsbCA/IF9hMyA6IFtdLCB3YWxsZXRzRmVhdHVyZXNSZXF1ZXN0ZWQpIDogdHJ1ZVxuICAgICAgfSk7XG4gICAgfSk7XG4gICAgcmV0dXJuIHVpV2FsbGV0cztcbiAgfSk7XG4gIGNvbnN0IGFkZGl0aW9uYWxSZXF1ZXN0TG9hZGluZyA9ICgpID0+IHtcbiAgICB2YXIgX2EyO1xuICAgIHJldHVybiAoKF9hMiA9IGFwcFN0YXRlLmNvbm5lY3RSZXF1ZXN0UGFyYW1ldGVycykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi5zdGF0ZSkgPT09IFwibG9hZGluZ1wiO1xuICB9O1xuICBjb25zdCBhZGRpdGlvbmFsUmVxdWVzdCA9IGNyZWF0ZU1lbW8oKCkgPT4ge1xuICAgIHZhciBfYTI7XG4gICAgaWYgKGFkZGl0aW9uYWxSZXF1ZXN0TG9hZGluZygpKSB7XG4gICAgICByZXR1cm4gdm9pZCAwO1xuICAgIH1cbiAgICByZXR1cm4gKF9hMiA9IGFwcFN0YXRlLmNvbm5lY3RSZXF1ZXN0UGFyYW1ldGVycykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi52YWx1ZTtcbiAgfSk7XG4gIGNvbnN0IG9uQ2xvc2UgPSAoY2xvc2VSZWFzb24pID0+IHtcbiAgICB0b25Db25uZWN0VUkuY2xvc2VNb2RhbChjbG9zZVJlYXNvbik7XG4gIH07XG4gIGNvbnN0IHVuc3Vic2NyaWJlID0gY29ubmVjdG9yLm9uU3RhdHVzQ2hhbmdlKCh3YWxsZXQpID0+IHtcbiAgICBpZiAod2FsbGV0KSB7XG4gICAgICBvbkNsb3NlKFwid2FsbGV0LXNlbGVjdGVkXCIpO1xuICAgIH1cbiAgfSwgKGVycikgPT4ge1xuICAgIHZhciBfYTI7XG4gICAgaWYgKGVyciBpbnN0YW5jZW9mIFdhbGxldE1pc3NpbmdSZXF1aXJlZEZlYXR1cmVzRXJyb3IpIHtcbiAgICAgIGNvbnN0IGVycm9yQXBwTmFtZSA9IGVyci5jYXVzZS5jb25uZWN0RXZlbnQuZGV2aWNlLmFwcE5hbWUudG9Mb3dlckNhc2UoKTtcbiAgICAgIGNvbnN0IHdhbGxldCA9IChfYTIgPSB3YWxsZXRzTGlzdCgpKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLmZpbmQoKHcpID0+IHcuYXBwTmFtZS50b0xvd2VyQ2FzZSgpID09PSBlcnJvckFwcE5hbWUpO1xuICAgICAgaWYgKCF3YWxsZXQpIHtcbiAgICAgICAgdGhyb3cgbmV3IFRvbkNvbm5lY3RFcnJvcihcIldhbGxldCBub3QgZm91bmRcIik7XG4gICAgICB9XG4gICAgICBjb25zdCB3YWxsZXRFcnJvclR5cGUgPSB3YWxsZXQuaXNTdXBwb3J0UmVxdWlyZWRGZWF0dXJlcyA/IFwibWlzc2luZy1mZWF0dXJlc1wiIDogXCJub3Qtc3VwcG9ydGVkXCI7XG4gICAgICBzZXRTZWxlY3RlZFdhbGxldEVycm9yKHdhbGxldEVycm9yVHlwZSk7XG4gICAgICBzZXRTZWxlY3RlZFdhbGxldEluZm8od2FsbGV0KTtcbiAgICB9XG4gIH0pO1xuICBjb25zdCBvblNlbGVjdEFsbFdhbGxldHMgPSAoKSA9PiB7XG4gICAgc2V0U2VsZWN0ZWRUYWIoXCJhbGwtd2FsbGV0c1wiKTtcbiAgfTtcbiAgY29uc3Qgb25TZWxlY3RVbml2ZXJzYWwgPSAoKSA9PiB7XG4gICAgc2V0U2VsZWN0ZWRUYWIoXCJ1bml2ZXJzYWxcIik7XG4gIH07XG4gIGNvbnN0IG9uU2VsZWN0V2FsbGV0ID0gKHdhbGxldCkgPT4ge1xuICAgIHNldFNlbGVjdGVkV2FsbGV0SW5mbyh3YWxsZXQpO1xuICAgIHdpZGdldENvbnRyb2xsZXIub3BlbldhbGxldHNNb2RhbCgpO1xuICB9O1xuICBjb25zdCBjbGVhclNlbGVjdGVkV2FsbGV0SW5mbyA9ICgpID0+IHtcbiAgICBzZXRTZWxlY3RlZFdhbGxldEluZm8obnVsbCk7XG4gICAgc2V0U2VsZWN0ZWRXYWxsZXRFcnJvcihudWxsKTtcbiAgfTtcbiAgb25DbGVhbnVwKCgpID0+IHtcbiAgICBzZXRTZWxlY3RlZFdhbGxldEluZm8obnVsbCk7XG4gICAgc2V0U2VsZWN0ZWRXYWxsZXRFcnJvcihudWxsKTtcbiAgICBzZXRJbmZvVGFiKGZhbHNlKTtcbiAgfSk7XG4gIG9uQ2xlYW51cCh1bnN1YnNjcmliZSk7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoU3R5bGVkTW9kYWwsIHtcbiAgICBnZXQgb3BlbmVkKCkge1xuICAgICAgcmV0dXJuIGdldFdhbGxldHNNb2RhbElzT3BlbmVkKCk7XG4gICAgfSxcbiAgICBnZXQgZW5hYmxlQW5kcm9pZEJhY2tIYW5kbGVyKCkge1xuICAgICAgcmV0dXJuIGFwcFN0YXRlLmVuYWJsZUFuZHJvaWRCYWNrSGFuZGxlcjtcbiAgICB9LFxuICAgIG9uQ2xvc2U6ICgpID0+IG9uQ2xvc2UoXCJhY3Rpb24tY2FuY2VsbGVkXCIpLFxuICAgIG9uQ2xpY2tRdWVzdGlvbjogKCkgPT4gc2V0SW5mb1RhYigodikgPT4gIXYpLFxuICAgIGdldCBzaG93Rm9vdGVyKCkge1xuICAgICAgcmV0dXJuICF3YWxsZXRzTW9kYWxJc1dhbGxldE5vdFN1cHBvcnRGZWF0dXJlKCk7XG4gICAgfSxcbiAgICBcImRhdGEtdGMtd2FsbGV0cy1tb2RhbC1jb250YWluZXJcIjogXCJ0cnVlXCIsXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICByZXR1cm4gaW5mb1RhYigpO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChJbmZvTW9kYWwsIHtcbiAgICAgICAgICAgIG9uQmFja0NsaWNrOiAoKSA9PiBzZXRJbmZvVGFiKGZhbHNlKVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgcmV0dXJuICFpbmZvVGFiKCk7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGFkZGl0aW9uYWxSZXF1ZXN0TG9hZGluZygpIHx8ICF3YWxsZXRzTGlzdCgpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoSDFTdHlsZWQkYSwge1xuICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLmxvYWRpbmdcIixcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJXYWxsZXRzIGxpc3QgaXMgbG9hZGluZ1wiXG4gICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoTG9hZGVyQ29udGFpbmVyU3R5bGVkLCB7XG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChMb2FkZXJJY29uLCB7XG4gICAgICAgICAgICAgICAgICAgIHNpemU6IFwibVwiXG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlTWVtbygoKSA9PiAhISFhZGRpdGlvbmFsUmVxdWVzdExvYWRpbmcoKSkoKSAmJiB3YWxsZXRzTGlzdCgpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChTd2l0Y2gsIHtcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gd2FsbGV0c01vZGFsSXNXYWxsZXROb3RTdXBwb3J0RmVhdHVyZSgpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChEZXNrdG9wRmVhdHVyZU5vdFN1cHBvcnRNb2RhbCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IHdhbGxldHNMaXN0KCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gd2FsbGV0c0xpc3QoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgY3VycmVudFdhbGxldCgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRvbkNvbm5lY3RVSSA9PSBudWxsID8gdm9pZCAwIDogdG9uQ29ubmVjdFVJLndhbGxldDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBvblNlbGVjdDogb25TZWxlY3RXYWxsZXQsXG4gICAgICAgICAgICAgICAgICAgICAgICBvblNlbGVjdEFsbFdhbGxldHMsXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkRpc2Nvbm5lY3Q6ICgpID0+IGNvbm5lY3Rvci5kaXNjb25uZWN0KCksXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgd2FsbGV0c01vZGFsU3RhdGUoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB3YWxsZXRzTW9kYWxTdGF0ZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xvc2U6ICgpID0+IG9uQ2xvc2UoXCJhY3Rpb24tY2FuY2VsbGVkXCIpXG4gICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoTWF0Y2gsIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHNlbGVjdGVkV2FsbGV0SW5mbygpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChEeW5hbWljLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgY29tcG9uZW50KCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXNNb2JpbGUoKSA/IE1vYmlsZUNvbm5lY3Rpb25Nb2RhbCA6IERlc2t0b3BDb25uZWN0aW9uTW9kYWw7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IHdhbGxldCgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHNlbGVjdGVkV2FsbGV0SW5mbygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBhZGRpdGlvbmFsUmVxdWVzdCgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFkZGl0aW9uYWxSZXF1ZXN0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgb25CYWNrQ2xpY2s6IGNsZWFyU2VsZWN0ZWRXYWxsZXRJbmZvLFxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGRlZmF1bHRFcnJvcigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHNlbGVjdGVkV2FsbGV0RXJyb3IoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gc2VsZWN0ZWRUYWIoKSA9PT0gXCJ1bml2ZXJzYWxcIjtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoRHluYW1pYywge1xuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNvbXBvbmVudCgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGlzTW9iaWxlKCkgPyBNb2JpbGVVbml2ZXJzYWxNb2RhbCA6IERlc2t0b3BVbml2ZXJzYWxNb2RhbDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBvblNlbGVjdDogc2V0U2VsZWN0ZWRXYWxsZXRJbmZvLFxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IHdhbGxldHNMaXN0KCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gd2FsbGV0c0xpc3QoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgYWRkaXRpb25hbFJlcXVlc3QoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhZGRpdGlvbmFsUmVxdWVzdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uU2VsZWN0QWxsV2FsbGV0c1xuICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KE1hdGNoLCB7XG4gICAgICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBzZWxlY3RlZFRhYigpID09PSBcImFsbC13YWxsZXRzXCI7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEFsbFdhbGxldHNMaXN0TW9kYWwsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCB3YWxsZXRzTGlzdCgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHdhbGxldHNMaXN0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGZlYXR1cmVDaGVja01vZGUoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAodG9uQ29ubmVjdFVJID09IG51bGwgPyB2b2lkIDAgOiB0b25Db25uZWN0VUkud2FsbGV0c1JlcXVpcmVkRmVhdHVyZXMpID8gXCJzdHJpY3RcIiA6IFwic29mdFwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQmFjazogb25TZWxlY3RVbml2ZXJzYWwsXG4gICAgICAgICAgICAgICAgICAgICAgICBvblNlbGVjdDogc2V0U2VsZWN0ZWRXYWxsZXRJbmZvXG4gICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pXTtcbiAgICAgICAgfVxuICAgICAgfSldO1xuICAgIH1cbiAgfSk7XG59O1xuY29uc3QgQWN0aW9uTW9kYWxTdHlsZWQgPSBzdHlsZWQuZGl2YFxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBhZGRpbmctYm90dG9tOiA4cHg7XG5gO1xuY29uc3QgSDFTdHlsZWQgPSBzdHlsZWQoSDEpYFxuICAgIG1hcmdpbi10b3A6IDE2cHg7XG5gO1xuY29uc3QgVGV4dFN0eWxlZCA9IHN0eWxlZChUZXh0KWBcbiAgICBmb250LXdlaWdodDogNTEwO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMjBweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWF4LXdpZHRoOiAyNTBweDtcblxuICAgIGNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLnRleHQuc2Vjb25kYXJ5fTtcbmA7XG5jb25zdCBMb2FkZXJCdXR0b25TdHlsZWQgPSBzdHlsZWQoQnV0dG9uKWBcbiAgICBtaW4td2lkdGg6IDExMnB4O1xuICAgIG1hcmdpbi10b3A6IDMycHg7XG5gO1xuY29uc3QgTG9hZGVySWNvblN0eWxlZCA9IHN0eWxlZChMb2FkZXJJY29uKWBcbiAgICBoZWlnaHQ6IDE2cHg7XG4gICAgd2lkdGg6IDE2cHg7XG5gO1xuY29uc3QgQnV0dG9uU3R5bGVkID0gc3R5bGVkKEJ1dHRvbilgXG4gICAgbWFyZ2luLXRvcDogMzJweDtcbmA7XG5jb25zdCBBY3Rpb25Nb2RhbCA9IChwcm9wcykgPT4ge1xuICBjb25zdCBkYXRhQXR0cnMgPSB1c2VEYXRhQXR0cmlidXRlcyhwcm9wcyk7XG4gIGNvbnN0IHRvbkNvbm5lY3RVSSA9IHVzZUNvbnRleHQoVG9uQ29ubmVjdFVpQ29udGV4dCk7XG4gIGNvbnN0IFtmaXJzdENsaWNrLCBzZXRGaXJzdENsaWNrXSA9IGNyZWF0ZVNpZ25hbCh0cnVlKTtcbiAgY29uc3QgW3NlbnQsIHNldFNlbnRdID0gY3JlYXRlU2lnbmFsKGZhbHNlKTtcbiAgY29uc3QgW3NpZ25lZCwgc2V0U2lnbmVkXSA9IGNyZWF0ZVNpZ25hbChmYWxzZSk7XG4gIGNvbnN0IFtjYW5jZWxlZCwgc2V0Q2FuY2VsZWRdID0gY3JlYXRlU2lnbmFsKGZhbHNlKTtcbiAgY3JlYXRlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBjdXJyZW50QWN0aW9uID0gYWN0aW9uKCk7XG4gICAgc2V0U2VudCghIWN1cnJlbnRBY3Rpb24gJiYgKFwic2VudFwiIGluIGN1cnJlbnRBY3Rpb24gJiYgY3VycmVudEFjdGlvbi5zZW50IHx8IGN1cnJlbnRBY3Rpb24ubmFtZSA9PT0gXCJ0cmFuc2FjdGlvbi1zZW50XCIpKTtcbiAgICBzZXRTaWduZWQoISFjdXJyZW50QWN0aW9uICYmIChcInNpZ25lZFwiIGluIGN1cnJlbnRBY3Rpb24gJiYgY3VycmVudEFjdGlvbi5zaWduZWQgfHwgY3VycmVudEFjdGlvbi5uYW1lID09PSBcImRhdGEtc2lnbmVkXCIpKTtcbiAgICBzZXRDYW5jZWxlZCghIWN1cnJlbnRBY3Rpb24gJiYgKGN1cnJlbnRBY3Rpb24ubmFtZSA9PT0gXCJ0cmFuc2FjdGlvbi1jYW5jZWxlZFwiIHx8IGN1cnJlbnRBY3Rpb24ubmFtZSA9PT0gXCJzaWduLWRhdGEtY2FuY2VsZWRcIikpO1xuICB9KTtcbiAgbGV0IHVuaXZlcnNhbExpbms7XG4gIGlmICgodG9uQ29ubmVjdFVJID09IG51bGwgPyB2b2lkIDAgOiB0b25Db25uZWN0VUkud2FsbGV0KSAmJiBcInVuaXZlcnNhbExpbmtcIiBpbiB0b25Db25uZWN0VUkud2FsbGV0ICYmICh0b25Db25uZWN0VUkud2FsbGV0Lm9wZW5NZXRob2QgPT09IFwidW5pdmVyc2FsLWxpbmtcIiB8fCBpc1RlbGVncmFtVXJsKHRvbkNvbm5lY3RVSS53YWxsZXQudW5pdmVyc2FsTGluaykgJiYgaXNJblRNQSgpKSkge1xuICAgIHVuaXZlcnNhbExpbmsgPSB0b25Db25uZWN0VUkud2FsbGV0LnVuaXZlcnNhbExpbms7XG4gIH1cbiAgbGV0IGRlZXBMaW5rO1xuICBpZiAoKHRvbkNvbm5lY3RVSSA9PSBudWxsID8gdm9pZCAwIDogdG9uQ29ubmVjdFVJLndhbGxldCkgJiYgXCJkZWVwTGlua1wiIGluIHRvbkNvbm5lY3RVSS53YWxsZXQgJiYgKHRvbkNvbm5lY3RVSS53YWxsZXQub3Blbk1ldGhvZCA9PT0gXCJjdXN0b20tZGVlcGxpbmtcIiB8fCBpc1RlbGVncmFtVXJsKHRvbkNvbm5lY3RVSS53YWxsZXQuZGVlcExpbmspICYmIGlzSW5UTUEoKSkpIHtcbiAgICBkZWVwTGluayA9IHRvbkNvbm5lY3RVSS53YWxsZXQuZGVlcExpbms7XG4gIH1cbiAgY29uc3Qgb25PcGVuV2FsbGV0ID0gKCkgPT4ge1xuICAgIGNvbnN0IGN1cnJlbnRBY3Rpb24gPSBhY3Rpb24oKTtcbiAgICBjb25zdCByZXR1cm5TdHJhdGVneSA9IFwicmV0dXJuU3RyYXRlZ3lcIiBpbiBjdXJyZW50QWN0aW9uID8gY3VycmVudEFjdGlvbi5yZXR1cm5TdHJhdGVneSA6IGFwcFN0YXRlLnJldHVyblN0cmF0ZWd5O1xuICAgIGNvbnN0IGZvcmNlUmVkaXJlY3QgPSAhZmlyc3RDbGljaygpO1xuICAgIHNldEZpcnN0Q2xpY2soZmFsc2UpO1xuICAgIGlmIChpc1RlbGVncmFtVXJsKHVuaXZlcnNhbExpbmspKSB7XG4gICAgICByZWRpcmVjdFRvVGVsZWdyYW0odW5pdmVyc2FsTGluaywge1xuICAgICAgICByZXR1cm5TdHJhdGVneSxcbiAgICAgICAgdHdhUmV0dXJuVXJsOiBcInR3YVJldHVyblVybFwiIGluIGN1cnJlbnRBY3Rpb24gPyBjdXJyZW50QWN0aW9uLnR3YVJldHVyblVybCA6IGFwcFN0YXRlLnR3YVJldHVyblVybCxcbiAgICAgICAgZm9yY2VSZWRpcmVjdFxuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlZGlyZWN0VG9XYWxsZXQodW5pdmVyc2FsTGluaywgZGVlcExpbmssIHtcbiAgICAgICAgcmV0dXJuU3RyYXRlZ3ksXG4gICAgICAgIGZvcmNlUmVkaXJlY3RcbiAgICAgIH0sICgpID0+IHtcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChBY3Rpb25Nb2RhbFN0eWxlZCwgbWVyZ2VQcm9wcyhkYXRhQXR0cnMsIHtcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gW2NyZWF0ZU1lbW8oKCkgPT4gcHJvcHMuaWNvbiksIGNyZWF0ZUNvbXBvbmVudChIMVN0eWxlZCwge1xuICAgICAgICBnZXQgdHJhbnNsYXRpb25LZXkoKSB7XG4gICAgICAgICAgcmV0dXJuIHByb3BzLmhlYWRlclRyYW5zbGF0aW9uS2V5O1xuICAgICAgICB9LFxuICAgICAgICBnZXQgdHJhbnNsYXRpb25WYWx1ZXMoKSB7XG4gICAgICAgICAgcmV0dXJuIHByb3BzLmhlYWRlclRyYW5zbGF0aW9uVmFsdWVzO1xuICAgICAgICB9XG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFRleHRTdHlsZWQsIHtcbiAgICAgICAgZ2V0IHRyYW5zbGF0aW9uS2V5KCkge1xuICAgICAgICAgIHJldHVybiBwcm9wcy50ZXh0VHJhbnNsYXRpb25LZXk7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCB0cmFuc2xhdGlvblZhbHVlcygpIHtcbiAgICAgICAgICByZXR1cm4gcHJvcHMudGV4dFRyYW5zbGF0aW9uVmFsdWVzO1xuICAgICAgICB9XG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgcmV0dXJuICFzZW50KCkgJiYgIXNpZ25lZCgpICYmICFjYW5jZWxlZCgpICYmIChwcm9wcy5zaG93QnV0dG9uID09PSBcIm9wZW4td2FsbGV0XCIgJiYgdW5pdmVyc2FsTGluayB8fCBwcm9wcy5zaG93QnV0dG9uICE9PSBcIm9wZW4td2FsbGV0XCIpO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChMb2FkZXJCdXR0b25TdHlsZWQsIHtcbiAgICAgICAgICAgIGRpc2FibGVkOiB0cnVlLFxuICAgICAgICAgICAgXCJkYXRhLXRjLWNvbm5lY3QtYnV0dG9uLWxvYWRpbmdcIjogXCJ0cnVlXCIsXG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTG9hZGVySWNvblN0eWxlZCwge30pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIHNlbnQoKSB8fCBzaWduZWQoKTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gcHJvcHMuc2hvd0J1dHRvbiAhPT0gXCJvcGVuLXdhbGxldFwiO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChCdXR0b25TdHlsZWQsIHtcbiAgICAgICAgICAgICAgICBvbkNsaWNrOiAoKSA9PiBwcm9wcy5vbkNsb3NlKCksXG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUcmFuc2xhdGlvbiwge1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJjb21tb24uY2xvc2VcIixcbiAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiQ2xvc2VcIlxuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gcHJvcHMuc2hvd0J1dHRvbiA9PT0gXCJvcGVuLXdhbGxldFwiICYmIHVuaXZlcnNhbExpbms7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEJ1dHRvblN0eWxlZCwge1xuICAgICAgICAgICAgICAgIG9uQ2xpY2s6IG9uT3BlbldhbGxldCxcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRyYW5zbGF0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcImNvbW1vbi5vcGVuV2FsbGV0XCIsXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIk9wZW4gd2FsbGV0XCJcbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSldO1xuICAgICAgICB9XG4gICAgICB9KV07XG4gICAgfVxuICB9KSk7XG59O1xuY29uc3QgQ29uZmlybVRyYW5zYWN0aW9uTW9kYWwgPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdG9uQ29ubmVjdFVJID0gdXNlQ29udGV4dChUb25Db25uZWN0VWlDb250ZXh0KTtcbiAgY29uc3QgW3QyXSA9IHVzZUkxOG4oKTtcbiAgY29uc3QgbmFtZSA9ICgpID0+IHRvbkNvbm5lY3RVSS53YWxsZXQgJiYgXCJuYW1lXCIgaW4gdG9uQ29ubmVjdFVJLndhbGxldCA/IHRvbkNvbm5lY3RVSS53YWxsZXQubmFtZSA6IHQyKFwiY29tbW9uLnlvdXJXYWxsZXRcIiwge30sIFwiWW91ciB3YWxsZXRcIik7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoQWN0aW9uTW9kYWwsIHtcbiAgICBoZWFkZXJUcmFuc2xhdGlvbktleTogXCJhY3Rpb25Nb2RhbC5jb25maXJtVHJhbnNhY3Rpb24uaGVhZGVyXCIsXG4gICAgZ2V0IGhlYWRlclRyYW5zbGF0aW9uVmFsdWVzKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogbmFtZSgpXG4gICAgICB9O1xuICAgIH0sXG4gICAgdGV4dFRyYW5zbGF0aW9uS2V5OiBcImFjdGlvbk1vZGFsLmNvbmZpcm1UcmFuc2FjdGlvbi50ZXh0XCIsXG4gICAgZ2V0IGljb24oKSB7XG4gICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KExvYWRlckljb24sIHtcbiAgICAgICAgc2l6ZTogXCJtXCJcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgb25DbG9zZTogKCkgPT4gcHJvcHMub25DbG9zZSgpLFxuICAgIHNob3dCdXR0b246IFwib3Blbi13YWxsZXRcIixcbiAgICBcImRhdGEtdGMtY29uZmlybS1tb2RhbFwiOiBcInRydWVcIlxuICB9KTtcbn07XG5jb25zdCBUcmFuc2FjdGlvbkNhbmNlbGVkTW9kYWwgPSAocHJvcHMpID0+IHtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChBY3Rpb25Nb2RhbCwge1xuICAgIGhlYWRlclRyYW5zbGF0aW9uS2V5OiBcImFjdGlvbk1vZGFsLnRyYW5zYWN0aW9uQ2FuY2VsZWQuaGVhZGVyXCIsXG4gICAgdGV4dFRyYW5zbGF0aW9uS2V5OiBcImFjdGlvbk1vZGFsLnRyYW5zYWN0aW9uQ2FuY2VsZWQudGV4dFwiLFxuICAgIGdldCBpY29uKCkge1xuICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChFcnJvckljb24sIHtcbiAgICAgICAgc2l6ZTogXCJtXCJcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgb25DbG9zZTogKCkgPT4gcHJvcHMub25DbG9zZSgpLFxuICAgIFwiZGF0YS10Yy10cmFuc2FjdGlvbi1jYW5jZWxlZC1tb2RhbFwiOiBcInRydWVcIlxuICB9KTtcbn07XG5jb25zdCBUcmFuc2FjdGlvblNlbnRNb2RhbCA9IChwcm9wcykgPT4ge1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEFjdGlvbk1vZGFsLCB7XG4gICAgaGVhZGVyVHJhbnNsYXRpb25LZXk6IFwiYWN0aW9uTW9kYWwudHJhbnNhY3Rpb25TZW50LmhlYWRlclwiLFxuICAgIHRleHRUcmFuc2xhdGlvbktleTogXCJhY3Rpb25Nb2RhbC50cmFuc2FjdGlvblNlbnQudGV4dFwiLFxuICAgIGdldCBpY29uKCkge1xuICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChTdWNjZXNzSWNvbiwge1xuICAgICAgICBzaXplOiBcIm1cIlxuICAgICAgfSk7XG4gICAgfSxcbiAgICBzaG93QnV0dG9uOiBcIm9wZW4td2FsbGV0XCIsXG4gICAgb25DbG9zZTogKCkgPT4gcHJvcHMub25DbG9zZSgpLFxuICAgIFwiZGF0YS10Yy10cmFuc2FjdGlvbi1zZW50LW1vZGFsXCI6IFwidHJ1ZVwiXG4gIH0pO1xufTtcbmNvbnN0IENvbmZpcm1TaWduRGF0YU1vZGFsID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHRvbkNvbm5lY3RVSSA9IHVzZUNvbnRleHQoVG9uQ29ubmVjdFVpQ29udGV4dCk7XG4gIGNvbnN0IFt0Ml0gPSB1c2VJMThuKCk7XG4gIGNvbnN0IG5hbWUgPSAoKSA9PiB0b25Db25uZWN0VUkud2FsbGV0ICYmIFwibmFtZVwiIGluIHRvbkNvbm5lY3RVSS53YWxsZXQgPyB0b25Db25uZWN0VUkud2FsbGV0Lm5hbWUgOiB0MihcImNvbW1vbi55b3VyV2FsbGV0XCIsIHt9LCBcIllvdXIgd2FsbGV0XCIpO1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEFjdGlvbk1vZGFsLCB7XG4gICAgaGVhZGVyVHJhbnNsYXRpb25LZXk6IFwiYWN0aW9uTW9kYWwuc2lnbkRhdGEuaGVhZGVyXCIsXG4gICAgZ2V0IGhlYWRlclRyYW5zbGF0aW9uVmFsdWVzKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogbmFtZSgpXG4gICAgICB9O1xuICAgIH0sXG4gICAgdGV4dFRyYW5zbGF0aW9uS2V5OiBcImFjdGlvbk1vZGFsLnNpZ25EYXRhLnRleHRcIixcbiAgICBnZXQgaWNvbigpIHtcbiAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTG9hZGVySWNvbiwge1xuICAgICAgICBzaXplOiBcIm1cIlxuICAgICAgfSk7XG4gICAgfSxcbiAgICBvbkNsb3NlOiAoKSA9PiBwcm9wcy5vbkNsb3NlKCksXG4gICAgc2hvd0J1dHRvbjogXCJvcGVuLXdhbGxldFwiLFxuICAgIFwiZGF0YS10Yy1zaWduLWRhdGEtY29uZmlybS1tb2RhbFwiOiBcInRydWVcIlxuICB9KTtcbn07XG5jb25zdCBTaWduRGF0YUNhbmNlbGVkTW9kYWwgPSAocHJvcHMpID0+IHtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChBY3Rpb25Nb2RhbCwge1xuICAgIGhlYWRlclRyYW5zbGF0aW9uS2V5OiBcImFjdGlvbk1vZGFsLnNpZ25EYXRhQ2FuY2VsZWQuaGVhZGVyXCIsXG4gICAgZ2V0IGljb24oKSB7XG4gICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEVycm9ySWNvbiwge1xuICAgICAgICBzaXplOiBcIm1cIlxuICAgICAgfSk7XG4gICAgfSxcbiAgICBvbkNsb3NlOiAoKSA9PiBwcm9wcy5vbkNsb3NlKCksXG4gICAgXCJkYXRhLXRjLXNpZ24tZGF0YS1jYW5jZWxlZC1tb2RhbFwiOiBcInRydWVcIlxuICB9KTtcbn07XG5jb25zdCBEYXRhU2lnbmVkTW9kYWwgPSAocHJvcHMpID0+IHtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChBY3Rpb25Nb2RhbCwge1xuICAgIGhlYWRlclRyYW5zbGF0aW9uS2V5OiBcImFjdGlvbk1vZGFsLmRhdGFTaWduZWQuaGVhZGVyXCIsXG4gICAgZ2V0IGljb24oKSB7XG4gICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFN1Y2Nlc3NJY29uLCB7XG4gICAgICAgIHNpemU6IFwibVwiXG4gICAgICB9KTtcbiAgICB9LFxuICAgIG9uQ2xvc2U6ICgpID0+IHByb3BzLm9uQ2xvc2UoKSxcbiAgICBcImRhdGEtdGMtZGF0YS1zaWduZWQtbW9kYWxcIjogXCJ0cnVlXCJcbiAgfSk7XG59O1xuY29uc3QgQWN0aW9uc01vZGFsID0gKCkgPT4ge1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KE1vZGFsLCB7XG4gICAgZ2V0IG9wZW5lZCgpIHtcbiAgICAgIHZhciBfYTI7XG4gICAgICByZXR1cm4gY3JlYXRlTWVtbygoKSA9PiBhY3Rpb24oKSAhPT0gbnVsbCkoKSAmJiAoKF9hMiA9IGFjdGlvbigpKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLm9wZW5Nb2RhbCkgPT09IHRydWU7XG4gICAgfSxcbiAgICBnZXQgZW5hYmxlQW5kcm9pZEJhY2tIYW5kbGVyKCkge1xuICAgICAgcmV0dXJuIGFwcFN0YXRlLmVuYWJsZUFuZHJvaWRCYWNrSGFuZGxlcjtcbiAgICB9LFxuICAgIG9uQ2xvc2U6ICgpID0+IHNldEFjdGlvbihudWxsKSxcbiAgICBzaG93Rm9vdGVyOiBmYWxzZSxcbiAgICBcImRhdGEtdGMtYWN0aW9ucy1tb2RhbC1jb250YWluZXJcIjogXCJ0cnVlXCIsXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChTd2l0Y2gsIHtcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KE1hdGNoLCB7XG4gICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGFjdGlvbigpLm5hbWUgPT09IFwidHJhbnNhY3Rpb24tc2VudFwiO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUcmFuc2FjdGlvblNlbnRNb2RhbCwge1xuICAgICAgICAgICAgICAgIG9uQ2xvc2U6ICgpID0+IHNldEFjdGlvbihudWxsKVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KE1hdGNoLCB7XG4gICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGFjdGlvbigpLm5hbWUgPT09IFwidHJhbnNhY3Rpb24tY2FuY2VsZWRcIjtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNhY3Rpb25DYW5jZWxlZE1vZGFsLCB7XG4gICAgICAgICAgICAgICAgb25DbG9zZTogKCkgPT4gc2V0QWN0aW9uKG51bGwpXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoTWF0Y2gsIHtcbiAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gYWN0aW9uKCkubmFtZSA9PT0gXCJjb25maXJtLXRyYW5zYWN0aW9uXCI7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KENvbmZpcm1UcmFuc2FjdGlvbk1vZGFsLCB7XG4gICAgICAgICAgICAgICAgb25DbG9zZTogKCkgPT4gc2V0QWN0aW9uKG51bGwpXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoTWF0Y2gsIHtcbiAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gYWN0aW9uKCkubmFtZSA9PT0gXCJkYXRhLXNpZ25lZFwiO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChEYXRhU2lnbmVkTW9kYWwsIHtcbiAgICAgICAgICAgICAgICBvbkNsb3NlOiAoKSA9PiBzZXRBY3Rpb24obnVsbClcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBhY3Rpb24oKS5uYW1lID09PSBcInNpZ24tZGF0YS1jYW5jZWxlZFwiO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChTaWduRGF0YUNhbmNlbGVkTW9kYWwsIHtcbiAgICAgICAgICAgICAgICBvbkNsb3NlOiAoKSA9PiBzZXRBY3Rpb24obnVsbClcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBhY3Rpb24oKS5uYW1lID09PSBcImNvbmZpcm0tc2lnbi1kYXRhXCI7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KENvbmZpcm1TaWduRGF0YU1vZGFsLCB7XG4gICAgICAgICAgICAgICAgb25DbG9zZTogKCkgPT4gc2V0QWN0aW9uKG51bGwpXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pXTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9KTtcbn07XG5jb25zdCBTaW5nbGVXYWxsZXRNb2RhbCA9ICgpID0+IHtcbiAgY29uc3Qge1xuICAgIGxvY2FsZVxuICB9ID0gdXNlSTE4bigpWzFdO1xuICBjcmVhdGVFZmZlY3QoKCkgPT4gbG9jYWxlKGFwcFN0YXRlLmxhbmd1YWdlKSk7XG4gIGNyZWF0ZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKGdldFNpbmdsZVdhbGxldE1vZGFsSXNPcGVuZWQoKSkge1xuICAgICAgdXBkYXRlSXNNb2JpbGUoKTtcbiAgICB9XG4gIH0pO1xuICBjb25zdCBjb25uZWN0b3IgPSB1c2VDb250ZXh0KENvbm5lY3RvckNvbnRleHQpO1xuICBjb25zdCB0b25Db25uZWN0VUkgPSB1c2VDb250ZXh0KFRvbkNvbm5lY3RVaUNvbnRleHQpO1xuICBjb25zdCBbaW5mb1RhYiwgc2V0SW5mb1RhYl0gPSBjcmVhdGVTaWduYWwoZmFsc2UpO1xuICBjb25zdCBhZGRpdGlvbmFsUmVxdWVzdExvYWRpbmcgPSAoKSA9PiB7XG4gICAgdmFyIF9hMjtcbiAgICByZXR1cm4gKChfYTIgPSBhcHBTdGF0ZS5jb25uZWN0UmVxdWVzdFBhcmFtZXRlcnMpID09IG51bGwgPyB2b2lkIDAgOiBfYTIuc3RhdGUpID09PSBcImxvYWRpbmdcIjtcbiAgfTtcbiAgY29uc3QgYWRkaXRpb25hbFJlcXVlc3QgPSBjcmVhdGVNZW1vKCgpID0+IHtcbiAgICB2YXIgX2EyO1xuICAgIGlmIChhZGRpdGlvbmFsUmVxdWVzdExvYWRpbmcoKSkge1xuICAgICAgcmV0dXJuIHZvaWQgMDtcbiAgICB9XG4gICAgcmV0dXJuIChfYTIgPSBhcHBTdGF0ZS5jb25uZWN0UmVxdWVzdFBhcmFtZXRlcnMpID09IG51bGwgPyB2b2lkIDAgOiBfYTIudmFsdWU7XG4gIH0pO1xuICBjb25zdCBvbkNsb3NlID0gKGNsb3NlUmVhc29uKSA9PiB7XG4gICAgdG9uQ29ubmVjdFVJLmNsb3NlU2luZ2xlV2FsbGV0TW9kYWwoY2xvc2VSZWFzb24pO1xuICB9O1xuICBjb25zdCB1bnN1YnNjcmliZSA9IGNvbm5lY3Rvci5vblN0YXR1c0NoYW5nZSgod2FsbGV0KSA9PiB7XG4gICAgaWYgKHdhbGxldCkge1xuICAgICAgb25DbG9zZShcIndhbGxldC1zZWxlY3RlZFwiKTtcbiAgICB9XG4gIH0pO1xuICBvbkNsZWFudXAodW5zdWJzY3JpYmUpO1xuICBvbkNsZWFudXAoKCkgPT4ge1xuICAgIHNldEluZm9UYWIoZmFsc2UpO1xuICB9KTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChTdHlsZWRNb2RhbCwge1xuICAgIGdldCBvcGVuZWQoKSB7XG4gICAgICByZXR1cm4gZ2V0U2luZ2xlV2FsbGV0TW9kYWxJc09wZW5lZCgpO1xuICAgIH0sXG4gICAgZ2V0IGVuYWJsZUFuZHJvaWRCYWNrSGFuZGxlcigpIHtcbiAgICAgIHJldHVybiBhcHBTdGF0ZS5lbmFibGVBbmRyb2lkQmFja0hhbmRsZXI7XG4gICAgfSxcbiAgICBvbkNsb3NlOiAoKSA9PiBvbkNsb3NlKFwiYWN0aW9uLWNhbmNlbGxlZFwiKSxcbiAgICBvbkNsaWNrUXVlc3Rpb246ICgpID0+IHNldEluZm9UYWIoKHYpID0+ICF2KSxcbiAgICBzaG93Rm9vdGVyOiB0cnVlLFxuICAgIFwiZGF0YS10Yy13YWxsZXRzLW1vZGFsLWNvbnRhaW5lclwiOiBcInRydWVcIixcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgIHJldHVybiBpbmZvVGFiKCk7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEluZm9Nb2RhbCwge1xuICAgICAgICAgICAgb25CYWNrQ2xpY2s6ICgpID0+IHNldEluZm9UYWIoZmFsc2UpXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICByZXR1cm4gIWluZm9UYWIoKTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gYWRkaXRpb25hbFJlcXVlc3RMb2FkaW5nKCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChIMVN0eWxlZCRhLCB7XG4gICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwubG9hZGluZ1wiLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIldhbGxldHMgbGlzdCBpcyBsb2FkaW5nXCJcbiAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChMb2FkZXJDb250YWluZXJTdHlsZWQsIHtcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KExvYWRlckljb24sIHtcbiAgICAgICAgICAgICAgICAgICAgc2l6ZTogXCJtXCJcbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiAhYWRkaXRpb25hbFJlcXVlc3RMb2FkaW5nKCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KER5bmFtaWMsIHtcbiAgICAgICAgICAgICAgICBnZXQgY29tcG9uZW50KCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGlzTW9iaWxlKCkgPyBNb2JpbGVDb25uZWN0aW9uTW9kYWwgOiBEZXNrdG9wQ29ubmVjdGlvbk1vZGFsO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0IHdhbGxldCgpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBnZXRTaW5nbGVXYWxsZXRNb2RhbFdhbGxldEluZm8oKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBhZGRpdGlvbmFsUmVxdWVzdCgpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBhZGRpdGlvbmFsUmVxdWVzdCgpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgb25CYWNrQ2xpY2s6ICgpID0+IHtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGJhY2tEaXNhYmxlZDogdHJ1ZVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KV07XG4gICAgICAgIH1cbiAgICAgIH0pXTtcbiAgICB9XG4gIH0pO1xufTtcbmNvbnN0IEFwcCA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0cmFuc2xhdGlvbnMgPSBjcmVhdGVJMThuQ29udGV4dChpMThuRGljdGlvbmFyeSwgYXBwU3RhdGUubGFuZ3VhZ2UpO1xuICBkZWZpbmVTdHlsZXNSb290KCk7XG4gIGZpeE1vYmlsZVNhZmFyaUFjdGl2ZVRyYW5zaXRpb24oKTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChJMThuQ29udGV4dC5Qcm92aWRlciwge1xuICAgIHZhbHVlOiB0cmFuc2xhdGlvbnMsXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUb25Db25uZWN0VWlDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICAgIGdldCB2YWx1ZSgpIHtcbiAgICAgICAgICByZXR1cm4gcHJvcHMudG9uQ29ubmVjdFVJO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChDb25uZWN0b3JDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICAgICAgICBnZXQgdmFsdWUoKSB7XG4gICAgICAgICAgICAgIHJldHVybiBhcHBTdGF0ZS5jb25uZWN0b3I7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChHbG9iYWxTdHlsZXMsIHt9KSwgY3JlYXRlQ29tcG9uZW50KFRoZW1lUHJvdmlkZXIsIHtcbiAgICAgICAgICAgICAgICB0aGVtZTogdGhlbWVTdGF0ZSxcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhcHBTdGF0ZS5idXR0b25Sb290SWQ7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFBvcnRhbCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IG1vdW50KCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYXBwU3RhdGUuYnV0dG9uUm9vdElkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQWNjb3VudEJ1dHRvbiwge30pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KER5bmFtaWMsIHtcbiAgICAgICAgICAgICAgICAgICAgY29tcG9uZW50OiBnbG9iYWxTdHlsZXNUYWcsXG4gICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChXYWxsZXRzTW9kYWwsIHt9KSwgY3JlYXRlQ29tcG9uZW50KFNpbmdsZVdhbGxldE1vZGFsLCB7fSksIGNyZWF0ZUNvbXBvbmVudChBY3Rpb25zTW9kYWwsIHt9KV07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9KTtcbn07XG5jb25zdCB3aWRnZXRDb250cm9sbGVyID0ge1xuICBvcGVuV2FsbGV0c01vZGFsOiAoKSA9PiB2b2lkIHNldFRpbWVvdXQoKCkgPT4gc2V0V2FsbGV0c01vZGFsU3RhdGUoe1xuICAgIHN0YXR1czogXCJvcGVuZWRcIixcbiAgICBjbG9zZVJlYXNvbjogbnVsbFxuICB9KSksXG4gIGNsb3NlV2FsbGV0c01vZGFsOiAocmVhc29uKSA9PiB2b2lkIHNldFRpbWVvdXQoKCkgPT4gc2V0V2FsbGV0c01vZGFsU3RhdGUoe1xuICAgIHN0YXR1czogXCJjbG9zZWRcIixcbiAgICBjbG9zZVJlYXNvbjogcmVhc29uXG4gIH0pKSxcbiAgb3BlblNpbmdsZVdhbGxldE1vZGFsOiAod2FsbGV0SW5mbykgPT4ge1xuICAgIHZvaWQgc2V0VGltZW91dCgoKSA9PiBzZXRTaW5nbGVXYWxsZXRNb2RhbFN0YXRlKHtcbiAgICAgIHN0YXR1czogXCJvcGVuZWRcIixcbiAgICAgIGNsb3NlUmVhc29uOiBudWxsLFxuICAgICAgd2FsbGV0SW5mb1xuICAgIH0pKTtcbiAgfSxcbiAgY2xvc2VTaW5nbGVXYWxsZXRNb2RhbDogKHJlYXNvbikgPT4gdm9pZCBzZXRUaW1lb3V0KCgpID0+IHNldFNpbmdsZVdhbGxldE1vZGFsU3RhdGUoe1xuICAgIHN0YXR1czogXCJjbG9zZWRcIixcbiAgICBjbG9zZVJlYXNvbjogcmVhc29uXG4gIH0pKSxcbiAgb3BlbldhbGxldE5vdFN1cHBvcnRGZWF0dXJlTW9kYWw6IChjYXVzZSkgPT4gdm9pZCBzZXRUaW1lb3V0KCgpID0+IHNldFdhbGxldHNNb2RhbFN0YXRlKHtcbiAgICBzdGF0dXM6IFwib3BlbmVkXCIsXG4gICAgY2xvc2VSZWFzb246IG51bGwsXG4gICAgdHlwZTogXCJ3YWxsZXQtbm90LXN1cHBvcnQtZmVhdHVyZVwiLFxuICAgIHJlcXVpcmVkRmVhdHVyZTogY2F1c2UucmVxdWlyZWRGZWF0dXJlXG4gIH0pKSxcbiAgc2V0QWN0aW9uOiAoYWN0aW9uMikgPT4gdm9pZCBzZXRUaW1lb3V0KCgpID0+IHNldEFjdGlvbihhY3Rpb24yKSksXG4gIGNsZWFyQWN0aW9uOiAoKSA9PiB2b2lkIHNldFRpbWVvdXQoKCkgPT4gc2V0QWN0aW9uKG51bGwpKSxcbiAgZ2V0U2VsZWN0ZWRXYWxsZXRJbmZvOiAoKSA9PiBsYXN0U2VsZWN0ZWRXYWxsZXRJbmZvKCksXG4gIHJlbW92ZVNlbGVjdGVkV2FsbGV0SW5mbzogKCkgPT4gc2V0TGFzdFNlbGVjdGVkV2FsbGV0SW5mbyhudWxsKSxcbiAgcmVuZGVyQXBwOiAocm9vdCwgdG9uQ29ubmVjdFVJKSA9PiByZW5kZXIoKCkgPT4gY3JlYXRlQ29tcG9uZW50KEFwcCwge1xuICAgIHRvbkNvbm5lY3RVSVxuICB9KSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQocm9vdCkpXG59O1xuY2xhc3MgV2FsbGV0c01vZGFsTWFuYWdlciB7XG4gIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiY29ubmVjdG9yXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJzZXRDb25uZWN0UmVxdWVzdFBhcmFtZXRlcnNDYWxsYmFja1wiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiY29uc3VtZXJzXCIsIFtdKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwidHJhY2tlclwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic3RhdGVcIiwgd2FsbGV0c01vZGFsU3RhdGUoKSk7XG4gICAgdGhpcy5jb25uZWN0b3IgPSBvcHRpb25zLmNvbm5lY3RvcjtcbiAgICB0aGlzLnRyYWNrZXIgPSBvcHRpb25zLnRyYWNrZXI7XG4gICAgdGhpcy5zZXRDb25uZWN0UmVxdWVzdFBhcmFtZXRlcnNDYWxsYmFjayA9IG9wdGlvbnMuc2V0Q29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzQ2FsbGJhY2s7XG4gICAgY3JlYXRlRWZmZWN0KCgpID0+IHtcbiAgICAgIGNvbnN0IHN0YXRlID0gd2FsbGV0c01vZGFsU3RhdGUoKTtcbiAgICAgIHRoaXMuc3RhdGUgPSBzdGF0ZTtcbiAgICAgIHRoaXMuY29uc3VtZXJzLmZvckVhY2goKGNvbnN1bWVyKSA9PiBjb25zdW1lcihzdGF0ZSkpO1xuICAgIH0pO1xuICB9XG4gIG9wZW4oKSB7XG4gICAgcmV0dXJuIF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICAgIHRoaXMudHJhY2tlci50cmFja0Nvbm5lY3Rpb25TdGFydGVkKCk7XG4gICAgICBjb25zdCB3YWxsZXRzTGlzdCA9IHlpZWxkIHRoaXMuY29ubmVjdG9yLmdldFdhbGxldHMoKTtcbiAgICAgIGNvbnN0IGVtYmVkZGVkV2FsbGV0ID0gd2FsbGV0c0xpc3QuZmluZChpc1dhbGxldEluZm9DdXJyZW50bHlFbWJlZGRlZCk7XG4gICAgICBpZiAoZW1iZWRkZWRXYWxsZXQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29ubmVjdEVtYmVkZGVkV2FsbGV0KGVtYmVkZGVkV2FsbGV0KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB0aGlzLm9wZW5XYWxsZXRzTW9kYWwoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICBjbG9zZShyZWFzb24gPSBcImFjdGlvbi1jYW5jZWxsZWRcIikge1xuICAgIGlmIChyZWFzb24gPT09IFwiYWN0aW9uLWNhbmNlbGxlZFwiKSB7XG4gICAgICB0aGlzLnRyYWNrZXIudHJhY2tDb25uZWN0aW9uRXJyb3IoXCJDb25uZWN0aW9uIHdhcyBjYW5jZWxsZWRcIik7XG4gICAgfVxuICAgIHdpZGdldENvbnRyb2xsZXIuY2xvc2VXYWxsZXRzTW9kYWwocmVhc29uKTtcbiAgfVxuICBvblN0YXRlQ2hhbmdlKG9uQ2hhbmdlKSB7XG4gICAgdGhpcy5jb25zdW1lcnMucHVzaChvbkNoYW5nZSk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHRoaXMuY29uc3VtZXJzID0gdGhpcy5jb25zdW1lcnMuZmlsdGVyKChjb25zdW1lcikgPT4gY29uc3VtZXIgIT09IG9uQ2hhbmdlKTtcbiAgICB9O1xuICB9XG4gIGNvbm5lY3RFbWJlZGRlZFdhbGxldChlbWJlZGRlZFdhbGxldCkge1xuICAgIGNvbnN0IGNvbm5lY3QgPSAocGFyYW1ldGVycykgPT4ge1xuICAgICAgc2V0TGFzdFNlbGVjdGVkV2FsbGV0SW5mbyhlbWJlZGRlZFdhbGxldCk7XG4gICAgICB0aGlzLmNvbm5lY3Rvci5jb25uZWN0KHsganNCcmlkZ2VLZXk6IGVtYmVkZGVkV2FsbGV0LmpzQnJpZGdlS2V5IH0sIHBhcmFtZXRlcnMpO1xuICAgIH07XG4gICAgY29uc3QgYWRkaXRpb25hbFJlcXVlc3QgPSBhcHBTdGF0ZS5jb25uZWN0UmVxdWVzdFBhcmFtZXRlcnM7XG4gICAgaWYgKChhZGRpdGlvbmFsUmVxdWVzdCA9PSBudWxsID8gdm9pZCAwIDogYWRkaXRpb25hbFJlcXVlc3Quc3RhdGUpID09PSBcImxvYWRpbmdcIikge1xuICAgICAgdGhpcy5zZXRDb25uZWN0UmVxdWVzdFBhcmFtZXRlcnNDYWxsYmFjayhjb25uZWN0KTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29ubmVjdChhZGRpdGlvbmFsUmVxdWVzdCA9PSBudWxsID8gdm9pZCAwIDogYWRkaXRpb25hbFJlcXVlc3QudmFsdWUpO1xuICAgIH1cbiAgfVxuICBvcGVuV2FsbGV0c01vZGFsKCkge1xuICAgIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICBpZiAoaXNJblRNQSgpKSB7XG4gICAgICAgIHNlbmRFeHBhbmQoKTtcbiAgICAgIH1cbiAgICAgIHdpZGdldENvbnRyb2xsZXIub3BlbldhbGxldHNNb2RhbCgpO1xuICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgICAgIGNvbnN0IHVuc3Vic2NyaWJlID0gdGhpcy5vblN0YXRlQ2hhbmdlKChzdGF0ZSkgPT4ge1xuICAgICAgICAgIGNvbnN0IHsgc3RhdHVzIH0gPSBzdGF0ZTtcbiAgICAgICAgICBpZiAoc3RhdHVzID09PSBcIm9wZW5lZFwiKSB7XG4gICAgICAgICAgICB1bnN1YnNjcmliZSgpO1xuICAgICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxufVxuY2xhc3MgVHJhbnNhY3Rpb25Nb2RhbE1hbmFnZXIge1xuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImNvbm5lY3RvclwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiY29uc3VtZXJzXCIsIFtdKTtcbiAgICB0aGlzLmNvbm5lY3RvciA9IG9wdGlvbnMuY29ubmVjdG9yO1xuICAgIGNyZWF0ZUVmZmVjdCgoKSA9PiB7XG4gICAgICBjb25zdCBjdXJyZW50QWN0aW9uID0gYWN0aW9uKCk7XG4gICAgICB0aGlzLmNvbnN1bWVycy5mb3JFYWNoKChjb25zdW1lcikgPT4gY29uc3VtZXIoY3VycmVudEFjdGlvbikpO1xuICAgIH0pO1xuICB9XG4gIG9uU3RhdGVDaGFuZ2UoY29uc3VtZXIpIHtcbiAgICB0aGlzLmNvbnN1bWVycy5wdXNoKGNvbnN1bWVyKTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgdGhpcy5jb25zdW1lcnMgPSB0aGlzLmNvbnN1bWVycy5maWx0ZXIoKGMyKSA9PiBjMiAhPT0gY29uc3VtZXIpO1xuICAgIH07XG4gIH1cbn1cbmNsYXNzIFNpbmdsZVdhbGxldE1vZGFsTWFuYWdlciB7XG4gIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiY29ubmVjdG9yXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJzZXRDb25uZWN0UmVxdWVzdFBhcmFtZXRlcnNDYWxsYmFja1wiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiY29uc3VtZXJzXCIsIFtdKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwidHJhY2tlclwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic3RhdGVcIiwgc2luZ2xlV2FsbGV0TW9kYWxTdGF0ZSgpKTtcbiAgICB0aGlzLmNvbm5lY3RvciA9IG9wdGlvbnMuY29ubmVjdG9yO1xuICAgIHRoaXMudHJhY2tlciA9IG9wdGlvbnMudHJhY2tlcjtcbiAgICB0aGlzLnNldENvbm5lY3RSZXF1ZXN0UGFyYW1ldGVyc0NhbGxiYWNrID0gb3B0aW9ucy5zZXRDb25uZWN0UmVxdWVzdFBhcmFtZXRlcnNDYWxsYmFjaztcbiAgICBjcmVhdGVFZmZlY3QoKCkgPT4ge1xuICAgICAgY29uc3Qgc3RhdGUgPSBzaW5nbGVXYWxsZXRNb2RhbFN0YXRlKCk7XG4gICAgICB0aGlzLnN0YXRlID0gc3RhdGU7XG4gICAgICB0aGlzLmNvbnN1bWVycy5mb3JFYWNoKChjb25zdW1lcikgPT4gY29uc3VtZXIoc3RhdGUpKTtcbiAgICB9KTtcbiAgfVxuICBvcGVuKHdhbGxldCkge1xuICAgIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICB0aGlzLnRyYWNrZXIudHJhY2tDb25uZWN0aW9uU3RhcnRlZCgpO1xuICAgICAgY29uc3QgZmV0Y2hlZFdhbGxldHNMaXN0ID0geWllbGQgdGhpcy5jb25uZWN0b3IuZ2V0V2FsbGV0cygpO1xuICAgICAgY29uc3Qgd2FsbGV0c0xpc3QgPSBhcHBseVdhbGxldHNMaXN0Q29uZmlndXJhdGlvbihcbiAgICAgICAgZmV0Y2hlZFdhbGxldHNMaXN0LFxuICAgICAgICBhcHBTdGF0ZS53YWxsZXRzTGlzdENvbmZpZ3VyYXRpb25cbiAgICAgICk7XG4gICAgICBjb25zdCBlbWJlZGRlZFdhbGxldCA9IHdhbGxldHNMaXN0LmZpbmQoaXNXYWxsZXRJbmZvQ3VycmVudGx5RW1iZWRkZWQpO1xuICAgICAgY29uc3QgaXNFbWJlZGRlZFdhbGxldEV4aXN0ID0gISFlbWJlZGRlZFdhbGxldDtcbiAgICAgIGlmIChpc0VtYmVkZGVkV2FsbGV0RXhpc3QpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29ubmVjdEVtYmVkZGVkV2FsbGV0KGVtYmVkZGVkV2FsbGV0KTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IGV4dGVybmFsV2FsbGV0cyA9IHdhbGxldHNMaXN0LmZpbHRlcihpc1dhbGxldEluZm9SZW1vdGUpO1xuICAgICAgY29uc3QgZXh0ZXJuYWxXYWxsZXQgPSBleHRlcm5hbFdhbGxldHMuZmluZCgod2FsbGV0SW5mbykgPT4gZXFXYWxsZXROYW1lKHdhbGxldEluZm8sIHdhbGxldCkpO1xuICAgICAgY29uc3QgaXNFeHRlcm5hbFdhbGxldEV4aXN0ID0gISFleHRlcm5hbFdhbGxldDtcbiAgICAgIGlmIChpc0V4dGVybmFsV2FsbGV0RXhpc3QpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMub3BlblNpbmdsZVdhbGxldE1vZGFsKGV4dGVybmFsV2FsbGV0KTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IGVycm9yID0gYFRyeWluZyB0byBvcGVuIG1vZGFsIHdpbmRvdyB3aXRoIHVua25vd24gd2FsbGV0IFwiJHt3YWxsZXR9XCIuYDtcbiAgICAgIHRoaXMudHJhY2tlci50cmFja0Nvbm5lY3Rpb25FcnJvcihlcnJvcik7XG4gICAgICB0aHJvdyBuZXcgVG9uQ29ubmVjdFVJRXJyb3IoZXJyb3IpO1xuICAgIH0pO1xuICB9XG4gIGNsb3NlKHJlYXNvbiA9IFwiYWN0aW9uLWNhbmNlbGxlZFwiKSB7XG4gICAgaWYgKHJlYXNvbiA9PT0gXCJhY3Rpb24tY2FuY2VsbGVkXCIpIHtcbiAgICAgIHRoaXMudHJhY2tlci50cmFja0Nvbm5lY3Rpb25FcnJvcihcIkNvbm5lY3Rpb24gd2FzIGNhbmNlbGxlZFwiKTtcbiAgICB9XG4gICAgd2lkZ2V0Q29udHJvbGxlci5jbG9zZVNpbmdsZVdhbGxldE1vZGFsKFwiYWN0aW9uLWNhbmNlbGxlZFwiKTtcbiAgfVxuICBvblN0YXRlQ2hhbmdlKG9uQ2hhbmdlKSB7XG4gICAgdGhpcy5jb25zdW1lcnMucHVzaChvbkNoYW5nZSk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHRoaXMuY29uc3VtZXJzID0gdGhpcy5jb25zdW1lcnMuZmlsdGVyKChjb25zdW1lcikgPT4gY29uc3VtZXIgIT09IG9uQ2hhbmdlKTtcbiAgICB9O1xuICB9XG4gIGNvbm5lY3RFbWJlZGRlZFdhbGxldChlbWJlZGRlZFdhbGxldCkge1xuICAgIGNvbnN0IGNvbm5lY3QgPSAocGFyYW1ldGVycykgPT4ge1xuICAgICAgc2V0TGFzdFNlbGVjdGVkV2FsbGV0SW5mbyhlbWJlZGRlZFdhbGxldCk7XG4gICAgICB0aGlzLmNvbm5lY3Rvci5jb25uZWN0KHsganNCcmlkZ2VLZXk6IGVtYmVkZGVkV2FsbGV0LmpzQnJpZGdlS2V5IH0sIHBhcmFtZXRlcnMpO1xuICAgIH07XG4gICAgY29uc3QgYWRkaXRpb25hbFJlcXVlc3QgPSBhcHBTdGF0ZS5jb25uZWN0UmVxdWVzdFBhcmFtZXRlcnM7XG4gICAgaWYgKChhZGRpdGlvbmFsUmVxdWVzdCA9PSBudWxsID8gdm9pZCAwIDogYWRkaXRpb25hbFJlcXVlc3Quc3RhdGUpID09PSBcImxvYWRpbmdcIikge1xuICAgICAgdGhpcy5zZXRDb25uZWN0UmVxdWVzdFBhcmFtZXRlcnNDYWxsYmFjayhjb25uZWN0KTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29ubmVjdChhZGRpdGlvbmFsUmVxdWVzdCA9PSBudWxsID8gdm9pZCAwIDogYWRkaXRpb25hbFJlcXVlc3QudmFsdWUpO1xuICAgIH1cbiAgfVxuICBvcGVuU2luZ2xlV2FsbGV0TW9kYWwod2FsbGV0KSB7XG4gICAgcmV0dXJuIF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICAgIGlmIChpc0luVE1BKCkpIHtcbiAgICAgICAgc2VuZEV4cGFuZCgpO1xuICAgICAgfVxuICAgICAgd2lkZ2V0Q29udHJvbGxlci5vcGVuU2luZ2xlV2FsbGV0TW9kYWwod2FsbGV0KTtcbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgICBjb25zdCB1bnN1YnNjcmliZSA9IHRoaXMub25TdGF0ZUNoYW5nZSgoc3RhdGUpID0+IHtcbiAgICAgICAgICBjb25zdCB7IHN0YXR1cyB9ID0gc3RhdGU7XG4gICAgICAgICAgaWYgKHN0YXR1cyA9PT0gXCJvcGVuZWRcIikge1xuICAgICAgICAgICAgdW5zdWJzY3JpYmUoKTtcbiAgICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbn1cbmNsYXNzIFRvbkNvbm5lY3RVSVRyYWNrZXIge1xuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImV2ZW50UHJlZml4XCIsIFwidG9uLWNvbm5lY3QtdWktXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJ0b25Db25uZWN0VWlWZXJzaW9uXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJ0b25Db25uZWN0U2RrVmVyc2lvblwiLCBudWxsKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZXZlbnREaXNwYXRjaGVyXCIpO1xuICAgIHZhciBfYTI7XG4gICAgdGhpcy5ldmVudERpc3BhdGNoZXIgPSAoX2EyID0gb3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5ldmVudERpc3BhdGNoZXIpICE9IG51bGwgPyBfYTIgOiBuZXcgQnJvd3NlckV2ZW50RGlzcGF0Y2hlcigpO1xuICAgIHRoaXMudG9uQ29ubmVjdFVpVmVyc2lvbiA9IG9wdGlvbnMudG9uQ29ubmVjdFVpVmVyc2lvbjtcbiAgICB0aGlzLmluaXQoKS5jYXRjaCgpO1xuICB9XG4gIGdldCB2ZXJzaW9uKCkge1xuICAgIHJldHVybiBjcmVhdGVWZXJzaW9uSW5mbyh7XG4gICAgICB0b25fY29ubmVjdF9zZGtfbGliOiB0aGlzLnRvbkNvbm5lY3RTZGtWZXJzaW9uLFxuICAgICAgdG9uX2Nvbm5lY3RfdWlfbGliOiB0aGlzLnRvbkNvbm5lY3RVaVZlcnNpb25cbiAgICB9KTtcbiAgfVxuICBpbml0KCkge1xuICAgIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICB0cnkge1xuICAgICAgICB5aWVsZCB0aGlzLnNldFJlcXVlc3RWZXJzaW9uSGFuZGxlcigpO1xuICAgICAgICB0aGlzLnRvbkNvbm5lY3RTZGtWZXJzaW9uID0geWllbGQgdGhpcy5yZXF1ZXN0VG9uQ29ubmVjdFNka1ZlcnNpb24oKTtcbiAgICAgIH0gY2F0Y2ggKGUyKSB7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbiAgc2V0UmVxdWVzdFZlcnNpb25IYW5kbGVyKCkge1xuICAgIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICB5aWVsZCB0aGlzLmV2ZW50RGlzcGF0Y2hlci5hZGRFdmVudExpc3RlbmVyKFwidG9uLWNvbm5lY3QtdWktcmVxdWVzdC12ZXJzaW9uXCIsICgpID0+IF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgeWllbGQgdGhpcy5ldmVudERpc3BhdGNoZXIuZGlzcGF0Y2hFdmVudChcbiAgICAgICAgICBcInRvbi1jb25uZWN0LXVpLXJlc3BvbnNlLXZlcnNpb25cIixcbiAgICAgICAgICBjcmVhdGVSZXNwb25zZVZlcnNpb25FdmVudCh0aGlzLnRvbkNvbm5lY3RVaVZlcnNpb24pXG4gICAgICAgICk7XG4gICAgICB9KSk7XG4gICAgfSk7XG4gIH1cbiAgcmVxdWVzdFRvbkNvbm5lY3RTZGtWZXJzaW9uKCkge1xuICAgIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIHlpZWxkIHRoaXMuZXZlbnREaXNwYXRjaGVyLmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICAgICAgICBcInRvbi1jb25uZWN0LXJlc3BvbnNlLXZlcnNpb25cIixcbiAgICAgICAgICAgIChldmVudCkgPT4ge1xuICAgICAgICAgICAgICByZXNvbHZlKGV2ZW50LmRldGFpbC52ZXJzaW9uKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7IG9uY2U6IHRydWUgfVxuICAgICAgICAgICk7XG4gICAgICAgICAgeWllbGQgdGhpcy5ldmVudERpc3BhdGNoZXIuZGlzcGF0Y2hFdmVudChcbiAgICAgICAgICAgIFwidG9uLWNvbm5lY3QtcmVxdWVzdC12ZXJzaW9uXCIsXG4gICAgICAgICAgICBjcmVhdGVSZXF1ZXN0VmVyc2lvbkV2ZW50KClcbiAgICAgICAgICApO1xuICAgICAgICB9IGNhdGNoIChlMikge1xuICAgICAgICAgIHJlamVjdChlMik7XG4gICAgICAgIH1cbiAgICAgIH0pKTtcbiAgICB9KTtcbiAgfVxuICBkaXNwYXRjaFVzZXJBY3Rpb25FdmVudChldmVudERldGFpbHMpIHtcbiAgICB2YXIgX2EyO1xuICAgIHRyeSB7XG4gICAgICAoX2EyID0gdGhpcy5ldmVudERpc3BhdGNoZXIpID09IG51bGwgPyB2b2lkIDAgOiBfYTIuZGlzcGF0Y2hFdmVudChgJHt0aGlzLmV2ZW50UHJlZml4fSR7ZXZlbnREZXRhaWxzLnR5cGV9YCwgZXZlbnREZXRhaWxzKS5jYXRjaCgpO1xuICAgIH0gY2F0Y2ggKGUyKSB7XG4gICAgfVxuICB9XG4gIHRyYWNrQ29ubmVjdGlvblN0YXJ0ZWQoLi4uYXJncykge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBldmVudCA9IGNyZWF0ZUNvbm5lY3Rpb25TdGFydGVkRXZlbnQodGhpcy52ZXJzaW9uLCAuLi5hcmdzKTtcbiAgICAgIHRoaXMuZGlzcGF0Y2hVc2VyQWN0aW9uRXZlbnQoZXZlbnQpO1xuICAgIH0gY2F0Y2ggKGUyKSB7XG4gICAgfVxuICB9XG4gIHRyYWNrQ29ubmVjdGlvbkNvbXBsZXRlZCguLi5hcmdzKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGV2ZW50ID0gY3JlYXRlQ29ubmVjdGlvbkNvbXBsZXRlZEV2ZW50KHRoaXMudmVyc2lvbiwgLi4uYXJncyk7XG4gICAgICB0aGlzLmRpc3BhdGNoVXNlckFjdGlvbkV2ZW50KGV2ZW50KTtcbiAgICB9IGNhdGNoIChlMikge1xuICAgIH1cbiAgfVxuICB0cmFja0Nvbm5lY3Rpb25FcnJvciguLi5hcmdzKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGV2ZW50ID0gY3JlYXRlQ29ubmVjdGlvbkVycm9yRXZlbnQodGhpcy52ZXJzaW9uLCAuLi5hcmdzKTtcbiAgICAgIHRoaXMuZGlzcGF0Y2hVc2VyQWN0aW9uRXZlbnQoZXZlbnQpO1xuICAgIH0gY2F0Y2ggKGUyKSB7XG4gICAgfVxuICB9XG4gIHRyYWNrQ29ubmVjdGlvblJlc3RvcmluZ1N0YXJ0ZWQoLi4uYXJncykge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBldmVudCA9IGNyZWF0ZUNvbm5lY3Rpb25SZXN0b3JpbmdTdGFydGVkRXZlbnQodGhpcy52ZXJzaW9uLCAuLi5hcmdzKTtcbiAgICAgIHRoaXMuZGlzcGF0Y2hVc2VyQWN0aW9uRXZlbnQoZXZlbnQpO1xuICAgIH0gY2F0Y2ggKGUyKSB7XG4gICAgfVxuICB9XG4gIHRyYWNrQ29ubmVjdGlvblJlc3RvcmluZ0NvbXBsZXRlZCguLi5hcmdzKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGV2ZW50ID0gY3JlYXRlQ29ubmVjdGlvblJlc3RvcmluZ0NvbXBsZXRlZEV2ZW50KHRoaXMudmVyc2lvbiwgLi4uYXJncyk7XG4gICAgICB0aGlzLmRpc3BhdGNoVXNlckFjdGlvbkV2ZW50KGV2ZW50KTtcbiAgICB9IGNhdGNoIChlMikge1xuICAgIH1cbiAgfVxuICB0cmFja0Nvbm5lY3Rpb25SZXN0b3JpbmdFcnJvciguLi5hcmdzKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGV2ZW50ID0gY3JlYXRlQ29ubmVjdGlvblJlc3RvcmluZ0Vycm9yRXZlbnQodGhpcy52ZXJzaW9uLCAuLi5hcmdzKTtcbiAgICAgIHRoaXMuZGlzcGF0Y2hVc2VyQWN0aW9uRXZlbnQoZXZlbnQpO1xuICAgIH0gY2F0Y2ggKGUyKSB7XG4gICAgfVxuICB9XG4gIHRyYWNrRGlzY29ubmVjdGlvbiguLi5hcmdzKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGV2ZW50ID0gY3JlYXRlRGlzY29ubmVjdGlvbkV2ZW50KHRoaXMudmVyc2lvbiwgLi4uYXJncyk7XG4gICAgICB0aGlzLmRpc3BhdGNoVXNlckFjdGlvbkV2ZW50KGV2ZW50KTtcbiAgICB9IGNhdGNoIChlMikge1xuICAgIH1cbiAgfVxuICB0cmFja1RyYW5zYWN0aW9uU2VudEZvclNpZ25hdHVyZSguLi5hcmdzKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGV2ZW50ID0gY3JlYXRlVHJhbnNhY3Rpb25TZW50Rm9yU2lnbmF0dXJlRXZlbnQodGhpcy52ZXJzaW9uLCAuLi5hcmdzKTtcbiAgICAgIHRoaXMuZGlzcGF0Y2hVc2VyQWN0aW9uRXZlbnQoZXZlbnQpO1xuICAgIH0gY2F0Y2ggKGUyKSB7XG4gICAgfVxuICB9XG4gIHRyYWNrVHJhbnNhY3Rpb25TaWduZWQoLi4uYXJncykge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBldmVudCA9IGNyZWF0ZVRyYW5zYWN0aW9uU2lnbmVkRXZlbnQodGhpcy52ZXJzaW9uLCAuLi5hcmdzKTtcbiAgICAgIHRoaXMuZGlzcGF0Y2hVc2VyQWN0aW9uRXZlbnQoZXZlbnQpO1xuICAgIH0gY2F0Y2ggKGUyKSB7XG4gICAgfVxuICB9XG4gIHRyYWNrVHJhbnNhY3Rpb25TaWduaW5nRmFpbGVkKC4uLmFyZ3MpIHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgZXZlbnQgPSBjcmVhdGVUcmFuc2FjdGlvblNpZ25pbmdGYWlsZWRFdmVudCh0aGlzLnZlcnNpb24sIC4uLmFyZ3MpO1xuICAgICAgdGhpcy5kaXNwYXRjaFVzZXJBY3Rpb25FdmVudChldmVudCk7XG4gICAgfSBjYXRjaCAoZTIpIHtcbiAgICB9XG4gIH1cbiAgdHJhY2tEYXRhU2VudEZvclNpZ25hdHVyZSguLi5hcmdzKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGV2ZW50ID0gY3JlYXRlRGF0YVNlbnRGb3JTaWduYXR1cmVFdmVudCh0aGlzLnZlcnNpb24sIC4uLmFyZ3MpO1xuICAgICAgdGhpcy5kaXNwYXRjaFVzZXJBY3Rpb25FdmVudChldmVudCk7XG4gICAgfSBjYXRjaCAoZTIpIHtcbiAgICB9XG4gIH1cbiAgdHJhY2tEYXRhU2lnbmVkKC4uLmFyZ3MpIHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgZXZlbnQgPSBjcmVhdGVEYXRhU2lnbmVkRXZlbnQodGhpcy52ZXJzaW9uLCAuLi5hcmdzKTtcbiAgICAgIHRoaXMuZGlzcGF0Y2hVc2VyQWN0aW9uRXZlbnQoZXZlbnQpO1xuICAgIH0gY2F0Y2ggKGUyKSB7XG4gICAgfVxuICB9XG4gIHRyYWNrRGF0YVNpZ25pbmdGYWlsZWQoLi4uYXJncykge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBldmVudCA9IGNyZWF0ZURhdGFTaWduaW5nRmFpbGVkRXZlbnQodGhpcy52ZXJzaW9uLCAuLi5hcmdzKTtcbiAgICAgIHRoaXMuZGlzcGF0Y2hVc2VyQWN0aW9uRXZlbnQoZXZlbnQpO1xuICAgIH0gY2F0Y2ggKGUyKSB7XG4gICAgfVxuICB9XG59XG5jb25zdCB0b25Db25uZWN0VWlWZXJzaW9uID0gXCIyLjIuMFwiO1xuY2xhc3MgVG9uQ29ubmVjdFVJIHtcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJ3YWxsZXRJbmZvU3RvcmFnZVwiLCBuZXcgV2FsbGV0SW5mb1N0b3JhZ2UoKSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInByZWZlcnJlZFdhbGxldFN0b3JhZ2VcIiwgbmV3IFByZWZlcnJlZFdhbGxldFN0b3JhZ2UoKSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInRyYWNrZXJcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcIndhbGxldEluZm9cIiwgbnVsbCk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInN5c3RlbVRoZW1lQ2hhbmdlVW5zdWJzY3JpYmVcIiwgbnVsbCk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImFjdGlvbnNDb25maWd1cmF0aW9uXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJ3YWxsZXRzTGlzdFwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiX3dhbGxldHNSZXF1aXJlZEZlYXR1cmVzXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJfd2FsbGV0c1ByZWZlcnJlZEZlYXR1cmVzXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJjb25uZWN0UmVxdWVzdFBhcmFtZXRlcnNDYWxsYmFja1wiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiY29ubmVjdG9yXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJtb2RhbFwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic2luZ2xlV2FsbGV0TW9kYWxcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInRyYW5zYWN0aW9uTW9kYWxcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImNvbm5lY3Rpb25SZXN0b3JlZFwiLCBQcm9taXNlLnJlc29sdmUoZmFsc2UpKTtcbiAgICBpZiAob3B0aW9ucyAmJiBcImNvbm5lY3RvclwiIGluIG9wdGlvbnMgJiYgb3B0aW9ucy5jb25uZWN0b3IpIHtcbiAgICAgIHRoaXMuY29ubmVjdG9yID0gb3B0aW9ucy5jb25uZWN0b3I7XG4gICAgfSBlbHNlIGlmIChvcHRpb25zICYmIFwibWFuaWZlc3RVcmxcIiBpbiBvcHRpb25zICYmIG9wdGlvbnMubWFuaWZlc3RVcmwpIHtcbiAgICAgIHRoaXMuY29ubmVjdG9yID0gbmV3IFRvbkNvbm5lY3Qoe1xuICAgICAgICBtYW5pZmVzdFVybDogb3B0aW9ucy5tYW5pZmVzdFVybCxcbiAgICAgICAgZXZlbnREaXNwYXRjaGVyOiBvcHRpb25zLmV2ZW50RGlzcGF0Y2hlcixcbiAgICAgICAgd2FsbGV0c1JlcXVpcmVkRmVhdHVyZXM6IG9wdGlvbnMud2FsbGV0c1JlcXVpcmVkRmVhdHVyZXNcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgVG9uQ29ubmVjdFVJRXJyb3IoXG4gICAgICAgIFwiWW91IGhhdmUgdG8gc3BlY2lmeSBhIGBtYW5pZmVzdFVybGAgb3IgYSBgY29ubmVjdG9yYCBpbiB0aGUgb3B0aW9ucy5cIlxuICAgICAgKTtcbiAgICB9XG4gICAgdGhpcy50cmFja2VyID0gbmV3IFRvbkNvbm5lY3RVSVRyYWNrZXIoe1xuICAgICAgZXZlbnREaXNwYXRjaGVyOiBvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmV2ZW50RGlzcGF0Y2hlcixcbiAgICAgIHRvbkNvbm5lY3RVaVZlcnNpb25cbiAgICB9KTtcbiAgICB0aGlzLm1vZGFsID0gbmV3IFdhbGxldHNNb2RhbE1hbmFnZXIoe1xuICAgICAgY29ubmVjdG9yOiB0aGlzLmNvbm5lY3RvcixcbiAgICAgIHRyYWNrZXI6IHRoaXMudHJhY2tlcixcbiAgICAgIHNldENvbm5lY3RSZXF1ZXN0UGFyYW1ldGVyc0NhbGxiYWNrOiAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgdGhpcy5jb25uZWN0UmVxdWVzdFBhcmFtZXRlcnNDYWxsYmFjayA9IGNhbGxiYWNrO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHRoaXMuc2luZ2xlV2FsbGV0TW9kYWwgPSBuZXcgU2luZ2xlV2FsbGV0TW9kYWxNYW5hZ2VyKHtcbiAgICAgIGNvbm5lY3RvcjogdGhpcy5jb25uZWN0b3IsXG4gICAgICB0cmFja2VyOiB0aGlzLnRyYWNrZXIsXG4gICAgICBzZXRDb25uZWN0UmVxdWVzdFBhcmFtZXRlcnNDYWxsYmFjazogKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIHRoaXMuY29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzQ2FsbGJhY2sgPSBjYWxsYmFjaztcbiAgICAgIH1cbiAgICB9KTtcbiAgICB0aGlzLnRyYW5zYWN0aW9uTW9kYWwgPSBuZXcgVHJhbnNhY3Rpb25Nb2RhbE1hbmFnZXIoe1xuICAgICAgY29ubmVjdG9yOiB0aGlzLmNvbm5lY3RvclxuICAgIH0pO1xuICAgIHRoaXMuX3dhbGxldHNSZXF1aXJlZEZlYXR1cmVzID0gb3B0aW9ucy53YWxsZXRzUmVxdWlyZWRGZWF0dXJlcztcbiAgICB0aGlzLl93YWxsZXRzUHJlZmVycmVkRmVhdHVyZXMgPSBvcHRpb25zLndhbGxldHNQcmVmZXJyZWRGZWF0dXJlcztcbiAgICB0aGlzLndhbGxldHNMaXN0ID0gdGhpcy5nZXRXYWxsZXRzKCk7XG4gICAgdGhpcy53YWxsZXRzTGlzdC50aGVuKChsaXN0KSA9PiBwcmVsb2FkSW1hZ2VzKHVuaXEobGlzdC5tYXAoKGl0ZW0pID0+IGl0ZW0uaW1hZ2VVcmwpKSkpO1xuICAgIGNvbnN0IHJvb3RJZCA9IHRoaXMubm9ybWFsaXplV2lkZ2V0Um9vdChvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLndpZGdldFJvb3RJZCk7XG4gICAgdGhpcy5zdWJzY3JpYmVUb1dhbGxldENoYW5nZSgpO1xuICAgIGlmICgob3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5yZXN0b3JlQ29ubmVjdGlvbikgIT09IGZhbHNlKSB7XG4gICAgICB0aGlzLmNvbm5lY3Rpb25SZXN0b3JlZCA9IGNyZWF0ZU1hY3JvdGFza0FzeW5jKCgpID0+IF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgdGhpcy50cmFja2VyLnRyYWNrQ29ubmVjdGlvblJlc3RvcmluZ1N0YXJ0ZWQoKTtcbiAgICAgICAgeWllbGQgdGhpcy5jb25uZWN0b3IucmVzdG9yZUNvbm5lY3Rpb24oKTtcbiAgICAgICAgaWYgKCF0aGlzLmNvbm5lY3Rvci5jb25uZWN0ZWQpIHtcbiAgICAgICAgICB0aGlzLnRyYWNrZXIudHJhY2tDb25uZWN0aW9uUmVzdG9yaW5nRXJyb3IoXCJDb25uZWN0aW9uIHdhcyBub3QgcmVzdG9yZWRcIik7XG4gICAgICAgICAgdGhpcy53YWxsZXRJbmZvU3RvcmFnZS5yZW1vdmVXYWxsZXRJbmZvKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy50cmFja2VyLnRyYWNrQ29ubmVjdGlvblJlc3RvcmluZ0NvbXBsZXRlZCh0aGlzLndhbGxldCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuY29ubmVjdG9yLmNvbm5lY3RlZDtcbiAgICAgIH0pKTtcbiAgICB9XG4gICAgdGhpcy51aU9wdGlvbnMgPSBtZXJnZU9wdGlvbnMob3B0aW9ucywgeyB1aVByZWZlcmVuY2VzOiB7IHRoZW1lOiBcIlNZU1RFTVwiIH0gfSk7XG4gICAgY29uc3QgcHJlZmVycmVkV2FsbGV0TmFtZSA9IHRoaXMucHJlZmVycmVkV2FsbGV0U3RvcmFnZS5nZXRQcmVmZXJyZWRXYWxsZXRBcHBOYW1lKCk7XG4gICAgc2V0QXBwU3RhdGUoe1xuICAgICAgY29ubmVjdG9yOiB0aGlzLmNvbm5lY3RvcixcbiAgICAgIHByZWZlcnJlZFdhbGxldEFwcE5hbWU6IHByZWZlcnJlZFdhbGxldE5hbWVcbiAgICB9KTtcbiAgICB3aWRnZXRDb250cm9sbGVyLnJlbmRlckFwcChyb290SWQsIHRoaXMpO1xuICB9XG4gIHN0YXRpYyBnZXRXYWxsZXRzKCkge1xuICAgIHJldHVybiBUb25Db25uZWN0LmdldFdhbGxldHMoKTtcbiAgfVxuICBnZXQgd2FsbGV0c1JlcXVpcmVkRmVhdHVyZXMoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3dhbGxldHNSZXF1aXJlZEZlYXR1cmVzO1xuICB9XG4gIGdldCB3YWxsZXRzUHJlZmVycmVkRmVhdHVyZXMoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3dhbGxldHNQcmVmZXJyZWRGZWF0dXJlcztcbiAgfVxuICBnZXQgY29ubmVjdGVkKCkge1xuICAgIHJldHVybiB0aGlzLmNvbm5lY3Rvci5jb25uZWN0ZWQ7XG4gIH1cbiAgZ2V0IGFjY291bnQoKSB7XG4gICAgcmV0dXJuIHRoaXMuY29ubmVjdG9yLmFjY291bnQ7XG4gIH1cbiAgZ2V0IHdhbGxldCgpIHtcbiAgICBpZiAoIXRoaXMuY29ubmVjdG9yLndhbGxldCkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiBfX3NwcmVhZFZhbHVlcyhfX3NwcmVhZFZhbHVlcyh7fSwgdGhpcy5jb25uZWN0b3Iud2FsbGV0KSwgdGhpcy53YWxsZXRJbmZvKTtcbiAgfVxuICBzZXQgdWlPcHRpb25zKG9wdGlvbnMpIHtcbiAgICB2YXIgX2EyLCBfYjIsIF9jMiwgX2QyLCBfZTI7XG4gICAgdGhpcy5jaGVja0J1dHRvblJvb3RFeGlzdChvcHRpb25zLmJ1dHRvblJvb3RJZCk7XG4gICAgdGhpcy5hY3Rpb25zQ29uZmlndXJhdGlvbiA9IG9wdGlvbnMuYWN0aW9uc0NvbmZpZ3VyYXRpb247XG4gICAgaWYgKFwid2FsbGV0c1JlcXVpcmVkRmVhdHVyZXNcIiBpbiBvcHRpb25zKSB7XG4gICAgICB0aGlzLl93YWxsZXRzUmVxdWlyZWRGZWF0dXJlcyA9IG9wdGlvbnMud2FsbGV0c1JlcXVpcmVkRmVhdHVyZXM7XG4gICAgfVxuICAgIGlmIChcIndhbGxldHNQcmVmZXJyZWRGZWF0dXJlc1wiIGluIG9wdGlvbnMpIHtcbiAgICAgIHRoaXMuX3dhbGxldHNQcmVmZXJyZWRGZWF0dXJlcyA9IG9wdGlvbnMud2FsbGV0c1ByZWZlcnJlZEZlYXR1cmVzO1xuICAgIH1cbiAgICBpZiAoKF9hMiA9IG9wdGlvbnMudWlQcmVmZXJlbmNlcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi50aGVtZSkge1xuICAgICAgaWYgKCgoX2IyID0gb3B0aW9ucy51aVByZWZlcmVuY2VzKSA9PSBudWxsID8gdm9pZCAwIDogX2IyLnRoZW1lKSAhPT0gXCJTWVNURU1cIikge1xuICAgICAgICAoX2MyID0gdGhpcy5zeXN0ZW1UaGVtZUNoYW5nZVVuc3Vic2NyaWJlKSA9PSBudWxsID8gdm9pZCAwIDogX2MyLmNhbGwodGhpcyk7XG4gICAgICAgIHNldFRoZW1lKG9wdGlvbnMudWlQcmVmZXJlbmNlcy50aGVtZSwgb3B0aW9ucy51aVByZWZlcmVuY2VzLmNvbG9yc1NldCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZXRUaGVtZShnZXRTeXN0ZW1UaGVtZSgpLCBvcHRpb25zLnVpUHJlZmVyZW5jZXMuY29sb3JzU2V0KTtcbiAgICAgICAgaWYgKCF0aGlzLnN5c3RlbVRoZW1lQ2hhbmdlVW5zdWJzY3JpYmUpIHtcbiAgICAgICAgICB0aGlzLnN5c3RlbVRoZW1lQ2hhbmdlVW5zdWJzY3JpYmUgPSBzdWJzY3JpYmVUb1RoZW1lQ2hhbmdlKHNldFRoZW1lKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoKF9kMiA9IG9wdGlvbnMudWlQcmVmZXJlbmNlcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9kMi5jb2xvcnNTZXQpIHtcbiAgICAgICAgc2V0Q29sb3JzKG9wdGlvbnMudWlQcmVmZXJlbmNlcy5jb2xvcnNTZXQpO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoKF9lMiA9IG9wdGlvbnMudWlQcmVmZXJlbmNlcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9lMi5ib3JkZXJSYWRpdXMpIHtcbiAgICAgIHNldEJvcmRlclJhZGl1cyhvcHRpb25zLnVpUHJlZmVyZW5jZXMuYm9yZGVyUmFkaXVzKTtcbiAgICB9XG4gICAgc2V0QXBwU3RhdGUoKHN0YXRlKSA9PiB7XG4gICAgICB2YXIgX2EzLCBfYjM7XG4gICAgICBjb25zdCBtZXJnZWQgPSBtZXJnZU9wdGlvbnMoXG4gICAgICAgIF9fc3ByZWFkVmFsdWVzKF9fc3ByZWFkVmFsdWVzKF9fc3ByZWFkVmFsdWVzKF9fc3ByZWFkVmFsdWVzKHt9LCBvcHRpb25zLmxhbmd1YWdlICYmIHsgbGFuZ3VhZ2U6IG9wdGlvbnMubGFuZ3VhZ2UgfSksICEhKChfYTMgPSBvcHRpb25zLmFjdGlvbnNDb25maWd1cmF0aW9uKSA9PSBudWxsID8gdm9pZCAwIDogX2EzLnJldHVyblN0cmF0ZWd5KSAmJiB7XG4gICAgICAgICAgcmV0dXJuU3RyYXRlZ3k6IG9wdGlvbnMuYWN0aW9uc0NvbmZpZ3VyYXRpb24ucmV0dXJuU3RyYXRlZ3lcbiAgICAgICAgfSksICEhKChfYjMgPSBvcHRpb25zLmFjdGlvbnNDb25maWd1cmF0aW9uKSA9PSBudWxsID8gdm9pZCAwIDogX2IzLnR3YVJldHVyblVybCkgJiYge1xuICAgICAgICAgIHR3YVJldHVyblVybDogb3B0aW9ucy5hY3Rpb25zQ29uZmlndXJhdGlvbi50d2FSZXR1cm5VcmxcbiAgICAgICAgfSksICEhb3B0aW9ucy53YWxsZXRzTGlzdENvbmZpZ3VyYXRpb24gJiYge1xuICAgICAgICAgIHdhbGxldHNMaXN0Q29uZmlndXJhdGlvbjogb3B0aW9ucy53YWxsZXRzTGlzdENvbmZpZ3VyYXRpb25cbiAgICAgICAgfSksXG4gICAgICAgIHVud3JhcChzdGF0ZSlcbiAgICAgICk7XG4gICAgICBpZiAob3B0aW9ucy5idXR0b25Sb290SWQgIT09IHZvaWQgMCkge1xuICAgICAgICBtZXJnZWQuYnV0dG9uUm9vdElkID0gb3B0aW9ucy5idXR0b25Sb290SWQ7XG4gICAgICB9XG4gICAgICBpZiAob3B0aW9ucy5lbmFibGVBbmRyb2lkQmFja0hhbmRsZXIgIT09IHZvaWQgMCkge1xuICAgICAgICBtZXJnZWQuZW5hYmxlQW5kcm9pZEJhY2tIYW5kbGVyID0gb3B0aW9ucy5lbmFibGVBbmRyb2lkQmFja0hhbmRsZXI7XG4gICAgICB9XG4gICAgICByZXR1cm4gbWVyZ2VkO1xuICAgIH0pO1xuICB9XG4gIHNldENvbm5lY3RSZXF1ZXN0UGFyYW1ldGVycyhjb25uZWN0UmVxdWVzdFBhcmFtZXRlcnMpIHtcbiAgICB2YXIgX2EyO1xuICAgIHNldEFwcFN0YXRlKHsgY29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzIH0pO1xuICAgIGlmICgoY29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzID09IG51bGwgPyB2b2lkIDAgOiBjb25uZWN0UmVxdWVzdFBhcmFtZXRlcnMuc3RhdGUpID09PSBcInJlYWR5XCIgfHwgIWNvbm5lY3RSZXF1ZXN0UGFyYW1ldGVycykge1xuICAgICAgKF9hMiA9IHRoaXMuY29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzQ2FsbGJhY2spID09IG51bGwgPyB2b2lkIDAgOiBfYTIuY2FsbCh0aGlzLCBjb25uZWN0UmVxdWVzdFBhcmFtZXRlcnMgPT0gbnVsbCA/IHZvaWQgMCA6IGNvbm5lY3RSZXF1ZXN0UGFyYW1ldGVycy52YWx1ZSk7XG4gICAgfVxuICB9XG4gIGdldFdhbGxldHMoKSB7XG4gICAgcmV0dXJuIF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICAgIHJldHVybiB0aGlzLmNvbm5lY3Rvci5nZXRXYWxsZXRzKCk7XG4gICAgfSk7XG4gIH1cbiAgb25TdGF0dXNDaGFuZ2UoY2FsbGJhY2ssIGVycm9yc0hhbmRsZXIpIHtcbiAgICByZXR1cm4gdGhpcy5jb25uZWN0b3Iub25TdGF0dXNDaGFuZ2UoKHdhbGxldCkgPT4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgICAgaWYgKHdhbGxldCkge1xuICAgICAgICBjb25zdCBsYXN0U2VsZWN0ZWRXYWxsZXRJbmZvMiA9IHlpZWxkIHRoaXMuZ2V0U2VsZWN0ZWRXYWxsZXRJbmZvKHdhbGxldCk7XG4gICAgICAgIGNhbGxiYWNrKF9fc3ByZWFkVmFsdWVzKF9fc3ByZWFkVmFsdWVzKHt9LCB3YWxsZXQpLCBsYXN0U2VsZWN0ZWRXYWxsZXRJbmZvMiB8fCB0aGlzLndhbGxldEluZm9TdG9yYWdlLmdldFdhbGxldEluZm8oKSkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY2FsbGJhY2sod2FsbGV0KTtcbiAgICAgIH1cbiAgICB9KSwgZXJyb3JzSGFuZGxlcik7XG4gIH1cbiAgb3Blbk1vZGFsKCkge1xuICAgIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5tb2RhbC5vcGVuKCk7XG4gICAgfSk7XG4gIH1cbiAgY2xvc2VNb2RhbChyZWFzb24pIHtcbiAgICB0aGlzLm1vZGFsLmNsb3NlKHJlYXNvbik7XG4gIH1cbiAgb25Nb2RhbFN0YXRlQ2hhbmdlKG9uQ2hhbmdlKSB7XG4gICAgcmV0dXJuIHRoaXMubW9kYWwub25TdGF0ZUNoYW5nZShvbkNoYW5nZSk7XG4gIH1cbiAgZ2V0IG1vZGFsU3RhdGUoKSB7XG4gICAgcmV0dXJuIHRoaXMubW9kYWwuc3RhdGU7XG4gIH1cbiAgb3BlblNpbmdsZVdhbGxldE1vZGFsKHdhbGxldCkge1xuICAgIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5zaW5nbGVXYWxsZXRNb2RhbC5vcGVuKHdhbGxldCk7XG4gICAgfSk7XG4gIH1cbiAgY2xvc2VTaW5nbGVXYWxsZXRNb2RhbChjbG9zZVJlYXNvbikge1xuICAgIHRoaXMuc2luZ2xlV2FsbGV0TW9kYWwuY2xvc2UoY2xvc2VSZWFzb24pO1xuICB9XG4gIG9uU2luZ2xlV2FsbGV0TW9kYWxTdGF0ZUNoYW5nZShvbkNoYW5nZSkge1xuICAgIHJldHVybiB0aGlzLnNpbmdsZVdhbGxldE1vZGFsLm9uU3RhdGVDaGFuZ2Uob25DaGFuZ2UpO1xuICB9XG4gIGdldCBzaW5nbGVXYWxsZXRNb2RhbFN0YXRlKCkge1xuICAgIHJldHVybiB0aGlzLnNpbmdsZVdhbGxldE1vZGFsLnN0YXRlO1xuICB9XG4gIGNvbm5lY3RXYWxsZXQoKSB7XG4gICAgcmV0dXJuIF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICAgIGNvbnN0IHdhbGxldHNMaXN0ID0geWllbGQgdGhpcy5nZXRXYWxsZXRzKCk7XG4gICAgICBjb25zdCBlbWJlZGRlZFdhbGxldCA9IHdhbGxldHNMaXN0LmZpbmQoaXNXYWxsZXRJbmZvQ3VycmVudGx5RW1iZWRkZWQpO1xuICAgICAgaWYgKGVtYmVkZGVkV2FsbGV0KSB7XG4gICAgICAgIHJldHVybiB5aWVsZCB0aGlzLmNvbm5lY3RFbWJlZGRlZFdhbGxldChlbWJlZGRlZFdhbGxldCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4geWllbGQgdGhpcy5jb25uZWN0RXh0ZXJuYWxXYWxsZXQoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICBkaXNjb25uZWN0KCkge1xuICAgIHRoaXMudHJhY2tlci50cmFja0Rpc2Nvbm5lY3Rpb24odGhpcy53YWxsZXQsIFwiZGFwcFwiKTtcbiAgICB3aWRnZXRDb250cm9sbGVyLmNsZWFyQWN0aW9uKCk7XG4gICAgd2lkZ2V0Q29udHJvbGxlci5yZW1vdmVTZWxlY3RlZFdhbGxldEluZm8oKTtcbiAgICB0aGlzLndhbGxldEluZm9TdG9yYWdlLnJlbW92ZVdhbGxldEluZm8oKTtcbiAgICByZXR1cm4gdGhpcy5jb25uZWN0b3IuZGlzY29ubmVjdCgpO1xuICB9XG4gIHNlbmRUcmFuc2FjdGlvbih0eCwgb3B0aW9ucykge1xuICAgIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICB0aGlzLnRyYWNrZXIudHJhY2tUcmFuc2FjdGlvblNlbnRGb3JTaWduYXR1cmUodGhpcy53YWxsZXQsIHR4KTtcbiAgICAgIGlmICghdGhpcy5jb25uZWN0ZWQpIHtcbiAgICAgICAgdGhpcy50cmFja2VyLnRyYWNrVHJhbnNhY3Rpb25TaWduaW5nRmFpbGVkKHRoaXMud2FsbGV0LCB0eCwgXCJXYWxsZXQgd2FzIG5vdCBjb25uZWN0ZWRcIik7XG4gICAgICAgIHRocm93IG5ldyBUb25Db25uZWN0VUlFcnJvcihcIkNvbm5lY3Qgd2FsbGV0IHRvIHNlbmQgYSB0cmFuc2FjdGlvbi5cIik7XG4gICAgICB9XG4gICAgICBpZiAoaXNJblRNQSgpKSB7XG4gICAgICAgIHNlbmRFeHBhbmQoKTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IHsgbm90aWZpY2F0aW9uczogbm90aWZpY2F0aW9uczIsIG1vZGFscywgcmV0dXJuU3RyYXRlZ3ksIHR3YVJldHVyblVybCB9ID0gdGhpcy5nZXRNb2RhbHNBbmROb3RpZmljYXRpb25zQ29uZmlndXJhdGlvbihvcHRpb25zKTtcbiAgICAgIHdpZGdldENvbnRyb2xsZXIuc2V0QWN0aW9uKHtcbiAgICAgICAgbmFtZTogXCJjb25maXJtLXRyYW5zYWN0aW9uXCIsXG4gICAgICAgIHNob3dOb3RpZmljYXRpb246IG5vdGlmaWNhdGlvbnMyLmluY2x1ZGVzKFwiYmVmb3JlXCIpLFxuICAgICAgICBvcGVuTW9kYWw6IG1vZGFscy5pbmNsdWRlcyhcImJlZm9yZVwiKSxcbiAgICAgICAgc2VudDogZmFsc2VcbiAgICAgIH0pO1xuICAgICAgY29uc3QgYWJvcnRDb250cm9sbGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpO1xuICAgICAgY29uc3Qgb25SZXF1ZXN0U2VudCA9ICgpID0+IHtcbiAgICAgICAgaWYgKGFib3J0Q29udHJvbGxlci5zaWduYWwuYWJvcnRlZCkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB3aWRnZXRDb250cm9sbGVyLnNldEFjdGlvbih7XG4gICAgICAgICAgbmFtZTogXCJjb25maXJtLXRyYW5zYWN0aW9uXCIsXG4gICAgICAgICAgc2hvd05vdGlmaWNhdGlvbjogbm90aWZpY2F0aW9uczIuaW5jbHVkZXMoXCJiZWZvcmVcIiksXG4gICAgICAgICAgb3Blbk1vZGFsOiBtb2RhbHMuaW5jbHVkZXMoXCJiZWZvcmVcIiksXG4gICAgICAgICAgc2VudDogdHJ1ZVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5yZWRpcmVjdEFmdGVyUmVxdWVzdFNlbnQoe1xuICAgICAgICAgIHJldHVyblN0cmF0ZWd5LFxuICAgICAgICAgIHR3YVJldHVyblVybFxuICAgICAgICB9KTtcbiAgICAgIH07XG4gICAgICBjb25zdCB1bnN1YnNjcmliZSA9IHRoaXMub25UcmFuc2FjdGlvbk1vZGFsU3RhdGVDaGFuZ2UoKGFjdGlvbjIpID0+IHtcbiAgICAgICAgaWYgKGFjdGlvbjIgPT0gbnVsbCA/IHZvaWQgMCA6IGFjdGlvbjIub3Blbk1vZGFsKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHVuc3Vic2NyaWJlKCk7XG4gICAgICAgIGlmICghYWN0aW9uMikge1xuICAgICAgICAgIGFib3J0Q29udHJvbGxlci5hYm9ydCgpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHlpZWxkIHRoaXMud2FpdEZvclNlbmRUcmFuc2FjdGlvbihcbiAgICAgICAgICB7XG4gICAgICAgICAgICB0cmFuc2FjdGlvbjogdHgsXG4gICAgICAgICAgICBzaWduYWw6IGFib3J0Q29udHJvbGxlci5zaWduYWxcbiAgICAgICAgICB9LFxuICAgICAgICAgIG9uUmVxdWVzdFNlbnRcbiAgICAgICAgKTtcbiAgICAgICAgdGhpcy50cmFja2VyLnRyYWNrVHJhbnNhY3Rpb25TaWduZWQodGhpcy53YWxsZXQsIHR4LCByZXN1bHQpO1xuICAgICAgICB3aWRnZXRDb250cm9sbGVyLnNldEFjdGlvbih7XG4gICAgICAgICAgbmFtZTogXCJ0cmFuc2FjdGlvbi1zZW50XCIsXG4gICAgICAgICAgc2hvd05vdGlmaWNhdGlvbjogbm90aWZpY2F0aW9uczIuaW5jbHVkZXMoXCJzdWNjZXNzXCIpLFxuICAgICAgICAgIG9wZW5Nb2RhbDogbW9kYWxzLmluY2x1ZGVzKFwic3VjY2Vzc1wiKVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH0gY2F0Y2ggKGUyKSB7XG4gICAgICAgIGlmIChlMiBpbnN0YW5jZW9mIFdhbGxldE5vdFN1cHBvcnRGZWF0dXJlRXJyb3IpIHtcbiAgICAgICAgICB3aWRnZXRDb250cm9sbGVyLmNsZWFyQWN0aW9uKCk7XG4gICAgICAgICAgd2lkZ2V0Q29udHJvbGxlci5vcGVuV2FsbGV0Tm90U3VwcG9ydEZlYXR1cmVNb2RhbChlMi5jYXVzZSk7XG4gICAgICAgICAgdGhyb3cgZTI7XG4gICAgICAgIH1cbiAgICAgICAgd2lkZ2V0Q29udHJvbGxlci5zZXRBY3Rpb24oe1xuICAgICAgICAgIG5hbWU6IFwidHJhbnNhY3Rpb24tY2FuY2VsZWRcIixcbiAgICAgICAgICBzaG93Tm90aWZpY2F0aW9uOiBub3RpZmljYXRpb25zMi5pbmNsdWRlcyhcImVycm9yXCIpLFxuICAgICAgICAgIG9wZW5Nb2RhbDogbW9kYWxzLmluY2x1ZGVzKFwiZXJyb3JcIilcbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChlMiBpbnN0YW5jZW9mIFRvbkNvbm5lY3RFcnJvcikge1xuICAgICAgICAgIHRocm93IGUyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZTIpO1xuICAgICAgICAgIHRocm93IG5ldyBUb25Db25uZWN0VUlFcnJvcihcIlVuaGFuZGxlZCBlcnJvcjpcIiArIGUyKTtcbiAgICAgICAgfVxuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgdW5zdWJzY3JpYmUoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICBzaWduRGF0YShkYXRhKSB7XG4gICAgcmV0dXJuIF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICAgIHRoaXMudHJhY2tlci50cmFja0RhdGFTZW50Rm9yU2lnbmF0dXJlKHRoaXMud2FsbGV0LCBkYXRhKTtcbiAgICAgIGlmICghdGhpcy5jb25uZWN0ZWQpIHtcbiAgICAgICAgdGhpcy50cmFja2VyLnRyYWNrRGF0YVNpZ25pbmdGYWlsZWQodGhpcy53YWxsZXQsIGRhdGEsIFwiV2FsbGV0IHdhcyBub3QgY29ubmVjdGVkXCIpO1xuICAgICAgICB0aHJvdyBuZXcgVG9uQ29ubmVjdFVJRXJyb3IoXCJDb25uZWN0IHdhbGxldCB0byBzZW5kIGEgdHJhbnNhY3Rpb24uXCIpO1xuICAgICAgfVxuICAgICAgaWYgKGlzSW5UTUEoKSkge1xuICAgICAgICBzZW5kRXhwYW5kKCk7XG4gICAgICB9XG4gICAgICBjb25zdCB7IG5vdGlmaWNhdGlvbnM6IG5vdGlmaWNhdGlvbnMyLCBtb2RhbHMsIHJldHVyblN0cmF0ZWd5LCB0d2FSZXR1cm5VcmwgfSA9IHRoaXMuZ2V0TW9kYWxzQW5kTm90aWZpY2F0aW9uc0NvbmZpZ3VyYXRpb24oKTtcbiAgICAgIHdpZGdldENvbnRyb2xsZXIuc2V0QWN0aW9uKHtcbiAgICAgICAgbmFtZTogXCJjb25maXJtLXNpZ24tZGF0YVwiLFxuICAgICAgICBzaG93Tm90aWZpY2F0aW9uOiBub3RpZmljYXRpb25zMi5pbmNsdWRlcyhcImJlZm9yZVwiKSxcbiAgICAgICAgb3Blbk1vZGFsOiBtb2RhbHMuaW5jbHVkZXMoXCJiZWZvcmVcIiksXG4gICAgICAgIHNpZ25lZDogZmFsc2VcbiAgICAgIH0pO1xuICAgICAgY29uc3QgYWJvcnRDb250cm9sbGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpO1xuICAgICAgY29uc3Qgb25SZXF1ZXN0U2VudCA9ICgpID0+IHtcbiAgICAgICAgaWYgKGFib3J0Q29udHJvbGxlci5zaWduYWwuYWJvcnRlZCkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB3aWRnZXRDb250cm9sbGVyLnNldEFjdGlvbih7XG4gICAgICAgICAgbmFtZTogXCJjb25maXJtLXNpZ24tZGF0YVwiLFxuICAgICAgICAgIHNob3dOb3RpZmljYXRpb246IG5vdGlmaWNhdGlvbnMyLmluY2x1ZGVzKFwiYmVmb3JlXCIpLFxuICAgICAgICAgIG9wZW5Nb2RhbDogbW9kYWxzLmluY2x1ZGVzKFwiYmVmb3JlXCIpLFxuICAgICAgICAgIHNpZ25lZDogdHJ1ZVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5yZWRpcmVjdEFmdGVyUmVxdWVzdFNlbnQoe1xuICAgICAgICAgIHJldHVyblN0cmF0ZWd5LFxuICAgICAgICAgIHR3YVJldHVyblVybFxuICAgICAgICB9KTtcbiAgICAgIH07XG4gICAgICBjb25zdCB1bnN1YnNjcmliZSA9IHRoaXMub25UcmFuc2FjdGlvbk1vZGFsU3RhdGVDaGFuZ2UoKGFjdGlvbjIpID0+IHtcbiAgICAgICAgaWYgKGFjdGlvbjIgPT0gbnVsbCA/IHZvaWQgMCA6IGFjdGlvbjIub3Blbk1vZGFsKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHVuc3Vic2NyaWJlKCk7XG4gICAgICAgIGlmICghYWN0aW9uMikge1xuICAgICAgICAgIGFib3J0Q29udHJvbGxlci5hYm9ydCgpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHlpZWxkIHRoaXMud2FpdEZvclNpZ25EYXRhKFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGRhdGEsXG4gICAgICAgICAgICBzaWduYWw6IG5ldyBBYm9ydENvbnRyb2xsZXIoKS5zaWduYWxcbiAgICAgICAgICB9LFxuICAgICAgICAgIG9uUmVxdWVzdFNlbnRcbiAgICAgICAgKTtcbiAgICAgICAgdGhpcy50cmFja2VyLnRyYWNrRGF0YVNpZ25lZCh0aGlzLndhbGxldCwgZGF0YSwgcmVzdWx0KTtcbiAgICAgICAgd2lkZ2V0Q29udHJvbGxlci5zZXRBY3Rpb24oe1xuICAgICAgICAgIG5hbWU6IFwiZGF0YS1zaWduZWRcIixcbiAgICAgICAgICBzaG93Tm90aWZpY2F0aW9uOiBub3RpZmljYXRpb25zMi5pbmNsdWRlcyhcInN1Y2Nlc3NcIiksXG4gICAgICAgICAgb3Blbk1vZGFsOiBtb2RhbHMuaW5jbHVkZXMoXCJzdWNjZXNzXCIpXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgfSBjYXRjaCAoZTIpIHtcbiAgICAgICAgaWYgKGUyIGluc3RhbmNlb2YgV2FsbGV0Tm90U3VwcG9ydEZlYXR1cmVFcnJvcikge1xuICAgICAgICAgIHdpZGdldENvbnRyb2xsZXIuY2xlYXJBY3Rpb24oKTtcbiAgICAgICAgICB3aWRnZXRDb250cm9sbGVyLm9wZW5XYWxsZXROb3RTdXBwb3J0RmVhdHVyZU1vZGFsKGUyLmNhdXNlKTtcbiAgICAgICAgICB0aHJvdyBlMjtcbiAgICAgICAgfVxuICAgICAgICB3aWRnZXRDb250cm9sbGVyLnNldEFjdGlvbih7XG4gICAgICAgICAgbmFtZTogXCJzaWduLWRhdGEtY2FuY2VsZWRcIixcbiAgICAgICAgICBzaG93Tm90aWZpY2F0aW9uOiBub3RpZmljYXRpb25zMi5pbmNsdWRlcyhcImVycm9yXCIpLFxuICAgICAgICAgIG9wZW5Nb2RhbDogbW9kYWxzLmluY2x1ZGVzKFwiZXJyb3JcIilcbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChlMiBpbnN0YW5jZW9mIFRvbkNvbm5lY3RFcnJvcikge1xuICAgICAgICAgIHRocm93IGUyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZTIpO1xuICAgICAgICAgIHRocm93IG5ldyBUb25Db25uZWN0VUlFcnJvcihcIlVuaGFuZGxlZCBlcnJvcjpcIiArIGUyKTtcbiAgICAgICAgfVxuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgdW5zdWJzY3JpYmUoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICByZWRpcmVjdEFmdGVyUmVxdWVzdFNlbnQoe1xuICAgIHJldHVyblN0cmF0ZWd5LFxuICAgIHR3YVJldHVyblVybFxuICB9KSB7XG4gICAgaWYgKHRoaXMud2FsbGV0SW5mbyAmJiBcInVuaXZlcnNhbExpbmtcIiBpbiB0aGlzLndhbGxldEluZm8gJiYgKHRoaXMud2FsbGV0SW5mby5vcGVuTWV0aG9kID09PSBcInVuaXZlcnNhbC1saW5rXCIgfHwgdGhpcy53YWxsZXRJbmZvLm9wZW5NZXRob2QgPT09IFwiY3VzdG9tLWRlZXBsaW5rXCIpKSB7XG4gICAgICBpZiAoaXNUZWxlZ3JhbVVybCh0aGlzLndhbGxldEluZm8udW5pdmVyc2FsTGluaykpIHtcbiAgICAgICAgcmVkaXJlY3RUb1RlbGVncmFtKHRoaXMud2FsbGV0SW5mby51bml2ZXJzYWxMaW5rLCB7XG4gICAgICAgICAgcmV0dXJuU3RyYXRlZ3ksXG4gICAgICAgICAgdHdhUmV0dXJuVXJsOiB0d2FSZXR1cm5VcmwgfHwgYXBwU3RhdGUudHdhUmV0dXJuVXJsLFxuICAgICAgICAgIGZvcmNlUmVkaXJlY3Q6IGZhbHNlXG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmVkaXJlY3RUb1dhbGxldChcbiAgICAgICAgICB0aGlzLndhbGxldEluZm8udW5pdmVyc2FsTGluayxcbiAgICAgICAgICB0aGlzLndhbGxldEluZm8uZGVlcExpbmssXG4gICAgICAgICAge1xuICAgICAgICAgICAgcmV0dXJuU3RyYXRlZ3ksXG4gICAgICAgICAgICBmb3JjZVJlZGlyZWN0OiBmYWxzZVxuICAgICAgICAgIH0sXG4gICAgICAgICAgKCkgPT4ge1xuICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgY29ubmVjdEVtYmVkZGVkV2FsbGV0KGVtYmVkZGVkV2FsbGV0KSB7XG4gICAgcmV0dXJuIF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICAgIGNvbnN0IGNvbm5lY3QgPSAocGFyYW1ldGVycykgPT4ge1xuICAgICAgICBzZXRMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvKGVtYmVkZGVkV2FsbGV0KTtcbiAgICAgICAgdGhpcy5jb25uZWN0b3IuY29ubmVjdCh7IGpzQnJpZGdlS2V5OiBlbWJlZGRlZFdhbGxldC5qc0JyaWRnZUtleSB9LCBwYXJhbWV0ZXJzKTtcbiAgICAgIH07XG4gICAgICBjb25zdCBhZGRpdGlvbmFsUmVxdWVzdCA9IGFwcFN0YXRlLmNvbm5lY3RSZXF1ZXN0UGFyYW1ldGVycztcbiAgICAgIGlmICgoYWRkaXRpb25hbFJlcXVlc3QgPT0gbnVsbCA/IHZvaWQgMCA6IGFkZGl0aW9uYWxSZXF1ZXN0LnN0YXRlKSA9PT0gXCJsb2FkaW5nXCIpIHtcbiAgICAgICAgdGhpcy5jb25uZWN0UmVxdWVzdFBhcmFtZXRlcnNDYWxsYmFjayA9IGNvbm5lY3Q7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25uZWN0KGFkZGl0aW9uYWxSZXF1ZXN0ID09IG51bGwgPyB2b2lkIDAgOiBhZGRpdGlvbmFsUmVxdWVzdC52YWx1ZSk7XG4gICAgICB9XG4gICAgICByZXR1cm4geWllbGQgdGhpcy53YWl0Rm9yV2FsbGV0Q29ubmVjdGlvbih7XG4gICAgICAgIGlnbm9yZUVycm9yczogZmFsc2VcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG4gIGNvbm5lY3RFeHRlcm5hbFdhbGxldCgpIHtcbiAgICByZXR1cm4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgICAgY29uc3QgYWJvcnRDb250cm9sbGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpO1xuICAgICAgd2lkZ2V0Q29udHJvbGxlci5vcGVuV2FsbGV0c01vZGFsKCk7XG4gICAgICBjb25zdCB1bnN1YnNjcmliZSA9IHRoaXMub25Nb2RhbFN0YXRlQ2hhbmdlKChzdGF0ZSkgPT4ge1xuICAgICAgICBjb25zdCB7IHN0YXR1cywgY2xvc2VSZWFzb24gfSA9IHN0YXRlO1xuICAgICAgICBpZiAoc3RhdHVzID09PSBcIm9wZW5lZFwiKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHVuc3Vic2NyaWJlKCk7XG4gICAgICAgIGlmIChjbG9zZVJlYXNvbiA9PT0gXCJhY3Rpb24tY2FuY2VsbGVkXCIpIHtcbiAgICAgICAgICBhYm9ydENvbnRyb2xsZXIuYWJvcnQoKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICByZXR1cm4geWllbGQgdGhpcy53YWl0Rm9yV2FsbGV0Q29ubmVjdGlvbih7XG4gICAgICAgIGlnbm9yZUVycm9yczogdHJ1ZSxcbiAgICAgICAgc2lnbmFsOiBhYm9ydENvbnRyb2xsZXIuc2lnbmFsXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuICB3YWl0Rm9yV2FsbGV0Q29ubmVjdGlvbihvcHRpb25zKSB7XG4gICAgcmV0dXJuIF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIHRoaXMudHJhY2tlci50cmFja0Nvbm5lY3Rpb25TdGFydGVkKCk7XG4gICAgICAgIGNvbnN0IHsgaWdub3JlRXJyb3JzID0gZmFsc2UsIHNpZ25hbCA9IG51bGwgfSA9IG9wdGlvbnM7XG4gICAgICAgIGlmIChzaWduYWwgJiYgc2lnbmFsLmFib3J0ZWQpIHtcbiAgICAgICAgICB0aGlzLnRyYWNrZXIudHJhY2tDb25uZWN0aW9uRXJyb3IoXCJDb25uZWN0aW9uIHdhcyBjYW5jZWxsZWRcIik7XG4gICAgICAgICAgcmV0dXJuIHJlamVjdChuZXcgVG9uQ29ubmVjdFVJRXJyb3IoXCJXYWxsZXQgd2FzIG5vdCBjb25uZWN0ZWRcIikpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG9uU3RhdHVzQ2hhbmdlSGFuZGxlciA9ICh3YWxsZXQpID0+IF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICBpZiAoIXdhbGxldCkge1xuICAgICAgICAgICAgdGhpcy50cmFja2VyLnRyYWNrQ29ubmVjdGlvbkVycm9yKFwiQ29ubmVjdGlvbiB3YXMgY2FuY2VsbGVkXCIpO1xuICAgICAgICAgICAgaWYgKGlnbm9yZUVycm9ycykge1xuICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB1bnN1YnNjcmliZSgpO1xuICAgICAgICAgICAgcmVqZWN0KG5ldyBUb25Db25uZWN0VUlFcnJvcihcIldhbGxldCB3YXMgbm90IGNvbm5lY3RlZFwiKSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMudHJhY2tlci50cmFja0Nvbm5lY3Rpb25Db21wbGV0ZWQod2FsbGV0KTtcbiAgICAgICAgICAgIHVuc3Vic2NyaWJlKCk7XG4gICAgICAgICAgICByZXNvbHZlKHdhbGxldCk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgY29uc3Qgb25FcnJvcnNIYW5kbGVyID0gKHJlYXNvbikgPT4ge1xuICAgICAgICAgIHRoaXMudHJhY2tlci50cmFja0Nvbm5lY3Rpb25FcnJvcihyZWFzb24ubWVzc2FnZSk7XG4gICAgICAgICAgaWYgKGlnbm9yZUVycm9ycykge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cbiAgICAgICAgICB1bnN1YnNjcmliZSgpO1xuICAgICAgICAgIHJlamVjdChyZWFzb24pO1xuICAgICAgICB9O1xuICAgICAgICBjb25zdCB1bnN1YnNjcmliZSA9IHRoaXMub25TdGF0dXNDaGFuZ2UoXG4gICAgICAgICAgKHdhbGxldCkgPT4gb25TdGF0dXNDaGFuZ2VIYW5kbGVyKHdhbGxldCksXG4gICAgICAgICAgKHJlYXNvbikgPT4gb25FcnJvcnNIYW5kbGVyKHJlYXNvbilcbiAgICAgICAgKTtcbiAgICAgICAgaWYgKHNpZ25hbCkge1xuICAgICAgICAgIHNpZ25hbC5hZGRFdmVudExpc3RlbmVyKFxuICAgICAgICAgICAgXCJhYm9ydFwiLFxuICAgICAgICAgICAgKCkgPT4ge1xuICAgICAgICAgICAgICB1bnN1YnNjcmliZSgpO1xuICAgICAgICAgICAgICByZWplY3QobmV3IFRvbkNvbm5lY3RVSUVycm9yKFwiV2FsbGV0IHdhcyBub3QgY29ubmVjdGVkXCIpKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7IG9uY2U6IHRydWUgfVxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG4gIHdhaXRGb3JTZW5kVHJhbnNhY3Rpb24ob3B0aW9ucywgb25SZXF1ZXN0U2VudCkge1xuICAgIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICBjb25zdCB7IHRyYW5zYWN0aW9uLCBzaWduYWwgfSA9IG9wdGlvbnM7XG4gICAgICAgIGlmIChzaWduYWwuYWJvcnRlZCkge1xuICAgICAgICAgIHRoaXMudHJhY2tlci50cmFja1RyYW5zYWN0aW9uU2lnbmluZ0ZhaWxlZChcbiAgICAgICAgICAgIHRoaXMud2FsbGV0LFxuICAgICAgICAgICAgdHJhbnNhY3Rpb24sXG4gICAgICAgICAgICBcIlRyYW5zYWN0aW9uIHdhcyBjYW5jZWxsZWRcIlxuICAgICAgICAgICk7XG4gICAgICAgICAgcmV0dXJuIHJlamVjdChuZXcgVG9uQ29ubmVjdFVJRXJyb3IoXCJUcmFuc2FjdGlvbiB3YXMgbm90IHNlbnRcIikpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG9uVHJhbnNhY3Rpb25IYW5kbGVyID0gKHRyYW5zYWN0aW9uMikgPT4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgIHJlc29sdmUodHJhbnNhY3Rpb24yKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IG9uRXJyb3JzSGFuZGxlciA9IChyZWFzb24pID0+IHtcbiAgICAgICAgICByZWplY3QocmVhc29uKTtcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3Qgb25DYW5jZWxlZEhhbmRsZXIgPSAoKSA9PiB7XG4gICAgICAgICAgdGhpcy50cmFja2VyLnRyYWNrVHJhbnNhY3Rpb25TaWduaW5nRmFpbGVkKFxuICAgICAgICAgICAgdGhpcy53YWxsZXQsXG4gICAgICAgICAgICB0cmFuc2FjdGlvbixcbiAgICAgICAgICAgIFwiVHJhbnNhY3Rpb24gd2FzIGNhbmNlbGxlZFwiXG4gICAgICAgICAgKTtcbiAgICAgICAgICByZWplY3QobmV3IFRvbkNvbm5lY3RVSUVycm9yKFwiVHJhbnNhY3Rpb24gd2FzIG5vdCBzZW50XCIpKTtcbiAgICAgICAgfTtcbiAgICAgICAgc2lnbmFsLmFkZEV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLCBvbkNhbmNlbGVkSGFuZGxlciwgeyBvbmNlOiB0cnVlIH0pO1xuICAgICAgICB0aGlzLmNvbm5lY3Rvci5zZW5kVHJhbnNhY3Rpb24odHJhbnNhY3Rpb24sIHsgb25SZXF1ZXN0U2VudCwgc2lnbmFsIH0pLnRoZW4oKHJlc3VsdCkgPT4ge1xuICAgICAgICAgIHNpZ25hbC5yZW1vdmVFdmVudExpc3RlbmVyKFwiYWJvcnRcIiwgb25DYW5jZWxlZEhhbmRsZXIpO1xuICAgICAgICAgIHJldHVybiBvblRyYW5zYWN0aW9uSGFuZGxlcihyZXN1bHQpO1xuICAgICAgICB9KS5jYXRjaCgocmVhc29uKSA9PiB7XG4gICAgICAgICAgc2lnbmFsLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLCBvbkNhbmNlbGVkSGFuZGxlcik7XG4gICAgICAgICAgcmV0dXJuIG9uRXJyb3JzSGFuZGxlcihyZWFzb24pO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG4gIHdhaXRGb3JTaWduRGF0YShvcHRpb25zLCBvblJlcXVlc3RTZW50KSB7XG4gICAgcmV0dXJuIF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIGNvbnN0IHsgZGF0YSwgc2lnbmFsIH0gPSBvcHRpb25zO1xuICAgICAgICBpZiAoc2lnbmFsLmFib3J0ZWQpIHtcbiAgICAgICAgICB0aGlzLnRyYWNrZXIudHJhY2tEYXRhU2lnbmluZ0ZhaWxlZCh0aGlzLndhbGxldCwgZGF0YSwgXCJTaWduRGF0YSB3YXMgY2FuY2VsbGVkXCIpO1xuICAgICAgICAgIHJldHVybiByZWplY3QobmV3IFRvbkNvbm5lY3RVSUVycm9yKFwiU2lnbkRhdGEgd2FzIG5vdCBzZW50XCIpKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBvblNpZ25IYW5kbGVyID0gKGRhdGEyKSA9PiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgcmVzb2x2ZShkYXRhMik7XG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCBvbkVycm9yc0hhbmRsZXIgPSAocmVhc29uKSA9PiB7XG4gICAgICAgICAgcmVqZWN0KHJlYXNvbik7XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IG9uQ2FuY2VsZWRIYW5kbGVyID0gKCkgPT4ge1xuICAgICAgICAgIHRoaXMudHJhY2tlci50cmFja0RhdGFTaWduaW5nRmFpbGVkKHRoaXMud2FsbGV0LCBkYXRhLCBcIlNpZ25EYXRhIHdhcyBjYW5jZWxsZWRcIik7XG4gICAgICAgICAgcmVqZWN0KG5ldyBUb25Db25uZWN0VUlFcnJvcihcIlNpZ25EYXRhIHdhcyBub3Qgc2VudFwiKSk7XG4gICAgICAgIH07XG4gICAgICAgIHNpZ25hbC5hZGRFdmVudExpc3RlbmVyKFwiYWJvcnRcIiwgb25DYW5jZWxlZEhhbmRsZXIsIHsgb25jZTogdHJ1ZSB9KTtcbiAgICAgICAgdGhpcy5jb25uZWN0b3Iuc2lnbkRhdGEoZGF0YSwgeyBvblJlcXVlc3RTZW50LCBzaWduYWwgfSkudGhlbigocmVzdWx0KSA9PiB7XG4gICAgICAgICAgcmV0dXJuIG9uU2lnbkhhbmRsZXIocmVzdWx0KTtcbiAgICAgICAgfSkuY2F0Y2goKHJlYXNvbikgPT4ge1xuICAgICAgICAgIHJldHVybiBvbkVycm9yc0hhbmRsZXIocmVhc29uKTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuICBvblRyYW5zYWN0aW9uTW9kYWxTdGF0ZUNoYW5nZShvbkNoYW5nZSkge1xuICAgIHJldHVybiB0aGlzLnRyYW5zYWN0aW9uTW9kYWwub25TdGF0ZUNoYW5nZShvbkNoYW5nZSk7XG4gIH1cbiAgc3Vic2NyaWJlVG9XYWxsZXRDaGFuZ2UoKSB7XG4gICAgdGhpcy5jb25uZWN0b3Iub25TdGF0dXNDaGFuZ2UoKHdhbGxldCkgPT4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgICAgdmFyIF9hMjtcbiAgICAgIGlmICh3YWxsZXQpIHtcbiAgICAgICAgeWllbGQgdGhpcy51cGRhdGVXYWxsZXRJbmZvKHdhbGxldCk7XG4gICAgICAgIHRoaXMuc2V0UHJlZmVycmVkV2FsbGV0QXBwTmFtZSgoKF9hMiA9IHRoaXMud2FsbGV0SW5mbykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi5hcHBOYW1lKSB8fCB3YWxsZXQuZGV2aWNlLmFwcE5hbWUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy53YWxsZXRJbmZvU3RvcmFnZS5yZW1vdmVXYWxsZXRJbmZvKCk7XG4gICAgICB9XG4gICAgfSkpO1xuICB9XG4gIHNldFByZWZlcnJlZFdhbGxldEFwcE5hbWUodmFsdWUpIHtcbiAgICB0aGlzLnByZWZlcnJlZFdhbGxldFN0b3JhZ2Uuc2V0UHJlZmVycmVkV2FsbGV0QXBwTmFtZSh2YWx1ZSk7XG4gICAgc2V0QXBwU3RhdGUoeyBwcmVmZXJyZWRXYWxsZXRBcHBOYW1lOiB2YWx1ZSB9KTtcbiAgfVxuICBnZXRTZWxlY3RlZFdhbGxldEluZm8od2FsbGV0KSB7XG4gICAgcmV0dXJuIF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICAgIGxldCBsYXN0U2VsZWN0ZWRXYWxsZXRJbmZvMiA9IHdpZGdldENvbnRyb2xsZXIuZ2V0U2VsZWN0ZWRXYWxsZXRJbmZvKCk7XG4gICAgICBpZiAoIWxhc3RTZWxlY3RlZFdhbGxldEluZm8yKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfVxuICAgICAgbGV0IGZ1bGxMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvO1xuICAgICAgaWYgKCEoXCJuYW1lXCIgaW4gbGFzdFNlbGVjdGVkV2FsbGV0SW5mbzIpKSB7XG4gICAgICAgIGNvbnN0IHdhbGxldHNMaXN0ID0gYXBwbHlXYWxsZXRzTGlzdENvbmZpZ3VyYXRpb24oXG4gICAgICAgICAgeWllbGQgdGhpcy53YWxsZXRzTGlzdCxcbiAgICAgICAgICBhcHBTdGF0ZS53YWxsZXRzTGlzdENvbmZpZ3VyYXRpb25cbiAgICAgICAgKTtcbiAgICAgICAgY29uc3Qgd2FsbGV0SW5mbyA9IHdhbGxldHNMaXN0LmZpbmQoKGl0ZW0pID0+IGVxV2FsbGV0TmFtZShpdGVtLCB3YWxsZXQuZGV2aWNlLmFwcE5hbWUpKTtcbiAgICAgICAgaWYgKCF3YWxsZXRJbmZvKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFRvbkNvbm5lY3RVSUVycm9yKFxuICAgICAgICAgICAgYENhbm5vdCBmaW5kIFdhbGxldEluZm8gZm9yIHRoZSAnJHt3YWxsZXQuZGV2aWNlLmFwcE5hbWV9JyB3YWxsZXRgXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICBmdWxsTGFzdFNlbGVjdGVkV2FsbGV0SW5mbyA9IF9fc3ByZWFkVmFsdWVzKF9fc3ByZWFkVmFsdWVzKHt9LCB3YWxsZXRJbmZvKSwgbGFzdFNlbGVjdGVkV2FsbGV0SW5mbzIpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZnVsbExhc3RTZWxlY3RlZFdhbGxldEluZm8gPSBsYXN0U2VsZWN0ZWRXYWxsZXRJbmZvMjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBmdWxsTGFzdFNlbGVjdGVkV2FsbGV0SW5mbztcbiAgICB9KTtcbiAgfVxuICB1cGRhdGVXYWxsZXRJbmZvKHdhbGxldCkge1xuICAgIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICBjb25zdCBzZWxlY3RlZFdhbGxldEluZm8gPSB5aWVsZCB0aGlzLmdldFNlbGVjdGVkV2FsbGV0SW5mbyh3YWxsZXQpO1xuICAgICAgaWYgKHNlbGVjdGVkV2FsbGV0SW5mbykge1xuICAgICAgICB0aGlzLndhbGxldEluZm8gPSBzZWxlY3RlZFdhbGxldEluZm87XG4gICAgICAgIHRoaXMud2FsbGV0SW5mb1N0b3JhZ2Uuc2V0V2FsbGV0SW5mbyhzZWxlY3RlZFdhbGxldEluZm8pO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBjb25zdCBzdG9yZWRXYWxsZXRJbmZvID0gdGhpcy53YWxsZXRJbmZvU3RvcmFnZS5nZXRXYWxsZXRJbmZvKCk7XG4gICAgICBpZiAoc3RvcmVkV2FsbGV0SW5mbykge1xuICAgICAgICB0aGlzLndhbGxldEluZm8gPSBzdG9yZWRXYWxsZXRJbmZvO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICB0aGlzLndhbGxldEluZm8gPSAoeWllbGQgdGhpcy53YWxsZXRzTGlzdCkuZmluZChcbiAgICAgICAgKHdhbGxldEluZm8pID0+IGVxV2FsbGV0TmFtZSh3YWxsZXRJbmZvLCB3YWxsZXQuZGV2aWNlLmFwcE5hbWUpXG4gICAgICApIHx8IG51bGw7XG4gICAgfSk7XG4gIH1cbiAgbm9ybWFsaXplV2lkZ2V0Um9vdChyb290SWQpIHtcbiAgICBpZiAoIXJvb3RJZCB8fCAhZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQocm9vdElkKSkge1xuICAgICAgcm9vdElkID0gXCJ0Yy13aWRnZXQtcm9vdFwiO1xuICAgICAgY29uc3Qgcm9vdEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgcm9vdEVsZW1lbnQuaWQgPSByb290SWQ7XG4gICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHJvb3RFbGVtZW50KTtcbiAgICB9XG4gICAgcmV0dXJuIHJvb3RJZDtcbiAgfVxuICBjaGVja0J1dHRvblJvb3RFeGlzdChidXR0b25Sb290SWQpIHtcbiAgICBpZiAoYnV0dG9uUm9vdElkID09IG51bGwpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKCFkb2N1bWVudC5nZXRFbGVtZW50QnlJZChidXR0b25Sb290SWQpKSB7XG4gICAgICB0aHJvdyBuZXcgVG9uQ29ubmVjdFVJRXJyb3IoYCR7YnV0dG9uUm9vdElkfSBlbGVtZW50IG5vdCBmb3VuZCBpbiB0aGUgZG9jdW1lbnQuYCk7XG4gICAgfVxuICB9XG4gIGdldE1vZGFsc0FuZE5vdGlmaWNhdGlvbnNDb25maWd1cmF0aW9uKG9wdGlvbnMpIHtcbiAgICB2YXIgX2EyLCBfYjIsIF9jMiwgX2QyLCBfZTIsIF9mMjtcbiAgICBjb25zdCBhbGxBY3Rpb25zID0gW1xuICAgICAgXCJiZWZvcmVcIixcbiAgICAgIFwic3VjY2Vzc1wiLFxuICAgICAgXCJlcnJvclwiXG4gICAgXTtcbiAgICBsZXQgbm90aWZpY2F0aW9uczIgPSBhbGxBY3Rpb25zO1xuICAgIGlmICgoKF9hMiA9IHRoaXMuYWN0aW9uc0NvbmZpZ3VyYXRpb24pID09IG51bGwgPyB2b2lkIDAgOiBfYTIubm90aWZpY2F0aW9ucykgJiYgKChfYjIgPSB0aGlzLmFjdGlvbnNDb25maWd1cmF0aW9uKSA9PSBudWxsID8gdm9pZCAwIDogX2IyLm5vdGlmaWNhdGlvbnMpICE9PSBcImFsbFwiKSB7XG4gICAgICBub3RpZmljYXRpb25zMiA9IHRoaXMuYWN0aW9uc0NvbmZpZ3VyYXRpb24ubm90aWZpY2F0aW9ucztcbiAgICB9XG4gICAgaWYgKG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMubm90aWZpY2F0aW9ucykge1xuICAgICAgaWYgKG9wdGlvbnMubm90aWZpY2F0aW9ucyA9PT0gXCJhbGxcIikge1xuICAgICAgICBub3RpZmljYXRpb25zMiA9IGFsbEFjdGlvbnM7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBub3RpZmljYXRpb25zMiA9IG9wdGlvbnMubm90aWZpY2F0aW9ucztcbiAgICAgIH1cbiAgICB9XG4gICAgbGV0IG1vZGFscyA9IFtcImJlZm9yZVwiXTtcbiAgICBpZiAoKF9jMiA9IHRoaXMuYWN0aW9uc0NvbmZpZ3VyYXRpb24pID09IG51bGwgPyB2b2lkIDAgOiBfYzIubW9kYWxzKSB7XG4gICAgICBpZiAodGhpcy5hY3Rpb25zQ29uZmlndXJhdGlvbi5tb2RhbHMgPT09IFwiYWxsXCIpIHtcbiAgICAgICAgbW9kYWxzID0gYWxsQWN0aW9ucztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG1vZGFscyA9IHRoaXMuYWN0aW9uc0NvbmZpZ3VyYXRpb24ubW9kYWxzO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAob3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5tb2RhbHMpIHtcbiAgICAgIGlmIChvcHRpb25zLm1vZGFscyA9PT0gXCJhbGxcIikge1xuICAgICAgICBtb2RhbHMgPSBhbGxBY3Rpb25zO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbW9kYWxzID0gb3B0aW9ucy5tb2RhbHM7XG4gICAgICB9XG4gICAgfVxuICAgIGNvbnN0IHJldHVyblN0cmF0ZWd5ID0gKG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kpIHx8ICgoX2QyID0gdGhpcy5hY3Rpb25zQ29uZmlndXJhdGlvbikgPT0gbnVsbCA/IHZvaWQgMCA6IF9kMi5yZXR1cm5TdHJhdGVneSkgfHwgXCJiYWNrXCI7XG4gICAgY29uc3QgdHdhUmV0dXJuVXJsID0gKG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMudHdhUmV0dXJuVXJsKSB8fCAoKF9lMiA9IHRoaXMuYWN0aW9uc0NvbmZpZ3VyYXRpb24pID09IG51bGwgPyB2b2lkIDAgOiBfZTIudHdhUmV0dXJuVXJsKTtcbiAgICBsZXQgc2tpcFJlZGlyZWN0VG9XYWxsZXQgPSAob3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5za2lwUmVkaXJlY3RUb1dhbGxldCkgfHwgKChfZjIgPSB0aGlzLmFjdGlvbnNDb25maWd1cmF0aW9uKSA9PSBudWxsID8gdm9pZCAwIDogX2YyLnNraXBSZWRpcmVjdFRvV2FsbGV0KSB8fCBcImlvc1wiO1xuICAgIGlmIChpc0luVE1BKCkpIHtcbiAgICAgIHNraXBSZWRpcmVjdFRvV2FsbGV0ID0gXCJuZXZlclwiO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgbm90aWZpY2F0aW9uczogbm90aWZpY2F0aW9uczIsXG4gICAgICBtb2RhbHMsXG4gICAgICByZXR1cm5TdHJhdGVneSxcbiAgICAgIHR3YVJldHVyblVybCxcbiAgICAgIHNraXBSZWRpcmVjdFRvV2FsbGV0XG4gICAgfTtcbiAgfVxufVxuZXhwb3J0IHtcbiAgVEhFTUUsXG4gIFRvbkNvbm5lY3RVSSxcbiAgVG9uQ29ubmVjdFVJRXJyb3Jcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/@tonconnect+ui@2.2.0/node_modules/@tonconnect/ui/lib/index.mjs\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/.pnpm/next@14.2.16_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Frunner%2Fworkspace%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Frunner%2Fworkspace%2Fcomponents%2Fton-provider.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Frunner%2Fworkspace%2Fnode_modules%2F.pnpm%2Fnext%4014.2.16_react-dom%4018.3.1_react%4018.3.1__react%4018.3.1%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fscript.js%22%2C%22ids%22%3A%5B%22*%22%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Frunner%2Fworkspace%2Fnode_modules%2F.pnpm%2Fnext%4014.2.16_react-dom%4018.3.1_react%4018.3.1__react%4018.3.1%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22app%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);